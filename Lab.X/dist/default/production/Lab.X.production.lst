

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 18 16:40:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Version 2.40
    55                           ; Generated 17/11/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89     0000                     	;# 
    90     0001                     	;# 
    91     0002                     	;# 
    92     0003                     	;# 
    93     0004                     	;# 
    94     0005                     	;# 
    95     0006                     	;# 
    96     0007                     	;# 
    97     0008                     	;# 
    98     0009                     	;# 
    99     000A                     	;# 
   100     000B                     	;# 
   101     000C                     	;# 
   102     000D                     	;# 
   103     000E                     	;# 
   104     000E                     	;# 
   105     000F                     	;# 
   106     0010                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0013                     	;# 
   110     0014                     	;# 
   111     0015                     	;# 
   112     0015                     	;# 
   113     0016                     	;# 
   114     0017                     	;# 
   115     0018                     	;# 
   116     0019                     	;# 
   117     001A                     	;# 
   118     001B                     	;# 
   119     001B                     	;# 
   120     001C                     	;# 
   121     001D                     	;# 
   122     001E                     	;# 
   123     001F                     	;# 
   124     0081                     	;# 
   125     0085                     	;# 
   126     0086                     	;# 
   127     0087                     	;# 
   128     0088                     	;# 
   129     0089                     	;# 
   130     008C                     	;# 
   131     008D                     	;# 
   132     008E                     	;# 
   133     008F                     	;# 
   134     0090                     	;# 
   135     0091                     	;# 
   136     0092                     	;# 
   137     0093                     	;# 
   138     0093                     	;# 
   139     0093                     	;# 
   140     0094                     	;# 
   141     0095                     	;# 
   142     0096                     	;# 
   143     0097                     	;# 
   144     0098                     	;# 
   145     0099                     	;# 
   146     009A                     	;# 
   147     009B                     	;# 
   148     009C                     	;# 
   149     009D                     	;# 
   150     009E                     	;# 
   151     009F                     	;# 
   152     0105                     	;# 
   153     0107                     	;# 
   154     0108                     	;# 
   155     0109                     	;# 
   156     010C                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010F                     	;# 
   161     0185                     	;# 
   162     0187                     	;# 
   163     0188                     	;# 
   164     0189                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0000                     	;# 
   168     0001                     	;# 
   169     0002                     	;# 
   170     0003                     	;# 
   171     0004                     	;# 
   172     0005                     	;# 
   173     0006                     	;# 
   174     0007                     	;# 
   175     0008                     	;# 
   176     0009                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     000D                     	;# 
   181     000E                     	;# 
   182     000E                     	;# 
   183     000F                     	;# 
   184     0010                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0013                     	;# 
   188     0014                     	;# 
   189     0015                     	;# 
   190     0015                     	;# 
   191     0016                     	;# 
   192     0017                     	;# 
   193     0018                     	;# 
   194     0019                     	;# 
   195     001A                     	;# 
   196     001B                     	;# 
   197     001B                     	;# 
   198     001C                     	;# 
   199     001D                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     0081                     	;# 
   203     0085                     	;# 
   204     0086                     	;# 
   205     0087                     	;# 
   206     0088                     	;# 
   207     0089                     	;# 
   208     008C                     	;# 
   209     008D                     	;# 
   210     008E                     	;# 
   211     008F                     	;# 
   212     0090                     	;# 
   213     0091                     	;# 
   214     0092                     	;# 
   215     0093                     	;# 
   216     0093                     	;# 
   217     0093                     	;# 
   218     0094                     	;# 
   219     0095                     	;# 
   220     0096                     	;# 
   221     0097                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009A                     	;# 
   225     009B                     	;# 
   226     009C                     	;# 
   227     009D                     	;# 
   228     009E                     	;# 
   229     009F                     	;# 
   230     0105                     	;# 
   231     0107                     	;# 
   232     0108                     	;# 
   233     0109                     	;# 
   234     010C                     	;# 
   235     010C                     	;# 
   236     010D                     	;# 
   237     010E                     	;# 
   238     010F                     	;# 
   239     0185                     	;# 
   240     0187                     	;# 
   241     0188                     	;# 
   242     0189                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000D                     	;# 
   259     000E                     	;# 
   260     000E                     	;# 
   261     000F                     	;# 
   262     0010                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0015                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001B                     	;# 
   276     001C                     	;# 
   277     001D                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     0081                     	;# 
   281     0085                     	;# 
   282     0086                     	;# 
   283     0087                     	;# 
   284     0088                     	;# 
   285     0089                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     008F                     	;# 
   290     0090                     	;# 
   291     0091                     	;# 
   292     0092                     	;# 
   293     0093                     	;# 
   294     0093                     	;# 
   295     0093                     	;# 
   296     0094                     	;# 
   297     0095                     	;# 
   298     0096                     	;# 
   299     0097                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009A                     	;# 
   303     009B                     	;# 
   304     009C                     	;# 
   305     009D                     	;# 
   306     009E                     	;# 
   307     009F                     	;# 
   308     0105                     	;# 
   309     0107                     	;# 
   310     0108                     	;# 
   311     0109                     	;# 
   312     010C                     	;# 
   313     010C                     	;# 
   314     010D                     	;# 
   315     010E                     	;# 
   316     010F                     	;# 
   317     0185                     	;# 
   318     0187                     	;# 
   319     0188                     	;# 
   320     0189                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     000E                     	;# 
   338     000E                     	;# 
   339     000F                     	;# 
   340     0010                     	;# 
   341     0011                     	;# 
   342     0012                     	;# 
   343     0013                     	;# 
   344     0014                     	;# 
   345     0015                     	;# 
   346     0015                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001B                     	;# 
   354     001C                     	;# 
   355     001D                     	;# 
   356     001E                     	;# 
   357     001F                     	;# 
   358     0081                     	;# 
   359     0085                     	;# 
   360     0086                     	;# 
   361     0087                     	;# 
   362     0088                     	;# 
   363     0089                     	;# 
   364     008C                     	;# 
   365     008D                     	;# 
   366     008E                     	;# 
   367     008F                     	;# 
   368     0090                     	;# 
   369     0091                     	;# 
   370     0092                     	;# 
   371     0093                     	;# 
   372     0093                     	;# 
   373     0093                     	;# 
   374     0094                     	;# 
   375     0095                     	;# 
   376     0096                     	;# 
   377     0097                     	;# 
   378     0098                     	;# 
   379     0099                     	;# 
   380     009A                     	;# 
   381     009B                     	;# 
   382     009C                     	;# 
   383     009D                     	;# 
   384     009E                     	;# 
   385     009F                     	;# 
   386     0105                     	;# 
   387     0107                     	;# 
   388     0108                     	;# 
   389     0109                     	;# 
   390     010C                     	;# 
   391     010C                     	;# 
   392     010D                     	;# 
   393     010E                     	;# 
   394     010F                     	;# 
   395     0185                     	;# 
   396     0187                     	;# 
   397     0188                     	;# 
   398     0189                     	;# 
   399     018C                     	;# 
   400     018D                     	;# 
   401                           
   402                           	psect	strings
   403     0800                     __pstrings:
   404     0800                     stringtab:
   405     0800                     __stringtab:
   406                           
   407                           ;	String table - string pointers are 1 byte each
   408     0800  1BFF               	btfsc	btemp+1,7
   409     0801  280A               	ljmp	stringcode
   410     0802  1383               	bcf	3,7
   411     0803  187F               	btfsc	btemp+1,0
   412     0804  1783               	bsf	3,7
   413     0805  0800               	movf	0,w
   414     0806  0A84               	incf	4,f
   415     0807  1903               	skipnz
   416     0808  0AFF               	incf	btemp+1,f
   417     0809  0008               	return
   418     080A                     stringcode:
   419     080A                     stringdir:
   420     080A  3008               	movlw	high stringdir
   421     080B  008A               	movwf	10
   422     080C  0804               	movf	4,w
   423     080D  0A84               	incf	4,f
   424     080E  0782               	addwf	2,f
   425     080F                     __stringbase:
   426     080F  3400               	retlw	0
   427     0810                     __end_of__stringtab:
   428     0810                     __powers_:
   429     0810  3400               	retlw	0
   430     0811  3400               	retlw	0
   431     0812  3480               	retlw	128
   432     0813  343F               	retlw	63
   433     0814  3400               	retlw	0
   434     0815  3400               	retlw	0
   435     0816  3420               	retlw	32
   436     0817  3441               	retlw	65
   437     0818  3400               	retlw	0
   438     0819  3400               	retlw	0
   439     081A  34C8               	retlw	200
   440     081B  3442               	retlw	66
   441     081C  3400               	retlw	0
   442     081D  3400               	retlw	0
   443     081E  347A               	retlw	122
   444     081F  3444               	retlw	68
   445     0820  3400               	retlw	0
   446     0821  3440               	retlw	64
   447     0822  341C               	retlw	28
   448     0823  3446               	retlw	70
   449     0824  3400               	retlw	0
   450     0825  3450               	retlw	80
   451     0826  34C3               	retlw	195
   452     0827  3447               	retlw	71
   453     0828  3400               	retlw	0
   454     0829  3424               	retlw	36
   455     082A  3474               	retlw	116
   456     082B  3449               	retlw	73
   457     082C  3480               	retlw	128
   458     082D  3496               	retlw	150
   459     082E  3418               	retlw	24
   460     082F  344B               	retlw	75
   461     0830  3420               	retlw	32
   462     0831  34BC               	retlw	188
   463     0832  34BE               	retlw	190
   464     0833  344C               	retlw	76
   465     0834  3428               	retlw	40
   466     0835  346B               	retlw	107
   467     0836  346E               	retlw	110
   468     0837  344E               	retlw	78
   469     0838  34F9               	retlw	249
   470     0839  3402               	retlw	2
   471     083A  3415               	retlw	21
   472     083B  3450               	retlw	80
   473     083C  34EC               	retlw	236
   474     083D  3478               	retlw	120
   475     083E  34AD               	retlw	173
   476     083F  3460               	retlw	96
   477     0840  34CA               	retlw	202
   478     0841  34F2               	retlw	242
   479     0842  3449               	retlw	73
   480     0843  3471               	retlw	113
   481     0844                     __end_of__powers_:
   482     0844                     __npowers_:
   483     0844  3400               	retlw	0
   484     0845  3400               	retlw	0
   485     0846  3480               	retlw	128
   486     0847  343F               	retlw	63
   487     0848  34CD               	retlw	205
   488     0849  34CC               	retlw	204
   489     084A  34CC               	retlw	204
   490     084B  343D               	retlw	61
   491     084C  340A               	retlw	10
   492     084D  34D7               	retlw	215
   493     084E  3423               	retlw	35
   494     084F  343C               	retlw	60
   495     0850  346F               	retlw	111
   496     0851  3412               	retlw	18
   497     0852  3483               	retlw	131
   498     0853  343A               	retlw	58
   499     0854  3417               	retlw	23
   500     0855  34B7               	retlw	183
   501     0856  34D1               	retlw	209
   502     0857  3438               	retlw	56
   503     0858  34AC               	retlw	172
   504     0859  34C5               	retlw	197
   505     085A  3427               	retlw	39
   506     085B  3437               	retlw	55
   507     085C  34BD               	retlw	189
   508     085D  3437               	retlw	55
   509     085E  3486               	retlw	134
   510     085F  3435               	retlw	53
   511     0860  3495               	retlw	149
   512     0861  34BF               	retlw	191
   513     0862  34D6               	retlw	214
   514     0863  3433               	retlw	51
   515     0864  3477               	retlw	119
   516     0865  34CC               	retlw	204
   517     0866  342B               	retlw	43
   518     0867  3432               	retlw	50
   519     0868  345F               	retlw	95
   520     0869  3470               	retlw	112
   521     086A  3489               	retlw	137
   522     086B  3430               	retlw	48
   523     086C  34FF               	retlw	255
   524     086D  34E6               	retlw	230
   525     086E  34DB               	retlw	219
   526     086F  342E               	retlw	46
   527     0870  3408               	retlw	8
   528     0871  34E5               	retlw	229
   529     0872  343C               	retlw	60
   530     0873  341E               	retlw	30
   531     0874  3460               	retlw	96
   532     0875  3442               	retlw	66
   533     0876  34A2               	retlw	162
   534     0877  340D               	retlw	13
   535     0878                     __end_of__npowers_:
   536     0878                     _dpowers:
   537     0878  3401               	retlw	1
   538     0879  3400               	retlw	0
   539     087A  3400               	retlw	0
   540     087B  3400               	retlw	0
   541     087C  340A               	retlw	10
   542     087D  3400               	retlw	0
   543     087E  3400               	retlw	0
   544     087F  3400               	retlw	0
   545     0880  3464               	retlw	100
   546     0881  3400               	retlw	0
   547     0882  3400               	retlw	0
   548     0883  3400               	retlw	0
   549     0884  34E8               	retlw	232
   550     0885  3403               	retlw	3
   551     0886  3400               	retlw	0
   552     0887  3400               	retlw	0
   553     0888  3410               	retlw	16
   554     0889  3427               	retlw	39
   555     088A  3400               	retlw	0
   556     088B  3400               	retlw	0
   557     088C  34A0               	retlw	160
   558     088D  3486               	retlw	134
   559     088E  3401               	retlw	1
   560     088F  3400               	retlw	0
   561     0890  3440               	retlw	64
   562     0891  3442               	retlw	66
   563     0892  340F               	retlw	15
   564     0893  3400               	retlw	0
   565     0894  3480               	retlw	128
   566     0895  3496               	retlw	150
   567     0896  3498               	retlw	152
   568     0897  3400               	retlw	0
   569     0898  3400               	retlw	0
   570     0899  34E1               	retlw	225
   571     089A  34F5               	retlw	245
   572     089B  3405               	retlw	5
   573     089C  3400               	retlw	0
   574     089D  34CA               	retlw	202
   575     089E  349A               	retlw	154
   576     089F  343B               	retlw	59
   577     08A0                     __end_of_dpowers:
   578     001E                     _ADRESH	set	30
   579     000C                     _PIR1bits	set	12
   580     001F                     _ADCON0bits	set	31
   581     000B                     _INTCONbits	set	11
   582     0009                     _PORTE	set	9
   583     0005                     _PORTA	set	5
   584     0009                     _PORTEbits	set	9
   585     0008                     _PORTD	set	8
   586     0086                     _TRISBbits	set	134
   587     0089                     _TRISEbits	set	137
   588     0085                     _TRISAbits	set	133
   589     009F                     _ADCON1bits	set	159
   590     008C                     _PIE1bits	set	140
   591     0089                     _TRISE	set	137
   592     0088                     _TRISD	set	136
   593     0189                     _ANSELHbits	set	393
   594     0188                     _ANSELbits	set	392
   595     0189                     _ANSELH	set	393
   596     0188                     _ANSEL	set	392
   597     08A0                     STR_1:
   598     08A0  3456               	retlw	86	;'V'
   599     08A1  346F               	retlw	111	;'o'
   600     08A2  346C               	retlw	108	;'l'
   601     08A3  3474               	retlw	116	;'t'
   602     08A4  3431               	retlw	49	;'1'
   603     08A5  3420               	retlw	32	;' '
   604     08A6  3420               	retlw	32	;' '
   605     08A7  3456               	retlw	86	;'V'
   606     08A8  346F               	retlw	111	;'o'
   607     08A9  346C               	retlw	108	;'l'
   608     08AA  3474               	retlw	116	;'t'
   609     08AB  3432               	retlw	50	;'2'
   610     08AC  3400               	retlw	0
   611     08AD                     STR_2:
   612     08AD  3430               	retlw	48	;'0'
   613     08AE  342E               	retlw	46	;'.'
   614     08AF  3430               	retlw	48	;'0'
   615     08B0  3430               	retlw	48	;'0'
   616     08B1  3456               	retlw	86	;'V'
   617     08B2  3420               	retlw	32	;' '
   618     08B3  3420               	retlw	32	;' '
   619     08B4  3430               	retlw	48	;'0'
   620     08B5  342E               	retlw	46	;'.'
   621     08B6  3430               	retlw	48	;'0'
   622     08B7  3430               	retlw	48	;'0'
   623     08B8  3456               	retlw	86	;'V'
   624     08B9  3400               	retlw	0
   625     08BA                     STR_3:
   626     08BA  3425               	retlw	37	;'%'
   627     08BB  342E               	retlw	46	;'.'
   628     08BC  3432               	retlw	50	;'2'
   629     08BD  3466               	retlw	102	;'f'
   630     08BE  3400               	retlw	0
   631     08BA                     
   632                           	psect	cinit
   633     000F                     start_initialization:	
   634                           ; #config settings
   635                           
   636     000F                     __initialization:
   637     000F                     end_of_initialization:	
   638                           ;End of C runtime variable initialization code
   639                           
   640     000F                     __end_of__initialization:
   641     000F  0183               	clrf	3
   642     0010  120A  118A  2EC5   	ljmp	_main	;jump to C main() function
   643                           
   644                           	psect	cstackBANK3
   645     0190                     __pcstackBANK3:
   646     0190                     main@display0:
   647                           
   648                           ; 50 bytes @ 0x0
   649     0190                     	ds	50
   650                           
   651                           	psect	cstackBANK2
   652     0110                     __pcstackBANK2:
   653     0110                     main@display1:
   654                           
   655                           ; 50 bytes @ 0x0
   656     0110                     	ds	50
   657                           
   658                           	psect	cstackBANK1
   659     00A0                     __pcstackBANK1:
   660     00A0                     ?___flsub:
   661     00A0                     ___flsub@a:	
   662                           ; 4 bytes @ 0x0
   663                           
   664                           
   665                           ; 4 bytes @ 0x0
   666     00A0                     	ds	4
   667     00A4                     ___flsub@b:
   668                           
   669                           ; 4 bytes @ 0x4
   670     00A4                     	ds	4
   671     00A8                     ?_sprintf:
   672     00A8                     sprintf@f:	
   673                           ; 2 bytes @ 0x8
   674                           
   675                           
   676                           ; 1 bytes @ 0x8
   677     00A8                     	ds	5
   678     00AD                     _sprintf$1136:
   679                           
   680                           ; 4 bytes @ 0xD
   681     00AD                     	ds	4
   682     00B1                     sprintf@ap:
   683                           
   684                           ; 1 bytes @ 0x11
   685     00B1                     	ds	1
   686     00B2                     sprintf@flag:
   687                           
   688                           ; 2 bytes @ 0x12
   689     00B2                     	ds	2
   690     00B4                     sprintf@val:
   691                           
   692                           ; 4 bytes @ 0x14
   693     00B4                     	ds	4
   694     00B8                     sprintf@eexp:
   695                           
   696                           ; 2 bytes @ 0x18
   697     00B8                     	ds	2
   698     00BA                     sprintf@tmpval:
   699                           
   700                           ; 4 bytes @ 0x1A
   701     00BA                     	ds	4
   702     00BE                     sprintf@prec:
   703                           
   704                           ; 2 bytes @ 0x1E
   705     00BE                     	ds	2
   706     00C0                     sprintf@sp:
   707                           
   708                           ; 1 bytes @ 0x20
   709     00C0                     	ds	1
   710     00C1                     sprintf@fval:
   711                           
   712                           ; 4 bytes @ 0x21
   713     00C1                     	ds	4
   714     00C5                     sprintf@c:
   715                           
   716                           ; 1 bytes @ 0x25
   717     00C5                     	ds	1
   718     00C6                     ??_main:
   719                           
   720                           ; 1 bytes @ 0x26
   721     00C6                     	ds	2
   722     00C8                     main@output0:
   723                           
   724                           ; 4 bytes @ 0x28
   725     00C8                     	ds	4
   726     00CC                     main@output1:
   727                           
   728                           ; 4 bytes @ 0x2C
   729     00CC                     	ds	4
   730     00D0                     main@ch0:
   731                           
   732                           ; 1 bytes @ 0x30
   733     00D0                     	ds	1
   734                           
   735                           	psect	cstackCOMMON
   736     0070                     __pcstackCOMMON:
   737     0070                     ?_isdigit:
   738     0070                     ?_adc_setup:	
   739                           ; 1 bit 
   740                           
   741     0070                     ?_Lcd_Port:	
   742                           ; 1 bytes @ 0x0
   743                           
   744     0070                     ?_Lcd_Cmd:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0070                     ?_Lcd_Clear:	
   748                           ; 1 bytes @ 0x0
   749                           
   750     0070                     ?_Lcd_Init:	
   751                           ; 1 bytes @ 0x0
   752                           
   753     0070                     ?_Lcd_Write_Char:	
   754                           ; 1 bytes @ 0x0
   755                           
   756     0070                     ?_main:	
   757                           ; 1 bytes @ 0x0
   758                           
   759     0070                     ?_Isr:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0070                     ??_Isr:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0070                     ?_adc_read:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0070                     ?_adc_output:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0070                     ?_adc_RO:	
   772                           ; 1 bytes @ 0x0
   773                           
   774                           
   775                           ; 1 bytes @ 0x0
   776     0070                     	ds	2
   777     0072                     ?___fleq:
   778     0072                     ?___flge:	
   779                           ; 1 bit 
   780                           
   781     0072                     ??_adc_setup:	
   782                           ; 1 bit 
   783                           
   784     0072                     ?_adc_channel:	
   785                           ; 1 bytes @ 0x2
   786                           
   787     0072                     ??_isdigit:	
   788                           ; 1 bytes @ 0x2
   789                           
   790     0072                     ??_Lcd_Port:	
   791                           ; 1 bytes @ 0x2
   792                           
   793     0072                     ??_adc_read:	
   794                           ; 1 bytes @ 0x2
   795                           
   796     0072                     ??_adc_output:	
   797                           ; 1 bytes @ 0x2
   798                           
   799     0072                     ?__Umul8_16:	
   800                           ; 1 bytes @ 0x2
   801                           
   802     0072                     ?___wmul:	
   803                           ; 2 bytes @ 0x2
   804                           
   805     0072                     ?___awmod:	
   806                           ; 2 bytes @ 0x2
   807                           
   808     0072                     ?___lwmod:	
   809                           ; 2 bytes @ 0x2
   810                           
   811     0072                     ?__tdiv_to_l_:	
   812                           ; 2 bytes @ 0x2
   813                           
   814     0072                     ?__div_to_l_:	
   815                           ; 4 bytes @ 0x2
   816                           
   817     0072                     ?___lldiv:	
   818                           ; 4 bytes @ 0x2
   819                           
   820     0072                     ?___flneg:	
   821                           ; 4 bytes @ 0x2
   822                           
   823     0072                     ?___llmod:	
   824                           ; 4 bytes @ 0x2
   825                           
   826     0072                     ?___xxtofl:	
   827                           ; 4 bytes @ 0x2
   828                           
   829     0072                     Lcd_Port@a:	
   830                           ; 4 bytes @ 0x2
   831                           
   832     0072                     __Umul8_16@multiplicand:	
   833                           ; 1 bytes @ 0x2
   834                           
   835     0072                     _isdigit$935:	
   836                           ; 1 bytes @ 0x2
   837                           
   838     0072                     adc_channel@channel:	
   839                           ; 1 bytes @ 0x2
   840                           
   841     0072                     ___wmul@multiplier:	
   842                           ; 2 bytes @ 0x2
   843                           
   844     0072                     ___awmod@divisor:	
   845                           ; 2 bytes @ 0x2
   846                           
   847     0072                     ___lwmod@divisor:	
   848                           ; 2 bytes @ 0x2
   849                           
   850     0072                     ___lldiv@divisor:	
   851                           ; 2 bytes @ 0x2
   852                           
   853     0072                     __div_to_l_@f1:	
   854                           ; 4 bytes @ 0x2
   855                           
   856     0072                     ___fleq@ff1:	
   857                           ; 4 bytes @ 0x2
   858                           
   859     0072                     ___flge@ff1:	
   860                           ; 4 bytes @ 0x2
   861                           
   862     0072                     ___flneg@f1:	
   863                           ; 4 bytes @ 0x2
   864                           
   865     0072                     __tdiv_to_l_@f1:	
   866                           ; 4 bytes @ 0x2
   867                           
   868     0072                     ___llmod@divisor:	
   869                           ; 4 bytes @ 0x2
   870                           
   871     0072                     ___xxtofl@val:	
   872                           ; 4 bytes @ 0x2
   873                           
   874                           
   875                           ; 4 bytes @ 0x2
   876     0072                     	ds	1
   877     0073                     ??_Lcd_Cmd:
   878     0073                     ??_Lcd_Write_Char:	
   879                           ; 1 bytes @ 0x3
   880                           
   881     0073                     adc_setup@inter:	
   882                           ; 1 bytes @ 0x3
   883                           
   884     0073                     adc_read@channel:	
   885                           ; 1 bytes @ 0x3
   886                           
   887     0073                     isdigit@c:	
   888                           ; 1 bytes @ 0x3
   889                           
   890                           
   891                           ; 1 bytes @ 0x3
   892     0073                     	ds	1
   893     0074                     ??_adc_channel:
   894     0074                     ??__Umul8_16:	
   895                           ; 1 bytes @ 0x4
   896                           
   897     0074                     ??_adc_RO:	
   898                           ; 1 bytes @ 0x4
   899                           
   900     0074                     Lcd_Write_Char@a:	
   901                           ; 1 bytes @ 0x4
   902                           
   903     0074                     ___wmul@multiplicand:	
   904                           ; 1 bytes @ 0x4
   905                           
   906     0074                     ___awmod@dividend:	
   907                           ; 2 bytes @ 0x4
   908                           
   909     0074                     ___lwmod@dividend:	
   910                           ; 2 bytes @ 0x4
   911                           
   912                           
   913                           ; 2 bytes @ 0x4
   914     0074                     	ds	1
   915     0075                     ?_Lcd_Write_String:
   916     0075                     Lcd_Cmd@a:	
   917                           ; 1 bytes @ 0x5
   918                           
   919     0075                     adc_RO@channel:	
   920                           ; 1 bytes @ 0x5
   921                           
   922     0075                     Lcd_Write_String@a:	
   923                           ; 1 bytes @ 0x5
   924                           
   925                           
   926                           ; 2 bytes @ 0x5
   927     0075                     	ds	1
   928     0076                     ??_Lcd_Clear:
   929     0076                     ?_Lcd_Set_Cursor:	
   930                           ; 1 bytes @ 0x6
   931                           
   932     0076                     ??_Lcd_Init:	
   933                           ; 1 bytes @ 0x6
   934                           
   935     0076                     ??___wmul:	
   936                           ; 1 bytes @ 0x6
   937                           
   938     0076                     ??___awmod:	
   939                           ; 1 bytes @ 0x6
   940                           
   941     0076                     ??___flneg:	
   942                           ; 1 bytes @ 0x6
   943                           
   944     0076                     ??___lwmod:	
   945                           ; 1 bytes @ 0x6
   946                           
   947     0076                     ??___xxtofl:	
   948                           ; 1 bytes @ 0x6
   949                           
   950     0076                     Lcd_Set_Cursor@b:	
   951                           ; 1 bytes @ 0x6
   952                           
   953     0076                     ___wmul@product:	
   954                           ; 1 bytes @ 0x6
   955                           
   956     0076                     __Umul8_16@product:	
   957                           ; 2 bytes @ 0x6
   958                           
   959     0076                     ___lldiv@dividend:	
   960                           ; 2 bytes @ 0x6
   961                           
   962     0076                     __div_to_l_@f2:	
   963                           ; 4 bytes @ 0x6
   964                           
   965     0076                     ___fleq@ff2:	
   966                           ; 4 bytes @ 0x6
   967                           
   968     0076                     ___flge@ff2:	
   969                           ; 4 bytes @ 0x6
   970                           
   971     0076                     __tdiv_to_l_@f2:	
   972                           ; 4 bytes @ 0x6
   973                           
   974     0076                     ___llmod@dividend:	
   975                           ; 4 bytes @ 0x6
   976                           
   977                           
   978                           ; 4 bytes @ 0x6
   979     0076                     	ds	1
   980     0077                     ??_Lcd_Set_Cursor:
   981     0077                     ??_Lcd_Write_String:	
   982                           ; 1 bytes @ 0x7
   983                           
   984     0077                     Lcd_Set_Cursor@a:	
   985                           ; 1 bytes @ 0x7
   986                           
   987     0077                     ___awmod@counter:	
   988                           ; 1 bytes @ 0x7
   989                           
   990     0077                     ___lwmod@counter:	
   991                           ; 1 bytes @ 0x7
   992                           
   993                           
   994                           ; 1 bytes @ 0x7
   995     0077                     	ds	1
   996     0078                     ?___lwdiv:
   997     0078                     Lcd_Set_Cursor@temp:	
   998                           ; 2 bytes @ 0x8
   999                           
  1000     0078                     ___awmod@sign:	
  1001                           ; 1 bytes @ 0x8
  1002                           
  1003     0078                     ___lwdiv@divisor:	
  1004                           ; 1 bytes @ 0x8
  1005                           
  1006     0078                     __Umul8_16@word_mpld:	
  1007                           ; 2 bytes @ 0x8
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x8
  1011     0078                     	ds	1
  1012     0079                     ??___awdiv:
  1013                           
  1014                           ; 1 bytes @ 0x9
  1015     0079                     	ds	1
  1016     007A                     ??__div_to_l_:
  1017     007A                     ??___lldiv:	
  1018                           ; 1 bytes @ 0xA
  1019                           
  1020     007A                     ??___llmod:	
  1021                           ; 1 bytes @ 0xA
  1022                           
  1023     007A                     __Umul8_16@multiplier:	
  1024                           ; 1 bytes @ 0xA
  1025                           
  1026     007A                     Lcd_Write_String@i:	
  1027                           ; 1 bytes @ 0xA
  1028                           
  1029     007A                     ___lwdiv@dividend:	
  1030                           ; 2 bytes @ 0xA
  1031                           
  1032                           
  1033                           ; 2 bytes @ 0xA
  1034     007A                     	ds	1
  1035     007B                     ___llmod@counter:
  1036                           
  1037                           ; 1 bytes @ 0xB
  1038     007B                     	ds	1
  1039     007C                     ??___flsub:
  1040                           
  1041                           	psect	cstackBANK0
  1042     0020                     __pcstackBANK0:	
  1043                           ; 1 bytes @ 0xC
  1044                           
  1045     0020                     ??__tdiv_to_l_:
  1046     0020                     ??___fleq:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049     0020                     ??___flge:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052     0020                     ??___lwdiv:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055     0020                     ?___awdiv:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058     0020                     ___xxtofl@sign:	
  1059                           ; 2 bytes @ 0x0
  1060                           
  1061     0020                     ___awdiv@divisor:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064     0020                     ___lldiv@quotient:	
  1065                           ; 2 bytes @ 0x0
  1066                           
  1067     0020                     __div_to_l_@quot:	
  1068                           ; 4 bytes @ 0x0
  1069                           
  1070                           
  1071                           ; 4 bytes @ 0x0
  1072     0020                     	ds	1
  1073     0021                     ___xxtofl@exp:
  1074     0021                     ___lwdiv@quotient:	
  1075                           ; 1 bytes @ 0x1
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x1
  1079     0021                     	ds	1
  1080     0022                     ___awdiv@dividend:
  1081     0022                     ___xxtofl@arg:	
  1082                           ; 2 bytes @ 0x2
  1083                           
  1084                           
  1085                           ; 4 bytes @ 0x2
  1086     0022                     	ds	1
  1087     0023                     ___lwdiv@counter:
  1088     0023                     __tdiv_to_l_@quot:	
  1089                           ; 1 bytes @ 0x3
  1090                           
  1091                           
  1092                           ; 4 bytes @ 0x3
  1093     0023                     	ds	1
  1094     0024                     ___lldiv@counter:
  1095     0024                     ___awdiv@counter:	
  1096                           ; 1 bytes @ 0x4
  1097                           
  1098     0024                     __div_to_l_@cntr:	
  1099                           ; 1 bytes @ 0x4
  1100                           
  1101                           
  1102                           ; 1 bytes @ 0x4
  1103     0024                     	ds	1
  1104     0025                     ___awdiv@sign:
  1105     0025                     __div_to_l_@exp1:	
  1106                           ; 1 bytes @ 0x5
  1107                           
  1108                           
  1109                           ; 1 bytes @ 0x5
  1110     0025                     	ds	1
  1111     0026                     ___awdiv@quotient:
  1112                           
  1113                           ; 2 bytes @ 0x6
  1114     0026                     	ds	1
  1115     0027                     __tdiv_to_l_@cntr:
  1116                           
  1117                           ; 1 bytes @ 0x7
  1118     0027                     	ds	1
  1119     0028                     ?___flmul:
  1120     0028                     __tdiv_to_l_@exp1:	
  1121                           ; 4 bytes @ 0x8
  1122                           
  1123     0028                     ___flmul@b:	
  1124                           ; 1 bytes @ 0x8
  1125                           
  1126                           
  1127                           ; 4 bytes @ 0x8
  1128     0028                     	ds	4
  1129     002C                     ___flmul@a:
  1130                           
  1131                           ; 4 bytes @ 0xC
  1132     002C                     	ds	4
  1133     0030                     ??___flmul:
  1134                           
  1135                           ; 1 bytes @ 0x10
  1136     0030                     	ds	5
  1137     0035                     ___flmul@sign:
  1138                           
  1139                           ; 1 bytes @ 0x15
  1140     0035                     	ds	1
  1141     0036                     ___flmul@grs:
  1142                           
  1143                           ; 4 bytes @ 0x16
  1144     0036                     	ds	4
  1145     003A                     ___flmul@aexp:
  1146                           
  1147                           ; 1 bytes @ 0x1A
  1148     003A                     	ds	1
  1149     003B                     ___flmul@bexp:
  1150                           
  1151                           ; 1 bytes @ 0x1B
  1152     003B                     	ds	1
  1153     003C                     ___flmul@prod:
  1154                           
  1155                           ; 4 bytes @ 0x1C
  1156     003C                     	ds	4
  1157     0040                     ___flmul@temp:
  1158                           
  1159                           ; 2 bytes @ 0x20
  1160     0040                     	ds	2
  1161     0042                     ?_fround:
  1162     0042                     ?_scale:	
  1163                           ; 4 bytes @ 0x22
  1164                           
  1165     0042                     ?___fldiv:	
  1166                           ; 4 bytes @ 0x22
  1167                           
  1168     0042                     ___fldiv@a:	
  1169                           ; 4 bytes @ 0x22
  1170                           
  1171                           
  1172                           ; 4 bytes @ 0x22
  1173     0042                     	ds	4
  1174     0046                     ??_fround:
  1175     0046                     ??_scale:	
  1176                           ; 1 bytes @ 0x26
  1177                           
  1178     0046                     ___fldiv@b:	
  1179                           ; 1 bytes @ 0x26
  1180                           
  1181                           
  1182                           ; 4 bytes @ 0x26
  1183     0046                     	ds	4
  1184     004A                     ??___fldiv:
  1185                           
  1186                           ; 1 bytes @ 0x2A
  1187     004A                     	ds	3
  1188     004D                     _fround$1134:
  1189                           
  1190                           ; 4 bytes @ 0x2D
  1191     004D                     	ds	2
  1192     004F                     ___fldiv@rem:
  1193                           
  1194                           ; 4 bytes @ 0x2F
  1195     004F                     	ds	1
  1196     0050                     _scale$1135:
  1197                           
  1198                           ; 4 bytes @ 0x30
  1199     0050                     	ds	1
  1200     0051                     _fround$1133:
  1201                           
  1202                           ; 4 bytes @ 0x31
  1203     0051                     	ds	2
  1204     0053                     ___fldiv@sign:
  1205                           
  1206                           ; 1 bytes @ 0x33
  1207     0053                     	ds	1
  1208     0054                     scale@scl:
  1209     0054                     ___fldiv@new_exp:	
  1210                           ; 1 bytes @ 0x34
  1211                           
  1212                           
  1213                           ; 2 bytes @ 0x34
  1214     0054                     	ds	1
  1215     0055                     ?___fltol:
  1216     0055                     fround@prec:	
  1217                           ; 4 bytes @ 0x35
  1218                           
  1219     0055                     ___fltol@f1:	
  1220                           ; 1 bytes @ 0x35
  1221                           
  1222                           
  1223                           ; 4 bytes @ 0x35
  1224     0055                     	ds	1
  1225     0056                     ?___fladd:
  1226     0056                     ___fladd@b:	
  1227                           ; 4 bytes @ 0x36
  1228                           
  1229     0056                     ___fldiv@grs:	
  1230                           ; 4 bytes @ 0x36
  1231                           
  1232                           
  1233                           ; 4 bytes @ 0x36
  1234     0056                     	ds	3
  1235     0059                     ??___fltol:
  1236                           
  1237                           ; 1 bytes @ 0x39
  1238     0059                     	ds	1
  1239     005A                     ___fldiv@bexp:
  1240     005A                     ___fladd@a:	
  1241                           ; 1 bytes @ 0x3A
  1242                           
  1243                           
  1244                           ; 4 bytes @ 0x3A
  1245     005A                     	ds	1
  1246     005B                     ___fldiv@aexp:
  1247                           
  1248                           ; 1 bytes @ 0x3B
  1249     005B                     	ds	1
  1250     005C                     ?_adc_volt:
  1251                           
  1252                           ; 4 bytes @ 0x3C
  1253     005C                     	ds	1
  1254     005D                     ___fltol@sign1:
  1255                           
  1256                           ; 1 bytes @ 0x3D
  1257     005D                     	ds	1
  1258     005E                     ??___fladd:
  1259     005E                     ___fltol@exp1:	
  1260                           ; 1 bytes @ 0x3E
  1261                           
  1262                           
  1263                           ; 1 bytes @ 0x3E
  1264     005E                     	ds	2
  1265     0060                     ??_adc_volt:
  1266                           
  1267                           ; 1 bytes @ 0x40
  1268     0060                     	ds	2
  1269     0062                     adc_volt@final:
  1270                           
  1271                           ; 4 bytes @ 0x42
  1272     0062                     	ds	4
  1273     0066                     ___fladd@signs:
  1274     0066                     adc_volt@out:	
  1275                           ; 1 bytes @ 0x46
  1276                           
  1277                           
  1278                           ; 2 bytes @ 0x46
  1279     0066                     	ds	1
  1280     0067                     ___fladd@aexp:
  1281                           
  1282                           ; 1 bytes @ 0x47
  1283     0067                     	ds	1
  1284     0068                     adc_volt@channel:
  1285     0068                     ___fladd@bexp:	
  1286                           ; 1 bytes @ 0x48
  1287                           
  1288                           
  1289                           ; 1 bytes @ 0x48
  1290     0068                     	ds	1
  1291     0069                     ___fladd@grs:
  1292                           
  1293                           ; 1 bytes @ 0x49
  1294     0069                     	ds	1
  1295     006A                     ??_sprintf:
  1296                           
  1297                           ; 1 bytes @ 0x4A
  1298     006A                     	ds	5
  1299     006F                     main@ch1:
  1300                           
  1301                           ; 1 bytes @ 0x4F
  1302     006F                     	ds	1
  1303                           
  1304                           	psect	maintext
  1305     06C5                     __pmaintext:	
  1306 ;;
  1307 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1308 ;;
  1309 ;; *************** function _main *****************
  1310 ;; Defined at:
  1311 ;;		line 33 in file "lab2.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  display1       50    0[BANK2 ] unsigned char [50]
  1316 ;;  display0       50    0[BANK3 ] unsigned char [50]
  1317 ;;  output1         4   44[BANK1 ] float 
  1318 ;;  output0         4   40[BANK1 ] float 
  1319 ;;  ch0             1   48[BANK1 ] unsigned char 
  1320 ;;  ch1             1   79[BANK0 ] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : B00/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       0       0       0       0
  1331 ;;      Locals:         0       1       9      50      50
  1332 ;;      Temps:          0       0       2       0       0
  1333 ;;      Totals:         0       1      11      50      50
  1334 ;;Total ram usage:      112 bytes
  1335 ;; Hardware stack levels required when called: 5
  1336 ;; This function calls:
  1337 ;;		_Lcd_Clear
  1338 ;;		_Lcd_Cmd
  1339 ;;		_Lcd_Init
  1340 ;;		_Lcd_Set_Cursor
  1341 ;;		_Lcd_Write_String
  1342 ;;		_adc_channel
  1343 ;;		_adc_setup
  1344 ;;		_adc_volt
  1345 ;;		_sprintf
  1346 ;; This function is called by:
  1347 ;;		Startup code after reset
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351     06C5                     _main:	
  1352                           ;psect for function _main
  1353                           
  1354     06C5                     l3632:	
  1355                           ;incstack = 0
  1356                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1357                           
  1358                           
  1359                           ;lab2.c: 34:     float output0, output1;;lab2.c: 35:     char ch1, ch0;;lab2.c: 38:     
      +                          PORTA = 0;
  1360     06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1361     06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1362     06C7  0185               	clrf	5	;volatile
  1363                           
  1364                           ;lab2.c: 39:     ch0 = 0;
  1365     06C8  1683               	bsf	3,5	;RP0=1, select bank1
  1366     06C9  1303               	bcf	3,6	;RP1=0, select bank1
  1367     06CA  01D0               	clrf	main@ch0^(0+128)
  1368     06CB                     l3634:
  1369                           
  1370                           ;lab2.c: 40:     ch1 = 1;
  1371     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1372     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1373     06CD  01EF               	clrf	main@ch1
  1374     06CE  0AEF               	incf	main@ch1,f
  1375     06CF                     l3636:
  1376                           
  1377                           ;lab2.c: 41:     adc_setup(0);
  1378     06CF  3000               	movlw	0
  1379     06D0  120A  118A  27CF  120A  118A  	fcall	_adc_setup
  1380     06D5                     l3638:
  1381                           
  1382                           ;lab2.c: 42:     Lcd_Cmd(0x0E);
  1383     06D5  300E               	movlw	14
  1384     06D6  160A  158A  224A  120A  118A  	fcall	_Lcd_Cmd
  1385     06DB                     l3640:
  1386                           
  1387                           ;lab2.c: 44:     adc_channel(ch0);
  1388     06DB  3000               	movlw	0
  1389     06DC  00F2               	movwf	adc_channel@channel
  1390     06DD  00F3               	movwf	adc_channel@channel+1
  1391     06DE  120A  158A  20C3  120A  118A  	fcall	_adc_channel
  1392     06E3                     l3642:
  1393                           
  1394                           ;lab2.c: 45:     adc_channel(ch1);
  1395     06E3  3001               	movlw	1
  1396     06E4  00F2               	movwf	adc_channel@channel
  1397     06E5  3000               	movlw	0
  1398     06E6  00F3               	movwf	adc_channel@channel+1
  1399     06E7  120A  158A  20C3  120A  118A  	fcall	_adc_channel
  1400                           
  1401                           ;lab2.c: 47:     TRISD = 0x00;
  1402     06EC  1683               	bsf	3,5	;RP0=1, select bank1
  1403     06ED  1303               	bcf	3,6	;RP1=0, select bank1
  1404     06EE  0188               	clrf	8	;volatile
  1405                           
  1406                           ;lab2.c: 48:     PORTD = 0x00;
  1407     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1408     06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1409     06F1  0188               	clrf	8	;volatile
  1410                           
  1411                           ;lab2.c: 49:     TRISE = 0x00;
  1412     06F2  1683               	bsf	3,5	;RP0=1, select bank1
  1413     06F3  1303               	bcf	3,6	;RP1=0, select bank1
  1414     06F4  0189               	clrf	9	;volatile
  1415                           
  1416                           ;lab2.c: 50:     PORTE = 0x00;
  1417     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1418     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1419     06F7  0189               	clrf	9	;volatile
  1420     06F8                     l3644:
  1421                           
  1422                           ;lab2.c: 53:     Lcd_Init();
  1423     06F8  160A  118A  2000  120A  118A  	fcall	_Lcd_Init
  1424     06FD                     l3646:
  1425                           
  1426                           ;lab2.c: 54:     Lcd_Clear();
  1427     06FD  160A  158A  220B  120A  118A  	fcall	_Lcd_Clear
  1428     0702                     l3648:
  1429                           
  1430                           ;lab2.c: 55:     Lcd_Set_Cursor(1,1);
  1431     0702  01F6               	clrf	Lcd_Set_Cursor@b
  1432     0703  0AF6               	incf	Lcd_Set_Cursor@b,f
  1433     0704  3001               	movlw	1
  1434     0705  160A  158A  2280  120A  118A  	fcall	_Lcd_Set_Cursor
  1435     070A                     l3650:
  1436                           
  1437                           ;lab2.c: 56:     Lcd_Write_String("Volt1  Volt2");
  1438     070A  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1439     070B  00F5               	movwf	Lcd_Write_String@a
  1440     070C  3080               	movlw	128
  1441     070D  00F6               	movwf	Lcd_Write_String@a+1
  1442     070E  160A  158A  2326  120A  118A  	fcall	_Lcd_Write_String
  1443     0713                     l3652:
  1444                           
  1445                           ;lab2.c: 57:     Lcd_Set_Cursor(2,1);
  1446     0713  01F6               	clrf	Lcd_Set_Cursor@b
  1447     0714  0AF6               	incf	Lcd_Set_Cursor@b,f
  1448     0715  3002               	movlw	2
  1449     0716  160A  158A  2280  120A  118A  	fcall	_Lcd_Set_Cursor
  1450     071B                     l3654:
  1451                           
  1452                           ;lab2.c: 58:      Lcd_Write_String("0.00V  0.00V");
  1453     071B  309E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1454     071C  00F5               	movwf	Lcd_Write_String@a
  1455     071D  3080               	movlw	128
  1456     071E  00F6               	movwf	Lcd_Write_String@a+1
  1457     071F  160A  158A  2326  120A  118A  	fcall	_Lcd_Write_String
  1458     0724                     l3656:
  1459                           
  1460                           ;lab2.c: 63:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1461     0724  3003               	movlw	3
  1462     0725  1683               	bsf	3,5	;RP0=1, select bank1
  1463     0726  1303               	bcf	3,6	;RP1=0, select bank1
  1464     0727  00C7               	movwf	(??_main^(0+128)+1)
  1465     0728  3097               	movlw	151
  1466     0729  00C6               	movwf	??_main^(0+128)
  1467     072A                     u5897:
  1468     072A  0BC6               	decfsz	??_main^(0+128),f
  1469     072B  2F2A               	goto	u5897
  1470     072C  0BC7               	decfsz	(??_main^(0+128)+1),f
  1471     072D  2F2A               	goto	u5897
  1472     072E                     l3658:
  1473                           
  1474                           ;lab2.c: 64:         output0 = adc_volt(ch0);
  1475     072E  1683               	bsf	3,5	;RP0=1, select bank1
  1476     072F  1303               	bcf	3,6	;RP1=0, select bank1
  1477     0730  0850               	movf	main@ch0^(0+128),w
  1478     0731  160A  158A  24FB  120A  118A  	fcall	_adc_volt
  1479     0736  1283               	bcf	3,5	;RP0=0, select bank0
  1480     0737  1303               	bcf	3,6	;RP1=0, select bank0
  1481     0738  085F               	movf	?_adc_volt+3,w
  1482     0739  1683               	bsf	3,5	;RP0=1, select bank1
  1483     073A  1303               	bcf	3,6	;RP1=0, select bank1
  1484     073B  00CB               	movwf	(main@output0+3)^(0+128)
  1485     073C  1283               	bcf	3,5	;RP0=0, select bank0
  1486     073D  1303               	bcf	3,6	;RP1=0, select bank0
  1487     073E  085E               	movf	?_adc_volt+2,w
  1488     073F  1683               	bsf	3,5	;RP0=1, select bank1
  1489     0740  1303               	bcf	3,6	;RP1=0, select bank1
  1490     0741  00CA               	movwf	(main@output0+2)^(0+128)
  1491     0742  1283               	bcf	3,5	;RP0=0, select bank0
  1492     0743  1303               	bcf	3,6	;RP1=0, select bank0
  1493     0744  085D               	movf	?_adc_volt+1,w
  1494     0745  1683               	bsf	3,5	;RP0=1, select bank1
  1495     0746  1303               	bcf	3,6	;RP1=0, select bank1
  1496     0747  00C9               	movwf	(main@output0+1)^(0+128)
  1497     0748  1283               	bcf	3,5	;RP0=0, select bank0
  1498     0749  1303               	bcf	3,6	;RP1=0, select bank0
  1499     074A  085C               	movf	?_adc_volt,w
  1500     074B  1683               	bsf	3,5	;RP0=1, select bank1
  1501     074C  1303               	bcf	3,6	;RP1=0, select bank1
  1502     074D  00C8               	movwf	main@output0^(0+128)
  1503     074E                     l3660:
  1504                           
  1505                           ;lab2.c: 66:         output1 = adc_volt(ch1);
  1506     074E  1283               	bcf	3,5	;RP0=0, select bank0
  1507     074F  1303               	bcf	3,6	;RP1=0, select bank0
  1508     0750  086F               	movf	main@ch1,w
  1509     0751  160A  158A  24FB  120A  118A  	fcall	_adc_volt
  1510     0756  1283               	bcf	3,5	;RP0=0, select bank0
  1511     0757  1303               	bcf	3,6	;RP1=0, select bank0
  1512     0758  085F               	movf	?_adc_volt+3,w
  1513     0759  1683               	bsf	3,5	;RP0=1, select bank1
  1514     075A  1303               	bcf	3,6	;RP1=0, select bank1
  1515     075B  00CF               	movwf	(main@output1+3)^(0+128)
  1516     075C  1283               	bcf	3,5	;RP0=0, select bank0
  1517     075D  1303               	bcf	3,6	;RP1=0, select bank0
  1518     075E  085E               	movf	?_adc_volt+2,w
  1519     075F  1683               	bsf	3,5	;RP0=1, select bank1
  1520     0760  1303               	bcf	3,6	;RP1=0, select bank1
  1521     0761  00CE               	movwf	(main@output1+2)^(0+128)
  1522     0762  1283               	bcf	3,5	;RP0=0, select bank0
  1523     0763  1303               	bcf	3,6	;RP1=0, select bank0
  1524     0764  085D               	movf	?_adc_volt+1,w
  1525     0765  1683               	bsf	3,5	;RP0=1, select bank1
  1526     0766  1303               	bcf	3,6	;RP1=0, select bank1
  1527     0767  00CD               	movwf	(main@output1+1)^(0+128)
  1528     0768  1283               	bcf	3,5	;RP0=0, select bank0
  1529     0769  1303               	bcf	3,6	;RP1=0, select bank0
  1530     076A  085C               	movf	?_adc_volt,w
  1531     076B  1683               	bsf	3,5	;RP0=1, select bank1
  1532     076C  1303               	bcf	3,6	;RP1=0, select bank1
  1533     076D  00CC               	movwf	main@output1^(0+128)
  1534     076E                     l3662:
  1535                           
  1536                           ;lab2.c: 69:         char display0[50];;lab2.c: 70:         char display1[50];;lab2.c: 7
      +                          2:         sprintf(display0, "%.2f", output0);
  1537     076E  30AB               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1538     076F  00A8               	movwf	sprintf@f^(0+128)
  1539     0770  084B               	movf	(main@output0+3)^(0+128),w
  1540     0771  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1541     0772  084A               	movf	(main@output0+2)^(0+128),w
  1542     0773  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1543     0774  0849               	movf	(main@output0+1)^(0+128),w
  1544     0775  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1545     0776  0848               	movf	main@output0^(0+128),w
  1546     0777  00A9               	movwf	(?_sprintf^(0+128)+1)
  1547     0778  3090               	movlw	(low (main@display0| (0+256)))& (0+255)
  1548     0779  120A  118A  2013  120A  118A  	fcall	_sprintf
  1549     077E                     l3664:
  1550                           
  1551                           ;lab2.c: 73:         sprintf(display1, "%.2f", output1);
  1552     077E  30AB               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1553     077F  1683               	bsf	3,5	;RP0=1, select bank1
  1554     0780  1303               	bcf	3,6	;RP1=0, select bank1
  1555     0781  00A8               	movwf	sprintf@f^(0+128)
  1556     0782  084F               	movf	(main@output1+3)^(0+128),w
  1557     0783  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1558     0784  084E               	movf	(main@output1+2)^(0+128),w
  1559     0785  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1560     0786  084D               	movf	(main@output1+1)^(0+128),w
  1561     0787  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1562     0788  084C               	movf	main@output1^(0+128),w
  1563     0789  00A9               	movwf	(?_sprintf^(0+128)+1)
  1564     078A  3010               	movlw	(low (main@display1| (0+256)))& (0+255)
  1565     078B  120A  118A  2013  120A  118A  	fcall	_sprintf
  1566     0790                     l3666:
  1567                           
  1568                           ;lab2.c: 74:         Lcd_Set_Cursor(2,1);
  1569     0790  01F6               	clrf	Lcd_Set_Cursor@b
  1570     0791  0AF6               	incf	Lcd_Set_Cursor@b,f
  1571     0792  3002               	movlw	2
  1572     0793  160A  158A  2280  120A  118A  	fcall	_Lcd_Set_Cursor
  1573     0798                     l3668:
  1574                           
  1575                           ;lab2.c: 75:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1576     0798  3005               	movlw	5
  1577     0799  1683               	bsf	3,5	;RP0=1, select bank1
  1578     079A  1303               	bcf	3,6	;RP1=0, select bank1
  1579     079B  00C6               	movwf	??_main^(0+128)
  1580     079C                     u5907:
  1581     079C  0BC6               	decfsz	??_main^(0+128),f
  1582     079D  2F9C               	goto	u5907
  1583     079E  2F9F               	nop2
  1584     079F                     l3670:
  1585                           
  1586                           ;lab2.c: 76:         Lcd_Write_String(display0);
  1587     079F  3090               	movlw	(low (main@display0| (0+256)))& (0+255)
  1588     07A0  00F5               	movwf	Lcd_Write_String@a
  1589     07A1  3001               	movlw	1
  1590     07A2  00F6               	movwf	Lcd_Write_String@a+1
  1591     07A3  160A  158A  2326  120A  118A  	fcall	_Lcd_Write_String
  1592     07A8                     l3672:
  1593                           
  1594                           ;lab2.c: 77:         Lcd_Set_Cursor(2,8);
  1595     07A8  3008               	movlw	8
  1596     07A9  00F6               	movwf	Lcd_Set_Cursor@b
  1597     07AA  3002               	movlw	2
  1598     07AB  160A  158A  2280  120A  118A  	fcall	_Lcd_Set_Cursor
  1599     07B0                     l3674:
  1600                           
  1601                           ;lab2.c: 78:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1602     07B0  3005               	movlw	5
  1603     07B1  1683               	bsf	3,5	;RP0=1, select bank1
  1604     07B2  1303               	bcf	3,6	;RP1=0, select bank1
  1605     07B3  00C6               	movwf	??_main^(0+128)
  1606     07B4                     u5917:
  1607     07B4  0BC6               	decfsz	??_main^(0+128),f
  1608     07B5  2FB4               	goto	u5917
  1609     07B6  2FB7               	nop2
  1610     07B7                     l3676:
  1611                           
  1612                           ;lab2.c: 79:         Lcd_Write_String(display1);
  1613     07B7  3010               	movlw	(low (main@display1| (0+256)))& (0+255)
  1614     07B8  00F5               	movwf	Lcd_Write_String@a
  1615     07B9  3001               	movlw	1
  1616     07BA  00F6               	movwf	Lcd_Write_String@a+1
  1617     07BB  160A  158A  2326  120A  118A  	fcall	_Lcd_Write_String
  1618     07C0                     l3678:
  1619                           
  1620                           ;lab2.c: 80:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1621     07C0  301A               	movlw	26
  1622     07C1  1683               	bsf	3,5	;RP0=1, select bank1
  1623     07C2  1303               	bcf	3,6	;RP1=0, select bank1
  1624     07C3  00C7               	movwf	(??_main^(0+128)+1)
  1625     07C4  30F7               	movlw	247
  1626     07C5  00C6               	movwf	??_main^(0+128)
  1627     07C6                     u5927:
  1628     07C6  0BC6               	decfsz	??_main^(0+128),f
  1629     07C7  2FC6               	goto	u5927
  1630     07C8  0BC7               	decfsz	(??_main^(0+128)+1),f
  1631     07C9  2FC6               	goto	u5927
  1632     07CA  2FCB               	nop2
  1633                           
  1634                           ;lab2.c: 81:     }
  1635     07CB  2F24               	goto	l3656
  1636     07CC  120A  118A  280C   	ljmp	start
  1637     07CF                     __end_of_main:
  1638                           
  1639                           	psect	text1
  1640     0013                     __ptext1:	
  1641 ;; *************** function _sprintf *****************
  1642 ;; Defined at:
  1643 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  sp              1    wreg     PTR unsigned char 
  1646 ;;		 -> main@display1(50), main@display0(50), 
  1647 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1648 ;;		 -> STR_4(5), STR_3(5), 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  sp              1   32[BANK1 ] PTR unsigned char 
  1651 ;;		 -> main@display1(50), main@display0(50), 
  1652 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1653 ;;  tmpval          4   26[BANK1 ] struct .
  1654 ;;  val             4   20[BANK1 ] unsigned long 
  1655 ;;  prec            2   30[BANK1 ] int 
  1656 ;;  eexp            2   24[BANK1 ] int 
  1657 ;;  flag            2   18[BANK1 ] unsigned short 
  1658 ;;  cp              2    0        PTR const unsigned char 
  1659 ;;  len             2    0        unsigned int 
  1660 ;;  width           2    0        int 
  1661 ;;  c               1   37[BANK1 ] unsigned char 
  1662 ;;  ap              1   17[BANK1 ] PTR void [1]
  1663 ;;		 -> ?_sprintf(2), 
  1664 ;;  d               1    0        unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  2    8[BANK1 ] int 
  1667 ;; Registers used:
  1668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       5       0       0
  1675 ;;      Locals:         0       0      25       0       0
  1676 ;;      Temps:          0       5       0       0       0
  1677 ;;      Totals:         0       5      30       0       0
  1678 ;;Total ram usage:       35 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; Hardware stack levels required when called: 4
  1681 ;; This function calls:
  1682 ;;		___awdiv
  1683 ;;		___fladd
  1684 ;;		___fleq
  1685 ;;		___flge
  1686 ;;		___flmul
  1687 ;;		___flneg
  1688 ;;		___flsub
  1689 ;;		___fltol
  1690 ;;		___lldiv
  1691 ;;		___llmod
  1692 ;;		___wmul
  1693 ;;		___xxtofl
  1694 ;;		__div_to_l_
  1695 ;;		__tdiv_to_l_
  1696 ;;		_fround
  1697 ;;		_isdigit
  1698 ;;		_scale
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704     0013                     _sprintf:	
  1705                           ;psect for function _sprintf
  1706                           
  1707                           
  1708                           ;incstack = 0
  1709                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1710                           ;sprintf@sp stored from wreg
  1711     0013  1683               	bsf	3,5	;RP0=1, select bank1
  1712     0014  1303               	bcf	3,6	;RP1=0, select bank1
  1713     0015  00C0               	movwf	sprintf@sp^(0+128)
  1714     0016                     l3422:
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1717     0016  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1718     0017  00B1               	movwf	sprintf@ap^(0+128)
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1721     0018  2EAC               	goto	l3616
  1722     0019                     l3424:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1725     0019  3025               	movlw	37
  1726     001A  0645               	xorwf	sprintf@c^(0+128),w
  1727     001B  1903               	btfsc	3,2
  1728     001C  281E               	goto	u5541
  1729     001D  281F               	goto	u5540
  1730     001E                     u5541:
  1731     001E  282D               	goto	l3430
  1732     001F                     u5540:
  1733     001F                     l3426:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1736     001F  0840               	movf	sprintf@sp^(0+128),w
  1737     0020  0084               	movwf	4
  1738     0021  0845               	movf	sprintf@c^(0+128),w
  1739     0022  1783               	bsf	3,7	;select IRP bank2
  1740     0023  0080               	movwf	0
  1741     0024                     l3428:
  1742     0024  3001               	movlw	1
  1743     0025  1283               	bcf	3,5	;RP0=0, select bank0
  1744     0026  1303               	bcf	3,6	;RP1=0, select bank0
  1745     0027  00EA               	movwf	??_sprintf
  1746     0028  086A               	movf	??_sprintf,w
  1747     0029  1683               	bsf	3,5	;RP0=1, select bank1
  1748     002A  1303               	bcf	3,6	;RP1=0, select bank1
  1749     002B  07C0               	addwf	sprintf@sp^(0+128),f
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1752     002C  2EAC               	goto	l3616
  1753     002D                     l3430:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1756     002D  01B2               	clrf	sprintf@flag^(0+128)
  1757     002E  01B3               	clrf	(sprintf@flag+1)^(0+128)
  1758     002F                     l3432:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1761     002F  0828               	movf	sprintf@f^(0+128),w
  1762     0030  0084               	movwf	4
  1763     0031  120A  158A  200A  120A  118A  	fcall	stringdir
  1764     0036  3A2E               	xorlw	46
  1765     0037  1D03               	skipz
  1766     0038  283A               	goto	u5551
  1767     0039  283B               	goto	u5550
  1768     003A                     u5551:
  1769     003A  2890               	goto	l3448
  1770     003B                     u5550:
  1771     003B                     l3434:
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1774     003B  1733               	bsf	(sprintf@flag^(0+128)+1),6
  1775     003C                     l3436:
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  1778     003C  3001               	movlw	1
  1779     003D  1283               	bcf	3,5	;RP0=0, select bank0
  1780     003E  1303               	bcf	3,6	;RP1=0, select bank0
  1781     003F  00EA               	movwf	??_sprintf
  1782     0040  086A               	movf	??_sprintf,w
  1783     0041  1683               	bsf	3,5	;RP0=1, select bank1
  1784     0042  1303               	bcf	3,6	;RP1=0, select bank1
  1785     0043  07A8               	addwf	sprintf@f^(0+128),f
  1786     0044                     l3438:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1789     0044  01BE               	clrf	sprintf@prec^(0+128)
  1790     0045  01BF               	clrf	(sprintf@prec+1)^(0+128)
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1793     0046  287F               	goto	l3446
  1794     0047                     l3440:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1797     0047  300A               	movlw	10
  1798     0048  00F2               	movwf	___wmul@multiplier
  1799     0049  3000               	movlw	0
  1800     004A  00F3               	movwf	___wmul@multiplier+1
  1801     004B  1683               	bsf	3,5	;RP0=1, select bank1
  1802     004C  1303               	bcf	3,6	;RP1=0, select bank1
  1803     004D  083F               	movf	(sprintf@prec+1)^(0+128),w
  1804     004E  00F5               	movwf	___wmul@multiplicand+1
  1805     004F  083E               	movf	sprintf@prec^(0+128),w
  1806     0050  00F4               	movwf	___wmul@multiplicand
  1807     0051  160A  158A  22A0  120A  118A  	fcall	___wmul
  1808     0056  0873               	movf	?___wmul+1,w
  1809     0057  1683               	bsf	3,5	;RP0=1, select bank1
  1810     0058  1303               	bcf	3,6	;RP1=0, select bank1
  1811     0059  00BF               	movwf	(sprintf@prec+1)^(0+128)
  1812     005A  0872               	movf	?___wmul,w
  1813     005B  00BE               	movwf	sprintf@prec^(0+128)
  1814     005C                     l3442:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1817     005C  0828               	movf	sprintf@f^(0+128),w
  1818     005D  0084               	movwf	4
  1819     005E  120A  158A  200A  120A  118A  	fcall	stringdir
  1820     0063  3ED0               	addlw	208
  1821     0064  1283               	bcf	3,5	;RP0=0, select bank0
  1822     0065  1303               	bcf	3,6	;RP1=0, select bank0
  1823     0066  00EA               	movwf	??_sprintf
  1824     0067  30FF               	movlw	255
  1825     0068  1803               	skipnc
  1826     0069  3000               	movlw	0
  1827     006A  00EB               	movwf	??_sprintf+1
  1828     006B  086A               	movf	??_sprintf,w
  1829     006C  1683               	bsf	3,5	;RP0=1, select bank1
  1830     006D  1303               	bcf	3,6	;RP1=0, select bank1
  1831     006E  07BE               	addwf	sprintf@prec^(0+128),f
  1832     006F  1803               	skipnc
  1833     0070  0ABF               	incf	(sprintf@prec+1)^(0+128),f
  1834     0071  1283               	bcf	3,5	;RP0=0, select bank0
  1835     0072  1303               	bcf	3,6	;RP1=0, select bank0
  1836     0073  086B               	movf	??_sprintf+1,w
  1837     0074  1683               	bsf	3,5	;RP0=1, select bank1
  1838     0075  1303               	bcf	3,6	;RP1=0, select bank1
  1839     0076  07BF               	addwf	(sprintf@prec+1)^(0+128),f
  1840     0077                     l3444:
  1841     0077  3001               	movlw	1
  1842     0078  1283               	bcf	3,5	;RP0=0, select bank0
  1843     0079  1303               	bcf	3,6	;RP1=0, select bank0
  1844     007A  00EA               	movwf	??_sprintf
  1845     007B  086A               	movf	??_sprintf,w
  1846     007C  1683               	bsf	3,5	;RP0=1, select bank1
  1847     007D  1303               	bcf	3,6	;RP1=0, select bank1
  1848     007E  07A8               	addwf	sprintf@f^(0+128),f
  1849     007F                     l3446:
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1852     007F  0828               	movf	sprintf@f^(0+128),w
  1853     0080  0084               	movwf	4
  1854     0081  120A  158A  200A  120A  118A  	fcall	stringdir
  1855     0086  160A  158A  2238  120A  118A  	fcall	_isdigit
  1856     008B  1803               	btfsc	3,0
  1857     008C  288E               	goto	u5561
  1858     008D  288F               	goto	u5560
  1859     008E                     u5561:
  1860     008E  2847               	goto	l3440
  1861     008F                     u5560:
  1862     008F  2898               	goto	l3454
  1863     0090                     l3448:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1866     0090  01BE               	clrf	sprintf@prec^(0+128)
  1867     0091  01BF               	clrf	(sprintf@prec+1)^(0+128)
  1868     0092                     l3450:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1871     0092  1633               	bsf	(sprintf@flag^(0+128)+1),4
  1872     0093  2898               	goto	l3454
  1873     0094                     l278:	
  1874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1875                           
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1878     0094  1683               	bsf	3,5	;RP0=1, select bank1
  1879     0095  1303               	bcf	3,6	;RP1=0, select bank1
  1880     0096  1533               	bsf	(sprintf@flag^(0+128)+1),2
  1881                           
  1882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  1883     0097  28B6               	goto	l3456
  1884     0098                     l3454:
  1885     0098  3001               	movlw	1
  1886     0099  1683               	bsf	3,5	;RP0=1, select bank1
  1887     009A  1303               	bcf	3,6	;RP1=0, select bank1
  1888     009B  07A8               	addwf	sprintf@f^(0+128),f
  1889     009C  30FF               	movlw	-1
  1890     009D  0728               	addwf	sprintf@f^(0+128),w
  1891     009E  0084               	movwf	4
  1892     009F  120A  158A  200A  120A  118A  	fcall	stringdir
  1893     00A4  00C5               	movwf	sprintf@c^(0+128)
  1894     00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1895     00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1896     00A7  00EA               	movwf	??_sprintf
  1897     00A8  01EB               	clrf	??_sprintf+1
  1898                           
  1899                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1900                           ; Switch size 1, requested type "simple"
  1901                           ; Number of cases is 1, Range of values is 0 to 0
  1902                           ; switch strategies available:
  1903                           ; Name         Instructions Cycles
  1904                           ; simple_byte            4     3 (average)
  1905                           ; direct_byte           11     8 (fixed)
  1906                           ; jumptable            260     6 (fixed)
  1907                           ;	Chosen strategy is simple_byte
  1908     00A9  086B               	movf	??_sprintf+1,w
  1909     00AA  3A00               	xorlw	0	; case 0
  1910     00AB  1903               	skipnz
  1911     00AC  28AE               	goto	l3734
  1912     00AD  2EAC               	goto	l3616
  1913     00AE                     l3734:
  1914                           
  1915                           ; Switch size 1, requested type "simple"
  1916                           ; Number of cases is 2, Range of values is 0 to 102
  1917                           ; switch strategies available:
  1918                           ; Name         Instructions Cycles
  1919                           ; simple_byte            7     4 (average)
  1920                           ; jumptable            260     6 (fixed)
  1921                           ;	Chosen strategy is simple_byte
  1922     00AE  086A               	movf	??_sprintf,w
  1923     00AF  3A00               	xorlw	0	; case 0
  1924     00B0  1903               	skipnz
  1925     00B1  2EBE               	goto	l3618
  1926     00B2  3A66               	xorlw	102	; case 102
  1927     00B3  1903               	skipnz
  1928     00B4  2894               	goto	l278
  1929     00B5  2EAC               	goto	l3616
  1930     00B6                     l3456:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1933     00B6  3000               	movlw	0
  1934     00B7  0532               	andwf	sprintf@flag^(0+128),w
  1935     00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1936     00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1937     00BA  00EA               	movwf	??_sprintf
  1938     00BB  3007               	movlw	7
  1939     00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1940     00BD  1303               	bcf	3,6	;RP1=0, select bank1
  1941     00BE  0533               	andwf	(sprintf@flag+1)^(0+128),w
  1942     00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1943     00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1944     00C1  00EB               	movwf	??_sprintf+1
  1945     00C2  086A               	movf	??_sprintf,w
  1946     00C3  046B               	iorwf	??_sprintf+1,w
  1947     00C4  1903               	btfsc	3,2
  1948     00C5  28C7               	goto	u5571
  1949     00C6  28C8               	goto	u5570
  1950     00C7                     u5571:
  1951     00C7  2E5B               	goto	l3598
  1952     00C8                     u5570:
  1953     00C8                     l3458:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1956     00C8  1683               	bsf	3,5	;RP0=1, select bank1
  1957     00C9  1303               	bcf	3,6	;RP1=0, select bank1
  1958     00CA  1E33               	btfss	(sprintf@flag+1)^(0+128),4
  1959     00CB  28CD               	goto	u5581
  1960     00CC  28CE               	goto	u5580
  1961     00CD                     u5581:
  1962     00CD  28D2               	goto	l3462
  1963     00CE                     u5580:
  1964     00CE                     l3460:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1967     00CE  3006               	movlw	6
  1968     00CF  00BE               	movwf	sprintf@prec^(0+128)
  1969     00D0  3000               	movlw	0
  1970     00D1  00BF               	movwf	(sprintf@prec^(0+128)+1)
  1971     00D2                     l3462:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1974     00D2  0831               	movf	sprintf@ap^(0+128),w
  1975     00D3  0084               	movwf	4
  1976     00D4  1383               	bcf	3,7	;select IRP bank0
  1977     00D5  0800               	movf	0,w
  1978     00D6  00C1               	movwf	sprintf@fval^(0+128)
  1979     00D7  0A84               	incf	4,f
  1980     00D8  0800               	movf	0,w
  1981     00D9  00C2               	movwf	(sprintf@fval+1)^(0+128)
  1982     00DA  0A84               	incf	4,f
  1983     00DB  0800               	movf	0,w
  1984     00DC  00C3               	movwf	(sprintf@fval+2)^(0+128)
  1985     00DD  0A84               	incf	4,f
  1986     00DE  0800               	movf	0,w
  1987     00DF  00C4               	movwf	(sprintf@fval+3)^(0+128)
  1988     00E0                     l3464:
  1989     00E0  3004               	movlw	4
  1990     00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1991     00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1992     00E3  00EA               	movwf	??_sprintf
  1993     00E4  086A               	movf	??_sprintf,w
  1994     00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1995     00E6  1303               	bcf	3,6	;RP1=0, select bank1
  1996     00E7  07B1               	addwf	sprintf@ap^(0+128),f
  1997     00E8                     l3466:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2000     00E8  0844               	movf	(sprintf@fval+3)^(0+128),w
  2001     00E9  00F5               	movwf	___flge@ff1+3
  2002     00EA  0843               	movf	(sprintf@fval+2)^(0+128),w
  2003     00EB  00F4               	movwf	___flge@ff1+2
  2004     00EC  0842               	movf	(sprintf@fval+1)^(0+128),w
  2005     00ED  00F3               	movwf	___flge@ff1+1
  2006     00EE  0841               	movf	sprintf@fval^(0+128),w
  2007     00EF  00F2               	movwf	___flge@ff1
  2008     00F0  3000               	movlw	0
  2009     00F1  00F9               	movwf	___flge@ff2+3
  2010     00F2  3000               	movlw	0
  2011     00F3  00F8               	movwf	___flge@ff2+2
  2012     00F4  3000               	movlw	0
  2013     00F5  00F7               	movwf	___flge@ff2+1
  2014     00F6  3000               	movlw	0
  2015     00F7  00F6               	movwf	___flge@ff2
  2016     00F8  160A  158A  26A5  120A  118A  	fcall	___flge
  2017     00FD  1803               	btfsc	3,0
  2018     00FE  2900               	goto	u5591
  2019     00FF  2901               	goto	u5590
  2020     0100                     u5591:
  2021     0100  291E               	goto	l3472
  2022     0101                     u5590:
  2023     0101                     l3468:
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2026     0101  1683               	bsf	3,5	;RP0=1, select bank1
  2027     0102  1303               	bcf	3,6	;RP1=0, select bank1
  2028     0103  0844               	movf	(sprintf@fval+3)^(0+128),w
  2029     0104  00F5               	movwf	___flneg@f1+3
  2030     0105  0843               	movf	(sprintf@fval+2)^(0+128),w
  2031     0106  00F4               	movwf	___flneg@f1+2
  2032     0107  0842               	movf	(sprintf@fval+1)^(0+128),w
  2033     0108  00F3               	movwf	___flneg@f1+1
  2034     0109  0841               	movf	sprintf@fval^(0+128),w
  2035     010A  00F2               	movwf	___flneg@f1
  2036     010B  160A  158A  2200  120A  118A  	fcall	___flneg
  2037     0110  0875               	movf	?___flneg+3,w
  2038     0111  1683               	bsf	3,5	;RP0=1, select bank1
  2039     0112  1303               	bcf	3,6	;RP1=0, select bank1
  2040     0113  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2041     0114  0874               	movf	?___flneg+2,w
  2042     0115  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2043     0116  0873               	movf	?___flneg+1,w
  2044     0117  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2045     0118  0872               	movf	?___flneg,w
  2046     0119  00C1               	movwf	sprintf@fval^(0+128)
  2047     011A                     l3470:
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2050     011A  3003               	movlw	3
  2051     011B  04B2               	iorwf	sprintf@flag^(0+128),f
  2052     011C  3000               	movlw	0
  2053     011D  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  2054     011E                     l3472:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2057     011E  1683               	bsf	3,5	;RP0=1, select bank1
  2058     011F  1303               	bcf	3,6	;RP1=0, select bank1
  2059     0120  01B8               	clrf	sprintf@eexp^(0+128)
  2060     0121  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  2061     0122                     l3474:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2064     0122  0844               	movf	(sprintf@fval+3)^(0+128),w
  2065     0123  00F5               	movwf	___fleq@ff1+3
  2066     0124  0843               	movf	(sprintf@fval+2)^(0+128),w
  2067     0125  00F4               	movwf	___fleq@ff1+2
  2068     0126  0842               	movf	(sprintf@fval+1)^(0+128),w
  2069     0127  00F3               	movwf	___fleq@ff1+1
  2070     0128  0841               	movf	sprintf@fval^(0+128),w
  2071     0129  00F2               	movwf	___fleq@ff1
  2072     012A  3000               	movlw	0
  2073     012B  00F9               	movwf	___fleq@ff2+3
  2074     012C  3000               	movlw	0
  2075     012D  00F8               	movwf	___fleq@ff2+2
  2076     012E  3000               	movlw	0
  2077     012F  00F7               	movwf	___fleq@ff2+1
  2078     0130  3000               	movlw	0
  2079     0131  00F6               	movwf	___fleq@ff2
  2080     0132  160A  158A  23AE  120A  118A  	fcall	___fleq
  2081     0137  1803               	btfsc	3,0
  2082     0138  293A               	goto	u5601
  2083     0139  293B               	goto	u5600
  2084     013A                     u5601:
  2085     013A  2A3B               	goto	l3500
  2086     013B                     u5600:
  2087     013B                     l3476:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2090     013B  1003               	clrc
  2091     013C  1683               	bsf	3,5	;RP0=1, select bank1
  2092     013D  1303               	bcf	3,6	;RP1=0, select bank1
  2093     013E  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  2094     013F  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  2095     0140  3E82               	addlw	130
  2096     0141  00B8               	movwf	sprintf@eexp^(0+128)
  2097     0142  30FF               	movlw	255
  2098     0143  1803               	skipnc
  2099     0144  3000               	movlw	0
  2100     0145  00B9               	movwf	(sprintf@eexp^(0+128)+1)
  2101     0146                     l3478:
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2104     0146  30FF               	movlw	255
  2105     0147  07B8               	addwf	sprintf@eexp^(0+128),f
  2106     0148  1803               	skipnc
  2107     0149  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2108     014A  30FF               	movlw	255
  2109     014B  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2110     014C                     l3480:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2113     014C  3003               	movlw	3
  2114     014D  00F2               	movwf	___wmul@multiplier
  2115     014E  3000               	movlw	0
  2116     014F  00F3               	movwf	___wmul@multiplier+1
  2117     0150  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2118     0151  00F5               	movwf	___wmul@multiplicand+1
  2119     0152  0838               	movf	sprintf@eexp^(0+128),w
  2120     0153  00F4               	movwf	___wmul@multiplicand
  2121     0154  160A  158A  22A0  120A  118A  	fcall	___wmul
  2122     0159  0873               	movf	?___wmul+1,w
  2123     015A  1683               	bsf	3,5	;RP0=1, select bank1
  2124     015B  1303               	bcf	3,6	;RP1=0, select bank1
  2125     015C  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  2126     015D  0872               	movf	?___wmul,w
  2127     015E  00B8               	movwf	sprintf@eexp^(0+128)
  2128     015F                     l3482:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2131     015F  300A               	movlw	10
  2132     0160  1283               	bcf	3,5	;RP0=0, select bank0
  2133     0161  1303               	bcf	3,6	;RP1=0, select bank0
  2134     0162  00A0               	movwf	___awdiv@divisor
  2135     0163  3000               	movlw	0
  2136     0164  00A1               	movwf	___awdiv@divisor+1
  2137     0165  1683               	bsf	3,5	;RP0=1, select bank1
  2138     0166  1303               	bcf	3,6	;RP1=0, select bank1
  2139     0167  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2140     0168  1283               	bcf	3,5	;RP0=0, select bank0
  2141     0169  1303               	bcf	3,6	;RP1=0, select bank0
  2142     016A  00A3               	movwf	___awdiv@dividend+1
  2143     016B  1683               	bsf	3,5	;RP0=1, select bank1
  2144     016C  1303               	bcf	3,6	;RP1=0, select bank1
  2145     016D  0838               	movf	sprintf@eexp^(0+128),w
  2146     016E  1283               	bcf	3,5	;RP0=0, select bank0
  2147     016F  1303               	bcf	3,6	;RP1=0, select bank0
  2148     0170  00A2               	movwf	___awdiv@dividend
  2149     0171  160A  158A  25C4  120A  118A  	fcall	___awdiv
  2150     0176  1283               	bcf	3,5	;RP0=0, select bank0
  2151     0177  1303               	bcf	3,6	;RP1=0, select bank0
  2152     0178  0821               	movf	?___awdiv+1,w
  2153     0179  1683               	bsf	3,5	;RP0=1, select bank1
  2154     017A  1303               	bcf	3,6	;RP1=0, select bank1
  2155     017B  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  2156     017C  1283               	bcf	3,5	;RP0=0, select bank0
  2157     017D  1303               	bcf	3,6	;RP1=0, select bank0
  2158     017E  0820               	movf	?___awdiv,w
  2159     017F  1683               	bsf	3,5	;RP0=1, select bank1
  2160     0180  1303               	bcf	3,6	;RP1=0, select bank1
  2161     0181  00B8               	movwf	sprintf@eexp^(0+128)
  2162     0182                     l3484:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2165     0182  1FB9               	btfss	(sprintf@eexp+1)^(0+128),7
  2166     0183  2985               	goto	u5611
  2167     0184  2986               	goto	u5610
  2168     0185                     u5611:
  2169     0185  298C               	goto	l3488
  2170     0186                     u5610:
  2171     0186                     l3486:
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2174     0186  30FF               	movlw	255
  2175     0187  07B8               	addwf	sprintf@eexp^(0+128),f
  2176     0188  1803               	skipnc
  2177     0189  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2178     018A  30FF               	movlw	255
  2179     018B  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2180     018C                     l3488:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2183     018C  0338               	decf	sprintf@eexp^(0+128),w
  2184     018D  3AFF               	xorlw	255
  2185     018E  120A  158A  249D  120A  118A  	fcall	_scale
  2186     0193  1283               	bcf	3,5	;RP0=0, select bank0
  2187     0194  1303               	bcf	3,6	;RP1=0, select bank0
  2188     0195  0845               	movf	?_scale+3,w
  2189     0196  1683               	bsf	3,5	;RP0=1, select bank1
  2190     0197  1303               	bcf	3,6	;RP1=0, select bank1
  2191     0198  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2192     0199  1283               	bcf	3,5	;RP0=0, select bank0
  2193     019A  1303               	bcf	3,6	;RP1=0, select bank0
  2194     019B  0844               	movf	?_scale+2,w
  2195     019C  1683               	bsf	3,5	;RP0=1, select bank1
  2196     019D  1303               	bcf	3,6	;RP1=0, select bank1
  2197     019E  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2198     019F  1283               	bcf	3,5	;RP0=0, select bank0
  2199     01A0  1303               	bcf	3,6	;RP1=0, select bank0
  2200     01A1  0843               	movf	?_scale+1,w
  2201     01A2  1683               	bsf	3,5	;RP0=1, select bank1
  2202     01A3  1303               	bcf	3,6	;RP1=0, select bank1
  2203     01A4  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2204     01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2205     01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2206     01A7  0842               	movf	?_scale,w
  2207     01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2208     01A9  1303               	bcf	3,6	;RP1=0, select bank1
  2209     01AA  00BA               	movwf	sprintf@tmpval^(0+128)
  2210     01AB                     l3490:
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2213     01AB  0844               	movf	(sprintf@fval+3)^(0+128),w
  2214     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2215     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2216     01AE  00AB               	movwf	___flmul@b+3
  2217     01AF  1683               	bsf	3,5	;RP0=1, select bank1
  2218     01B0  1303               	bcf	3,6	;RP1=0, select bank1
  2219     01B1  0843               	movf	(sprintf@fval+2)^(0+128),w
  2220     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2221     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  2222     01B4  00AA               	movwf	___flmul@b+2
  2223     01B5  1683               	bsf	3,5	;RP0=1, select bank1
  2224     01B6  1303               	bcf	3,6	;RP1=0, select bank1
  2225     01B7  0842               	movf	(sprintf@fval+1)^(0+128),w
  2226     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2227     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2228     01BA  00A9               	movwf	___flmul@b+1
  2229     01BB  1683               	bsf	3,5	;RP0=1, select bank1
  2230     01BC  1303               	bcf	3,6	;RP1=0, select bank1
  2231     01BD  0841               	movf	sprintf@fval^(0+128),w
  2232     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2233     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2234     01C0  00A8               	movwf	___flmul@b
  2235     01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2236     01C2  1303               	bcf	3,6	;RP1=0, select bank1
  2237     01C3  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2238     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2239     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2240     01C6  00AF               	movwf	___flmul@a+3
  2241     01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2242     01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2243     01C9  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2244     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2245     01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2246     01CC  00AE               	movwf	___flmul@a+2
  2247     01CD  1683               	bsf	3,5	;RP0=1, select bank1
  2248     01CE  1303               	bcf	3,6	;RP1=0, select bank1
  2249     01CF  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2250     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2251     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2252     01D2  00AD               	movwf	___flmul@a+1
  2253     01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2254     01D4  1303               	bcf	3,6	;RP1=0, select bank1
  2255     01D5  083A               	movf	sprintf@tmpval^(0+128),w
  2256     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2257     01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2258     01D8  00AC               	movwf	___flmul@a
  2259     01D9  120A  158A  2158  120A  118A  	fcall	___flmul
  2260     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2261     01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2262     01E0  082B               	movf	?___flmul+3,w
  2263     01E1  1683               	bsf	3,5	;RP0=1, select bank1
  2264     01E2  1303               	bcf	3,6	;RP1=0, select bank1
  2265     01E3  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2266     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2267     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2268     01E6  082A               	movf	?___flmul+2,w
  2269     01E7  1683               	bsf	3,5	;RP0=1, select bank1
  2270     01E8  1303               	bcf	3,6	;RP1=0, select bank1
  2271     01E9  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2272     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2273     01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2274     01EC  0829               	movf	?___flmul+1,w
  2275     01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2276     01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2277     01EF  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2278     01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2279     01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2280     01F2  0828               	movf	?___flmul,w
  2281     01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2282     01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2283     01F5  00BA               	movwf	sprintf@tmpval^(0+128)
  2284     01F6                     l3492:
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2287     01F6  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2288     01F7  00F5               	movwf	___flge@ff1+3
  2289     01F8  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2290     01F9  00F4               	movwf	___flge@ff1+2
  2291     01FA  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2292     01FB  00F3               	movwf	___flge@ff1+1
  2293     01FC  083A               	movf	sprintf@tmpval^(0+128),w
  2294     01FD  00F2               	movwf	___flge@ff1
  2295     01FE  303F               	movlw	63
  2296     01FF  00F9               	movwf	___flge@ff2+3
  2297     0200  3080               	movlw	128
  2298     0201  00F8               	movwf	___flge@ff2+2
  2299     0202  3000               	movlw	0
  2300     0203  00F7               	movwf	___flge@ff2+1
  2301     0204  3000               	movlw	0
  2302     0205  00F6               	movwf	___flge@ff2
  2303     0206  160A  158A  26A5  120A  118A  	fcall	___flge
  2304     020B  1803               	btfsc	3,0
  2305     020C  2A0E               	goto	u5621
  2306     020D  2A0F               	goto	u5620
  2307     020E                     u5621:
  2308     020E  2A18               	goto	l3496
  2309     020F                     u5620:
  2310     020F                     l3494:
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2313     020F  30FF               	movlw	255
  2314     0210  1683               	bsf	3,5	;RP0=1, select bank1
  2315     0211  1303               	bcf	3,6	;RP1=0, select bank1
  2316     0212  07B8               	addwf	sprintf@eexp^(0+128),f
  2317     0213  1803               	skipnc
  2318     0214  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2319     0215  30FF               	movlw	255
  2320     0216  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2321     0217  2A3B               	goto	l3500
  2322     0218                     l3496:
  2323     0218  1683               	bsf	3,5	;RP0=1, select bank1
  2324     0219  1303               	bcf	3,6	;RP1=0, select bank1
  2325     021A  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2326     021B  00F5               	movwf	___flge@ff1+3
  2327     021C  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2328     021D  00F4               	movwf	___flge@ff1+2
  2329     021E  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2330     021F  00F3               	movwf	___flge@ff1+1
  2331     0220  083A               	movf	sprintf@tmpval^(0+128),w
  2332     0221  00F2               	movwf	___flge@ff1
  2333     0222  3041               	movlw	65
  2334     0223  00F9               	movwf	___flge@ff2+3
  2335     0224  3020               	movlw	32
  2336     0225  00F8               	movwf	___flge@ff2+2
  2337     0226  3000               	movlw	0
  2338     0227  00F7               	movwf	___flge@ff2+1
  2339     0228  3000               	movlw	0
  2340     0229  00F6               	movwf	___flge@ff2
  2341     022A  160A  158A  26A5  120A  118A  	fcall	___flge
  2342     022F  1C03               	btfss	3,0
  2343     0230  2A32               	goto	u5631
  2344     0231  2A33               	goto	u5630
  2345     0232                     u5631:
  2346     0232  2A3B               	goto	l3500
  2347     0233                     u5630:
  2348     0233                     l3498:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2351     0233  3001               	movlw	1
  2352     0234  1683               	bsf	3,5	;RP0=1, select bank1
  2353     0235  1303               	bcf	3,6	;RP1=0, select bank1
  2354     0236  07B8               	addwf	sprintf@eexp^(0+128),f
  2355     0237  1803               	skipnc
  2356     0238  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2357     0239  3000               	movlw	0
  2358     023A  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2359     023B                     l3500:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2362     023B  1683               	bsf	3,5	;RP0=1, select bank1
  2363     023C  1303               	bcf	3,6	;RP1=0, select bank1
  2364     023D  083F               	movf	(sprintf@prec+1)^(0+128),w
  2365     023E  3A80               	xorlw	128
  2366     023F  00FF               	movwf	btemp+1
  2367     0240  3080               	movlw	128
  2368     0241  027F               	subwf	btemp+1,w
  2369     0242  1D03               	skipz
  2370     0243  2A46               	goto	u5645
  2371     0244  300D               	movlw	13
  2372     0245  023E               	subwf	sprintf@prec^(0+128),w
  2373     0246                     u5645:
  2374     0246  1803               	skipnc
  2375     0247  2A49               	goto	u5641
  2376     0248  2A4A               	goto	u5640
  2377     0249                     u5641:
  2378     0249  2A91               	goto	l3504
  2379     024A                     u5640:
  2380     024A                     l3502:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2383     024A  1683               	bsf	3,5	;RP0=1, select bank1
  2384     024B  1303               	bcf	3,6	;RP1=0, select bank1
  2385     024C  083E               	movf	sprintf@prec^(0+128),w
  2386     024D  160A  118A  239D  120A  118A  	fcall	_fround
  2387     0252  1283               	bcf	3,5	;RP0=0, select bank0
  2388     0253  1303               	bcf	3,6	;RP1=0, select bank0
  2389     0254  0845               	movf	?_fround+3,w
  2390     0255  00D9               	movwf	___fladd@b+3
  2391     0256  0844               	movf	?_fround+2,w
  2392     0257  00D8               	movwf	___fladd@b+2
  2393     0258  0843               	movf	?_fround+1,w
  2394     0259  00D7               	movwf	___fladd@b+1
  2395     025A  0842               	movf	?_fround,w
  2396     025B  00D6               	movwf	___fladd@b
  2397     025C  1683               	bsf	3,5	;RP0=1, select bank1
  2398     025D  1303               	bcf	3,6	;RP1=0, select bank1
  2399     025E  0844               	movf	(sprintf@fval+3)^(0+128),w
  2400     025F  1283               	bcf	3,5	;RP0=0, select bank0
  2401     0260  1303               	bcf	3,6	;RP1=0, select bank0
  2402     0261  00DD               	movwf	___fladd@a+3
  2403     0262  1683               	bsf	3,5	;RP0=1, select bank1
  2404     0263  1303               	bcf	3,6	;RP1=0, select bank1
  2405     0264  0843               	movf	(sprintf@fval+2)^(0+128),w
  2406     0265  1283               	bcf	3,5	;RP0=0, select bank0
  2407     0266  1303               	bcf	3,6	;RP1=0, select bank0
  2408     0267  00DC               	movwf	___fladd@a+2
  2409     0268  1683               	bsf	3,5	;RP0=1, select bank1
  2410     0269  1303               	bcf	3,6	;RP1=0, select bank1
  2411     026A  0842               	movf	(sprintf@fval+1)^(0+128),w
  2412     026B  1283               	bcf	3,5	;RP0=0, select bank0
  2413     026C  1303               	bcf	3,6	;RP1=0, select bank0
  2414     026D  00DB               	movwf	___fladd@a+1
  2415     026E  1683               	bsf	3,5	;RP0=1, select bank1
  2416     026F  1303               	bcf	3,6	;RP1=0, select bank1
  2417     0270  0841               	movf	sprintf@fval^(0+128),w
  2418     0271  1283               	bcf	3,5	;RP0=0, select bank0
  2419     0272  1303               	bcf	3,6	;RP1=0, select bank0
  2420     0273  00DA               	movwf	___fladd@a
  2421     0274  160A  118A  25A8  120A  118A  	fcall	___fladd
  2422     0279  1283               	bcf	3,5	;RP0=0, select bank0
  2423     027A  1303               	bcf	3,6	;RP1=0, select bank0
  2424     027B  0859               	movf	?___fladd+3,w
  2425     027C  1683               	bsf	3,5	;RP0=1, select bank1
  2426     027D  1303               	bcf	3,6	;RP1=0, select bank1
  2427     027E  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2428     027F  1283               	bcf	3,5	;RP0=0, select bank0
  2429     0280  1303               	bcf	3,6	;RP1=0, select bank0
  2430     0281  0858               	movf	?___fladd+2,w
  2431     0282  1683               	bsf	3,5	;RP0=1, select bank1
  2432     0283  1303               	bcf	3,6	;RP1=0, select bank1
  2433     0284  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2434     0285  1283               	bcf	3,5	;RP0=0, select bank0
  2435     0286  1303               	bcf	3,6	;RP1=0, select bank0
  2436     0287  0857               	movf	?___fladd+1,w
  2437     0288  1683               	bsf	3,5	;RP0=1, select bank1
  2438     0289  1303               	bcf	3,6	;RP1=0, select bank1
  2439     028A  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2440     028B  1283               	bcf	3,5	;RP0=0, select bank0
  2441     028C  1303               	bcf	3,6	;RP1=0, select bank0
  2442     028D  0856               	movf	?___fladd,w
  2443     028E  1683               	bsf	3,5	;RP0=1, select bank1
  2444     028F  1303               	bcf	3,6	;RP1=0, select bank1
  2445     0290  00C1               	movwf	sprintf@fval^(0+128)
  2446     0291                     l3504:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2449     0291  1683               	bsf	3,5	;RP0=1, select bank1
  2450     0292  1303               	bcf	3,6	;RP1=0, select bank1
  2451     0293  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2452     0294  3A80               	xorlw	128
  2453     0295  00FF               	movwf	btemp+1
  2454     0296  3080               	movlw	128
  2455     0297  027F               	subwf	btemp+1,w
  2456     0298  1D03               	skipz
  2457     0299  2A9C               	goto	u5655
  2458     029A  300A               	movlw	10
  2459     029B  0238               	subwf	sprintf@eexp^(0+128),w
  2460     029C                     u5655:
  2461     029C  1803               	skipnc
  2462     029D  2A9F               	goto	u5651
  2463     029E  2AA0               	goto	u5650
  2464     029F                     u5651:
  2465     029F  2AF1               	goto	l3512
  2466     02A0                     u5650:
  2467     02A0                     l3506:
  2468     02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2469     02A1  1303               	bcf	3,6	;RP1=0, select bank1
  2470     02A2  0844               	movf	(sprintf@fval+3)^(0+128),w
  2471     02A3  00F5               	movwf	___fleq@ff1+3
  2472     02A4  0843               	movf	(sprintf@fval+2)^(0+128),w
  2473     02A5  00F4               	movwf	___fleq@ff1+2
  2474     02A6  0842               	movf	(sprintf@fval+1)^(0+128),w
  2475     02A7  00F3               	movwf	___fleq@ff1+1
  2476     02A8  0841               	movf	sprintf@fval^(0+128),w
  2477     02A9  00F2               	movwf	___fleq@ff1
  2478     02AA  3000               	movlw	0
  2479     02AB  00F9               	movwf	___fleq@ff2+3
  2480     02AC  3000               	movlw	0
  2481     02AD  00F8               	movwf	___fleq@ff2+2
  2482     02AE  3000               	movlw	0
  2483     02AF  00F7               	movwf	___fleq@ff2+1
  2484     02B0  3000               	movlw	0
  2485     02B1  00F6               	movwf	___fleq@ff2
  2486     02B2  160A  158A  23AE  120A  118A  	fcall	___fleq
  2487     02B7  1803               	btfsc	3,0
  2488     02B8  2ABA               	goto	u5661
  2489     02B9  2ABB               	goto	u5660
  2490     02BA                     u5661:
  2491     02BA  2B63               	goto	l3526
  2492     02BB                     u5660:
  2493     02BB                     l3508:
  2494     02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2495     02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2496     02BD  0844               	movf	(sprintf@fval+3)^(0+128),w
  2497     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2498     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2499     02C0  00D8               	movwf	___fltol@f1+3
  2500     02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2501     02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2502     02C3  0843               	movf	(sprintf@fval+2)^(0+128),w
  2503     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2504     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2505     02C6  00D7               	movwf	___fltol@f1+2
  2506     02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2507     02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2508     02C9  0842               	movf	(sprintf@fval+1)^(0+128),w
  2509     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2510     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2511     02CC  00D6               	movwf	___fltol@f1+1
  2512     02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2513     02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2514     02CF  0841               	movf	sprintf@fval^(0+128),w
  2515     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2516     02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2517     02D2  00D5               	movwf	___fltol@f1
  2518     02D3  160A  158A  262D  120A  118A  	fcall	___fltol
  2519     02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2520     02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2521     02DA  0858               	movf	?___fltol+3,w
  2522     02DB  0457               	iorwf	?___fltol+2,w
  2523     02DC  0456               	iorwf	?___fltol+1,w
  2524     02DD  0455               	iorwf	?___fltol,w
  2525     02DE  1D03               	skipz
  2526     02DF  2AE1               	goto	u5671
  2527     02E0  2AE2               	goto	u5670
  2528     02E1                     u5671:
  2529     02E1  2B63               	goto	l3526
  2530     02E2                     u5670:
  2531     02E2                     l3510:
  2532     02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2533     02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2534     02E4  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2535     02E5  3A80               	xorlw	128
  2536     02E6  00FF               	movwf	btemp+1
  2537     02E7  3080               	movlw	128
  2538     02E8  027F               	subwf	btemp+1,w
  2539     02E9  1D03               	skipz
  2540     02EA  2AED               	goto	u5685
  2541     02EB  3002               	movlw	2
  2542     02EC  0238               	subwf	sprintf@eexp^(0+128),w
  2543     02ED                     u5685:
  2544     02ED  1C03               	skipc
  2545     02EE  2AF0               	goto	u5681
  2546     02EF  2AF1               	goto	u5680
  2547     02F0                     u5681:
  2548     02F0  2B63               	goto	l3526
  2549     02F1                     u5680:
  2550     02F1                     l3512:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2553     02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2554     02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2555     02F3  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2556     02F4  00F5               	movwf	___flge@ff1+3
  2557     02F5  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2558     02F6  00F4               	movwf	___flge@ff1+2
  2559     02F7  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2560     02F8  00F3               	movwf	___flge@ff1+1
  2561     02F9  083A               	movf	sprintf@tmpval^(0+128),w
  2562     02FA  00F2               	movwf	___flge@ff1
  2563     02FB  3040               	movlw	64
  2564     02FC  00F9               	movwf	___flge@ff2+3
  2565     02FD  3089               	movlw	137
  2566     02FE  00F8               	movwf	___flge@ff2+2
  2567     02FF  3070               	movlw	112
  2568     0300  00F7               	movwf	___flge@ff2+1
  2569     0301  305F               	movlw	95
  2570     0302  00F6               	movwf	___flge@ff2
  2571     0303  160A  158A  26A5  120A  118A  	fcall	___flge
  2572     0308  1803               	btfsc	3,0
  2573     0309  2B0B               	goto	u5691
  2574     030A  2B0C               	goto	u5690
  2575     030B                     u5691:
  2576     030B  2B15               	goto	l3516
  2577     030C                     u5690:
  2578     030C                     l3514:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2581     030C  30F7               	movlw	247
  2582     030D  1683               	bsf	3,5	;RP0=1, select bank1
  2583     030E  1303               	bcf	3,6	;RP1=0, select bank1
  2584     030F  07B8               	addwf	sprintf@eexp^(0+128),f
  2585     0310  1803               	skipnc
  2586     0311  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2587     0312  30FF               	movlw	255
  2588     0313  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2591     0314  2B1D               	goto	l3518
  2592     0315                     l3516:
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2595     0315  30F8               	movlw	248
  2596     0316  1683               	bsf	3,5	;RP0=1, select bank1
  2597     0317  1303               	bcf	3,6	;RP1=0, select bank1
  2598     0318  07B8               	addwf	sprintf@eexp^(0+128),f
  2599     0319  1803               	skipnc
  2600     031A  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2601     031B  30FF               	movlw	255
  2602     031C  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2603     031D                     l3518:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2606     031D  0838               	movf	sprintf@eexp^(0+128),w
  2607     031E  120A  158A  249D  120A  118A  	fcall	_scale
  2608     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2609     0324  1303               	bcf	3,6	;RP1=0, select bank0
  2610     0325  0845               	movf	?_scale+3,w
  2611     0326  1683               	bsf	3,5	;RP0=1, select bank1
  2612     0327  1303               	bcf	3,6	;RP1=0, select bank1
  2613     0328  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2614     0329  1283               	bcf	3,5	;RP0=0, select bank0
  2615     032A  1303               	bcf	3,6	;RP1=0, select bank0
  2616     032B  0844               	movf	?_scale+2,w
  2617     032C  1683               	bsf	3,5	;RP0=1, select bank1
  2618     032D  1303               	bcf	3,6	;RP1=0, select bank1
  2619     032E  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2620     032F  1283               	bcf	3,5	;RP0=0, select bank0
  2621     0330  1303               	bcf	3,6	;RP1=0, select bank0
  2622     0331  0843               	movf	?_scale+1,w
  2623     0332  1683               	bsf	3,5	;RP0=1, select bank1
  2624     0333  1303               	bcf	3,6	;RP1=0, select bank1
  2625     0334  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2626     0335  1283               	bcf	3,5	;RP0=0, select bank0
  2627     0336  1303               	bcf	3,6	;RP1=0, select bank0
  2628     0337  0842               	movf	?_scale,w
  2629     0338  1683               	bsf	3,5	;RP0=1, select bank1
  2630     0339  1303               	bcf	3,6	;RP1=0, select bank1
  2631     033A  00BA               	movwf	sprintf@tmpval^(0+128)
  2632     033B                     l3520:
  2633     033B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2634     033C  00F5               	movwf	__div_to_l_@f1+3
  2635     033D  0843               	movf	(sprintf@fval+2)^(0+128),w
  2636     033E  00F4               	movwf	__div_to_l_@f1+2
  2637     033F  0842               	movf	(sprintf@fval+1)^(0+128),w
  2638     0340  00F3               	movwf	__div_to_l_@f1+1
  2639     0341  0841               	movf	sprintf@fval^(0+128),w
  2640     0342  00F2               	movwf	__div_to_l_@f1
  2641     0343  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2642     0344  00F9               	movwf	__div_to_l_@f2+3
  2643     0345  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2644     0346  00F8               	movwf	__div_to_l_@f2+2
  2645     0347  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2646     0348  00F7               	movwf	__div_to_l_@f2+1
  2647     0349  083A               	movf	sprintf@tmpval^(0+128),w
  2648     034A  00F6               	movwf	__div_to_l_@f2
  2649     034B  160A  118A  2058  120A  118A  	fcall	__div_to_l_
  2650     0350  0875               	movf	?__div_to_l_+3,w
  2651     0351  1683               	bsf	3,5	;RP0=1, select bank1
  2652     0352  1303               	bcf	3,6	;RP1=0, select bank1
  2653     0353  00B7               	movwf	(sprintf@val+3)^(0+128)
  2654     0354  0874               	movf	?__div_to_l_+2,w
  2655     0355  00B6               	movwf	(sprintf@val+2)^(0+128)
  2656     0356  0873               	movf	?__div_to_l_+1,w
  2657     0357  00B5               	movwf	(sprintf@val+1)^(0+128)
  2658     0358  0872               	movf	?__div_to_l_,w
  2659     0359  00B4               	movwf	sprintf@val^(0+128)
  2660     035A                     l3524:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2663     035A  3000               	movlw	0
  2664     035B  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2665     035C  3000               	movlw	0
  2666     035D  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2667     035E  3000               	movlw	0
  2668     035F  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2669     0360  3000               	movlw	0
  2670     0361  00C1               	movwf	sprintf@fval^(0+128)
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2673     0362  2BC9               	goto	l3532
  2674     0363                     l3526:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2677     0363  1683               	bsf	3,5	;RP0=1, select bank1
  2678     0364  1303               	bcf	3,6	;RP1=0, select bank1
  2679     0365  0844               	movf	(sprintf@fval+3)^(0+128),w
  2680     0366  1283               	bcf	3,5	;RP0=0, select bank0
  2681     0367  1303               	bcf	3,6	;RP1=0, select bank0
  2682     0368  00D8               	movwf	___fltol@f1+3
  2683     0369  1683               	bsf	3,5	;RP0=1, select bank1
  2684     036A  1303               	bcf	3,6	;RP1=0, select bank1
  2685     036B  0843               	movf	(sprintf@fval+2)^(0+128),w
  2686     036C  1283               	bcf	3,5	;RP0=0, select bank0
  2687     036D  1303               	bcf	3,6	;RP1=0, select bank0
  2688     036E  00D7               	movwf	___fltol@f1+2
  2689     036F  1683               	bsf	3,5	;RP0=1, select bank1
  2690     0370  1303               	bcf	3,6	;RP1=0, select bank1
  2691     0371  0842               	movf	(sprintf@fval+1)^(0+128),w
  2692     0372  1283               	bcf	3,5	;RP0=0, select bank0
  2693     0373  1303               	bcf	3,6	;RP1=0, select bank0
  2694     0374  00D6               	movwf	___fltol@f1+1
  2695     0375  1683               	bsf	3,5	;RP0=1, select bank1
  2696     0376  1303               	bcf	3,6	;RP1=0, select bank1
  2697     0377  0841               	movf	sprintf@fval^(0+128),w
  2698     0378  1283               	bcf	3,5	;RP0=0, select bank0
  2699     0379  1303               	bcf	3,6	;RP1=0, select bank0
  2700     037A  00D5               	movwf	___fltol@f1
  2701     037B  160A  158A  262D  120A  118A  	fcall	___fltol
  2702     0380  1283               	bcf	3,5	;RP0=0, select bank0
  2703     0381  1303               	bcf	3,6	;RP1=0, select bank0
  2704     0382  0858               	movf	?___fltol+3,w
  2705     0383  1683               	bsf	3,5	;RP0=1, select bank1
  2706     0384  1303               	bcf	3,6	;RP1=0, select bank1
  2707     0385  00B7               	movwf	(sprintf@val+3)^(0+128)
  2708     0386  1283               	bcf	3,5	;RP0=0, select bank0
  2709     0387  1303               	bcf	3,6	;RP1=0, select bank0
  2710     0388  0857               	movf	?___fltol+2,w
  2711     0389  1683               	bsf	3,5	;RP0=1, select bank1
  2712     038A  1303               	bcf	3,6	;RP1=0, select bank1
  2713     038B  00B6               	movwf	(sprintf@val+2)^(0+128)
  2714     038C  1283               	bcf	3,5	;RP0=0, select bank0
  2715     038D  1303               	bcf	3,6	;RP1=0, select bank0
  2716     038E  0856               	movf	?___fltol+1,w
  2717     038F  1683               	bsf	3,5	;RP0=1, select bank1
  2718     0390  1303               	bcf	3,6	;RP1=0, select bank1
  2719     0391  00B5               	movwf	(sprintf@val+1)^(0+128)
  2720     0392  1283               	bcf	3,5	;RP0=0, select bank0
  2721     0393  1303               	bcf	3,6	;RP1=0, select bank0
  2722     0394  0855               	movf	?___fltol,w
  2723     0395  1683               	bsf	3,5	;RP0=1, select bank1
  2724     0396  1303               	bcf	3,6	;RP1=0, select bank1
  2725     0397  00B4               	movwf	sprintf@val^(0+128)
  2726     0398                     l3528:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2729     0398  0837               	movf	(sprintf@val+3)^(0+128),w
  2730     0399  00F5               	movwf	___xxtofl@val+3
  2731     039A  0836               	movf	(sprintf@val+2)^(0+128),w
  2732     039B  00F4               	movwf	___xxtofl@val+2
  2733     039C  0835               	movf	(sprintf@val+1)^(0+128),w
  2734     039D  00F3               	movwf	___xxtofl@val+1
  2735     039E  0834               	movf	sprintf@val^(0+128),w
  2736     039F  00F2               	movwf	___xxtofl@val
  2737     03A0  3000               	movlw	0
  2738     03A1  160A  118A  2110  120A  118A  	fcall	___xxtofl
  2739     03A6  0875               	movf	?___xxtofl+3,w
  2740     03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2741     03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2742     03A9  00A3               	movwf	(___flsub@a+3)^(0+128)
  2743     03AA  0874               	movf	?___xxtofl+2,w
  2744     03AB  00A2               	movwf	(___flsub@a+2)^(0+128)
  2745     03AC  0873               	movf	?___xxtofl+1,w
  2746     03AD  00A1               	movwf	(___flsub@a+1)^(0+128)
  2747     03AE  0872               	movf	?___xxtofl,w
  2748     03AF  00A0               	movwf	___flsub@a^(0+128)
  2749     03B0  0844               	movf	(sprintf@fval+3)^(0+128),w
  2750     03B1  00A7               	movwf	(___flsub@b+3)^(0+128)
  2751     03B2  0843               	movf	(sprintf@fval+2)^(0+128),w
  2752     03B3  00A6               	movwf	(___flsub@b+2)^(0+128)
  2753     03B4  0842               	movf	(sprintf@fval+1)^(0+128),w
  2754     03B5  00A5               	movwf	(___flsub@b+1)^(0+128)
  2755     03B6  0841               	movf	sprintf@fval^(0+128),w
  2756     03B7  00A4               	movwf	___flsub@b^(0+128)
  2757     03B8  160A  158A  23FE  120A  118A  	fcall	___flsub
  2758     03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2759     03BE  1303               	bcf	3,6	;RP1=0, select bank1
  2760     03BF  0823               	movf	(?___flsub+3)^(0+128),w
  2761     03C0  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2762     03C1  0822               	movf	(?___flsub+2)^(0+128),w
  2763     03C2  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2764     03C3  0821               	movf	(?___flsub+1)^(0+128),w
  2765     03C4  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2766     03C5  0820               	movf	?___flsub^(0+128),w
  2767     03C6  00C1               	movwf	sprintf@fval^(0+128)
  2768     03C7                     l3530:
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2771     03C7  01B8               	clrf	sprintf@eexp^(0+128)
  2772     03C8  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  2773     03C9                     l3532:
  2774                           
  2775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2776     03C9  01C5               	clrf	sprintf@c^(0+128)
  2777     03CA  0AC5               	incf	sprintf@c^(0+128),f
  2778     03CB                     l3538:
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2781     03CB  0845               	movf	sprintf@c^(0+128),w
  2782     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2783     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2784     03CE  00EA               	movwf	??_sprintf
  2785     03CF  3001               	movlw	1
  2786     03D0                     u5705:
  2787     03D0  1003               	clrc
  2788     03D1  0DEA               	rlf	??_sprintf,f
  2789     03D2  3EFF               	addlw	-1
  2790     03D3  1D03               	skipz
  2791     03D4  2BD0               	goto	u5705
  2792     03D5  1003               	clrc
  2793     03D6  0D6A               	rlf	??_sprintf,w
  2794     03D7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2795     03D8  0084               	movwf	4
  2796     03D9  120A  158A  200A  120A  118A  	fcall	stringdir
  2797     03DE  00EB               	movwf	??_sprintf+1
  2798     03DF  120A  158A  200A  120A  118A  	fcall	stringdir
  2799     03E4  00EC               	movwf	??_sprintf+2
  2800     03E5  120A  158A  200A  120A  118A  	fcall	stringdir
  2801     03EA  00ED               	movwf	??_sprintf+3
  2802     03EB  120A  158A  200A  120A  118A  	fcall	stringdir
  2803     03F0  00EE               	movwf	??_sprintf+4
  2804     03F1  086E               	movf	??_sprintf+4,w
  2805     03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2806     03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2807     03F4  0237               	subwf	(sprintf@val+3)^(0+128),w
  2808     03F5  1D03               	skipz
  2809     03F6  2C0D               	goto	u5715
  2810     03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2811     03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2812     03F9  086D               	movf	??_sprintf+3,w
  2813     03FA  1683               	bsf	3,5	;RP0=1, select bank1
  2814     03FB  1303               	bcf	3,6	;RP1=0, select bank1
  2815     03FC  0236               	subwf	(sprintf@val+2)^(0+128),w
  2816     03FD  1D03               	skipz
  2817     03FE  2C0D               	goto	u5715
  2818     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2819     0400  1303               	bcf	3,6	;RP1=0, select bank0
  2820     0401  086C               	movf	??_sprintf+2,w
  2821     0402  1683               	bsf	3,5	;RP0=1, select bank1
  2822     0403  1303               	bcf	3,6	;RP1=0, select bank1
  2823     0404  0235               	subwf	(sprintf@val+1)^(0+128),w
  2824     0405  1D03               	skipz
  2825     0406  2C0D               	goto	u5715
  2826     0407  1283               	bcf	3,5	;RP0=0, select bank0
  2827     0408  1303               	bcf	3,6	;RP1=0, select bank0
  2828     0409  086B               	movf	??_sprintf+1,w
  2829     040A  1683               	bsf	3,5	;RP0=1, select bank1
  2830     040B  1303               	bcf	3,6	;RP1=0, select bank1
  2831     040C  0234               	subwf	sprintf@val^(0+128),w
  2832     040D                     u5715:
  2833     040D  1803               	skipnc
  2834     040E  2C10               	goto	u5711
  2835     040F  2C11               	goto	u5710
  2836     0410                     u5711:
  2837     0410  2C12               	goto	l3542
  2838     0411                     u5710:
  2839     0411  2C20               	goto	l3544
  2840     0412                     l3542:
  2841     0412  3001               	movlw	1
  2842     0413  1283               	bcf	3,5	;RP0=0, select bank0
  2843     0414  1303               	bcf	3,6	;RP1=0, select bank0
  2844     0415  00EA               	movwf	??_sprintf
  2845     0416  086A               	movf	??_sprintf,w
  2846     0417  1683               	bsf	3,5	;RP0=1, select bank1
  2847     0418  1303               	bcf	3,6	;RP1=0, select bank1
  2848     0419  07C5               	addwf	sprintf@c^(0+128),f
  2849     041A  300A               	movlw	10
  2850     041B  0645               	xorwf	sprintf@c^(0+128),w
  2851     041C  1D03               	btfss	3,2
  2852     041D  2C1F               	goto	u5721
  2853     041E  2C20               	goto	u5720
  2854     041F                     u5721:
  2855     041F  2BCB               	goto	l3538
  2856     0420                     u5720:
  2857     0420                     l3544:
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2860     0420  3003               	movlw	3
  2861     0421  0532               	andwf	sprintf@flag^(0+128),w
  2862     0422  1283               	bcf	3,5	;RP0=0, select bank0
  2863     0423  1303               	bcf	3,6	;RP1=0, select bank0
  2864     0424  00EA               	movwf	??_sprintf
  2865     0425  3000               	movlw	0
  2866     0426  1683               	bsf	3,5	;RP0=1, select bank1
  2867     0427  1303               	bcf	3,6	;RP1=0, select bank1
  2868     0428  0533               	andwf	(sprintf@flag+1)^(0+128),w
  2869     0429  1283               	bcf	3,5	;RP0=0, select bank0
  2870     042A  1303               	bcf	3,6	;RP1=0, select bank0
  2871     042B  00EB               	movwf	??_sprintf+1
  2872     042C  086A               	movf	??_sprintf,w
  2873     042D  046B               	iorwf	??_sprintf+1,w
  2874     042E  1903               	btfsc	3,2
  2875     042F  2C31               	goto	u5731
  2876     0430  2C32               	goto	u5730
  2877     0431                     u5731:
  2878     0431  2CAE               	goto	l304
  2879     0432                     u5730:
  2880     0432                     l3546:
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2883     0432  1683               	bsf	3,5	;RP0=1, select bank1
  2884     0433  1303               	bcf	3,6	;RP1=0, select bank1
  2885     0434  0840               	movf	sprintf@sp^(0+128),w
  2886     0435  0084               	movwf	4
  2887     0436  302D               	movlw	45
  2888     0437  1783               	bsf	3,7	;select IRP bank2
  2889     0438  0080               	movwf	0
  2890     0439                     l3548:
  2891     0439  3001               	movlw	1
  2892     043A  1283               	bcf	3,5	;RP0=0, select bank0
  2893     043B  1303               	bcf	3,6	;RP1=0, select bank0
  2894     043C  00EA               	movwf	??_sprintf
  2895     043D  086A               	movf	??_sprintf,w
  2896     043E  1683               	bsf	3,5	;RP0=1, select bank1
  2897     043F  1303               	bcf	3,6	;RP1=0, select bank1
  2898     0440  07C0               	addwf	sprintf@sp^(0+128),f
  2899     0441  2CAE               	goto	l304
  2900     0442                     l3550:
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2903     0442  0845               	movf	sprintf@c^(0+128),w
  2904     0443  1283               	bcf	3,5	;RP0=0, select bank0
  2905     0444  1303               	bcf	3,6	;RP1=0, select bank0
  2906     0445  00EA               	movwf	??_sprintf
  2907     0446  3001               	movlw	1
  2908     0447                     u5745:
  2909     0447  1003               	clrc
  2910     0448  0DEA               	rlf	??_sprintf,f
  2911     0449  3EFF               	addlw	-1
  2912     044A  1D03               	skipz
  2913     044B  2C47               	goto	u5745
  2914     044C  1003               	clrc
  2915     044D  0D6A               	rlf	??_sprintf,w
  2916     044E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2917     044F  0084               	movwf	4
  2918     0450  120A  158A  200A  120A  118A  	fcall	stringdir
  2919     0455  00F2               	movwf	___lldiv@divisor
  2920     0456  120A  158A  200A  120A  118A  	fcall	stringdir
  2921     045B  00F3               	movwf	___lldiv@divisor+1
  2922     045C  120A  158A  200A  120A  118A  	fcall	stringdir
  2923     0461  00F4               	movwf	___lldiv@divisor+2
  2924     0462  120A  158A  200A  120A  118A  	fcall	stringdir
  2925     0467  00F5               	movwf	___lldiv@divisor+3
  2926     0468  1683               	bsf	3,5	;RP0=1, select bank1
  2927     0469  1303               	bcf	3,6	;RP1=0, select bank1
  2928     046A  0837               	movf	(sprintf@val+3)^(0+128),w
  2929     046B  00F9               	movwf	___lldiv@dividend+3
  2930     046C  0836               	movf	(sprintf@val+2)^(0+128),w
  2931     046D  00F8               	movwf	___lldiv@dividend+2
  2932     046E  0835               	movf	(sprintf@val+1)^(0+128),w
  2933     046F  00F7               	movwf	___lldiv@dividend+1
  2934     0470  0834               	movf	sprintf@val^(0+128),w
  2935     0471  00F6               	movwf	___lldiv@dividend
  2936     0472  160A  158A  255C  120A  118A  	fcall	___lldiv
  2937     0477  0875               	movf	?___lldiv+3,w
  2938     0478  1683               	bsf	3,5	;RP0=1, select bank1
  2939     0479  1303               	bcf	3,6	;RP1=0, select bank1
  2940     047A  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2941     047B  0874               	movf	?___lldiv+2,w
  2942     047C  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2943     047D  0873               	movf	?___lldiv+1,w
  2944     047E  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2945     047F  0872               	movf	?___lldiv,w
  2946     0480  00BA               	movwf	sprintf@tmpval^(0+128)
  2947     0481                     l3552:
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2950     0481  3000               	movlw	0
  2951     0482  00F5               	movwf	___llmod@divisor+3
  2952     0483  3000               	movlw	0
  2953     0484  00F4               	movwf	___llmod@divisor+2
  2954     0485  3000               	movlw	0
  2955     0486  00F3               	movwf	___llmod@divisor+1
  2956     0487  300A               	movlw	10
  2957     0488  00F2               	movwf	___llmod@divisor
  2958     0489  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2959     048A  00F9               	movwf	___llmod@dividend+3
  2960     048B  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2961     048C  00F8               	movwf	___llmod@dividend+2
  2962     048D  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2963     048E  00F7               	movwf	___llmod@dividend+1
  2964     048F  083A               	movf	sprintf@tmpval^(0+128),w
  2965     0490  00F6               	movwf	___llmod@dividend
  2966     0491  160A  158A  244E  120A  118A  	fcall	___llmod
  2967     0496  0875               	movf	?___llmod+3,w
  2968     0497  1683               	bsf	3,5	;RP0=1, select bank1
  2969     0498  1303               	bcf	3,6	;RP1=0, select bank1
  2970     0499  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2971     049A  0874               	movf	?___llmod+2,w
  2972     049B  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2973     049C  0873               	movf	?___llmod+1,w
  2974     049D  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2975     049E  0872               	movf	?___llmod,w
  2976     049F  00BA               	movwf	sprintf@tmpval^(0+128)
  2977     04A0                     l3554:
  2978                           
  2979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2980     04A0  0840               	movf	sprintf@sp^(0+128),w
  2981     04A1  0084               	movwf	4
  2982     04A2  083A               	movf	sprintf@tmpval^(0+128),w
  2983     04A3  3E30               	addlw	48
  2984     04A4  1783               	bsf	3,7	;select IRP bank2
  2985     04A5  0080               	movwf	0
  2986     04A6  3001               	movlw	1
  2987     04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2988     04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2989     04A9  00EA               	movwf	??_sprintf
  2990     04AA  086A               	movf	??_sprintf,w
  2991     04AB  1683               	bsf	3,5	;RP0=1, select bank1
  2992     04AC  1303               	bcf	3,6	;RP1=0, select bank1
  2993     04AD  07C0               	addwf	sprintf@sp^(0+128),f
  2994     04AE                     l304:	
  2995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  2996                           
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2999     04AE  3001               	movlw	1
  3000     04AF  1683               	bsf	3,5	;RP0=1, select bank1
  3001     04B0  1303               	bcf	3,6	;RP1=0, select bank1
  3002     04B1  02C5               	subwf	sprintf@c^(0+128),f
  3003     04B2  0A45               	incf	sprintf@c^(0+128),w
  3004     04B3  1D03               	btfss	3,2
  3005     04B4  2CB6               	goto	u5751
  3006     04B5  2CB7               	goto	u5750
  3007     04B6                     u5751:
  3008     04B6  2C42               	goto	l3550
  3009     04B7                     u5750:
  3010     04B7  2CCD               	goto	l3562
  3011     04B8                     l3556:
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3014     04B8  1683               	bsf	3,5	;RP0=1, select bank1
  3015     04B9  1303               	bcf	3,6	;RP1=0, select bank1
  3016     04BA  0840               	movf	sprintf@sp^(0+128),w
  3017     04BB  0084               	movwf	4
  3018     04BC  3030               	movlw	48
  3019     04BD  1783               	bsf	3,7	;select IRP bank2
  3020     04BE  0080               	movwf	0
  3021     04BF                     l3558:
  3022     04BF  3001               	movlw	1
  3023     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3024     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3025     04C2  00EA               	movwf	??_sprintf
  3026     04C3  086A               	movf	??_sprintf,w
  3027     04C4  1683               	bsf	3,5	;RP0=1, select bank1
  3028     04C5  1303               	bcf	3,6	;RP1=0, select bank1
  3029     04C6  07C0               	addwf	sprintf@sp^(0+128),f
  3030     04C7                     l3560:
  3031                           
  3032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3033     04C7  30FF               	movlw	255
  3034     04C8  07B8               	addwf	sprintf@eexp^(0+128),f
  3035     04C9  1803               	skipnc
  3036     04CA  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  3037     04CB  30FF               	movlw	255
  3038     04CC  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  3039     04CD                     l3562:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3042     04CD  0839               	movf	(sprintf@eexp+1)^(0+128),w
  3043     04CE  3A80               	xorlw	128
  3044     04CF  00FF               	movwf	btemp+1
  3045     04D0  3080               	movlw	128
  3046     04D1  027F               	subwf	btemp+1,w
  3047     04D2  1D03               	skipz
  3048     04D3  2CD6               	goto	u5765
  3049     04D4  3001               	movlw	1
  3050     04D5  0238               	subwf	sprintf@eexp^(0+128),w
  3051     04D6                     u5765:
  3052     04D6  1803               	skipnc
  3053     04D7  2CD9               	goto	u5761
  3054     04D8  2CDA               	goto	u5760
  3055     04D9                     u5761:
  3056     04D9  2CB8               	goto	l3556
  3057     04DA                     u5760:
  3058     04DA                     l3564:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3061     04DA  1683               	bsf	3,5	;RP0=1, select bank1
  3062     04DB  1303               	bcf	3,6	;RP1=0, select bank1
  3063     04DC  083F               	movf	(sprintf@prec+1)^(0+128),w
  3064     04DD  3A80               	xorlw	128
  3065     04DE  00FF               	movwf	btemp+1
  3066     04DF  3080               	movlw	128
  3067     04E0  027F               	subwf	btemp+1,w
  3068     04E1  1D03               	skipz
  3069     04E2  2CE5               	goto	u5775
  3070     04E3  3009               	movlw	9
  3071     04E4  023E               	subwf	sprintf@prec^(0+128),w
  3072     04E5                     u5775:
  3073     04E5  1C03               	skipc
  3074     04E6  2CE8               	goto	u5771
  3075     04E7  2CE9               	goto	u5770
  3076     04E8                     u5771:
  3077     04E8  2CEE               	goto	l3568
  3078     04E9                     u5770:
  3079     04E9                     l3566:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3082     04E9  3008               	movlw	8
  3083     04EA  1683               	bsf	3,5	;RP0=1, select bank1
  3084     04EB  1303               	bcf	3,6	;RP1=0, select bank1
  3085     04EC  00C5               	movwf	sprintf@c^(0+128)
  3086     04ED  2CF2               	goto	l311
  3087     04EE                     l3568:
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3090     04EE  1683               	bsf	3,5	;RP0=1, select bank1
  3091     04EF  1303               	bcf	3,6	;RP1=0, select bank1
  3092     04F0  083E               	movf	sprintf@prec^(0+128),w
  3093     04F1  00C5               	movwf	sprintf@c^(0+128)
  3094     04F2                     l311:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3097     04F2  0845               	movf	sprintf@c^(0+128),w
  3098     04F3  1283               	bcf	3,5	;RP0=0, select bank0
  3099     04F4  1303               	bcf	3,6	;RP1=0, select bank0
  3100     04F5  00EA               	movwf	??_sprintf
  3101     04F6  01EB               	clrf	??_sprintf+1
  3102     04F7  086A               	movf	??_sprintf,w
  3103     04F8  1683               	bsf	3,5	;RP0=1, select bank1
  3104     04F9  1303               	bcf	3,6	;RP1=0, select bank1
  3105     04FA  02BE               	subwf	sprintf@prec^(0+128),f
  3106     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3107     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3108     04FD  086B               	movf	??_sprintf+1,w
  3109     04FE  1683               	bsf	3,5	;RP0=1, select bank1
  3110     04FF  1303               	bcf	3,6	;RP1=0, select bank1
  3111     0500  1C03               	skipc
  3112     0501  03BF               	decf	(sprintf@prec+1)^(0+128),f
  3113     0502  02BF               	subwf	(sprintf@prec+1)^(0+128),f
  3114     0503                     l3570:
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3117     0503  0845               	movf	sprintf@c^(0+128),w
  3118     0504  1903               	btfsc	3,2
  3119     0505  2D07               	goto	u5781
  3120     0506  2D08               	goto	u5780
  3121     0507                     u5781:
  3122     0507  2D15               	goto	l3576
  3123     0508                     u5780:
  3124     0508                     l3572:
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3127     0508  0840               	movf	sprintf@sp^(0+128),w
  3128     0509  0084               	movwf	4
  3129     050A  302E               	movlw	46
  3130     050B  1783               	bsf	3,7	;select IRP bank2
  3131     050C  0080               	movwf	0
  3132     050D                     l3574:
  3133     050D  3001               	movlw	1
  3134     050E  1283               	bcf	3,5	;RP0=0, select bank0
  3135     050F  1303               	bcf	3,6	;RP1=0, select bank0
  3136     0510  00EA               	movwf	??_sprintf
  3137     0511  086A               	movf	??_sprintf,w
  3138     0512  1683               	bsf	3,5	;RP0=1, select bank1
  3139     0513  1303               	bcf	3,6	;RP1=0, select bank1
  3140     0514  07C0               	addwf	sprintf@sp^(0+128),f
  3141     0515                     l3576:
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3144     0515  0845               	movf	sprintf@c^(0+128),w
  3145     0516  120A  158A  249D  120A  118A  	fcall	_scale
  3146     051B  1283               	bcf	3,5	;RP0=0, select bank0
  3147     051C  1303               	bcf	3,6	;RP1=0, select bank0
  3148     051D  0845               	movf	?_scale+3,w
  3149     051E  1683               	bsf	3,5	;RP0=1, select bank1
  3150     051F  1303               	bcf	3,6	;RP1=0, select bank1
  3151     0520  00B0               	movwf	(_sprintf$1136+3)^(0+128)
  3152     0521  1283               	bcf	3,5	;RP0=0, select bank0
  3153     0522  1303               	bcf	3,6	;RP1=0, select bank0
  3154     0523  0844               	movf	?_scale+2,w
  3155     0524  1683               	bsf	3,5	;RP0=1, select bank1
  3156     0525  1303               	bcf	3,6	;RP1=0, select bank1
  3157     0526  00AF               	movwf	(_sprintf$1136+2)^(0+128)
  3158     0527  1283               	bcf	3,5	;RP0=0, select bank0
  3159     0528  1303               	bcf	3,6	;RP1=0, select bank0
  3160     0529  0843               	movf	?_scale+1,w
  3161     052A  1683               	bsf	3,5	;RP0=1, select bank1
  3162     052B  1303               	bcf	3,6	;RP1=0, select bank1
  3163     052C  00AE               	movwf	(_sprintf$1136+1)^(0+128)
  3164     052D  1283               	bcf	3,5	;RP0=0, select bank0
  3165     052E  1303               	bcf	3,6	;RP1=0, select bank0
  3166     052F  0842               	movf	?_scale,w
  3167     0530  1683               	bsf	3,5	;RP0=1, select bank1
  3168     0531  1303               	bcf	3,6	;RP1=0, select bank1
  3169     0532  00AD               	movwf	_sprintf$1136^(0+128)
  3170     0533                     l3578:
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3173     0533  0830               	movf	(_sprintf$1136+3)^(0+128),w
  3174     0534  1283               	bcf	3,5	;RP0=0, select bank0
  3175     0535  1303               	bcf	3,6	;RP1=0, select bank0
  3176     0536  00AF               	movwf	___flmul@a+3
  3177     0537  1683               	bsf	3,5	;RP0=1, select bank1
  3178     0538  1303               	bcf	3,6	;RP1=0, select bank1
  3179     0539  082F               	movf	(_sprintf$1136+2)^(0+128),w
  3180     053A  1283               	bcf	3,5	;RP0=0, select bank0
  3181     053B  1303               	bcf	3,6	;RP1=0, select bank0
  3182     053C  00AE               	movwf	___flmul@a+2
  3183     053D  1683               	bsf	3,5	;RP0=1, select bank1
  3184     053E  1303               	bcf	3,6	;RP1=0, select bank1
  3185     053F  082E               	movf	(_sprintf$1136+1)^(0+128),w
  3186     0540  1283               	bcf	3,5	;RP0=0, select bank0
  3187     0541  1303               	bcf	3,6	;RP1=0, select bank0
  3188     0542  00AD               	movwf	___flmul@a+1
  3189     0543  1683               	bsf	3,5	;RP0=1, select bank1
  3190     0544  1303               	bcf	3,6	;RP1=0, select bank1
  3191     0545  082D               	movf	_sprintf$1136^(0+128),w
  3192     0546  1283               	bcf	3,5	;RP0=0, select bank0
  3193     0547  1303               	bcf	3,6	;RP1=0, select bank0
  3194     0548  00AC               	movwf	___flmul@a
  3195     0549  1683               	bsf	3,5	;RP0=1, select bank1
  3196     054A  1303               	bcf	3,6	;RP1=0, select bank1
  3197     054B  0844               	movf	(sprintf@fval+3)^(0+128),w
  3198     054C  1283               	bcf	3,5	;RP0=0, select bank0
  3199     054D  1303               	bcf	3,6	;RP1=0, select bank0
  3200     054E  00AB               	movwf	___flmul@b+3
  3201     054F  1683               	bsf	3,5	;RP0=1, select bank1
  3202     0550  1303               	bcf	3,6	;RP1=0, select bank1
  3203     0551  0843               	movf	(sprintf@fval+2)^(0+128),w
  3204     0552  1283               	bcf	3,5	;RP0=0, select bank0
  3205     0553  1303               	bcf	3,6	;RP1=0, select bank0
  3206     0554  00AA               	movwf	___flmul@b+2
  3207     0555  1683               	bsf	3,5	;RP0=1, select bank1
  3208     0556  1303               	bcf	3,6	;RP1=0, select bank1
  3209     0557  0842               	movf	(sprintf@fval+1)^(0+128),w
  3210     0558  1283               	bcf	3,5	;RP0=0, select bank0
  3211     0559  1303               	bcf	3,6	;RP1=0, select bank0
  3212     055A  00A9               	movwf	___flmul@b+1
  3213     055B  1683               	bsf	3,5	;RP0=1, select bank1
  3214     055C  1303               	bcf	3,6	;RP1=0, select bank1
  3215     055D  0841               	movf	sprintf@fval^(0+128),w
  3216     055E  1283               	bcf	3,5	;RP0=0, select bank0
  3217     055F  1303               	bcf	3,6	;RP1=0, select bank0
  3218     0560  00A8               	movwf	___flmul@b
  3219     0561  120A  158A  2158  120A  118A  	fcall	___flmul
  3220     0566  1283               	bcf	3,5	;RP0=0, select bank0
  3221     0567  1303               	bcf	3,6	;RP1=0, select bank0
  3222     0568  082B               	movf	?___flmul+3,w
  3223     0569  00D8               	movwf	___fltol@f1+3
  3224     056A  082A               	movf	?___flmul+2,w
  3225     056B  00D7               	movwf	___fltol@f1+2
  3226     056C  0829               	movf	?___flmul+1,w
  3227     056D  00D6               	movwf	___fltol@f1+1
  3228     056E  0828               	movf	?___flmul,w
  3229     056F  00D5               	movwf	___fltol@f1
  3230     0570  160A  158A  262D  120A  118A  	fcall	___fltol
  3231     0575  1283               	bcf	3,5	;RP0=0, select bank0
  3232     0576  1303               	bcf	3,6	;RP1=0, select bank0
  3233     0577  0858               	movf	?___fltol+3,w
  3234     0578  1683               	bsf	3,5	;RP0=1, select bank1
  3235     0579  1303               	bcf	3,6	;RP1=0, select bank1
  3236     057A  00B7               	movwf	(sprintf@val+3)^(0+128)
  3237     057B  1283               	bcf	3,5	;RP0=0, select bank0
  3238     057C  1303               	bcf	3,6	;RP1=0, select bank0
  3239     057D  0857               	movf	?___fltol+2,w
  3240     057E  1683               	bsf	3,5	;RP0=1, select bank1
  3241     057F  1303               	bcf	3,6	;RP1=0, select bank1
  3242     0580  00B6               	movwf	(sprintf@val+2)^(0+128)
  3243     0581  1283               	bcf	3,5	;RP0=0, select bank0
  3244     0582  1303               	bcf	3,6	;RP1=0, select bank0
  3245     0583  0856               	movf	?___fltol+1,w
  3246     0584  1683               	bsf	3,5	;RP0=1, select bank1
  3247     0585  1303               	bcf	3,6	;RP1=0, select bank1
  3248     0586  00B5               	movwf	(sprintf@val+1)^(0+128)
  3249     0587  1283               	bcf	3,5	;RP0=0, select bank0
  3250     0588  1303               	bcf	3,6	;RP1=0, select bank0
  3251     0589  0855               	movf	?___fltol,w
  3252     058A  1683               	bsf	3,5	;RP0=1, select bank1
  3253     058B  1303               	bcf	3,6	;RP1=0, select bank1
  3254     058C  00B4               	movwf	sprintf@val^(0+128)
  3255                           
  3256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3257     058D  2E39               	goto	l3588
  3258     058E                     l3580:
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3261     058E  0845               	movf	sprintf@c^(0+128),w
  3262     058F  1283               	bcf	3,5	;RP0=0, select bank0
  3263     0590  1303               	bcf	3,6	;RP1=0, select bank0
  3264     0591  00EA               	movwf	??_sprintf
  3265     0592  3001               	movlw	1
  3266     0593                     u5795:
  3267     0593  1003               	clrc
  3268     0594  0DEA               	rlf	??_sprintf,f
  3269     0595  3EFF               	addlw	-1
  3270     0596  1D03               	skipz
  3271     0597  2D93               	goto	u5795
  3272     0598  1003               	clrc
  3273     0599  0D6A               	rlf	??_sprintf,w
  3274     059A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3275     059B  0084               	movwf	4
  3276     059C  120A  158A  200A  120A  118A  	fcall	stringdir
  3277     05A1  00F2               	movwf	___lldiv@divisor
  3278     05A2  120A  158A  200A  120A  118A  	fcall	stringdir
  3279     05A7  00F3               	movwf	___lldiv@divisor+1
  3280     05A8  120A  158A  200A  120A  118A  	fcall	stringdir
  3281     05AD  00F4               	movwf	___lldiv@divisor+2
  3282     05AE  120A  158A  200A  120A  118A  	fcall	stringdir
  3283     05B3  00F5               	movwf	___lldiv@divisor+3
  3284     05B4  1683               	bsf	3,5	;RP0=1, select bank1
  3285     05B5  1303               	bcf	3,6	;RP1=0, select bank1
  3286     05B6  0837               	movf	(sprintf@val+3)^(0+128),w
  3287     05B7  00F9               	movwf	___lldiv@dividend+3
  3288     05B8  0836               	movf	(sprintf@val+2)^(0+128),w
  3289     05B9  00F8               	movwf	___lldiv@dividend+2
  3290     05BA  0835               	movf	(sprintf@val+1)^(0+128),w
  3291     05BB  00F7               	movwf	___lldiv@dividend+1
  3292     05BC  0834               	movf	sprintf@val^(0+128),w
  3293     05BD  00F6               	movwf	___lldiv@dividend
  3294     05BE  160A  158A  255C  120A  118A  	fcall	___lldiv
  3295     05C3  0875               	movf	?___lldiv+3,w
  3296     05C4  1683               	bsf	3,5	;RP0=1, select bank1
  3297     05C5  1303               	bcf	3,6	;RP1=0, select bank1
  3298     05C6  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3299     05C7  0874               	movf	?___lldiv+2,w
  3300     05C8  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3301     05C9  0873               	movf	?___lldiv+1,w
  3302     05CA  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3303     05CB  0872               	movf	?___lldiv,w
  3304     05CC  00BA               	movwf	sprintf@tmpval^(0+128)
  3305     05CD                     l3582:
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3308     05CD  3000               	movlw	0
  3309     05CE  00F5               	movwf	___llmod@divisor+3
  3310     05CF  3000               	movlw	0
  3311     05D0  00F4               	movwf	___llmod@divisor+2
  3312     05D1  3000               	movlw	0
  3313     05D2  00F3               	movwf	___llmod@divisor+1
  3314     05D3  300A               	movlw	10
  3315     05D4  00F2               	movwf	___llmod@divisor
  3316     05D5  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3317     05D6  00F9               	movwf	___llmod@dividend+3
  3318     05D7  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3319     05D8  00F8               	movwf	___llmod@dividend+2
  3320     05D9  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3321     05DA  00F7               	movwf	___llmod@dividend+1
  3322     05DB  083A               	movf	sprintf@tmpval^(0+128),w
  3323     05DC  00F6               	movwf	___llmod@dividend
  3324     05DD  160A  158A  244E  120A  118A  	fcall	___llmod
  3325     05E2  0875               	movf	?___llmod+3,w
  3326     05E3  1683               	bsf	3,5	;RP0=1, select bank1
  3327     05E4  1303               	bcf	3,6	;RP1=0, select bank1
  3328     05E5  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3329     05E6  0874               	movf	?___llmod+2,w
  3330     05E7  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3331     05E8  0873               	movf	?___llmod+1,w
  3332     05E9  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3333     05EA  0872               	movf	?___llmod,w
  3334     05EB  00BA               	movwf	sprintf@tmpval^(0+128)
  3335     05EC                     l3584:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3338     05EC  0840               	movf	sprintf@sp^(0+128),w
  3339     05ED  0084               	movwf	4
  3340     05EE  083A               	movf	sprintf@tmpval^(0+128),w
  3341     05EF  3E30               	addlw	48
  3342     05F0  1783               	bsf	3,7	;select IRP bank2
  3343     05F1  0080               	movwf	0
  3344     05F2  3001               	movlw	1
  3345     05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3346     05F4  1303               	bcf	3,6	;RP1=0, select bank0
  3347     05F5  00EA               	movwf	??_sprintf
  3348     05F6  086A               	movf	??_sprintf,w
  3349     05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3350     05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3351     05F9  07C0               	addwf	sprintf@sp^(0+128),f
  3352     05FA                     l3586:
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3355     05FA  0845               	movf	sprintf@c^(0+128),w
  3356     05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3357     05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3358     05FD  00EA               	movwf	??_sprintf
  3359     05FE  3001               	movlw	1
  3360     05FF                     u5805:
  3361     05FF  1003               	clrc
  3362     0600  0DEA               	rlf	??_sprintf,f
  3363     0601  3EFF               	addlw	-1
  3364     0602  1D03               	skipz
  3365     0603  2DFF               	goto	u5805
  3366     0604  1003               	clrc
  3367     0605  0D6A               	rlf	??_sprintf,w
  3368     0606  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3369     0607  0084               	movwf	4
  3370     0608  120A  158A  200A  120A  118A  	fcall	stringdir
  3371     060D  00F2               	movwf	___llmod@divisor
  3372     060E  120A  158A  200A  120A  118A  	fcall	stringdir
  3373     0613  00F3               	movwf	___llmod@divisor+1
  3374     0614  120A  158A  200A  120A  118A  	fcall	stringdir
  3375     0619  00F4               	movwf	___llmod@divisor+2
  3376     061A  120A  158A  200A  120A  118A  	fcall	stringdir
  3377     061F  00F5               	movwf	___llmod@divisor+3
  3378     0620  1683               	bsf	3,5	;RP0=1, select bank1
  3379     0621  1303               	bcf	3,6	;RP1=0, select bank1
  3380     0622  0837               	movf	(sprintf@val+3)^(0+128),w
  3381     0623  00F9               	movwf	___llmod@dividend+3
  3382     0624  0836               	movf	(sprintf@val+2)^(0+128),w
  3383     0625  00F8               	movwf	___llmod@dividend+2
  3384     0626  0835               	movf	(sprintf@val+1)^(0+128),w
  3385     0627  00F7               	movwf	___llmod@dividend+1
  3386     0628  0834               	movf	sprintf@val^(0+128),w
  3387     0629  00F6               	movwf	___llmod@dividend
  3388     062A  160A  158A  244E  120A  118A  	fcall	___llmod
  3389     062F  0875               	movf	?___llmod+3,w
  3390     0630  1683               	bsf	3,5	;RP0=1, select bank1
  3391     0631  1303               	bcf	3,6	;RP1=0, select bank1
  3392     0632  00B7               	movwf	(sprintf@val+3)^(0+128)
  3393     0633  0874               	movf	?___llmod+2,w
  3394     0634  00B6               	movwf	(sprintf@val+2)^(0+128)
  3395     0635  0873               	movf	?___llmod+1,w
  3396     0636  00B5               	movwf	(sprintf@val+1)^(0+128)
  3397     0637  0872               	movf	?___llmod,w
  3398     0638  00B4               	movwf	sprintf@val^(0+128)
  3399     0639                     l3588:
  3400                           
  3401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3402     0639  3001               	movlw	1
  3403     063A  02C5               	subwf	sprintf@c^(0+128),f
  3404     063B  0A45               	incf	sprintf@c^(0+128),w
  3405     063C  1D03               	btfss	3,2
  3406     063D  2E3F               	goto	u5811
  3407     063E  2E40               	goto	u5810
  3408     063F                     u5811:
  3409     063F  2D8E               	goto	l3580
  3410     0640                     u5810:
  3411     0640  2E54               	goto	l3596
  3412     0641                     l3590:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3415     0641  0840               	movf	sprintf@sp^(0+128),w
  3416     0642  0084               	movwf	4
  3417     0643  3030               	movlw	48
  3418     0644  1783               	bsf	3,7	;select IRP bank2
  3419     0645  0080               	movwf	0
  3420     0646                     l3592:
  3421     0646  3001               	movlw	1
  3422     0647  1283               	bcf	3,5	;RP0=0, select bank0
  3423     0648  1303               	bcf	3,6	;RP1=0, select bank0
  3424     0649  00EA               	movwf	??_sprintf
  3425     064A  086A               	movf	??_sprintf,w
  3426     064B  1683               	bsf	3,5	;RP0=1, select bank1
  3427     064C  1303               	bcf	3,6	;RP1=0, select bank1
  3428     064D  07C0               	addwf	sprintf@sp^(0+128),f
  3429     064E                     l3594:
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3432     064E  30FF               	movlw	255
  3433     064F  07BE               	addwf	sprintf@prec^(0+128),f
  3434     0650  1803               	skipnc
  3435     0651  0ABF               	incf	(sprintf@prec+1)^(0+128),f
  3436     0652  30FF               	movlw	255
  3437     0653  07BF               	addwf	(sprintf@prec+1)^(0+128),f
  3438     0654                     l3596:
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3441     0654  083E               	movf	sprintf@prec^(0+128),w
  3442     0655  043F               	iorwf	(sprintf@prec+1)^(0+128),w
  3443     0656  1D03               	btfss	3,2
  3444     0657  2E59               	goto	u5821
  3445     0658  2E5A               	goto	u5820
  3446     0659                     u5821:
  3447     0659  2E41               	goto	l3590
  3448     065A                     u5820:
  3449     065A  2EAC               	goto	l3616
  3450     065B                     l3598:
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3453     065B  1683               	bsf	3,5	;RP0=1, select bank1
  3454     065C  1303               	bcf	3,6	;RP1=0, select bank1
  3455     065D  083E               	movf	sprintf@prec^(0+128),w
  3456     065E  043F               	iorwf	(sprintf@prec+1)^(0+128),w
  3457     065F  1D03               	btfss	3,2
  3458     0660  2E62               	goto	u5831
  3459     0661  2E63               	goto	u5830
  3460     0662                     u5831:
  3461     0662  2E71               	goto	l319
  3462     0663                     u5830:
  3463     0663                     l3600:
  3464     0663  0837               	movf	(sprintf@val+3)^(0+128),w
  3465     0664  0436               	iorwf	(sprintf@val+2)^(0+128),w
  3466     0665  0435               	iorwf	(sprintf@val+1)^(0+128),w
  3467     0666  0434               	iorwf	sprintf@val^(0+128),w
  3468     0667  1D03               	skipz
  3469     0668  2E6A               	goto	u5841
  3470     0669  2E6B               	goto	u5840
  3471     066A                     u5841:
  3472     066A  2E71               	goto	l319
  3473     066B                     u5840:
  3474     066B                     l3602:
  3475                           
  3476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3477     066B  3001               	movlw	1
  3478     066C  07BE               	addwf	sprintf@prec^(0+128),f
  3479     066D  1803               	skipnc
  3480     066E  0ABF               	incf	(sprintf@prec+1)^(0+128),f
  3481     066F  3000               	movlw	0
  3482     0670  07BF               	addwf	(sprintf@prec+1)^(0+128),f
  3483     0671                     l319:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3486     0671  083F               	movf	(sprintf@prec+1)^(0+128),w
  3487     0672  3A80               	xorlw	128
  3488     0673  3C80               	sublw	128
  3489     0674  1D03               	skipz
  3490     0675  2E78               	goto	u5855
  3491     0676  083E               	movf	sprintf@prec^(0+128),w
  3492     0677  0245               	subwf	sprintf@c^(0+128),w
  3493     0678                     u5855:
  3494     0678  1803               	skipnc
  3495     0679  2E7B               	goto	u5851
  3496     067A  2E7C               	goto	u5850
  3497     067B                     u5851:
  3498     067B  2E7D               	goto	l3606
  3499     067C                     u5850:
  3500     067C                     l3604:
  3501     067C  2E90               	goto	l3610
  3502     067D                     l3606:
  3503     067D  1683               	bsf	3,5	;RP0=1, select bank1
  3504     067E  1303               	bcf	3,6	;RP1=0, select bank1
  3505     067F  083F               	movf	(sprintf@prec+1)^(0+128),w
  3506     0680  3A80               	xorlw	128
  3507     0681  1283               	bcf	3,5	;RP0=0, select bank0
  3508     0682  1303               	bcf	3,6	;RP1=0, select bank0
  3509     0683  00EA               	movwf	??_sprintf
  3510     0684  3080               	movlw	128
  3511     0685  026A               	subwf	??_sprintf,w
  3512     0686  1D03               	skipz
  3513     0687  2E8C               	goto	u5865
  3514     0688  1683               	bsf	3,5	;RP0=1, select bank1
  3515     0689  1303               	bcf	3,6	;RP1=0, select bank1
  3516     068A  0845               	movf	sprintf@c^(0+128),w
  3517     068B  023E               	subwf	sprintf@prec^(0+128),w
  3518     068C                     u5865:
  3519     068C  1803               	skipnc
  3520     068D  2E8F               	goto	u5861
  3521     068E  2E90               	goto	u5860
  3522     068F                     u5861:
  3523     068F  2E90               	goto	l3610
  3524     0690                     u5860:
  3525     0690                     l3608:
  3526     0690                     l3610:
  3527                           
  3528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3529     0690  3003               	movlw	3
  3530     0691  1683               	bsf	3,5	;RP0=1, select bank1
  3531     0692  1303               	bcf	3,6	;RP1=0, select bank1
  3532     0693  0532               	andwf	sprintf@flag^(0+128),w
  3533     0694  1283               	bcf	3,5	;RP0=0, select bank0
  3534     0695  1303               	bcf	3,6	;RP1=0, select bank0
  3535     0696  00EA               	movwf	??_sprintf
  3536     0697  3000               	movlw	0
  3537     0698  1683               	bsf	3,5	;RP0=1, select bank1
  3538     0699  1303               	bcf	3,6	;RP1=0, select bank1
  3539     069A  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3540     069B  1283               	bcf	3,5	;RP0=0, select bank0
  3541     069C  1303               	bcf	3,6	;RP1=0, select bank0
  3542     069D  00EB               	movwf	??_sprintf+1
  3543     069E  086A               	movf	??_sprintf,w
  3544     069F  046B               	iorwf	??_sprintf+1,w
  3545     06A0  1903               	btfsc	3,2
  3546     06A1  2EA3               	goto	u5871
  3547     06A2  2EA4               	goto	u5870
  3548     06A3                     u5871:
  3549     06A3  2EAC               	goto	l3616
  3550     06A4                     u5870:
  3551     06A4                     l3612:
  3552                           
  3553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3554     06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3555     06A5  1303               	bcf	3,6	;RP1=0, select bank1
  3556     06A6  0840               	movf	sprintf@sp^(0+128),w
  3557     06A7  0084               	movwf	4
  3558     06A8  302D               	movlw	45
  3559     06A9  1783               	bsf	3,7	;select IRP bank2
  3560     06AA  0080               	movwf	0
  3561     06AB  2824               	goto	l3428
  3562     06AC                     l3616:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3565     06AC  3001               	movlw	1
  3566     06AD  1683               	bsf	3,5	;RP0=1, select bank1
  3567     06AE  1303               	bcf	3,6	;RP1=0, select bank1
  3568     06AF  07A8               	addwf	sprintf@f^(0+128),f
  3569     06B0  30FF               	movlw	-1
  3570     06B1  0728               	addwf	sprintf@f^(0+128),w
  3571     06B2  0084               	movwf	4
  3572     06B3  120A  158A  200A  120A  118A  	fcall	stringdir
  3573     06B8  00C5               	movwf	sprintf@c^(0+128)
  3574     06B9  0845               	movf	sprintf@c^(0+128),w
  3575     06BA  1D03               	btfss	3,2
  3576     06BB  2EBD               	goto	u5881
  3577     06BC  2EBE               	goto	u5880
  3578     06BD                     u5881:
  3579     06BD  2819               	goto	l3424
  3580     06BE                     u5880:
  3581     06BE                     l3618:
  3582                           
  3583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3584     06BE  1683               	bsf	3,5	;RP0=1, select bank1
  3585     06BF  1303               	bcf	3,6	;RP1=0, select bank1
  3586     06C0  0840               	movf	sprintf@sp^(0+128),w
  3587     06C1  0084               	movwf	4
  3588     06C2  1783               	bsf	3,7	;select IRP bank2
  3589     06C3  0180               	clrf	0
  3590     06C4                     l325:
  3591     06C4  0008               	return
  3592     06C5                     __end_of_sprintf:
  3593                           
  3594                           	psect	text2
  3595     0C9D                     __ptext2:	
  3596 ;; *************** function _scale *****************
  3597 ;; Defined at:
  3598 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  scl             1    wreg     char 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  scl             1   52[BANK0 ] char 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  4   34[BANK0 ] char 
  3605 ;; Registers used:
  3606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3612 ;;      Params:         0       4       0       0       0
  3613 ;;      Locals:         0       5       0       0       0
  3614 ;;      Temps:          0      10       0       0       0
  3615 ;;      Totals:         0      19       0       0       0
  3616 ;;Total ram usage:       19 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; Hardware stack levels required when called: 3
  3619 ;; This function calls:
  3620 ;;		___awdiv
  3621 ;;		___awmod
  3622 ;;		___flmul
  3623 ;; This function is called by:
  3624 ;;		_sprintf
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628     0C9D                     _scale:	
  3629                           ;psect for function _scale
  3630                           
  3631                           
  3632                           ;incstack = 0
  3633                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3634                           ;scale@scl stored from wreg
  3635     0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3636     0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3637     0C9F  00D4               	movwf	scale@scl
  3638     0CA0                     l2860:
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3641     0CA0  1FD4               	btfss	scale@scl,7
  3642     0CA1  2CA3               	goto	u4221
  3643     0CA2  2CA4               	goto	u4220
  3644     0CA3                     u4221:
  3645     0CA3  2E53               	goto	l2882
  3646     0CA4                     u4220:
  3647     0CA4                     l2862:
  3648                           
  3649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3650     0CA4  09D4               	comf	scale@scl,f
  3651     0CA5  0AD4               	incf	scale@scl,f
  3652     0CA6                     l2864:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3655     0CA6  0854               	movf	scale@scl,w
  3656     0CA7  3A80               	xorlw	128
  3657     0CA8  3E12               	addlw	-238
  3658     0CA9  1C03               	skipc
  3659     0CAA  2CAC               	goto	u4231
  3660     0CAB  2CAD               	goto	u4230
  3661     0CAC                     u4231:
  3662     0CAC  2D97               	goto	l2872
  3663     0CAD                     u4230:
  3664     0CAD                     l2866:
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3667     0CAD  300A               	movlw	10
  3668     0CAE  00A0               	movwf	___awdiv@divisor
  3669     0CAF  3000               	movlw	0
  3670     0CB0  00A1               	movwf	___awdiv@divisor+1
  3671     0CB1  0854               	movf	scale@scl,w
  3672     0CB2  00F4               	movwf	___awmod@dividend
  3673     0CB3  01F5               	clrf	___awmod@dividend+1
  3674     0CB4  1BF4               	btfsc	___awmod@dividend,7
  3675     0CB5  03F5               	decf	___awmod@dividend+1,f
  3676     0CB6  3064               	movlw	100
  3677     0CB7  00F2               	movwf	___awmod@divisor
  3678     0CB8  3000               	movlw	0
  3679     0CB9  00F3               	movwf	___awmod@divisor+1
  3680     0CBA  160A  158A  24A2  120A  158A  	fcall	___awmod
  3681     0CBF  0873               	movf	?___awmod+1,w
  3682     0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3683     0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3684     0CC2  00A3               	movwf	___awdiv@dividend+1
  3685     0CC3  0872               	movf	?___awmod,w
  3686     0CC4  00A2               	movwf	___awdiv@dividend
  3687     0CC5  160A  158A  25C4  120A  158A  	fcall	___awdiv
  3688     0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3689     0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3690     0CCC  0820               	movf	?___awdiv,w
  3691     0CCD  00C6               	movwf	??_scale
  3692     0CCE  3001               	movlw	1
  3693     0CCF                     u4245:
  3694     0CCF  1003               	clrc
  3695     0CD0  0DC6               	rlf	??_scale,f
  3696     0CD1  3EFF               	addlw	-1
  3697     0CD2  1D03               	skipz
  3698     0CD3  2CCF               	goto	u4245
  3699     0CD4  1003               	clrc
  3700     0CD5  0D46               	rlf	??_scale,w
  3701     0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3702     0CD7  0084               	movwf	4
  3703     0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  3704     0CDD  00C7               	movwf	??_scale+1
  3705     0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  3706     0CE3  00C8               	movwf	??_scale+2
  3707     0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  3708     0CE9  00C9               	movwf	??_scale+3
  3709     0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  3710     0CEF  00CA               	movwf	??_scale+4
  3711     0CF0  084A               	movf	??_scale+4,w
  3712     0CF1  00AB               	movwf	___flmul@b+3
  3713     0CF2  0849               	movf	??_scale+3,w
  3714     0CF3  00AA               	movwf	___flmul@b+2
  3715     0CF4  0848               	movf	??_scale+2,w
  3716     0CF5  00A9               	movwf	___flmul@b+1
  3717     0CF6  0847               	movf	??_scale+1,w
  3718     0CF7  00A8               	movwf	___flmul@b
  3719     0CF8  3064               	movlw	100
  3720     0CF9  00A0               	movwf	___awdiv@divisor
  3721     0CFA  3000               	movlw	0
  3722     0CFB  00A1               	movwf	___awdiv@divisor+1
  3723     0CFC  0854               	movf	scale@scl,w
  3724     0CFD  00A2               	movwf	___awdiv@dividend
  3725     0CFE  01A3               	clrf	___awdiv@dividend+1
  3726     0CFF  1BA2               	btfsc	___awdiv@dividend,7
  3727     0D00  03A3               	decf	___awdiv@dividend+1,f
  3728     0D01  160A  158A  25C4  120A  158A  	fcall	___awdiv
  3729     0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3730     0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3731     0D08  0820               	movf	?___awdiv,w
  3732     0D09  00CB               	movwf	??_scale+5
  3733     0D0A  3001               	movlw	1
  3734     0D0B                     u4255:
  3735     0D0B  1003               	clrc
  3736     0D0C  0DCB               	rlf	??_scale+5,f
  3737     0D0D  3EFF               	addlw	-1
  3738     0D0E  1D03               	skipz
  3739     0D0F  2D0B               	goto	u4255
  3740     0D10  1003               	clrc
  3741     0D11  0D4B               	rlf	??_scale+5,w
  3742     0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3743     0D13  0084               	movwf	4
  3744     0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  3745     0D19  00CC               	movwf	??_scale+6
  3746     0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  3747     0D1F  00CD               	movwf	??_scale+7
  3748     0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  3749     0D25  00CE               	movwf	??_scale+8
  3750     0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  3751     0D2B  00CF               	movwf	??_scale+9
  3752     0D2C  084F               	movf	??_scale+9,w
  3753     0D2D  00AF               	movwf	___flmul@a+3
  3754     0D2E  084E               	movf	??_scale+8,w
  3755     0D2F  00AE               	movwf	___flmul@a+2
  3756     0D30  084D               	movf	??_scale+7,w
  3757     0D31  00AD               	movwf	___flmul@a+1
  3758     0D32  084C               	movf	??_scale+6,w
  3759     0D33  00AC               	movwf	___flmul@a
  3760     0D34  120A  158A  2158  120A  158A  	fcall	___flmul
  3761     0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3762     0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3763     0D3B  082B               	movf	?___flmul+3,w
  3764     0D3C  00D3               	movwf	_scale$1135+3
  3765     0D3D  082A               	movf	?___flmul+2,w
  3766     0D3E  00D2               	movwf	_scale$1135+2
  3767     0D3F  0829               	movf	?___flmul+1,w
  3768     0D40  00D1               	movwf	_scale$1135+1
  3769     0D41  0828               	movf	?___flmul,w
  3770     0D42  00D0               	movwf	_scale$1135
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3773     0D43  300A               	movlw	10
  3774     0D44  00F2               	movwf	___awmod@divisor
  3775     0D45  3000               	movlw	0
  3776     0D46  00F3               	movwf	___awmod@divisor+1
  3777     0D47  0854               	movf	scale@scl,w
  3778     0D48  00F4               	movwf	___awmod@dividend
  3779     0D49  01F5               	clrf	___awmod@dividend+1
  3780     0D4A  1BF4               	btfsc	___awmod@dividend,7
  3781     0D4B  03F5               	decf	___awmod@dividend+1,f
  3782     0D4C  160A  158A  24A2  120A  158A  	fcall	___awmod
  3783     0D51  0872               	movf	?___awmod,w
  3784     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3785     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3786     0D54  00C6               	movwf	??_scale
  3787     0D55  3001               	movlw	1
  3788     0D56                     u4265:
  3789     0D56  1003               	clrc
  3790     0D57  0DC6               	rlf	??_scale,f
  3791     0D58  3EFF               	addlw	-1
  3792     0D59  1D03               	skipz
  3793     0D5A  2D56               	goto	u4265
  3794     0D5B  1003               	clrc
  3795     0D5C  0D46               	rlf	??_scale,w
  3796     0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3797     0D5E  0084               	movwf	4
  3798     0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  3799     0D64  00C7               	movwf	??_scale+1
  3800     0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  3801     0D6A  00C8               	movwf	??_scale+2
  3802     0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  3803     0D70  00C9               	movwf	??_scale+3
  3804     0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  3805     0D76  00CA               	movwf	??_scale+4
  3806     0D77  084A               	movf	??_scale+4,w
  3807     0D78  00AB               	movwf	___flmul@b+3
  3808     0D79  0849               	movf	??_scale+3,w
  3809     0D7A  00AA               	movwf	___flmul@b+2
  3810     0D7B  0848               	movf	??_scale+2,w
  3811     0D7C  00A9               	movwf	___flmul@b+1
  3812     0D7D  0847               	movf	??_scale+1,w
  3813     0D7E  00A8               	movwf	___flmul@b
  3814     0D7F  0853               	movf	_scale$1135+3,w
  3815     0D80  00AF               	movwf	___flmul@a+3
  3816     0D81  0852               	movf	_scale$1135+2,w
  3817     0D82  00AE               	movwf	___flmul@a+2
  3818     0D83  0851               	movf	_scale$1135+1,w
  3819     0D84  00AD               	movwf	___flmul@a+1
  3820     0D85  0850               	movf	_scale$1135,w
  3821     0D86  00AC               	movwf	___flmul@a
  3822     0D87  120A  158A  2158  120A  158A  	fcall	___flmul
  3823     0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3824     0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3825     0D8E  082B               	movf	?___flmul+3,w
  3826     0D8F  00C5               	movwf	?_scale+3
  3827     0D90  082A               	movf	?___flmul+2,w
  3828     0D91  00C4               	movwf	?_scale+2
  3829     0D92  0829               	movf	?___flmul+1,w
  3830     0D93  00C3               	movwf	?_scale+1
  3831     0D94  0828               	movf	?___flmul,w
  3832     0D95  00C2               	movwf	?_scale
  3833     0D96  2FFF               	goto	l259
  3834     0D97                     l2872:
  3835     0D97  0854               	movf	scale@scl,w
  3836     0D98  3A80               	xorlw	128
  3837     0D99  3E75               	addlw	-139
  3838     0D9A  1C03               	skipc
  3839     0D9B  2D9D               	goto	u4271
  3840     0D9C  2D9E               	goto	u4270
  3841     0D9D                     u4271:
  3842     0D9D  2E26               	goto	l2878
  3843     0D9E                     u4270:
  3844     0D9E                     l2874:
  3845                           
  3846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3847     0D9E  300A               	movlw	10
  3848     0D9F  00F2               	movwf	___awmod@divisor
  3849     0DA0  3000               	movlw	0
  3850     0DA1  00F3               	movwf	___awmod@divisor+1
  3851     0DA2  0854               	movf	scale@scl,w
  3852     0DA3  00F4               	movwf	___awmod@dividend
  3853     0DA4  01F5               	clrf	___awmod@dividend+1
  3854     0DA5  1BF4               	btfsc	___awmod@dividend,7
  3855     0DA6  03F5               	decf	___awmod@dividend+1,f
  3856     0DA7  160A  158A  24A2  120A  158A  	fcall	___awmod
  3857     0DAC  0872               	movf	?___awmod,w
  3858     0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3859     0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3860     0DAF  00C6               	movwf	??_scale
  3861     0DB0  3001               	movlw	1
  3862     0DB1                     u4285:
  3863     0DB1  1003               	clrc
  3864     0DB2  0DC6               	rlf	??_scale,f
  3865     0DB3  3EFF               	addlw	-1
  3866     0DB4  1D03               	skipz
  3867     0DB5  2DB1               	goto	u4285
  3868     0DB6  1003               	clrc
  3869     0DB7  0D46               	rlf	??_scale,w
  3870     0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3871     0DB9  0084               	movwf	4
  3872     0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  3873     0DBF  00C7               	movwf	??_scale+1
  3874     0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  3875     0DC5  00C8               	movwf	??_scale+2
  3876     0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  3877     0DCB  00C9               	movwf	??_scale+3
  3878     0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  3879     0DD1  00CA               	movwf	??_scale+4
  3880     0DD2  084A               	movf	??_scale+4,w
  3881     0DD3  00AB               	movwf	___flmul@b+3
  3882     0DD4  0849               	movf	??_scale+3,w
  3883     0DD5  00AA               	movwf	___flmul@b+2
  3884     0DD6  0848               	movf	??_scale+2,w
  3885     0DD7  00A9               	movwf	___flmul@b+1
  3886     0DD8  0847               	movf	??_scale+1,w
  3887     0DD9  00A8               	movwf	___flmul@b
  3888     0DDA  300A               	movlw	10
  3889     0DDB  00A0               	movwf	___awdiv@divisor
  3890     0DDC  3000               	movlw	0
  3891     0DDD  00A1               	movwf	___awdiv@divisor+1
  3892     0DDE  0854               	movf	scale@scl,w
  3893     0DDF  00A2               	movwf	___awdiv@dividend
  3894     0DE0  01A3               	clrf	___awdiv@dividend+1
  3895     0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3896     0DE2  03A3               	decf	___awdiv@dividend+1,f
  3897     0DE3  160A  158A  25C4  120A  158A  	fcall	___awdiv
  3898     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3899     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3900     0DEA  0820               	movf	?___awdiv,w
  3901     0DEB  00CB               	movwf	??_scale+5
  3902     0DEC  3001               	movlw	1
  3903     0DED                     u4295:
  3904     0DED  1003               	clrc
  3905     0DEE  0DCB               	rlf	??_scale+5,f
  3906     0DEF  3EFF               	addlw	-1
  3907     0DF0  1D03               	skipz
  3908     0DF1  2DED               	goto	u4295
  3909     0DF2  1003               	clrc
  3910     0DF3  0D4B               	rlf	??_scale+5,w
  3911     0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3912     0DF5  0084               	movwf	4
  3913     0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  3914     0DFB  00CC               	movwf	??_scale+6
  3915     0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  3916     0E01  00CD               	movwf	??_scale+7
  3917     0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  3918     0E07  00CE               	movwf	??_scale+8
  3919     0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  3920     0E0D  00CF               	movwf	??_scale+9
  3921     0E0E  084F               	movf	??_scale+9,w
  3922     0E0F  00AF               	movwf	___flmul@a+3
  3923     0E10  084E               	movf	??_scale+8,w
  3924     0E11  00AE               	movwf	___flmul@a+2
  3925     0E12  084D               	movf	??_scale+7,w
  3926     0E13  00AD               	movwf	___flmul@a+1
  3927     0E14  084C               	movf	??_scale+6,w
  3928     0E15  00AC               	movwf	___flmul@a
  3929     0E16  120A  158A  2158  120A  158A  	fcall	___flmul
  3930     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3931     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3932     0E1D  082B               	movf	?___flmul+3,w
  3933     0E1E  00C5               	movwf	?_scale+3
  3934     0E1F  082A               	movf	?___flmul+2,w
  3935     0E20  00C4               	movwf	?_scale+2
  3936     0E21  0829               	movf	?___flmul+1,w
  3937     0E22  00C3               	movwf	?_scale+1
  3938     0E23  0828               	movf	?___flmul,w
  3939     0E24  00C2               	movwf	?_scale
  3940     0E25  2FFF               	goto	l259
  3941     0E26                     l2878:
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3944     0E26  0854               	movf	scale@scl,w
  3945     0E27  00C6               	movwf	??_scale
  3946     0E28  3001               	movlw	1
  3947     0E29                     u4305:
  3948     0E29  1003               	clrc
  3949     0E2A  0DC6               	rlf	??_scale,f
  3950     0E2B  3EFF               	addlw	-1
  3951     0E2C  1D03               	skipz
  3952     0E2D  2E29               	goto	u4305
  3953     0E2E  1003               	clrc
  3954     0E2F  0D46               	rlf	??_scale,w
  3955     0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3956     0E31  0084               	movwf	4
  3957     0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  3958     0E37  00C7               	movwf	??_scale+1
  3959     0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  3960     0E3D  00C8               	movwf	??_scale+2
  3961     0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  3962     0E43  00C9               	movwf	??_scale+3
  3963     0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  3964     0E49  00CA               	movwf	??_scale+4
  3965     0E4A  084A               	movf	??_scale+4,w
  3966     0E4B  00C5               	movwf	?_scale+3
  3967     0E4C  0849               	movf	??_scale+3,w
  3968     0E4D  00C4               	movwf	?_scale+2
  3969     0E4E  0848               	movf	??_scale+2,w
  3970     0E4F  00C3               	movwf	?_scale+1
  3971     0E50  0847               	movf	??_scale+1,w
  3972     0E51  00C2               	movwf	?_scale
  3973     0E52  2FFF               	goto	l259
  3974     0E53                     l2882:
  3975                           
  3976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3977     0E53  0854               	movf	scale@scl,w
  3978     0E54  3A80               	xorlw	128
  3979     0E55  3E12               	addlw	-238
  3980     0E56  1C03               	skipc
  3981     0E57  2E59               	goto	u4311
  3982     0E58  2E5A               	goto	u4310
  3983     0E59                     u4311:
  3984     0E59  2F44               	goto	l2890
  3985     0E5A                     u4310:
  3986     0E5A                     l2884:
  3987                           
  3988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3989     0E5A  300A               	movlw	10
  3990     0E5B  00A0               	movwf	___awdiv@divisor
  3991     0E5C  3000               	movlw	0
  3992     0E5D  00A1               	movwf	___awdiv@divisor+1
  3993     0E5E  0854               	movf	scale@scl,w
  3994     0E5F  00F4               	movwf	___awmod@dividend
  3995     0E60  01F5               	clrf	___awmod@dividend+1
  3996     0E61  1BF4               	btfsc	___awmod@dividend,7
  3997     0E62  03F5               	decf	___awmod@dividend+1,f
  3998     0E63  3064               	movlw	100
  3999     0E64  00F2               	movwf	___awmod@divisor
  4000     0E65  3000               	movlw	0
  4001     0E66  00F3               	movwf	___awmod@divisor+1
  4002     0E67  160A  158A  24A2  120A  158A  	fcall	___awmod
  4003     0E6C  0873               	movf	?___awmod+1,w
  4004     0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4005     0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4006     0E6F  00A3               	movwf	___awdiv@dividend+1
  4007     0E70  0872               	movf	?___awmod,w
  4008     0E71  00A2               	movwf	___awdiv@dividend
  4009     0E72  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4010     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4011     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4012     0E79  0820               	movf	?___awdiv,w
  4013     0E7A  00C6               	movwf	??_scale
  4014     0E7B  3001               	movlw	1
  4015     0E7C                     u4325:
  4016     0E7C  1003               	clrc
  4017     0E7D  0DC6               	rlf	??_scale,f
  4018     0E7E  3EFF               	addlw	-1
  4019     0E7F  1D03               	skipz
  4020     0E80  2E7C               	goto	u4325
  4021     0E81  1003               	clrc
  4022     0E82  0D46               	rlf	??_scale,w
  4023     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4024     0E84  0084               	movwf	4
  4025     0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  4026     0E8A  00C7               	movwf	??_scale+1
  4027     0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  4028     0E90  00C8               	movwf	??_scale+2
  4029     0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  4030     0E96  00C9               	movwf	??_scale+3
  4031     0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  4032     0E9C  00CA               	movwf	??_scale+4
  4033     0E9D  084A               	movf	??_scale+4,w
  4034     0E9E  00AB               	movwf	___flmul@b+3
  4035     0E9F  0849               	movf	??_scale+3,w
  4036     0EA0  00AA               	movwf	___flmul@b+2
  4037     0EA1  0848               	movf	??_scale+2,w
  4038     0EA2  00A9               	movwf	___flmul@b+1
  4039     0EA3  0847               	movf	??_scale+1,w
  4040     0EA4  00A8               	movwf	___flmul@b
  4041     0EA5  3064               	movlw	100
  4042     0EA6  00A0               	movwf	___awdiv@divisor
  4043     0EA7  3000               	movlw	0
  4044     0EA8  00A1               	movwf	___awdiv@divisor+1
  4045     0EA9  0854               	movf	scale@scl,w
  4046     0EAA  00A2               	movwf	___awdiv@dividend
  4047     0EAB  01A3               	clrf	___awdiv@dividend+1
  4048     0EAC  1BA2               	btfsc	___awdiv@dividend,7
  4049     0EAD  03A3               	decf	___awdiv@dividend+1,f
  4050     0EAE  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4051     0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4052     0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4053     0EB5  0820               	movf	?___awdiv,w
  4054     0EB6  00CB               	movwf	??_scale+5
  4055     0EB7  3001               	movlw	1
  4056     0EB8                     u4335:
  4057     0EB8  1003               	clrc
  4058     0EB9  0DCB               	rlf	??_scale+5,f
  4059     0EBA  3EFF               	addlw	-1
  4060     0EBB  1D03               	skipz
  4061     0EBC  2EB8               	goto	u4335
  4062     0EBD  1003               	clrc
  4063     0EBE  0D4B               	rlf	??_scale+5,w
  4064     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4065     0EC0  0084               	movwf	4
  4066     0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  4067     0EC6  00CC               	movwf	??_scale+6
  4068     0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  4069     0ECC  00CD               	movwf	??_scale+7
  4070     0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  4071     0ED2  00CE               	movwf	??_scale+8
  4072     0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  4073     0ED8  00CF               	movwf	??_scale+9
  4074     0ED9  084F               	movf	??_scale+9,w
  4075     0EDA  00AF               	movwf	___flmul@a+3
  4076     0EDB  084E               	movf	??_scale+8,w
  4077     0EDC  00AE               	movwf	___flmul@a+2
  4078     0EDD  084D               	movf	??_scale+7,w
  4079     0EDE  00AD               	movwf	___flmul@a+1
  4080     0EDF  084C               	movf	??_scale+6,w
  4081     0EE0  00AC               	movwf	___flmul@a
  4082     0EE1  120A  158A  2158  120A  158A  	fcall	___flmul
  4083     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4084     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4085     0EE8  082B               	movf	?___flmul+3,w
  4086     0EE9  00D3               	movwf	_scale$1135+3
  4087     0EEA  082A               	movf	?___flmul+2,w
  4088     0EEB  00D2               	movwf	_scale$1135+2
  4089     0EEC  0829               	movf	?___flmul+1,w
  4090     0EED  00D1               	movwf	_scale$1135+1
  4091     0EEE  0828               	movf	?___flmul,w
  4092     0EEF  00D0               	movwf	_scale$1135
  4093                           
  4094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4095     0EF0  300A               	movlw	10
  4096     0EF1  00F2               	movwf	___awmod@divisor
  4097     0EF2  3000               	movlw	0
  4098     0EF3  00F3               	movwf	___awmod@divisor+1
  4099     0EF4  0854               	movf	scale@scl,w
  4100     0EF5  00F4               	movwf	___awmod@dividend
  4101     0EF6  01F5               	clrf	___awmod@dividend+1
  4102     0EF7  1BF4               	btfsc	___awmod@dividend,7
  4103     0EF8  03F5               	decf	___awmod@dividend+1,f
  4104     0EF9  160A  158A  24A2  120A  158A  	fcall	___awmod
  4105     0EFE  0872               	movf	?___awmod,w
  4106     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4107     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4108     0F01  00C6               	movwf	??_scale
  4109     0F02  3001               	movlw	1
  4110     0F03                     u4345:
  4111     0F03  1003               	clrc
  4112     0F04  0DC6               	rlf	??_scale,f
  4113     0F05  3EFF               	addlw	-1
  4114     0F06  1D03               	skipz
  4115     0F07  2F03               	goto	u4345
  4116     0F08  1003               	clrc
  4117     0F09  0D46               	rlf	??_scale,w
  4118     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4119     0F0B  0084               	movwf	4
  4120     0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4121     0F11  00C7               	movwf	??_scale+1
  4122     0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  4123     0F17  00C8               	movwf	??_scale+2
  4124     0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  4125     0F1D  00C9               	movwf	??_scale+3
  4126     0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  4127     0F23  00CA               	movwf	??_scale+4
  4128     0F24  084A               	movf	??_scale+4,w
  4129     0F25  00AB               	movwf	___flmul@b+3
  4130     0F26  0849               	movf	??_scale+3,w
  4131     0F27  00AA               	movwf	___flmul@b+2
  4132     0F28  0848               	movf	??_scale+2,w
  4133     0F29  00A9               	movwf	___flmul@b+1
  4134     0F2A  0847               	movf	??_scale+1,w
  4135     0F2B  00A8               	movwf	___flmul@b
  4136     0F2C  0853               	movf	_scale$1135+3,w
  4137     0F2D  00AF               	movwf	___flmul@a+3
  4138     0F2E  0852               	movf	_scale$1135+2,w
  4139     0F2F  00AE               	movwf	___flmul@a+2
  4140     0F30  0851               	movf	_scale$1135+1,w
  4141     0F31  00AD               	movwf	___flmul@a+1
  4142     0F32  0850               	movf	_scale$1135,w
  4143     0F33  00AC               	movwf	___flmul@a
  4144     0F34  120A  158A  2158  120A  158A  	fcall	___flmul
  4145     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4146     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4147     0F3B  082B               	movf	?___flmul+3,w
  4148     0F3C  00C5               	movwf	?_scale+3
  4149     0F3D  082A               	movf	?___flmul+2,w
  4150     0F3E  00C4               	movwf	?_scale+2
  4151     0F3F  0829               	movf	?___flmul+1,w
  4152     0F40  00C3               	movwf	?_scale+1
  4153     0F41  0828               	movf	?___flmul,w
  4154     0F42  00C2               	movwf	?_scale
  4155     0F43  2FFF               	goto	l259
  4156     0F44                     l2890:
  4157     0F44  0854               	movf	scale@scl,w
  4158     0F45  3A80               	xorlw	128
  4159     0F46  3E75               	addlw	-139
  4160     0F47  1C03               	skipc
  4161     0F48  2F4A               	goto	u4351
  4162     0F49  2F4B               	goto	u4350
  4163     0F4A                     u4351:
  4164     0F4A  2FD3               	goto	l2896
  4165     0F4B                     u4350:
  4166     0F4B                     l2892:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4169     0F4B  300A               	movlw	10
  4170     0F4C  00F2               	movwf	___awmod@divisor
  4171     0F4D  3000               	movlw	0
  4172     0F4E  00F3               	movwf	___awmod@divisor+1
  4173     0F4F  0854               	movf	scale@scl,w
  4174     0F50  00F4               	movwf	___awmod@dividend
  4175     0F51  01F5               	clrf	___awmod@dividend+1
  4176     0F52  1BF4               	btfsc	___awmod@dividend,7
  4177     0F53  03F5               	decf	___awmod@dividend+1,f
  4178     0F54  160A  158A  24A2  120A  158A  	fcall	___awmod
  4179     0F59  0872               	movf	?___awmod,w
  4180     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4181     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4182     0F5C  00C6               	movwf	??_scale
  4183     0F5D  3001               	movlw	1
  4184     0F5E                     u4365:
  4185     0F5E  1003               	clrc
  4186     0F5F  0DC6               	rlf	??_scale,f
  4187     0F60  3EFF               	addlw	-1
  4188     0F61  1D03               	skipz
  4189     0F62  2F5E               	goto	u4365
  4190     0F63  1003               	clrc
  4191     0F64  0D46               	rlf	??_scale,w
  4192     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4193     0F66  0084               	movwf	4
  4194     0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  4195     0F6C  00C7               	movwf	??_scale+1
  4196     0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4197     0F72  00C8               	movwf	??_scale+2
  4198     0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  4199     0F78  00C9               	movwf	??_scale+3
  4200     0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  4201     0F7E  00CA               	movwf	??_scale+4
  4202     0F7F  084A               	movf	??_scale+4,w
  4203     0F80  00AB               	movwf	___flmul@b+3
  4204     0F81  0849               	movf	??_scale+3,w
  4205     0F82  00AA               	movwf	___flmul@b+2
  4206     0F83  0848               	movf	??_scale+2,w
  4207     0F84  00A9               	movwf	___flmul@b+1
  4208     0F85  0847               	movf	??_scale+1,w
  4209     0F86  00A8               	movwf	___flmul@b
  4210     0F87  300A               	movlw	10
  4211     0F88  00A0               	movwf	___awdiv@divisor
  4212     0F89  3000               	movlw	0
  4213     0F8A  00A1               	movwf	___awdiv@divisor+1
  4214     0F8B  0854               	movf	scale@scl,w
  4215     0F8C  00A2               	movwf	___awdiv@dividend
  4216     0F8D  01A3               	clrf	___awdiv@dividend+1
  4217     0F8E  1BA2               	btfsc	___awdiv@dividend,7
  4218     0F8F  03A3               	decf	___awdiv@dividend+1,f
  4219     0F90  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4220     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4221     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4222     0F97  0820               	movf	?___awdiv,w
  4223     0F98  00CB               	movwf	??_scale+5
  4224     0F99  3001               	movlw	1
  4225     0F9A                     u4375:
  4226     0F9A  1003               	clrc
  4227     0F9B  0DCB               	rlf	??_scale+5,f
  4228     0F9C  3EFF               	addlw	-1
  4229     0F9D  1D03               	skipz
  4230     0F9E  2F9A               	goto	u4375
  4231     0F9F  1003               	clrc
  4232     0FA0  0D4B               	rlf	??_scale+5,w
  4233     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4234     0FA2  0084               	movwf	4
  4235     0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4236     0FA8  00CC               	movwf	??_scale+6
  4237     0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4238     0FAE  00CD               	movwf	??_scale+7
  4239     0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  4240     0FB4  00CE               	movwf	??_scale+8
  4241     0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  4242     0FBA  00CF               	movwf	??_scale+9
  4243     0FBB  084F               	movf	??_scale+9,w
  4244     0FBC  00AF               	movwf	___flmul@a+3
  4245     0FBD  084E               	movf	??_scale+8,w
  4246     0FBE  00AE               	movwf	___flmul@a+2
  4247     0FBF  084D               	movf	??_scale+7,w
  4248     0FC0  00AD               	movwf	___flmul@a+1
  4249     0FC1  084C               	movf	??_scale+6,w
  4250     0FC2  00AC               	movwf	___flmul@a
  4251     0FC3  120A  158A  2158  120A  158A  	fcall	___flmul
  4252     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4253     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4254     0FCA  082B               	movf	?___flmul+3,w
  4255     0FCB  00C5               	movwf	?_scale+3
  4256     0FCC  082A               	movf	?___flmul+2,w
  4257     0FCD  00C4               	movwf	?_scale+2
  4258     0FCE  0829               	movf	?___flmul+1,w
  4259     0FCF  00C3               	movwf	?_scale+1
  4260     0FD0  0828               	movf	?___flmul,w
  4261     0FD1  00C2               	movwf	?_scale
  4262     0FD2  2FFF               	goto	l259
  4263     0FD3                     l2896:
  4264                           
  4265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4266     0FD3  0854               	movf	scale@scl,w
  4267     0FD4  00C6               	movwf	??_scale
  4268     0FD5  3001               	movlw	1
  4269     0FD6                     u4385:
  4270     0FD6  1003               	clrc
  4271     0FD7  0DC6               	rlf	??_scale,f
  4272     0FD8  3EFF               	addlw	-1
  4273     0FD9  1D03               	skipz
  4274     0FDA  2FD6               	goto	u4385
  4275     0FDB  1003               	clrc
  4276     0FDC  0D46               	rlf	??_scale,w
  4277     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4278     0FDE  0084               	movwf	4
  4279     0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  4280     0FE4  00C7               	movwf	??_scale+1
  4281     0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4282     0FEA  00C8               	movwf	??_scale+2
  4283     0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  4284     0FF0  00C9               	movwf	??_scale+3
  4285     0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  4286     0FF6  00CA               	movwf	??_scale+4
  4287     0FF7  084A               	movf	??_scale+4,w
  4288     0FF8  00C5               	movwf	?_scale+3
  4289     0FF9  0849               	movf	??_scale+3,w
  4290     0FFA  00C4               	movwf	?_scale+2
  4291     0FFB  0848               	movf	??_scale+2,w
  4292     0FFC  00C3               	movwf	?_scale+1
  4293     0FFD  0847               	movf	??_scale+1,w
  4294     0FFE  00C2               	movwf	?_scale
  4295     0FFF                     l259:
  4296     0FFF  0008               	return
  4297     1000                     __end_of_scale:
  4298                           
  4299                           	psect	text3
  4300     1CA2                     __ptext3:	
  4301 ;; *************** function ___awmod *****************
  4302 ;; Defined at:
  4303 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  divisor         2    2[COMMON] int 
  4306 ;;  dividend        2    4[COMMON] int 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  sign            1    8[COMMON] unsigned char 
  4309 ;;  counter         1    7[COMMON] unsigned char 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  2    2[COMMON] int 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4319 ;;      Params:         4       0       0       0       0
  4320 ;;      Locals:         2       0       0       0       0
  4321 ;;      Temps:          1       0       0       0       0
  4322 ;;      Totals:         7       0       0       0       0
  4323 ;;Total ram usage:        7 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; Hardware stack levels required when called: 1
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_scale
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333     1CA2                     ___awmod:	
  4334                           ;psect for function ___awmod
  4335                           
  4336     1CA2                     l2390:	
  4337                           ;incstack = 0
  4338                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4339                           
  4340     1CA2  01F8               	clrf	___awmod@sign
  4341     1CA3                     l2392:
  4342     1CA3  1FF5               	btfss	___awmod@dividend+1,7
  4343     1CA4  2CA6               	goto	u3091
  4344     1CA5  2CA7               	goto	u3090
  4345     1CA6                     u3091:
  4346     1CA6  2CAE               	goto	l2398
  4347     1CA7                     u3090:
  4348     1CA7                     l2394:
  4349     1CA7  09F4               	comf	___awmod@dividend,f
  4350     1CA8  09F5               	comf	___awmod@dividend+1,f
  4351     1CA9  0AF4               	incf	___awmod@dividend,f
  4352     1CAA  1903               	skipnz
  4353     1CAB  0AF5               	incf	___awmod@dividend+1,f
  4354     1CAC                     l2396:
  4355     1CAC  01F8               	clrf	___awmod@sign
  4356     1CAD  0AF8               	incf	___awmod@sign,f
  4357     1CAE                     l2398:
  4358     1CAE  1FF3               	btfss	___awmod@divisor+1,7
  4359     1CAF  2CB1               	goto	u3101
  4360     1CB0  2CB2               	goto	u3100
  4361     1CB1                     u3101:
  4362     1CB1  2CB7               	goto	l2402
  4363     1CB2                     u3100:
  4364     1CB2                     l2400:
  4365     1CB2  09F2               	comf	___awmod@divisor,f
  4366     1CB3  09F3               	comf	___awmod@divisor+1,f
  4367     1CB4  0AF2               	incf	___awmod@divisor,f
  4368     1CB5  1903               	skipnz
  4369     1CB6  0AF3               	incf	___awmod@divisor+1,f
  4370     1CB7                     l2402:
  4371     1CB7  0872               	movf	___awmod@divisor,w
  4372     1CB8  0473               	iorwf	___awmod@divisor+1,w
  4373     1CB9  1903               	btfsc	3,2
  4374     1CBA  2CBC               	goto	u3111
  4375     1CBB  2CBD               	goto	u3110
  4376     1CBC                     u3111:
  4377     1CBC  2CEC               	goto	l2420
  4378     1CBD                     u3110:
  4379     1CBD                     l2404:
  4380     1CBD  01F7               	clrf	___awmod@counter
  4381     1CBE  0AF7               	incf	___awmod@counter,f
  4382     1CBF  2CCB               	goto	l2410
  4383     1CC0                     l2406:
  4384     1CC0  3001               	movlw	1
  4385     1CC1                     u3125:
  4386     1CC1  1003               	clrc
  4387     1CC2  0DF2               	rlf	___awmod@divisor,f
  4388     1CC3  0DF3               	rlf	___awmod@divisor+1,f
  4389     1CC4  3EFF               	addlw	-1
  4390     1CC5  1D03               	skipz
  4391     1CC6  2CC1               	goto	u3125
  4392     1CC7                     l2408:
  4393     1CC7  3001               	movlw	1
  4394     1CC8  00F6               	movwf	??___awmod
  4395     1CC9  0876               	movf	??___awmod,w
  4396     1CCA  07F7               	addwf	___awmod@counter,f
  4397     1CCB                     l2410:
  4398     1CCB  1FF3               	btfss	___awmod@divisor+1,7
  4399     1CCC  2CCE               	goto	u3131
  4400     1CCD  2CCF               	goto	u3130
  4401     1CCE                     u3131:
  4402     1CCE  2CC0               	goto	l2406
  4403     1CCF                     u3130:
  4404     1CCF                     l2412:
  4405     1CCF  0873               	movf	___awmod@divisor+1,w
  4406     1CD0  0275               	subwf	___awmod@dividend+1,w
  4407     1CD1  1D03               	skipz
  4408     1CD2  2CD5               	goto	u3145
  4409     1CD3  0872               	movf	___awmod@divisor,w
  4410     1CD4  0274               	subwf	___awmod@dividend,w
  4411     1CD5                     u3145:
  4412     1CD5  1C03               	skipc
  4413     1CD6  2CD8               	goto	u3141
  4414     1CD7  2CD9               	goto	u3140
  4415     1CD8                     u3141:
  4416     1CD8  2CDF               	goto	l2416
  4417     1CD9                     u3140:
  4418     1CD9                     l2414:
  4419     1CD9  0872               	movf	___awmod@divisor,w
  4420     1CDA  02F4               	subwf	___awmod@dividend,f
  4421     1CDB  0873               	movf	___awmod@divisor+1,w
  4422     1CDC  1C03               	skipc
  4423     1CDD  03F5               	decf	___awmod@dividend+1,f
  4424     1CDE  02F5               	subwf	___awmod@dividend+1,f
  4425     1CDF                     l2416:
  4426     1CDF  3001               	movlw	1
  4427     1CE0                     u3155:
  4428     1CE0  1003               	clrc
  4429     1CE1  0CF3               	rrf	___awmod@divisor+1,f
  4430     1CE2  0CF2               	rrf	___awmod@divisor,f
  4431     1CE3  3EFF               	addlw	-1
  4432     1CE4  1D03               	skipz
  4433     1CE5  2CE0               	goto	u3155
  4434     1CE6                     l2418:
  4435     1CE6  3001               	movlw	1
  4436     1CE7  02F7               	subwf	___awmod@counter,f
  4437     1CE8  1D03               	btfss	3,2
  4438     1CE9  2CEB               	goto	u3161
  4439     1CEA  2CEC               	goto	u3160
  4440     1CEB                     u3161:
  4441     1CEB  2CCF               	goto	l2412
  4442     1CEC                     u3160:
  4443     1CEC                     l2420:
  4444     1CEC  0878               	movf	___awmod@sign,w
  4445     1CED  1903               	btfsc	3,2
  4446     1CEE  2CF0               	goto	u3171
  4447     1CEF  2CF1               	goto	u3170
  4448     1CF0                     u3171:
  4449     1CF0  2CF6               	goto	l2424
  4450     1CF1                     u3170:
  4451     1CF1                     l2422:
  4452     1CF1  09F4               	comf	___awmod@dividend,f
  4453     1CF2  09F5               	comf	___awmod@dividend+1,f
  4454     1CF3  0AF4               	incf	___awmod@dividend,f
  4455     1CF4  1903               	skipnz
  4456     1CF5  0AF5               	incf	___awmod@dividend+1,f
  4457     1CF6                     l2424:
  4458     1CF6  0875               	movf	___awmod@dividend+1,w
  4459     1CF7  00F3               	movwf	?___awmod+1
  4460     1CF8  0874               	movf	___awmod@dividend,w
  4461     1CF9  00F2               	movwf	?___awmod
  4462     1CFA                     l495:
  4463     1CFA  0008               	return
  4464     1CFB                     __end_of___awmod:
  4465                           
  4466                           	psect	text4
  4467     1DC4                     __ptext4:	
  4468 ;; *************** function ___awdiv *****************
  4469 ;; Defined at:
  4470 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  divisor         2    0[BANK0 ] int 
  4473 ;;  dividend        2    2[BANK0 ] int 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  quotient        2    6[BANK0 ] int 
  4476 ;;  sign            1    5[BANK0 ] unsigned char 
  4477 ;;  counter         1    4[BANK0 ] unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  2    0[BANK0 ] int 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4487 ;;      Params:         0       4       0       0       0
  4488 ;;      Locals:         0       4       0       0       0
  4489 ;;      Temps:          1       0       0       0       0
  4490 ;;      Totals:         1       8       0       0       0
  4491 ;;Total ram usage:        9 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 1
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_scale
  4498 ;;		_sprintf
  4499 ;;		_adc_mv
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503     1DC4                     ___awdiv:	
  4504                           ;psect for function ___awdiv
  4505                           
  4506     1DC4                     l2346:	
  4507                           ;incstack = 0
  4508                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4509                           
  4510     1DC4  1283               	bcf	3,5	;RP0=0, select bank0
  4511     1DC5  1303               	bcf	3,6	;RP1=0, select bank0
  4512     1DC6  01A5               	clrf	___awdiv@sign
  4513     1DC7                     l2348:
  4514     1DC7  1FA1               	btfss	___awdiv@divisor+1,7
  4515     1DC8  2DCA               	goto	u2991
  4516     1DC9  2DCB               	goto	u2990
  4517     1DCA                     u2991:
  4518     1DCA  2DD2               	goto	l2354
  4519     1DCB                     u2990:
  4520     1DCB                     l2350:
  4521     1DCB  09A0               	comf	___awdiv@divisor,f
  4522     1DCC  09A1               	comf	___awdiv@divisor+1,f
  4523     1DCD  0AA0               	incf	___awdiv@divisor,f
  4524     1DCE  1903               	skipnz
  4525     1DCF  0AA1               	incf	___awdiv@divisor+1,f
  4526     1DD0                     l2352:
  4527     1DD0  01A5               	clrf	___awdiv@sign
  4528     1DD1  0AA5               	incf	___awdiv@sign,f
  4529     1DD2                     l2354:
  4530     1DD2  1FA3               	btfss	___awdiv@dividend+1,7
  4531     1DD3  2DD5               	goto	u3001
  4532     1DD4  2DD6               	goto	u3000
  4533     1DD5                     u3001:
  4534     1DD5  2DDF               	goto	l2360
  4535     1DD6                     u3000:
  4536     1DD6                     l2356:
  4537     1DD6  09A2               	comf	___awdiv@dividend,f
  4538     1DD7  09A3               	comf	___awdiv@dividend+1,f
  4539     1DD8  0AA2               	incf	___awdiv@dividend,f
  4540     1DD9  1903               	skipnz
  4541     1DDA  0AA3               	incf	___awdiv@dividend+1,f
  4542     1DDB                     l2358:
  4543     1DDB  3001               	movlw	1
  4544     1DDC  00F9               	movwf	??___awdiv
  4545     1DDD  0879               	movf	??___awdiv,w
  4546     1DDE  06A5               	xorwf	___awdiv@sign,f
  4547     1DDF                     l2360:
  4548     1DDF  01A6               	clrf	___awdiv@quotient
  4549     1DE0  01A7               	clrf	___awdiv@quotient+1
  4550     1DE1                     l2362:
  4551     1DE1  0820               	movf	___awdiv@divisor,w
  4552     1DE2  0421               	iorwf	___awdiv@divisor+1,w
  4553     1DE3  1903               	btfsc	3,2
  4554     1DE4  2DE6               	goto	u3011
  4555     1DE5  2DE7               	goto	u3010
  4556     1DE6                     u3011:
  4557     1DE6  2E1E               	goto	l2382
  4558     1DE7                     u3010:
  4559     1DE7                     l2364:
  4560     1DE7  01A4               	clrf	___awdiv@counter
  4561     1DE8  0AA4               	incf	___awdiv@counter,f
  4562     1DE9  2DF5               	goto	l2370
  4563     1DEA                     l2366:
  4564     1DEA  3001               	movlw	1
  4565     1DEB                     u3025:
  4566     1DEB  1003               	clrc
  4567     1DEC  0DA0               	rlf	___awdiv@divisor,f
  4568     1DED  0DA1               	rlf	___awdiv@divisor+1,f
  4569     1DEE  3EFF               	addlw	-1
  4570     1DEF  1D03               	skipz
  4571     1DF0  2DEB               	goto	u3025
  4572     1DF1                     l2368:
  4573     1DF1  3001               	movlw	1
  4574     1DF2  00F9               	movwf	??___awdiv
  4575     1DF3  0879               	movf	??___awdiv,w
  4576     1DF4  07A4               	addwf	___awdiv@counter,f
  4577     1DF5                     l2370:
  4578     1DF5  1FA1               	btfss	___awdiv@divisor+1,7
  4579     1DF6  2DF8               	goto	u3031
  4580     1DF7  2DF9               	goto	u3030
  4581     1DF8                     u3031:
  4582     1DF8  2DEA               	goto	l2366
  4583     1DF9                     u3030:
  4584     1DF9                     l2372:
  4585     1DF9  3001               	movlw	1
  4586     1DFA                     u3045:
  4587     1DFA  1003               	clrc
  4588     1DFB  0DA6               	rlf	___awdiv@quotient,f
  4589     1DFC  0DA7               	rlf	___awdiv@quotient+1,f
  4590     1DFD  3EFF               	addlw	-1
  4591     1DFE  1D03               	skipz
  4592     1DFF  2DFA               	goto	u3045
  4593     1E00  0821               	movf	___awdiv@divisor+1,w
  4594     1E01  0223               	subwf	___awdiv@dividend+1,w
  4595     1E02  1D03               	skipz
  4596     1E03  2E06               	goto	u3055
  4597     1E04  0820               	movf	___awdiv@divisor,w
  4598     1E05  0222               	subwf	___awdiv@dividend,w
  4599     1E06                     u3055:
  4600     1E06  1C03               	skipc
  4601     1E07  2E09               	goto	u3051
  4602     1E08  2E0A               	goto	u3050
  4603     1E09                     u3051:
  4604     1E09  2E11               	goto	l2378
  4605     1E0A                     u3050:
  4606     1E0A                     l2374:
  4607     1E0A  0820               	movf	___awdiv@divisor,w
  4608     1E0B  02A2               	subwf	___awdiv@dividend,f
  4609     1E0C  0821               	movf	___awdiv@divisor+1,w
  4610     1E0D  1C03               	skipc
  4611     1E0E  03A3               	decf	___awdiv@dividend+1,f
  4612     1E0F  02A3               	subwf	___awdiv@dividend+1,f
  4613     1E10                     l2376:
  4614     1E10  1426               	bsf	___awdiv@quotient,0
  4615     1E11                     l2378:
  4616     1E11  3001               	movlw	1
  4617     1E12                     u3065:
  4618     1E12  1003               	clrc
  4619     1E13  0CA1               	rrf	___awdiv@divisor+1,f
  4620     1E14  0CA0               	rrf	___awdiv@divisor,f
  4621     1E15  3EFF               	addlw	-1
  4622     1E16  1D03               	skipz
  4623     1E17  2E12               	goto	u3065
  4624     1E18                     l2380:
  4625     1E18  3001               	movlw	1
  4626     1E19  02A4               	subwf	___awdiv@counter,f
  4627     1E1A  1D03               	btfss	3,2
  4628     1E1B  2E1D               	goto	u3071
  4629     1E1C  2E1E               	goto	u3070
  4630     1E1D                     u3071:
  4631     1E1D  2DF9               	goto	l2372
  4632     1E1E                     u3070:
  4633     1E1E                     l2382:
  4634     1E1E  0825               	movf	___awdiv@sign,w
  4635     1E1F  1903               	btfsc	3,2
  4636     1E20  2E22               	goto	u3081
  4637     1E21  2E23               	goto	u3080
  4638     1E22                     u3081:
  4639     1E22  2E28               	goto	l2386
  4640     1E23                     u3080:
  4641     1E23                     l2384:
  4642     1E23  09A6               	comf	___awdiv@quotient,f
  4643     1E24  09A7               	comf	___awdiv@quotient+1,f
  4644     1E25  0AA6               	incf	___awdiv@quotient,f
  4645     1E26  1903               	skipnz
  4646     1E27  0AA7               	incf	___awdiv@quotient+1,f
  4647     1E28                     l2386:
  4648     1E28  0827               	movf	___awdiv@quotient+1,w
  4649     1E29  00A1               	movwf	?___awdiv+1
  4650     1E2A  0826               	movf	___awdiv@quotient,w
  4651     1E2B  00A0               	movwf	?___awdiv
  4652     1E2C                     l482:
  4653     1E2C  0008               	return
  4654     1E2D                     __end_of___awdiv:
  4655                           
  4656                           	psect	text5
  4657     1A38                     __ptext5:	
  4658 ;; *************** function _isdigit *****************
  4659 ;; Defined at:
  4660 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  c               1    wreg     unsigned char 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  c               1    3[COMMON] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;		None               void
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4674 ;;      Params:         0       0       0       0       0
  4675 ;;      Locals:         2       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0
  4677 ;;      Totals:         2       0       0       0       0
  4678 ;;Total ram usage:        2 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; Hardware stack levels required when called: 1
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_sprintf
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688     1A38                     _isdigit:	
  4689                           ;psect for function _isdigit
  4690                           
  4691                           
  4692                           ;incstack = 0
  4693                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4694                           ;isdigit@c stored from wreg
  4695     1A38  00F3               	movwf	isdigit@c
  4696     1A39                     l2900:
  4697     1A39  01F2               	clrf	_isdigit$935
  4698     1A3A                     l2902:
  4699     1A3A  303A               	movlw	58
  4700     1A3B  0273               	subwf	isdigit@c,w
  4701     1A3C  1803               	skipnc
  4702     1A3D  2A3F               	goto	u4391
  4703     1A3E  2A40               	goto	u4390
  4704     1A3F                     u4391:
  4705     1A3F  2A48               	goto	l2908
  4706     1A40                     u4390:
  4707     1A40                     l2904:
  4708     1A40  3030               	movlw	48
  4709     1A41  0273               	subwf	isdigit@c,w
  4710     1A42  1C03               	skipc
  4711     1A43  2A45               	goto	u4401
  4712     1A44  2A46               	goto	u4400
  4713     1A45                     u4401:
  4714     1A45  2A48               	goto	l2908
  4715     1A46                     u4400:
  4716     1A46                     l2906:
  4717     1A46  01F2               	clrf	_isdigit$935
  4718     1A47  0AF2               	incf	_isdigit$935,f
  4719     1A48                     l2908:
  4720     1A48  0C72               	rrf	_isdigit$935,w
  4721     1A49                     l816:
  4722     1A49  0008               	return
  4723     1A4A                     __end_of_isdigit:
  4724                           
  4725                           	psect	text6
  4726     139D                     __ptext6:	
  4727 ;; *************** function _fround *****************
  4728 ;; Defined at:
  4729 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  prec            1    wreg     unsigned char 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  prec            1   53[BANK0 ] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  4   34[BANK0 ] unsigned char 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4743 ;;      Params:         0       4       0       0       0
  4744 ;;      Locals:         0       9       0       0       0
  4745 ;;      Temps:          0       7       0       0       0
  4746 ;;      Totals:         0      20       0       0       0
  4747 ;;Total ram usage:       20 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 3
  4750 ;; This function calls:
  4751 ;;		___flmul
  4752 ;;		___lwdiv
  4753 ;;		___lwmod
  4754 ;; This function is called by:
  4755 ;;		_sprintf
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759     139D                     _fround:	
  4760                           ;psect for function _fround
  4761                           
  4762                           
  4763                           ;incstack = 0
  4764                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4765                           ;fround@prec stored from wreg
  4766     139D  1283               	bcf	3,5	;RP0=0, select bank0
  4767     139E  1303               	bcf	3,6	;RP1=0, select bank0
  4768     139F  00D5               	movwf	fround@prec
  4769     13A0                     l2842:
  4770                           
  4771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4772     13A0  306E               	movlw	110
  4773     13A1  0255               	subwf	fround@prec,w
  4774     13A2  1C03               	skipc
  4775     13A3  2BA5               	goto	u4141
  4776     13A4  2BA6               	goto	u4140
  4777     13A5                     u4141:
  4778     13A5  2CB3               	goto	l2850
  4779     13A6                     u4140:
  4780     13A6                     l2844:
  4781                           
  4782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4783     13A6  303F               	movlw	63
  4784     13A7  00AB               	movwf	___flmul@b+3
  4785     13A8  3000               	movlw	0
  4786     13A9  00AA               	movwf	___flmul@b+2
  4787     13AA  3000               	movlw	0
  4788     13AB  00A9               	movwf	___flmul@b+1
  4789     13AC  3000               	movlw	0
  4790     13AD  00A8               	movwf	___flmul@b
  4791     13AE  3064               	movlw	100
  4792     13AF  00F8               	movwf	___lwdiv@divisor
  4793     13B0  3000               	movlw	0
  4794     13B1  00F9               	movwf	___lwdiv@divisor+1
  4795     13B2  0855               	movf	fround@prec,w
  4796     13B3  00C6               	movwf	??_fround
  4797     13B4  01C7               	clrf	??_fround+1
  4798     13B5  0846               	movf	??_fround,w
  4799     13B6  00FA               	movwf	___lwdiv@dividend
  4800     13B7  0847               	movf	??_fround+1,w
  4801     13B8  00FB               	movwf	___lwdiv@dividend+1
  4802     13B9  160A  158A  2368  160A  118A  	fcall	___lwdiv
  4803     13BE  0878               	movf	?___lwdiv,w
  4804     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4805     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4806     13C1  00C8               	movwf	??_fround+2
  4807     13C2  3001               	movlw	1
  4808     13C3                     u4155:
  4809     13C3  1003               	clrc
  4810     13C4  0DC8               	rlf	??_fround+2,f
  4811     13C5  3EFF               	addlw	-1
  4812     13C6  1D03               	skipz
  4813     13C7  2BC3               	goto	u4155
  4814     13C8  1003               	clrc
  4815     13C9  0D48               	rlf	??_fround+2,w
  4816     13CA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4817     13CB  0084               	movwf	4
  4818     13CC  120A  158A  200A  160A  118A  	fcall	stringdir
  4819     13D1  00C9               	movwf	??_fround+3
  4820     13D2  120A  158A  200A  160A  118A  	fcall	stringdir
  4821     13D7  00CA               	movwf	??_fround+4
  4822     13D8  120A  158A  200A  160A  118A  	fcall	stringdir
  4823     13DD  00CB               	movwf	??_fround+5
  4824     13DE  120A  158A  200A  160A  118A  	fcall	stringdir
  4825     13E3  00CC               	movwf	??_fround+6
  4826     13E4  084C               	movf	??_fround+6,w
  4827     13E5  00AF               	movwf	___flmul@a+3
  4828     13E6  084B               	movf	??_fround+5,w
  4829     13E7  00AE               	movwf	___flmul@a+2
  4830     13E8  084A               	movf	??_fround+4,w
  4831     13E9  00AD               	movwf	___flmul@a+1
  4832     13EA  0849               	movf	??_fround+3,w
  4833     13EB  00AC               	movwf	___flmul@a
  4834     13EC  120A  158A  2158  160A  118A  	fcall	___flmul
  4835     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  4836     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  4837     13F3  082B               	movf	?___flmul+3,w
  4838     13F4  00D4               	movwf	_fround$1133+3
  4839     13F5  082A               	movf	?___flmul+2,w
  4840     13F6  00D3               	movwf	_fround$1133+2
  4841     13F7  0829               	movf	?___flmul+1,w
  4842     13F8  00D2               	movwf	_fround$1133+1
  4843     13F9  0828               	movf	?___flmul,w
  4844     13FA  00D1               	movwf	_fround$1133
  4845                           
  4846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4847     13FB  300A               	movlw	10
  4848     13FC  00F8               	movwf	___lwdiv@divisor
  4849     13FD  3000               	movlw	0
  4850     13FE  00F9               	movwf	___lwdiv@divisor+1
  4851     13FF  0855               	movf	fround@prec,w
  4852     1400  00C6               	movwf	??_fround
  4853     1401  01C7               	clrf	??_fround+1
  4854     1402  0846               	movf	??_fround,w
  4855     1403  00F4               	movwf	___lwmod@dividend
  4856     1404  0847               	movf	??_fround+1,w
  4857     1405  00F5               	movwf	___lwmod@dividend+1
  4858     1406  3064               	movlw	100
  4859     1407  00F2               	movwf	___lwmod@divisor
  4860     1408  3000               	movlw	0
  4861     1409  00F3               	movwf	___lwmod@divisor+1
  4862     140A  160A  158A  22EC  160A  118A  	fcall	___lwmod
  4863     140F  0873               	movf	?___lwmod+1,w
  4864     1410  00FB               	movwf	___lwdiv@dividend+1
  4865     1411  0872               	movf	?___lwmod,w
  4866     1412  00FA               	movwf	___lwdiv@dividend
  4867     1413  160A  158A  2368  160A  118A  	fcall	___lwdiv
  4868     1418  0878               	movf	?___lwdiv,w
  4869     1419  1283               	bcf	3,5	;RP0=0, select bank0
  4870     141A  1303               	bcf	3,6	;RP1=0, select bank0
  4871     141B  00C8               	movwf	??_fround+2
  4872     141C  3001               	movlw	1
  4873     141D                     u4165:
  4874     141D  1003               	clrc
  4875     141E  0DC8               	rlf	??_fround+2,f
  4876     141F  3EFF               	addlw	-1
  4877     1420  1D03               	skipz
  4878     1421  2C1D               	goto	u4165
  4879     1422  1003               	clrc
  4880     1423  0D48               	rlf	??_fround+2,w
  4881     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4882     1425  0084               	movwf	4
  4883     1426  120A  158A  200A  160A  118A  	fcall	stringdir
  4884     142B  00C9               	movwf	??_fround+3
  4885     142C  120A  158A  200A  160A  118A  	fcall	stringdir
  4886     1431  00CA               	movwf	??_fround+4
  4887     1432  120A  158A  200A  160A  118A  	fcall	stringdir
  4888     1437  00CB               	movwf	??_fround+5
  4889     1438  120A  158A  200A  160A  118A  	fcall	stringdir
  4890     143D  00CC               	movwf	??_fround+6
  4891     143E  084C               	movf	??_fround+6,w
  4892     143F  00AB               	movwf	___flmul@b+3
  4893     1440  084B               	movf	??_fround+5,w
  4894     1441  00AA               	movwf	___flmul@b+2
  4895     1442  084A               	movf	??_fround+4,w
  4896     1443  00A9               	movwf	___flmul@b+1
  4897     1444  0849               	movf	??_fround+3,w
  4898     1445  00A8               	movwf	___flmul@b
  4899     1446  0854               	movf	_fround$1133+3,w
  4900     1447  00AF               	movwf	___flmul@a+3
  4901     1448  0853               	movf	_fround$1133+2,w
  4902     1449  00AE               	movwf	___flmul@a+2
  4903     144A  0852               	movf	_fround$1133+1,w
  4904     144B  00AD               	movwf	___flmul@a+1
  4905     144C  0851               	movf	_fround$1133,w
  4906     144D  00AC               	movwf	___flmul@a
  4907     144E  120A  158A  2158  160A  118A  	fcall	___flmul
  4908     1453  1283               	bcf	3,5	;RP0=0, select bank0
  4909     1454  1303               	bcf	3,6	;RP1=0, select bank0
  4910     1455  082B               	movf	?___flmul+3,w
  4911     1456  00D0               	movwf	_fround$1134+3
  4912     1457  082A               	movf	?___flmul+2,w
  4913     1458  00CF               	movwf	_fround$1134+2
  4914     1459  0829               	movf	?___flmul+1,w
  4915     145A  00CE               	movwf	_fround$1134+1
  4916     145B  0828               	movf	?___flmul,w
  4917     145C  00CD               	movwf	_fround$1134
  4918                           
  4919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4920     145D  300A               	movlw	10
  4921     145E  00F2               	movwf	___lwmod@divisor
  4922     145F  3000               	movlw	0
  4923     1460  00F3               	movwf	___lwmod@divisor+1
  4924     1461  0855               	movf	fround@prec,w
  4925     1462  00C6               	movwf	??_fround
  4926     1463  01C7               	clrf	??_fround+1
  4927     1464  0846               	movf	??_fround,w
  4928     1465  00F4               	movwf	___lwmod@dividend
  4929     1466  0847               	movf	??_fround+1,w
  4930     1467  00F5               	movwf	___lwmod@dividend+1
  4931     1468  160A  158A  22EC  160A  118A  	fcall	___lwmod
  4932     146D  0872               	movf	?___lwmod,w
  4933     146E  1283               	bcf	3,5	;RP0=0, select bank0
  4934     146F  1303               	bcf	3,6	;RP1=0, select bank0
  4935     1470  00C8               	movwf	??_fround+2
  4936     1471  3001               	movlw	1
  4937     1472                     u4175:
  4938     1472  1003               	clrc
  4939     1473  0DC8               	rlf	??_fround+2,f
  4940     1474  3EFF               	addlw	-1
  4941     1475  1D03               	skipz
  4942     1476  2C72               	goto	u4175
  4943     1477  1003               	clrc
  4944     1478  0D48               	rlf	??_fround+2,w
  4945     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4946     147A  0084               	movwf	4
  4947     147B  120A  158A  200A  160A  118A  	fcall	stringdir
  4948     1480  00C9               	movwf	??_fround+3
  4949     1481  120A  158A  200A  160A  118A  	fcall	stringdir
  4950     1486  00CA               	movwf	??_fround+4
  4951     1487  120A  158A  200A  160A  118A  	fcall	stringdir
  4952     148C  00CB               	movwf	??_fround+5
  4953     148D  120A  158A  200A  160A  118A  	fcall	stringdir
  4954     1492  00CC               	movwf	??_fround+6
  4955     1493  084C               	movf	??_fround+6,w
  4956     1494  00AB               	movwf	___flmul@b+3
  4957     1495  084B               	movf	??_fround+5,w
  4958     1496  00AA               	movwf	___flmul@b+2
  4959     1497  084A               	movf	??_fround+4,w
  4960     1498  00A9               	movwf	___flmul@b+1
  4961     1499  0849               	movf	??_fround+3,w
  4962     149A  00A8               	movwf	___flmul@b
  4963     149B  0850               	movf	_fround$1134+3,w
  4964     149C  00AF               	movwf	___flmul@a+3
  4965     149D  084F               	movf	_fround$1134+2,w
  4966     149E  00AE               	movwf	___flmul@a+2
  4967     149F  084E               	movf	_fround$1134+1,w
  4968     14A0  00AD               	movwf	___flmul@a+1
  4969     14A1  084D               	movf	_fround$1134,w
  4970     14A2  00AC               	movwf	___flmul@a
  4971     14A3  120A  158A  2158  160A  118A  	fcall	___flmul
  4972     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  4973     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  4974     14AA  082B               	movf	?___flmul+3,w
  4975     14AB  00C5               	movwf	?_fround+3
  4976     14AC  082A               	movf	?___flmul+2,w
  4977     14AD  00C4               	movwf	?_fround+2
  4978     14AE  0829               	movf	?___flmul+1,w
  4979     14AF  00C3               	movwf	?_fround+1
  4980     14B0  0828               	movf	?___flmul,w
  4981     14B1  00C2               	movwf	?_fround
  4982     14B2  2DA7               	goto	l252
  4983     14B3                     l2850:
  4984     14B3  300B               	movlw	11
  4985     14B4  0255               	subwf	fround@prec,w
  4986     14B5  1C03               	skipc
  4987     14B6  2CB8               	goto	u4181
  4988     14B7  2CB9               	goto	u4180
  4989     14B8                     u4181:
  4990     14B8  2D64               	goto	l2856
  4991     14B9                     u4180:
  4992     14B9                     l2852:
  4993                           
  4994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4995     14B9  303F               	movlw	63
  4996     14BA  00AB               	movwf	___flmul@b+3
  4997     14BB  3000               	movlw	0
  4998     14BC  00AA               	movwf	___flmul@b+2
  4999     14BD  3000               	movlw	0
  5000     14BE  00A9               	movwf	___flmul@b+1
  5001     14BF  3000               	movlw	0
  5002     14C0  00A8               	movwf	___flmul@b
  5003     14C1  300A               	movlw	10
  5004     14C2  00F8               	movwf	___lwdiv@divisor
  5005     14C3  3000               	movlw	0
  5006     14C4  00F9               	movwf	___lwdiv@divisor+1
  5007     14C5  0855               	movf	fround@prec,w
  5008     14C6  00C6               	movwf	??_fround
  5009     14C7  01C7               	clrf	??_fround+1
  5010     14C8  0846               	movf	??_fround,w
  5011     14C9  00FA               	movwf	___lwdiv@dividend
  5012     14CA  0847               	movf	??_fround+1,w
  5013     14CB  00FB               	movwf	___lwdiv@dividend+1
  5014     14CC  160A  158A  2368  160A  118A  	fcall	___lwdiv
  5015     14D1  0878               	movf	?___lwdiv,w
  5016     14D2  1283               	bcf	3,5	;RP0=0, select bank0
  5017     14D3  1303               	bcf	3,6	;RP1=0, select bank0
  5018     14D4  00C8               	movwf	??_fround+2
  5019     14D5  3001               	movlw	1
  5020     14D6                     u4195:
  5021     14D6  1003               	clrc
  5022     14D7  0DC8               	rlf	??_fround+2,f
  5023     14D8  3EFF               	addlw	-1
  5024     14D9  1D03               	skipz
  5025     14DA  2CD6               	goto	u4195
  5026     14DB  1003               	clrc
  5027     14DC  0D48               	rlf	??_fround+2,w
  5028     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5029     14DE  0084               	movwf	4
  5030     14DF  120A  158A  200A  160A  118A  	fcall	stringdir
  5031     14E4  00C9               	movwf	??_fround+3
  5032     14E5  120A  158A  200A  160A  118A  	fcall	stringdir
  5033     14EA  00CA               	movwf	??_fround+4
  5034     14EB  120A  158A  200A  160A  118A  	fcall	stringdir
  5035     14F0  00CB               	movwf	??_fround+5
  5036     14F1  120A  158A  200A  160A  118A  	fcall	stringdir
  5037     14F6  00CC               	movwf	??_fround+6
  5038     14F7  084C               	movf	??_fround+6,w
  5039     14F8  00AF               	movwf	___flmul@a+3
  5040     14F9  084B               	movf	??_fround+5,w
  5041     14FA  00AE               	movwf	___flmul@a+2
  5042     14FB  084A               	movf	??_fround+4,w
  5043     14FC  00AD               	movwf	___flmul@a+1
  5044     14FD  0849               	movf	??_fround+3,w
  5045     14FE  00AC               	movwf	___flmul@a
  5046     14FF  120A  158A  2158  160A  118A  	fcall	___flmul
  5047     1504  1283               	bcf	3,5	;RP0=0, select bank0
  5048     1505  1303               	bcf	3,6	;RP1=0, select bank0
  5049     1506  082B               	movf	?___flmul+3,w
  5050     1507  00D4               	movwf	_fround$1133+3
  5051     1508  082A               	movf	?___flmul+2,w
  5052     1509  00D3               	movwf	_fround$1133+2
  5053     150A  0829               	movf	?___flmul+1,w
  5054     150B  00D2               	movwf	_fround$1133+1
  5055     150C  0828               	movf	?___flmul,w
  5056     150D  00D1               	movwf	_fround$1133
  5057                           
  5058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5059     150E  300A               	movlw	10
  5060     150F  00F2               	movwf	___lwmod@divisor
  5061     1510  3000               	movlw	0
  5062     1511  00F3               	movwf	___lwmod@divisor+1
  5063     1512  0855               	movf	fround@prec,w
  5064     1513  00C6               	movwf	??_fround
  5065     1514  01C7               	clrf	??_fround+1
  5066     1515  0846               	movf	??_fround,w
  5067     1516  00F4               	movwf	___lwmod@dividend
  5068     1517  0847               	movf	??_fround+1,w
  5069     1518  00F5               	movwf	___lwmod@dividend+1
  5070     1519  160A  158A  22EC  160A  118A  	fcall	___lwmod
  5071     151E  0872               	movf	?___lwmod,w
  5072     151F  1283               	bcf	3,5	;RP0=0, select bank0
  5073     1520  1303               	bcf	3,6	;RP1=0, select bank0
  5074     1521  00C8               	movwf	??_fround+2
  5075     1522  3001               	movlw	1
  5076     1523                     u4205:
  5077     1523  1003               	clrc
  5078     1524  0DC8               	rlf	??_fround+2,f
  5079     1525  3EFF               	addlw	-1
  5080     1526  1D03               	skipz
  5081     1527  2D23               	goto	u4205
  5082     1528  1003               	clrc
  5083     1529  0D48               	rlf	??_fround+2,w
  5084     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5085     152B  0084               	movwf	4
  5086     152C  120A  158A  200A  160A  118A  	fcall	stringdir
  5087     1531  00C9               	movwf	??_fround+3
  5088     1532  120A  158A  200A  160A  118A  	fcall	stringdir
  5089     1537  00CA               	movwf	??_fround+4
  5090     1538  120A  158A  200A  160A  118A  	fcall	stringdir
  5091     153D  00CB               	movwf	??_fround+5
  5092     153E  120A  158A  200A  160A  118A  	fcall	stringdir
  5093     1543  00CC               	movwf	??_fround+6
  5094     1544  084C               	movf	??_fround+6,w
  5095     1545  00AB               	movwf	___flmul@b+3
  5096     1546  084B               	movf	??_fround+5,w
  5097     1547  00AA               	movwf	___flmul@b+2
  5098     1548  084A               	movf	??_fround+4,w
  5099     1549  00A9               	movwf	___flmul@b+1
  5100     154A  0849               	movf	??_fround+3,w
  5101     154B  00A8               	movwf	___flmul@b
  5102     154C  0854               	movf	_fround$1133+3,w
  5103     154D  00AF               	movwf	___flmul@a+3
  5104     154E  0853               	movf	_fround$1133+2,w
  5105     154F  00AE               	movwf	___flmul@a+2
  5106     1550  0852               	movf	_fround$1133+1,w
  5107     1551  00AD               	movwf	___flmul@a+1
  5108     1552  0851               	movf	_fround$1133,w
  5109     1553  00AC               	movwf	___flmul@a
  5110     1554  120A  158A  2158  160A  118A  	fcall	___flmul
  5111     1559  1283               	bcf	3,5	;RP0=0, select bank0
  5112     155A  1303               	bcf	3,6	;RP1=0, select bank0
  5113     155B  082B               	movf	?___flmul+3,w
  5114     155C  00C5               	movwf	?_fround+3
  5115     155D  082A               	movf	?___flmul+2,w
  5116     155E  00C4               	movwf	?_fround+2
  5117     155F  0829               	movf	?___flmul+1,w
  5118     1560  00C3               	movwf	?_fround+1
  5119     1561  0828               	movf	?___flmul,w
  5120     1562  00C2               	movwf	?_fround
  5121     1563  2DA7               	goto	l252
  5122     1564                     l2856:
  5123                           
  5124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5125     1564  303F               	movlw	63
  5126     1565  00AB               	movwf	___flmul@b+3
  5127     1566  3000               	movlw	0
  5128     1567  00AA               	movwf	___flmul@b+2
  5129     1568  3000               	movlw	0
  5130     1569  00A9               	movwf	___flmul@b+1
  5131     156A  3000               	movlw	0
  5132     156B  00A8               	movwf	___flmul@b
  5133     156C  0855               	movf	fround@prec,w
  5134     156D  00C6               	movwf	??_fround
  5135     156E  3001               	movlw	1
  5136     156F                     u4215:
  5137     156F  1003               	clrc
  5138     1570  0DC6               	rlf	??_fround,f
  5139     1571  3EFF               	addlw	-1
  5140     1572  1D03               	skipz
  5141     1573  2D6F               	goto	u4215
  5142     1574  1003               	clrc
  5143     1575  0D46               	rlf	??_fround,w
  5144     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5145     1577  0084               	movwf	4
  5146     1578  120A  158A  200A  160A  118A  	fcall	stringdir
  5147     157D  00C7               	movwf	??_fround+1
  5148     157E  120A  158A  200A  160A  118A  	fcall	stringdir
  5149     1583  00C8               	movwf	??_fround+2
  5150     1584  120A  158A  200A  160A  118A  	fcall	stringdir
  5151     1589  00C9               	movwf	??_fround+3
  5152     158A  120A  158A  200A  160A  118A  	fcall	stringdir
  5153     158F  00CA               	movwf	??_fround+4
  5154     1590  084A               	movf	??_fround+4,w
  5155     1591  00AF               	movwf	___flmul@a+3
  5156     1592  0849               	movf	??_fround+3,w
  5157     1593  00AE               	movwf	___flmul@a+2
  5158     1594  0848               	movf	??_fround+2,w
  5159     1595  00AD               	movwf	___flmul@a+1
  5160     1596  0847               	movf	??_fround+1,w
  5161     1597  00AC               	movwf	___flmul@a
  5162     1598  120A  158A  2158  160A  118A  	fcall	___flmul
  5163     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5164     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5165     159F  082B               	movf	?___flmul+3,w
  5166     15A0  00C5               	movwf	?_fround+3
  5167     15A1  082A               	movf	?___flmul+2,w
  5168     15A2  00C4               	movwf	?_fround+2
  5169     15A3  0829               	movf	?___flmul+1,w
  5170     15A4  00C3               	movwf	?_fround+1
  5171     15A5  0828               	movf	?___flmul,w
  5172     15A6  00C2               	movwf	?_fround
  5173     15A7                     l252:
  5174     15A7  0008               	return
  5175     15A8                     __end_of_fround:
  5176                           
  5177                           	psect	text7
  5178     1AEC                     __ptext7:	
  5179 ;; *************** function ___lwmod *****************
  5180 ;; Defined at:
  5181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  divisor         2    2[COMMON] unsigned int 
  5184 ;;  dividend        2    4[COMMON] unsigned int 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  counter         1    7[COMMON] unsigned char 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  2    2[COMMON] unsigned int 
  5189 ;; Registers used:
  5190 ;;		wreg, status,2, status,0
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5196 ;;      Params:         4       0       0       0       0
  5197 ;;      Locals:         1       0       0       0       0
  5198 ;;      Temps:          1       0       0       0       0
  5199 ;;      Totals:         6       0       0       0       0
  5200 ;;Total ram usage:        6 bytes
  5201 ;; Hardware stack levels used: 1
  5202 ;; Hardware stack levels required when called: 1
  5203 ;; This function calls:
  5204 ;;		Nothing
  5205 ;; This function is called by:
  5206 ;;		_fround
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210     1AEC                     ___lwmod:	
  5211                           ;psect for function ___lwmod
  5212                           
  5213     1AEC                     l2454:	
  5214                           ;incstack = 0
  5215                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5216                           
  5217     1AEC  0872               	movf	___lwmod@divisor,w
  5218     1AED  0473               	iorwf	___lwmod@divisor+1,w
  5219     1AEE  1903               	btfsc	3,2
  5220     1AEF  2AF1               	goto	u3251
  5221     1AF0  2AF2               	goto	u3250
  5222     1AF1                     u3251:
  5223     1AF1  2B21               	goto	l2472
  5224     1AF2                     u3250:
  5225     1AF2                     l2456:
  5226     1AF2  01F7               	clrf	___lwmod@counter
  5227     1AF3  0AF7               	incf	___lwmod@counter,f
  5228     1AF4  2B00               	goto	l2462
  5229     1AF5                     l2458:
  5230     1AF5  3001               	movlw	1
  5231     1AF6                     u3265:
  5232     1AF6  1003               	clrc
  5233     1AF7  0DF2               	rlf	___lwmod@divisor,f
  5234     1AF8  0DF3               	rlf	___lwmod@divisor+1,f
  5235     1AF9  3EFF               	addlw	-1
  5236     1AFA  1D03               	skipz
  5237     1AFB  2AF6               	goto	u3265
  5238     1AFC                     l2460:
  5239     1AFC  3001               	movlw	1
  5240     1AFD  00F6               	movwf	??___lwmod
  5241     1AFE  0876               	movf	??___lwmod,w
  5242     1AFF  07F7               	addwf	___lwmod@counter,f
  5243     1B00                     l2462:
  5244     1B00  1FF3               	btfss	___lwmod@divisor+1,7
  5245     1B01  2B03               	goto	u3271
  5246     1B02  2B04               	goto	u3270
  5247     1B03                     u3271:
  5248     1B03  2AF5               	goto	l2458
  5249     1B04                     u3270:
  5250     1B04                     l2464:
  5251     1B04  0873               	movf	___lwmod@divisor+1,w
  5252     1B05  0275               	subwf	___lwmod@dividend+1,w
  5253     1B06  1D03               	skipz
  5254     1B07  2B0A               	goto	u3285
  5255     1B08  0872               	movf	___lwmod@divisor,w
  5256     1B09  0274               	subwf	___lwmod@dividend,w
  5257     1B0A                     u3285:
  5258     1B0A  1C03               	skipc
  5259     1B0B  2B0D               	goto	u3281
  5260     1B0C  2B0E               	goto	u3280
  5261     1B0D                     u3281:
  5262     1B0D  2B14               	goto	l2468
  5263     1B0E                     u3280:
  5264     1B0E                     l2466:
  5265     1B0E  0872               	movf	___lwmod@divisor,w
  5266     1B0F  02F4               	subwf	___lwmod@dividend,f
  5267     1B10  0873               	movf	___lwmod@divisor+1,w
  5268     1B11  1C03               	skipc
  5269     1B12  03F5               	decf	___lwmod@dividend+1,f
  5270     1B13  02F5               	subwf	___lwmod@dividend+1,f
  5271     1B14                     l2468:
  5272     1B14  3001               	movlw	1
  5273     1B15                     u3295:
  5274     1B15  1003               	clrc
  5275     1B16  0CF3               	rrf	___lwmod@divisor+1,f
  5276     1B17  0CF2               	rrf	___lwmod@divisor,f
  5277     1B18  3EFF               	addlw	-1
  5278     1B19  1D03               	skipz
  5279     1B1A  2B15               	goto	u3295
  5280     1B1B                     l2470:
  5281     1B1B  3001               	movlw	1
  5282     1B1C  02F7               	subwf	___lwmod@counter,f
  5283     1B1D  1D03               	btfss	3,2
  5284     1B1E  2B20               	goto	u3301
  5285     1B1F  2B21               	goto	u3300
  5286     1B20                     u3301:
  5287     1B20  2B04               	goto	l2464
  5288     1B21                     u3300:
  5289     1B21                     l2472:
  5290     1B21  0875               	movf	___lwmod@dividend+1,w
  5291     1B22  00F3               	movwf	?___lwmod+1
  5292     1B23  0874               	movf	___lwmod@dividend,w
  5293     1B24  00F2               	movwf	?___lwmod
  5294     1B25                     l645:
  5295     1B25  0008               	return
  5296     1B26                     __end_of___lwmod:
  5297                           
  5298                           	psect	text8
  5299     1B68                     __ptext8:	
  5300 ;; *************** function ___lwdiv *****************
  5301 ;; Defined at:
  5302 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  divisor         2    8[COMMON] unsigned int 
  5305 ;;  dividend        2   10[COMMON] unsigned int 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  quotient        2    1[BANK0 ] unsigned int 
  5308 ;;  counter         1    3[BANK0 ] unsigned char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  2    8[COMMON] unsigned int 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5318 ;;      Params:         4       0       0       0       0
  5319 ;;      Locals:         0       3       0       0       0
  5320 ;;      Temps:          0       1       0       0       0
  5321 ;;      Totals:         4       4       0       0       0
  5322 ;;Total ram usage:        8 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; Hardware stack levels required when called: 1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_fround
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332     1B68                     ___lwdiv:	
  5333                           ;psect for function ___lwdiv
  5334                           
  5335     1B68                     l2428:	
  5336                           ;incstack = 0
  5337                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5338                           
  5339     1B68  1283               	bcf	3,5	;RP0=0, select bank0
  5340     1B69  1303               	bcf	3,6	;RP1=0, select bank0
  5341     1B6A  01A1               	clrf	___lwdiv@quotient
  5342     1B6B  01A2               	clrf	___lwdiv@quotient+1
  5343     1B6C                     l2430:
  5344     1B6C  0878               	movf	___lwdiv@divisor,w
  5345     1B6D  0479               	iorwf	___lwdiv@divisor+1,w
  5346     1B6E  1903               	btfsc	3,2
  5347     1B6F  2B71               	goto	u3181
  5348     1B70  2B72               	goto	u3180
  5349     1B71                     u3181:
  5350     1B71  2BA9               	goto	l2450
  5351     1B72                     u3180:
  5352     1B72                     l2432:
  5353     1B72  01A3               	clrf	___lwdiv@counter
  5354     1B73  0AA3               	incf	___lwdiv@counter,f
  5355     1B74  2B80               	goto	l2438
  5356     1B75                     l2434:
  5357     1B75  3001               	movlw	1
  5358     1B76                     u3195:
  5359     1B76  1003               	clrc
  5360     1B77  0DF8               	rlf	___lwdiv@divisor,f
  5361     1B78  0DF9               	rlf	___lwdiv@divisor+1,f
  5362     1B79  3EFF               	addlw	-1
  5363     1B7A  1D03               	skipz
  5364     1B7B  2B76               	goto	u3195
  5365     1B7C                     l2436:
  5366     1B7C  3001               	movlw	1
  5367     1B7D  00A0               	movwf	??___lwdiv
  5368     1B7E  0820               	movf	??___lwdiv,w
  5369     1B7F  07A3               	addwf	___lwdiv@counter,f
  5370     1B80                     l2438:
  5371     1B80  1FF9               	btfss	___lwdiv@divisor+1,7
  5372     1B81  2B83               	goto	u3201
  5373     1B82  2B84               	goto	u3200
  5374     1B83                     u3201:
  5375     1B83  2B75               	goto	l2434
  5376     1B84                     u3200:
  5377     1B84                     l2440:
  5378     1B84  3001               	movlw	1
  5379     1B85                     u3215:
  5380     1B85  1003               	clrc
  5381     1B86  0DA1               	rlf	___lwdiv@quotient,f
  5382     1B87  0DA2               	rlf	___lwdiv@quotient+1,f
  5383     1B88  3EFF               	addlw	-1
  5384     1B89  1D03               	skipz
  5385     1B8A  2B85               	goto	u3215
  5386     1B8B  0879               	movf	___lwdiv@divisor+1,w
  5387     1B8C  027B               	subwf	___lwdiv@dividend+1,w
  5388     1B8D  1D03               	skipz
  5389     1B8E  2B91               	goto	u3225
  5390     1B8F  0878               	movf	___lwdiv@divisor,w
  5391     1B90  027A               	subwf	___lwdiv@dividend,w
  5392     1B91                     u3225:
  5393     1B91  1C03               	skipc
  5394     1B92  2B94               	goto	u3221
  5395     1B93  2B95               	goto	u3220
  5396     1B94                     u3221:
  5397     1B94  2B9C               	goto	l2446
  5398     1B95                     u3220:
  5399     1B95                     l2442:
  5400     1B95  0878               	movf	___lwdiv@divisor,w
  5401     1B96  02FA               	subwf	___lwdiv@dividend,f
  5402     1B97  0879               	movf	___lwdiv@divisor+1,w
  5403     1B98  1C03               	skipc
  5404     1B99  03FB               	decf	___lwdiv@dividend+1,f
  5405     1B9A  02FB               	subwf	___lwdiv@dividend+1,f
  5406     1B9B                     l2444:
  5407     1B9B  1421               	bsf	___lwdiv@quotient,0
  5408     1B9C                     l2446:
  5409     1B9C  3001               	movlw	1
  5410     1B9D                     u3235:
  5411     1B9D  1003               	clrc
  5412     1B9E  0CF9               	rrf	___lwdiv@divisor+1,f
  5413     1B9F  0CF8               	rrf	___lwdiv@divisor,f
  5414     1BA0  3EFF               	addlw	-1
  5415     1BA1  1D03               	skipz
  5416     1BA2  2B9D               	goto	u3235
  5417     1BA3                     l2448:
  5418     1BA3  3001               	movlw	1
  5419     1BA4  02A3               	subwf	___lwdiv@counter,f
  5420     1BA5  1D03               	btfss	3,2
  5421     1BA6  2BA8               	goto	u3241
  5422     1BA7  2BA9               	goto	u3240
  5423     1BA8                     u3241:
  5424     1BA8  2B84               	goto	l2440
  5425     1BA9                     u3240:
  5426     1BA9                     l2450:
  5427     1BA9  0822               	movf	___lwdiv@quotient+1,w
  5428     1BAA  00F9               	movwf	?___lwdiv+1
  5429     1BAB  0821               	movf	___lwdiv@quotient,w
  5430     1BAC  00F8               	movwf	?___lwdiv
  5431     1BAD                     l635:
  5432     1BAD  0008               	return
  5433     1BAE                     __end_of___lwdiv:
  5434                           
  5435                           	psect	text9
  5436     1F49                     __ptext9:	
  5437 ;; *************** function __tdiv_to_l_ *****************
  5438 ;; Defined at:
  5439 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  f1              4    2[COMMON] float 
  5442 ;;  f2              4    6[COMMON] float 
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;  quot            4    3[BANK0 ] unsigned long 
  5445 ;;  exp1            1    8[BANK0 ] unsigned char 
  5446 ;;  cntr            1    7[BANK0 ] unsigned char 
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  4    2[COMMON] unsigned long 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5456 ;;      Params:         8       0       0       0       0
  5457 ;;      Locals:         0       6       0       0       0
  5458 ;;      Temps:          0       3       0       0       0
  5459 ;;      Totals:         8       9       0       0       0
  5460 ;;Total ram usage:       17 bytes
  5461 ;; Hardware stack levels used: 1
  5462 ;; Hardware stack levels required when called: 1
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_sprintf
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470     1F49                     __tdiv_to_l_:	
  5471                           ;psect for function __tdiv_to_l_
  5472                           
  5473     1F49                     l2912:	
  5474                           ;incstack = 0
  5475                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5476                           
  5477     1F49  0872               	movf	__tdiv_to_l_@f1,w
  5478     1F4A  1283               	bcf	3,5	;RP0=0, select bank0
  5479     1F4B  1303               	bcf	3,6	;RP1=0, select bank0
  5480     1F4C  00A0               	movwf	??__tdiv_to_l_
  5481     1F4D  0873               	movf	__tdiv_to_l_@f1+1,w
  5482     1F4E  00A1               	movwf	??__tdiv_to_l_+1
  5483     1F4F  0874               	movf	__tdiv_to_l_@f1+2,w
  5484     1F50  00A2               	movwf	??__tdiv_to_l_+2
  5485     1F51  1003               	clrc
  5486     1F52  0D21               	rlf	??__tdiv_to_l_+1,w
  5487     1F53  0D22               	rlf	??__tdiv_to_l_+2,w
  5488     1F54  00A8               	movwf	__tdiv_to_l_@exp1
  5489     1F55  0828               	movf	__tdiv_to_l_@exp1,w
  5490     1F56  1D03               	btfss	3,2
  5491     1F57  2F59               	goto	u4411
  5492     1F58  2F5A               	goto	u4410
  5493     1F59                     u4411:
  5494     1F59  2F63               	goto	l2918
  5495     1F5A                     u4410:
  5496     1F5A                     l2914:
  5497     1F5A  3000               	movlw	0
  5498     1F5B  00F5               	movwf	?__tdiv_to_l_+3
  5499     1F5C  3000               	movlw	0
  5500     1F5D  00F4               	movwf	?__tdiv_to_l_+2
  5501     1F5E  3000               	movlw	0
  5502     1F5F  00F3               	movwf	?__tdiv_to_l_+1
  5503     1F60  3000               	movlw	0
  5504     1F61  00F2               	movwf	?__tdiv_to_l_
  5505     1F62  2FFF               	goto	l546
  5506     1F63                     l2918:
  5507     1F63  0876               	movf	__tdiv_to_l_@f2,w
  5508     1F64  00A0               	movwf	??__tdiv_to_l_
  5509     1F65  0877               	movf	__tdiv_to_l_@f2+1,w
  5510     1F66  00A1               	movwf	??__tdiv_to_l_+1
  5511     1F67  0878               	movf	__tdiv_to_l_@f2+2,w
  5512     1F68  00A2               	movwf	??__tdiv_to_l_+2
  5513     1F69  1003               	clrc
  5514     1F6A  0D21               	rlf	??__tdiv_to_l_+1,w
  5515     1F6B  0D22               	rlf	??__tdiv_to_l_+2,w
  5516     1F6C  00A7               	movwf	__tdiv_to_l_@cntr
  5517     1F6D  0827               	movf	__tdiv_to_l_@cntr,w
  5518     1F6E  1D03               	btfss	3,2
  5519     1F6F  2F71               	goto	u4421
  5520     1F70  2F72               	goto	u4420
  5521     1F71                     u4421:
  5522     1F71  2F73               	goto	l547
  5523     1F72                     u4420:
  5524     1F72  2F5A               	goto	l2914
  5525     1F73                     l547:
  5526     1F73  17F3               	bsf	__tdiv_to_l_@f1+1,7
  5527     1F74                     l2924:
  5528     1F74  30FF               	movlw	255
  5529     1F75  05F2               	andwf	__tdiv_to_l_@f1,f
  5530     1F76  30FF               	movlw	255
  5531     1F77  05F3               	andwf	__tdiv_to_l_@f1+1,f
  5532     1F78  3000               	movlw	0
  5533     1F79  05F4               	andwf	__tdiv_to_l_@f1+2,f
  5534     1F7A                     l2926:
  5535     1F7A  17F7               	bsf	__tdiv_to_l_@f2+1,7
  5536     1F7B  30FF               	movlw	255
  5537     1F7C  05F6               	andwf	__tdiv_to_l_@f2,f
  5538     1F7D  30FF               	movlw	255
  5539     1F7E  05F7               	andwf	__tdiv_to_l_@f2+1,f
  5540     1F7F  3000               	movlw	0
  5541     1F80  05F8               	andwf	__tdiv_to_l_@f2+2,f
  5542     1F81  3000               	movlw	0
  5543     1F82  00A6               	movwf	__tdiv_to_l_@quot+3
  5544     1F83  3000               	movlw	0
  5545     1F84  00A5               	movwf	__tdiv_to_l_@quot+2
  5546     1F85  3000               	movlw	0
  5547     1F86  00A4               	movwf	__tdiv_to_l_@quot+1
  5548     1F87  3000               	movlw	0
  5549     1F88  00A3               	movwf	__tdiv_to_l_@quot
  5550     1F89                     l2928:
  5551     1F89  307F               	movlw	127
  5552     1F8A  02A8               	subwf	__tdiv_to_l_@exp1,f
  5553     1F8B                     l2930:
  5554     1F8B  3098               	movlw	152
  5555     1F8C  0727               	addwf	__tdiv_to_l_@cntr,w
  5556     1F8D  00A0               	movwf	??__tdiv_to_l_
  5557     1F8E  0820               	movf	??__tdiv_to_l_,w
  5558     1F8F  02A8               	subwf	__tdiv_to_l_@exp1,f
  5559     1F90  3018               	movlw	24
  5560     1F91  00A7               	movwf	__tdiv_to_l_@cntr
  5561     1F92                     l2932:
  5562     1F92  3001               	movlw	1
  5563     1F93  00A0               	movwf	??__tdiv_to_l_
  5564     1F94                     u4435:
  5565     1F94  1003               	clrc
  5566     1F95  0DA3               	rlf	__tdiv_to_l_@quot,f
  5567     1F96  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5568     1F97  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5569     1F98  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5570     1F99  0BA0               	decfsz	??__tdiv_to_l_,f
  5571     1F9A  2F94               	goto	u4435
  5572     1F9B                     l2934:
  5573     1F9B  0878               	movf	__tdiv_to_l_@f2+2,w
  5574     1F9C  0274               	subwf	__tdiv_to_l_@f1+2,w
  5575     1F9D  1D03               	skipz
  5576     1F9E  2FA5               	goto	u4445
  5577     1F9F  0877               	movf	__tdiv_to_l_@f2+1,w
  5578     1FA0  0273               	subwf	__tdiv_to_l_@f1+1,w
  5579     1FA1  1D03               	skipz
  5580     1FA2  2FA5               	goto	u4445
  5581     1FA3  0876               	movf	__tdiv_to_l_@f2,w
  5582     1FA4  0272               	subwf	__tdiv_to_l_@f1,w
  5583     1FA5                     u4445:
  5584     1FA5  1C03               	skipc
  5585     1FA6  2FA8               	goto	u4441
  5586     1FA7  2FA9               	goto	u4440
  5587     1FA8                     u4441:
  5588     1FA8  2FB4               	goto	l2940
  5589     1FA9                     u4440:
  5590     1FA9                     l2936:
  5591     1FA9  0876               	movf	__tdiv_to_l_@f2,w
  5592     1FAA  02F2               	subwf	__tdiv_to_l_@f1,f
  5593     1FAB  0877               	movf	__tdiv_to_l_@f2+1,w
  5594     1FAC  1C03               	skipc
  5595     1FAD  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5596     1FAE  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5597     1FAF  0878               	movf	__tdiv_to_l_@f2+2,w
  5598     1FB0  1C03               	skipc
  5599     1FB1  0A78               	incf	__tdiv_to_l_@f2+2,w
  5600     1FB2  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5601     1FB3                     l2938:
  5602     1FB3  1423               	bsf	__tdiv_to_l_@quot,0
  5603     1FB4                     l2940:
  5604     1FB4  3001               	movlw	1
  5605     1FB5                     u4455:
  5606     1FB5  1003               	clrc
  5607     1FB6  0DF2               	rlf	__tdiv_to_l_@f1,f
  5608     1FB7  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5609     1FB8  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5610     1FB9  3EFF               	addlw	-1
  5611     1FBA  1D03               	skipz
  5612     1FBB  2FB5               	goto	u4455
  5613     1FBC                     l2942:
  5614     1FBC  3001               	movlw	1
  5615     1FBD  02A7               	subwf	__tdiv_to_l_@cntr,f
  5616     1FBE  1D03               	btfss	3,2
  5617     1FBF  2FC1               	goto	u4461
  5618     1FC0  2FC2               	goto	u4460
  5619     1FC1                     u4461:
  5620     1FC1  2F92               	goto	l2932
  5621     1FC2                     u4460:
  5622     1FC2                     l550:
  5623     1FC2  1FA8               	btfss	__tdiv_to_l_@exp1,7
  5624     1FC3  2FC5               	goto	u4471
  5625     1FC4  2FC6               	goto	u4470
  5626     1FC5                     u4471:
  5627     1FC5  2FE0               	goto	l2952
  5628     1FC6                     u4470:
  5629     1FC6                     l2944:
  5630     1FC6  0828               	movf	__tdiv_to_l_@exp1,w
  5631     1FC7  3A80               	xorlw	128
  5632     1FC8  3E97               	addlw	151
  5633     1FC9  1803               	skipnc
  5634     1FCA  2FCC               	goto	u4481
  5635     1FCB  2FCD               	goto	u4480
  5636     1FCC                     u4481:
  5637     1FCC  2FCE               	goto	l2950
  5638     1FCD                     u4480:
  5639     1FCD  2F5A               	goto	l2914
  5640     1FCE                     l2950:
  5641     1FCE  3001               	movlw	1
  5642     1FCF                     u4495:
  5643     1FCF  1003               	clrc
  5644     1FD0  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  5645     1FD1  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  5646     1FD2  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  5647     1FD3  0CA3               	rrf	__tdiv_to_l_@quot,f
  5648     1FD4  3EFF               	addlw	-1
  5649     1FD5  1D03               	skipz
  5650     1FD6  2FCF               	goto	u4495
  5651     1FD7  3001               	movlw	1
  5652     1FD8  00A0               	movwf	??__tdiv_to_l_
  5653     1FD9  0820               	movf	??__tdiv_to_l_,w
  5654     1FDA  07A8               	addwf	__tdiv_to_l_@exp1,f
  5655     1FDB  1D03               	btfss	3,2
  5656     1FDC  2FDE               	goto	u4501
  5657     1FDD  2FDF               	goto	u4500
  5658     1FDE                     u4501:
  5659     1FDE  2FCE               	goto	l2950
  5660     1FDF                     u4500:
  5661     1FDF  2FF7               	goto	l2960
  5662     1FE0                     l2952:
  5663     1FE0  3018               	movlw	24
  5664     1FE1  0228               	subwf	__tdiv_to_l_@exp1,w
  5665     1FE2  1C03               	skipc
  5666     1FE3  2FE5               	goto	u4511
  5667     1FE4  2FE6               	goto	u4510
  5668     1FE5                     u4511:
  5669     1FE5  2FF2               	goto	l557
  5670     1FE6                     u4510:
  5671     1FE6  2F5A               	goto	l2914
  5672     1FE7                     l2958:
  5673     1FE7  3001               	movlw	1
  5674     1FE8  00A0               	movwf	??__tdiv_to_l_
  5675     1FE9                     u4525:
  5676     1FE9  1003               	clrc
  5677     1FEA  0DA3               	rlf	__tdiv_to_l_@quot,f
  5678     1FEB  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5679     1FEC  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5680     1FED  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5681     1FEE  0BA0               	decfsz	??__tdiv_to_l_,f
  5682     1FEF  2FE9               	goto	u4525
  5683     1FF0  3001               	movlw	1
  5684     1FF1  02A8               	subwf	__tdiv_to_l_@exp1,f
  5685     1FF2                     l557:
  5686     1FF2  0828               	movf	__tdiv_to_l_@exp1,w
  5687     1FF3  1D03               	btfss	3,2
  5688     1FF4  2FF6               	goto	u4531
  5689     1FF5  2FF7               	goto	u4530
  5690     1FF6                     u4531:
  5691     1FF6  2FE7               	goto	l2958
  5692     1FF7                     u4530:
  5693     1FF7                     l2960:
  5694     1FF7  0826               	movf	__tdiv_to_l_@quot+3,w
  5695     1FF8  00F5               	movwf	?__tdiv_to_l_+3
  5696     1FF9  0825               	movf	__tdiv_to_l_@quot+2,w
  5697     1FFA  00F4               	movwf	?__tdiv_to_l_+2
  5698     1FFB  0824               	movf	__tdiv_to_l_@quot+1,w
  5699     1FFC  00F3               	movwf	?__tdiv_to_l_+1
  5700     1FFD  0823               	movf	__tdiv_to_l_@quot,w
  5701     1FFE  00F2               	movwf	?__tdiv_to_l_
  5702     1FFF                     l546:
  5703     1FFF  0008               	return
  5704     2000                     __end_of__tdiv_to_l_:
  5705                           
  5706                           	psect	text10
  5707     1058                     __ptext10:	
  5708 ;; *************** function __div_to_l_ *****************
  5709 ;; Defined at:
  5710 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;  f1              4    2[COMMON] unsigned long 
  5713 ;;  f2              4    6[COMMON] unsigned long 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  quot            4    0[BANK0 ] unsigned long 
  5716 ;;  exp1            1    5[BANK0 ] unsigned char 
  5717 ;;  cntr            1    4[BANK0 ] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  4    2[COMMON] unsigned long 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5727 ;;      Params:         8       0       0       0       0
  5728 ;;      Locals:         0       6       0       0       0
  5729 ;;      Temps:          1       0       0       0       0
  5730 ;;      Totals:         9       6       0       0       0
  5731 ;;Total ram usage:       15 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; Hardware stack levels required when called: 1
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_sprintf
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741     1058                     __div_to_l_:	
  5742                           ;psect for function __div_to_l_
  5743                           
  5744     1058                     l2964:	
  5745                           ;incstack = 0
  5746                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5747                           
  5748     1058  1003               	clrc
  5749     1059  0D74               	rlf	__div_to_l_@f1+2,w
  5750     105A  0D75               	rlf	__div_to_l_@f1+3,w
  5751     105B  1283               	bcf	3,5	;RP0=0, select bank0
  5752     105C  1303               	bcf	3,6	;RP1=0, select bank0
  5753     105D  00A5               	movwf	__div_to_l_@exp1
  5754     105E  0825               	movf	__div_to_l_@exp1,w
  5755     105F  1D03               	btfss	3,2
  5756     1060  2862               	goto	u4541
  5757     1061  2863               	goto	u4540
  5758     1062                     u4541:
  5759     1062  286C               	goto	l2970
  5760     1063                     u4540:
  5761     1063                     l2966:
  5762     1063  3000               	movlw	0
  5763     1064  00F5               	movwf	?__div_to_l_+3
  5764     1065  3000               	movlw	0
  5765     1066  00F4               	movwf	?__div_to_l_+2
  5766     1067  3000               	movlw	0
  5767     1068  00F3               	movwf	?__div_to_l_+1
  5768     1069  3000               	movlw	0
  5769     106A  00F2               	movwf	?__div_to_l_
  5770     106B  290F               	goto	l499
  5771     106C                     l2970:
  5772     106C  1003               	clrc
  5773     106D  0D78               	rlf	__div_to_l_@f2+2,w
  5774     106E  0D79               	rlf	__div_to_l_@f2+3,w
  5775     106F  00A4               	movwf	__div_to_l_@cntr
  5776     1070  0824               	movf	__div_to_l_@cntr,w
  5777     1071  1D03               	btfss	3,2
  5778     1072  2874               	goto	u4551
  5779     1073  2875               	goto	u4550
  5780     1074                     u4551:
  5781     1074  2876               	goto	l500
  5782     1075                     u4550:
  5783     1075  2863               	goto	l2966
  5784     1076                     l500:
  5785     1076  17F4               	bsf	__div_to_l_@f1+2,7
  5786     1077                     l2976:
  5787     1077  30FF               	movlw	255
  5788     1078  05F2               	andwf	__div_to_l_@f1,f
  5789     1079  30FF               	movlw	255
  5790     107A  05F3               	andwf	__div_to_l_@f1+1,f
  5791     107B  30FF               	movlw	255
  5792     107C  05F4               	andwf	__div_to_l_@f1+2,f
  5793     107D  3000               	movlw	0
  5794     107E  05F5               	andwf	__div_to_l_@f1+3,f
  5795     107F                     l2978:
  5796     107F  17F8               	bsf	__div_to_l_@f2+2,7
  5797     1080  30FF               	movlw	255
  5798     1081  05F6               	andwf	__div_to_l_@f2,f
  5799     1082  30FF               	movlw	255
  5800     1083  05F7               	andwf	__div_to_l_@f2+1,f
  5801     1084  30FF               	movlw	255
  5802     1085  05F8               	andwf	__div_to_l_@f2+2,f
  5803     1086  3000               	movlw	0
  5804     1087  05F9               	andwf	__div_to_l_@f2+3,f
  5805     1088  3000               	movlw	0
  5806     1089  00A3               	movwf	__div_to_l_@quot+3
  5807     108A  3000               	movlw	0
  5808     108B  00A2               	movwf	__div_to_l_@quot+2
  5809     108C  3000               	movlw	0
  5810     108D  00A1               	movwf	__div_to_l_@quot+1
  5811     108E  3000               	movlw	0
  5812     108F  00A0               	movwf	__div_to_l_@quot
  5813     1090                     l2980:
  5814     1090  307F               	movlw	127
  5815     1091  02A5               	subwf	__div_to_l_@exp1,f
  5816     1092                     l2982:
  5817     1092  30A0               	movlw	160
  5818     1093  0724               	addwf	__div_to_l_@cntr,w
  5819     1094  00FA               	movwf	??__div_to_l_
  5820     1095  087A               	movf	??__div_to_l_,w
  5821     1096  02A5               	subwf	__div_to_l_@exp1,f
  5822     1097  3020               	movlw	32
  5823     1098  00A4               	movwf	__div_to_l_@cntr
  5824     1099                     l2984:
  5825     1099  3001               	movlw	1
  5826     109A  00FA               	movwf	??__div_to_l_
  5827     109B                     u4565:
  5828     109B  1003               	clrc
  5829     109C  0DA0               	rlf	__div_to_l_@quot,f
  5830     109D  0DA1               	rlf	__div_to_l_@quot+1,f
  5831     109E  0DA2               	rlf	__div_to_l_@quot+2,f
  5832     109F  0DA3               	rlf	__div_to_l_@quot+3,f
  5833     10A0  0BFA               	decfsz	??__div_to_l_,f
  5834     10A1  289B               	goto	u4565
  5835     10A2                     l2986:
  5836     10A2  0879               	movf	__div_to_l_@f2+3,w
  5837     10A3  0275               	subwf	__div_to_l_@f1+3,w
  5838     10A4  1D03               	skipz
  5839     10A5  28B0               	goto	u4575
  5840     10A6  0878               	movf	__div_to_l_@f2+2,w
  5841     10A7  0274               	subwf	__div_to_l_@f1+2,w
  5842     10A8  1D03               	skipz
  5843     10A9  28B0               	goto	u4575
  5844     10AA  0877               	movf	__div_to_l_@f2+1,w
  5845     10AB  0273               	subwf	__div_to_l_@f1+1,w
  5846     10AC  1D03               	skipz
  5847     10AD  28B0               	goto	u4575
  5848     10AE  0876               	movf	__div_to_l_@f2,w
  5849     10AF  0272               	subwf	__div_to_l_@f1,w
  5850     10B0                     u4575:
  5851     10B0  1C03               	skipc
  5852     10B1  28B3               	goto	u4571
  5853     10B2  28B4               	goto	u4570
  5854     10B3                     u4571:
  5855     10B3  28C3               	goto	l2992
  5856     10B4                     u4570:
  5857     10B4                     l2988:
  5858     10B4  0876               	movf	__div_to_l_@f2,w
  5859     10B5  02F2               	subwf	__div_to_l_@f1,f
  5860     10B6  0877               	movf	__div_to_l_@f2+1,w
  5861     10B7  1C03               	skipc
  5862     10B8  0F77               	incfsz	__div_to_l_@f2+1,w
  5863     10B9  02F3               	subwf	__div_to_l_@f1+1,f
  5864     10BA  0878               	movf	__div_to_l_@f2+2,w
  5865     10BB  1C03               	skipc
  5866     10BC  0F78               	incfsz	__div_to_l_@f2+2,w
  5867     10BD  02F4               	subwf	__div_to_l_@f1+2,f
  5868     10BE  0879               	movf	__div_to_l_@f2+3,w
  5869     10BF  1C03               	skipc
  5870     10C0  0F79               	incfsz	__div_to_l_@f2+3,w
  5871     10C1  02F5               	subwf	__div_to_l_@f1+3,f
  5872     10C2                     l2990:
  5873     10C2  1420               	bsf	__div_to_l_@quot,0
  5874     10C3                     l2992:
  5875     10C3  3001               	movlw	1
  5876     10C4  00FA               	movwf	??__div_to_l_
  5877     10C5                     u4585:
  5878     10C5  1003               	clrc
  5879     10C6  0DF2               	rlf	__div_to_l_@f1,f
  5880     10C7  0DF3               	rlf	__div_to_l_@f1+1,f
  5881     10C8  0DF4               	rlf	__div_to_l_@f1+2,f
  5882     10C9  0DF5               	rlf	__div_to_l_@f1+3,f
  5883     10CA  0BFA               	decfsz	??__div_to_l_,f
  5884     10CB  28C5               	goto	u4585
  5885     10CC                     l2994:
  5886     10CC  3001               	movlw	1
  5887     10CD  02A4               	subwf	__div_to_l_@cntr,f
  5888     10CE  1D03               	btfss	3,2
  5889     10CF  28D1               	goto	u4591
  5890     10D0  28D2               	goto	u4590
  5891     10D1                     u4591:
  5892     10D1  2899               	goto	l2984
  5893     10D2                     u4590:
  5894     10D2                     l503:
  5895     10D2  1FA5               	btfss	__div_to_l_@exp1,7
  5896     10D3  28D5               	goto	u4601
  5897     10D4  28D6               	goto	u4600
  5898     10D5                     u4601:
  5899     10D5  28F0               	goto	l3004
  5900     10D6                     u4600:
  5901     10D6                     l2996:
  5902     10D6  0825               	movf	__div_to_l_@exp1,w
  5903     10D7  3A80               	xorlw	128
  5904     10D8  3E9F               	addlw	159
  5905     10D9  1803               	skipnc
  5906     10DA  28DC               	goto	u4611
  5907     10DB  28DD               	goto	u4610
  5908     10DC                     u4611:
  5909     10DC  28DE               	goto	l3002
  5910     10DD                     u4610:
  5911     10DD  2863               	goto	l2966
  5912     10DE                     l3002:
  5913     10DE  3001               	movlw	1
  5914     10DF                     u4625:
  5915     10DF  1003               	clrc
  5916     10E0  0CA3               	rrf	__div_to_l_@quot+3,f
  5917     10E1  0CA2               	rrf	__div_to_l_@quot+2,f
  5918     10E2  0CA1               	rrf	__div_to_l_@quot+1,f
  5919     10E3  0CA0               	rrf	__div_to_l_@quot,f
  5920     10E4  3EFF               	addlw	-1
  5921     10E5  1D03               	skipz
  5922     10E6  28DF               	goto	u4625
  5923     10E7  3001               	movlw	1
  5924     10E8  00FA               	movwf	??__div_to_l_
  5925     10E9  087A               	movf	??__div_to_l_,w
  5926     10EA  07A5               	addwf	__div_to_l_@exp1,f
  5927     10EB  1D03               	btfss	3,2
  5928     10EC  28EE               	goto	u4631
  5929     10ED  28EF               	goto	u4630
  5930     10EE                     u4631:
  5931     10EE  28DE               	goto	l3002
  5932     10EF                     u4630:
  5933     10EF  2907               	goto	l3012
  5934     10F0                     l3004:
  5935     10F0  3020               	movlw	32
  5936     10F1  0225               	subwf	__div_to_l_@exp1,w
  5937     10F2  1C03               	skipc
  5938     10F3  28F5               	goto	u4641
  5939     10F4  28F6               	goto	u4640
  5940     10F5                     u4641:
  5941     10F5  2902               	goto	l510
  5942     10F6                     u4640:
  5943     10F6  2863               	goto	l2966
  5944     10F7                     l3010:
  5945     10F7  3001               	movlw	1
  5946     10F8  00FA               	movwf	??__div_to_l_
  5947     10F9                     u4655:
  5948     10F9  1003               	clrc
  5949     10FA  0DA0               	rlf	__div_to_l_@quot,f
  5950     10FB  0DA1               	rlf	__div_to_l_@quot+1,f
  5951     10FC  0DA2               	rlf	__div_to_l_@quot+2,f
  5952     10FD  0DA3               	rlf	__div_to_l_@quot+3,f
  5953     10FE  0BFA               	decfsz	??__div_to_l_,f
  5954     10FF  28F9               	goto	u4655
  5955     1100  3001               	movlw	1
  5956     1101  02A5               	subwf	__div_to_l_@exp1,f
  5957     1102                     l510:
  5958     1102  0825               	movf	__div_to_l_@exp1,w
  5959     1103  1D03               	btfss	3,2
  5960     1104  2906               	goto	u4661
  5961     1105  2907               	goto	u4660
  5962     1106                     u4661:
  5963     1106  28F7               	goto	l3010
  5964     1107                     u4660:
  5965     1107                     l3012:
  5966     1107  0823               	movf	__div_to_l_@quot+3,w
  5967     1108  00F5               	movwf	?__div_to_l_+3
  5968     1109  0822               	movf	__div_to_l_@quot+2,w
  5969     110A  00F4               	movwf	?__div_to_l_+2
  5970     110B  0821               	movf	__div_to_l_@quot+1,w
  5971     110C  00F3               	movwf	?__div_to_l_+1
  5972     110D  0820               	movf	__div_to_l_@quot,w
  5973     110E  00F2               	movwf	?__div_to_l_
  5974     110F                     l499:
  5975     110F  0008               	return
  5976     1110                     __end_of__div_to_l_:
  5977                           
  5978                           	psect	text11
  5979     1AA0                     __ptext11:	
  5980 ;; *************** function ___wmul *****************
  5981 ;; Defined at:
  5982 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  multiplier      2    2[COMMON] unsigned int 
  5985 ;;  multiplicand    2    4[COMMON] unsigned int 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  product         2    6[COMMON] unsigned int 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  2    2[COMMON] unsigned int 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5997 ;;      Params:         4       0       0       0       0
  5998 ;;      Locals:         2       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0
  6000 ;;      Totals:         6       0       0       0       0
  6001 ;;Total ram usage:        6 bytes
  6002 ;; Hardware stack levels used: 1
  6003 ;; Hardware stack levels required when called: 1
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_sprintf
  6008 ;;		_adc_mv
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012     1AA0                     ___wmul:	
  6013                           ;psect for function ___wmul
  6014                           
  6015     1AA0                     l3016:	
  6016                           ;incstack = 0
  6017                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6018                           
  6019     1AA0  01F6               	clrf	___wmul@product
  6020     1AA1  01F7               	clrf	___wmul@product+1
  6021     1AA2                     l3018:
  6022     1AA2  1C72               	btfss	___wmul@multiplier,0
  6023     1AA3  2AA5               	goto	u4671
  6024     1AA4  2AA6               	goto	u4670
  6025     1AA5                     u4671:
  6026     1AA5  2AAC               	goto	l329
  6027     1AA6                     u4670:
  6028     1AA6                     l3020:
  6029     1AA6  0874               	movf	___wmul@multiplicand,w
  6030     1AA7  07F6               	addwf	___wmul@product,f
  6031     1AA8  1803               	skipnc
  6032     1AA9  0AF7               	incf	___wmul@product+1,f
  6033     1AAA  0875               	movf	___wmul@multiplicand+1,w
  6034     1AAB  07F7               	addwf	___wmul@product+1,f
  6035     1AAC                     l329:
  6036     1AAC  3001               	movlw	1
  6037     1AAD                     u4685:
  6038     1AAD  1003               	clrc
  6039     1AAE  0DF4               	rlf	___wmul@multiplicand,f
  6040     1AAF  0DF5               	rlf	___wmul@multiplicand+1,f
  6041     1AB0  3EFF               	addlw	-1
  6042     1AB1  1D03               	skipz
  6043     1AB2  2AAD               	goto	u4685
  6044     1AB3                     l3022:
  6045     1AB3  3001               	movlw	1
  6046     1AB4                     u4695:
  6047     1AB4  1003               	clrc
  6048     1AB5  0CF3               	rrf	___wmul@multiplier+1,f
  6049     1AB6  0CF2               	rrf	___wmul@multiplier,f
  6050     1AB7  3EFF               	addlw	-1
  6051     1AB8  1D03               	skipz
  6052     1AB9  2AB4               	goto	u4695
  6053     1ABA                     l3024:
  6054     1ABA  0872               	movf	___wmul@multiplier,w
  6055     1ABB  0473               	iorwf	___wmul@multiplier+1,w
  6056     1ABC  1D03               	btfss	3,2
  6057     1ABD  2ABF               	goto	u4701
  6058     1ABE  2AC0               	goto	u4700
  6059     1ABF                     u4701:
  6060     1ABF  2AA2               	goto	l3018
  6061     1AC0                     u4700:
  6062     1AC0                     l3026:
  6063     1AC0  0877               	movf	___wmul@product+1,w
  6064     1AC1  00F3               	movwf	?___wmul+1
  6065     1AC2  0876               	movf	___wmul@product,w
  6066     1AC3  00F2               	movwf	?___wmul
  6067     1AC4                     l331:
  6068     1AC4  0008               	return
  6069     1AC5                     __end_of___wmul:
  6070                           
  6071                           	psect	text12
  6072     1C4E                     __ptext12:	
  6073 ;; *************** function ___llmod *****************
  6074 ;; Defined at:
  6075 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  divisor         4    2[COMMON] unsigned long 
  6078 ;;  dividend        4    6[COMMON] unsigned long 
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;  counter         1   11[COMMON] unsigned char 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  4    2[COMMON] unsigned long 
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6090 ;;      Params:         8       0       0       0       0
  6091 ;;      Locals:         1       0       0       0       0
  6092 ;;      Temps:          1       0       0       0       0
  6093 ;;      Totals:        10       0       0       0       0
  6094 ;;Total ram usage:       10 bytes
  6095 ;; Hardware stack levels used: 1
  6096 ;; Hardware stack levels required when called: 1
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_sprintf
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104     1C4E                     ___llmod:	
  6105                           ;psect for function ___llmod
  6106                           
  6107     1C4E                     l3130:	
  6108                           ;incstack = 0
  6109                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6110                           
  6111     1C4E  0875               	movf	___llmod@divisor+3,w
  6112     1C4F  0474               	iorwf	___llmod@divisor+2,w
  6113     1C50  0473               	iorwf	___llmod@divisor+1,w
  6114     1C51  0472               	iorwf	___llmod@divisor,w
  6115     1C52  1903               	skipnz
  6116     1C53  2C55               	goto	u4991
  6117     1C54  2C56               	goto	u4990
  6118     1C55                     u4991:
  6119     1C55  2C99               	goto	l3146
  6120     1C56                     u4990:
  6121     1C56                     l3132:
  6122     1C56  01FB               	clrf	___llmod@counter
  6123     1C57  0AFB               	incf	___llmod@counter,f
  6124     1C58  2C66               	goto	l3136
  6125     1C59                     l3134:
  6126     1C59  3001               	movlw	1
  6127     1C5A  00FA               	movwf	??___llmod
  6128     1C5B                     u5005:
  6129     1C5B  1003               	clrc
  6130     1C5C  0DF2               	rlf	___llmod@divisor,f
  6131     1C5D  0DF3               	rlf	___llmod@divisor+1,f
  6132     1C5E  0DF4               	rlf	___llmod@divisor+2,f
  6133     1C5F  0DF5               	rlf	___llmod@divisor+3,f
  6134     1C60  0BFA               	decfsz	??___llmod,f
  6135     1C61  2C5B               	goto	u5005
  6136     1C62  3001               	movlw	1
  6137     1C63  00FA               	movwf	??___llmod
  6138     1C64  087A               	movf	??___llmod,w
  6139     1C65  07FB               	addwf	___llmod@counter,f
  6140     1C66                     l3136:
  6141     1C66  1FF5               	btfss	___llmod@divisor+3,7
  6142     1C67  2C69               	goto	u5011
  6143     1C68  2C6A               	goto	u5010
  6144     1C69                     u5011:
  6145     1C69  2C59               	goto	l3134
  6146     1C6A                     u5010:
  6147     1C6A                     l3138:
  6148     1C6A  0875               	movf	___llmod@divisor+3,w
  6149     1C6B  0279               	subwf	___llmod@dividend+3,w
  6150     1C6C  1D03               	skipz
  6151     1C6D  2C78               	goto	u5025
  6152     1C6E  0874               	movf	___llmod@divisor+2,w
  6153     1C6F  0278               	subwf	___llmod@dividend+2,w
  6154     1C70  1D03               	skipz
  6155     1C71  2C78               	goto	u5025
  6156     1C72  0873               	movf	___llmod@divisor+1,w
  6157     1C73  0277               	subwf	___llmod@dividend+1,w
  6158     1C74  1D03               	skipz
  6159     1C75  2C78               	goto	u5025
  6160     1C76  0872               	movf	___llmod@divisor,w
  6161     1C77  0276               	subwf	___llmod@dividend,w
  6162     1C78                     u5025:
  6163     1C78  1C03               	skipc
  6164     1C79  2C7B               	goto	u5021
  6165     1C7A  2C7C               	goto	u5020
  6166     1C7B                     u5021:
  6167     1C7B  2C8A               	goto	l3142
  6168     1C7C                     u5020:
  6169     1C7C                     l3140:
  6170     1C7C  0872               	movf	___llmod@divisor,w
  6171     1C7D  02F6               	subwf	___llmod@dividend,f
  6172     1C7E  0873               	movf	___llmod@divisor+1,w
  6173     1C7F  1C03               	skipc
  6174     1C80  0F73               	incfsz	___llmod@divisor+1,w
  6175     1C81  02F7               	subwf	___llmod@dividend+1,f
  6176     1C82  0874               	movf	___llmod@divisor+2,w
  6177     1C83  1C03               	skipc
  6178     1C84  0F74               	incfsz	___llmod@divisor+2,w
  6179     1C85  02F8               	subwf	___llmod@dividend+2,f
  6180     1C86  0875               	movf	___llmod@divisor+3,w
  6181     1C87  1C03               	skipc
  6182     1C88  0F75               	incfsz	___llmod@divisor+3,w
  6183     1C89  02F9               	subwf	___llmod@dividend+3,f
  6184     1C8A                     l3142:
  6185     1C8A  3001               	movlw	1
  6186     1C8B                     u5035:
  6187     1C8B  1003               	clrc
  6188     1C8C  0CF5               	rrf	___llmod@divisor+3,f
  6189     1C8D  0CF4               	rrf	___llmod@divisor+2,f
  6190     1C8E  0CF3               	rrf	___llmod@divisor+1,f
  6191     1C8F  0CF2               	rrf	___llmod@divisor,f
  6192     1C90  3EFF               	addlw	-1
  6193     1C91  1D03               	skipz
  6194     1C92  2C8B               	goto	u5035
  6195     1C93                     l3144:
  6196     1C93  3001               	movlw	1
  6197     1C94  02FB               	subwf	___llmod@counter,f
  6198     1C95  1D03               	btfss	3,2
  6199     1C96  2C98               	goto	u5041
  6200     1C97  2C99               	goto	u5040
  6201     1C98                     u5041:
  6202     1C98  2C6A               	goto	l3138
  6203     1C99                     u5040:
  6204     1C99                     l3146:
  6205     1C99  0879               	movf	___llmod@dividend+3,w
  6206     1C9A  00F5               	movwf	?___llmod+3
  6207     1C9B  0878               	movf	___llmod@dividend+2,w
  6208     1C9C  00F4               	movwf	?___llmod+2
  6209     1C9D  0877               	movf	___llmod@dividend+1,w
  6210     1C9E  00F3               	movwf	?___llmod+1
  6211     1C9F  0876               	movf	___llmod@dividend,w
  6212     1CA0  00F2               	movwf	?___llmod
  6213     1CA1                     l585:
  6214     1CA1  0008               	return
  6215     1CA2                     __end_of___llmod:
  6216                           
  6217                           	psect	text13
  6218     1D5C                     __ptext13:	
  6219 ;; *************** function ___lldiv *****************
  6220 ;; Defined at:
  6221 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;  divisor         4    2[COMMON] unsigned long 
  6224 ;;  dividend        4    6[COMMON] unsigned long 
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;  quotient        4    0[BANK0 ] unsigned long 
  6227 ;;  counter         1    4[BANK0 ] unsigned char 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  4    2[COMMON] unsigned long 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6237 ;;      Params:         8       0       0       0       0
  6238 ;;      Locals:         0       5       0       0       0
  6239 ;;      Temps:          1       0       0       0       0
  6240 ;;      Totals:         9       5       0       0       0
  6241 ;;Total ram usage:       14 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; Hardware stack levels required when called: 1
  6244 ;; This function calls:
  6245 ;;		Nothing
  6246 ;; This function is called by:
  6247 ;;		_sprintf
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251     1D5C                     ___lldiv:	
  6252                           ;psect for function ___lldiv
  6253                           
  6254     1D5C                     l3030:	
  6255                           ;incstack = 0
  6256                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6257                           
  6258     1D5C  3000               	movlw	0
  6259     1D5D  1283               	bcf	3,5	;RP0=0, select bank0
  6260     1D5E  1303               	bcf	3,6	;RP1=0, select bank0
  6261     1D5F  00A3               	movwf	___lldiv@quotient+3
  6262     1D60  3000               	movlw	0
  6263     1D61  00A2               	movwf	___lldiv@quotient+2
  6264     1D62  3000               	movlw	0
  6265     1D63  00A1               	movwf	___lldiv@quotient+1
  6266     1D64  3000               	movlw	0
  6267     1D65  00A0               	movwf	___lldiv@quotient
  6268     1D66  0875               	movf	___lldiv@divisor+3,w
  6269     1D67  0474               	iorwf	___lldiv@divisor+2,w
  6270     1D68  0473               	iorwf	___lldiv@divisor+1,w
  6271     1D69  0472               	iorwf	___lldiv@divisor,w
  6272     1D6A  1903               	skipnz
  6273     1D6B  2D6D               	goto	u4711
  6274     1D6C  2D6E               	goto	u4710
  6275     1D6D                     u4711:
  6276     1D6D  2DBB               	goto	l3050
  6277     1D6E                     u4710:
  6278     1D6E                     l3032:
  6279     1D6E  01A4               	clrf	___lldiv@counter
  6280     1D6F  0AA4               	incf	___lldiv@counter,f
  6281     1D70  2D7E               	goto	l3036
  6282     1D71                     l3034:
  6283     1D71  3001               	movlw	1
  6284     1D72  00FA               	movwf	??___lldiv
  6285     1D73                     u4725:
  6286     1D73  1003               	clrc
  6287     1D74  0DF2               	rlf	___lldiv@divisor,f
  6288     1D75  0DF3               	rlf	___lldiv@divisor+1,f
  6289     1D76  0DF4               	rlf	___lldiv@divisor+2,f
  6290     1D77  0DF5               	rlf	___lldiv@divisor+3,f
  6291     1D78  0BFA               	decfsz	??___lldiv,f
  6292     1D79  2D73               	goto	u4725
  6293     1D7A  3001               	movlw	1
  6294     1D7B  00FA               	movwf	??___lldiv
  6295     1D7C  087A               	movf	??___lldiv,w
  6296     1D7D  07A4               	addwf	___lldiv@counter,f
  6297     1D7E                     l3036:
  6298     1D7E  1FF5               	btfss	___lldiv@divisor+3,7
  6299     1D7F  2D81               	goto	u4731
  6300     1D80  2D82               	goto	u4730
  6301     1D81                     u4731:
  6302     1D81  2D71               	goto	l3034
  6303     1D82                     u4730:
  6304     1D82                     l3038:
  6305     1D82  3001               	movlw	1
  6306     1D83  00FA               	movwf	??___lldiv
  6307     1D84                     u4745:
  6308     1D84  1003               	clrc
  6309     1D85  0DA0               	rlf	___lldiv@quotient,f
  6310     1D86  0DA1               	rlf	___lldiv@quotient+1,f
  6311     1D87  0DA2               	rlf	___lldiv@quotient+2,f
  6312     1D88  0DA3               	rlf	___lldiv@quotient+3,f
  6313     1D89  0BFA               	decfsz	??___lldiv,f
  6314     1D8A  2D84               	goto	u4745
  6315     1D8B                     l3040:
  6316     1D8B  0875               	movf	___lldiv@divisor+3,w
  6317     1D8C  0279               	subwf	___lldiv@dividend+3,w
  6318     1D8D  1D03               	skipz
  6319     1D8E  2D99               	goto	u4755
  6320     1D8F  0874               	movf	___lldiv@divisor+2,w
  6321     1D90  0278               	subwf	___lldiv@dividend+2,w
  6322     1D91  1D03               	skipz
  6323     1D92  2D99               	goto	u4755
  6324     1D93  0873               	movf	___lldiv@divisor+1,w
  6325     1D94  0277               	subwf	___lldiv@dividend+1,w
  6326     1D95  1D03               	skipz
  6327     1D96  2D99               	goto	u4755
  6328     1D97  0872               	movf	___lldiv@divisor,w
  6329     1D98  0276               	subwf	___lldiv@dividend,w
  6330     1D99                     u4755:
  6331     1D99  1C03               	skipc
  6332     1D9A  2D9C               	goto	u4751
  6333     1D9B  2D9D               	goto	u4750
  6334     1D9C                     u4751:
  6335     1D9C  2DAC               	goto	l3046
  6336     1D9D                     u4750:
  6337     1D9D                     l3042:
  6338     1D9D  0872               	movf	___lldiv@divisor,w
  6339     1D9E  02F6               	subwf	___lldiv@dividend,f
  6340     1D9F  0873               	movf	___lldiv@divisor+1,w
  6341     1DA0  1C03               	skipc
  6342     1DA1  0F73               	incfsz	___lldiv@divisor+1,w
  6343     1DA2  02F7               	subwf	___lldiv@dividend+1,f
  6344     1DA3  0874               	movf	___lldiv@divisor+2,w
  6345     1DA4  1C03               	skipc
  6346     1DA5  0F74               	incfsz	___lldiv@divisor+2,w
  6347     1DA6  02F8               	subwf	___lldiv@dividend+2,f
  6348     1DA7  0875               	movf	___lldiv@divisor+3,w
  6349     1DA8  1C03               	skipc
  6350     1DA9  0F75               	incfsz	___lldiv@divisor+3,w
  6351     1DAA  02F9               	subwf	___lldiv@dividend+3,f
  6352     1DAB                     l3044:
  6353     1DAB  1420               	bsf	___lldiv@quotient,0
  6354     1DAC                     l3046:
  6355     1DAC  3001               	movlw	1
  6356     1DAD                     u4765:
  6357     1DAD  1003               	clrc
  6358     1DAE  0CF5               	rrf	___lldiv@divisor+3,f
  6359     1DAF  0CF4               	rrf	___lldiv@divisor+2,f
  6360     1DB0  0CF3               	rrf	___lldiv@divisor+1,f
  6361     1DB1  0CF2               	rrf	___lldiv@divisor,f
  6362     1DB2  3EFF               	addlw	-1
  6363     1DB3  1D03               	skipz
  6364     1DB4  2DAD               	goto	u4765
  6365     1DB5                     l3048:
  6366     1DB5  3001               	movlw	1
  6367     1DB6  02A4               	subwf	___lldiv@counter,f
  6368     1DB7  1D03               	btfss	3,2
  6369     1DB8  2DBA               	goto	u4771
  6370     1DB9  2DBB               	goto	u4770
  6371     1DBA                     u4771:
  6372     1DBA  2D82               	goto	l3038
  6373     1DBB                     u4770:
  6374     1DBB                     l3050:
  6375     1DBB  0823               	movf	___lldiv@quotient+3,w
  6376     1DBC  00F5               	movwf	?___lldiv+3
  6377     1DBD  0822               	movf	___lldiv@quotient+2,w
  6378     1DBE  00F4               	movwf	?___lldiv+2
  6379     1DBF  0821               	movf	___lldiv@quotient+1,w
  6380     1DC0  00F3               	movwf	?___lldiv+1
  6381     1DC1  0820               	movf	___lldiv@quotient,w
  6382     1DC2  00F2               	movwf	?___lldiv
  6383     1DC3                     l365:
  6384     1DC3  0008               	return
  6385     1DC4                     __end_of___lldiv:
  6386                           
  6387                           	psect	text14
  6388     1E2D                     __ptext14:	
  6389 ;; *************** function ___fltol *****************
  6390 ;; Defined at:
  6391 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  f1              4   53[BANK0 ] unsigned long 
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;  exp1            1   62[BANK0 ] unsigned char 
  6396 ;;  sign1           1   61[BANK0 ] unsigned char 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  4   53[BANK0 ] long 
  6399 ;; Registers used:
  6400 ;;		wreg, status,2, status,0
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6406 ;;      Params:         0       4       0       0       0
  6407 ;;      Locals:         0       2       0       0       0
  6408 ;;      Temps:          0       4       0       0       0
  6409 ;;      Totals:         0      10       0       0       0
  6410 ;;Total ram usage:       10 bytes
  6411 ;; Hardware stack levels used: 1
  6412 ;; Hardware stack levels required when called: 1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_sprintf
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420     1E2D                     ___fltol:	
  6421                           ;psect for function ___fltol
  6422                           
  6423     1E2D                     l3094:	
  6424                           ;incstack = 0
  6425                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6426                           
  6427     1E2D  1003               	clrc
  6428     1E2E  1283               	bcf	3,5	;RP0=0, select bank0
  6429     1E2F  1303               	bcf	3,6	;RP1=0, select bank0
  6430     1E30  0D57               	rlf	___fltol@f1+2,w
  6431     1E31  0D58               	rlf	___fltol@f1+3,w
  6432     1E32  00DE               	movwf	___fltol@exp1
  6433     1E33  085E               	movf	___fltol@exp1,w
  6434     1E34  1D03               	btfss	3,2
  6435     1E35  2E37               	goto	u4891
  6436     1E36  2E38               	goto	u4890
  6437     1E37                     u4891:
  6438     1E37  2E41               	goto	l3100
  6439     1E38                     u4890:
  6440     1E38                     l3096:
  6441     1E38  3000               	movlw	0
  6442     1E39  00D8               	movwf	?___fltol+3
  6443     1E3A  3000               	movlw	0
  6444     1E3B  00D7               	movwf	?___fltol+2
  6445     1E3C  3000               	movlw	0
  6446     1E3D  00D6               	movwf	?___fltol+1
  6447     1E3E  3000               	movlw	0
  6448     1E3F  00D5               	movwf	?___fltol
  6449     1E40  2EA4               	goto	l532
  6450     1E41                     l3100:
  6451     1E41  0855               	movf	___fltol@f1,w
  6452     1E42  00D9               	movwf	??___fltol
  6453     1E43  0856               	movf	___fltol@f1+1,w
  6454     1E44  00DA               	movwf	??___fltol+1
  6455     1E45  0857               	movf	___fltol@f1+2,w
  6456     1E46  00DB               	movwf	??___fltol+2
  6457     1E47  0858               	movf	___fltol@f1+3,w
  6458     1E48  00DC               	movwf	??___fltol+3
  6459     1E49  301F               	movlw	31
  6460     1E4A                     u4905:
  6461     1E4A  1003               	clrc
  6462     1E4B  0CDC               	rrf	??___fltol+3,f
  6463     1E4C  0CDB               	rrf	??___fltol+2,f
  6464     1E4D  0CDA               	rrf	??___fltol+1,f
  6465     1E4E  0CD9               	rrf	??___fltol,f
  6466     1E4F                     u4900:
  6467     1E4F  3EFF               	addlw	-1
  6468     1E50  1D03               	skipz
  6469     1E51  2E4A               	goto	u4905
  6470     1E52  0859               	movf	??___fltol,w
  6471     1E53  00DD               	movwf	___fltol@sign1
  6472     1E54                     l3102:
  6473     1E54  17D7               	bsf	___fltol@f1+2,7
  6474     1E55                     l3104:
  6475     1E55  30FF               	movlw	255
  6476     1E56  05D5               	andwf	___fltol@f1,f
  6477     1E57  30FF               	movlw	255
  6478     1E58  05D6               	andwf	___fltol@f1+1,f
  6479     1E59  30FF               	movlw	255
  6480     1E5A  05D7               	andwf	___fltol@f1+2,f
  6481     1E5B  3000               	movlw	0
  6482     1E5C  05D8               	andwf	___fltol@f1+3,f
  6483     1E5D                     l3106:
  6484     1E5D  3096               	movlw	150
  6485     1E5E  02DE               	subwf	___fltol@exp1,f
  6486     1E5F                     l3108:
  6487     1E5F  1FDE               	btfss	___fltol@exp1,7
  6488     1E60  2E62               	goto	u4911
  6489     1E61  2E63               	goto	u4910
  6490     1E62                     u4911:
  6491     1E62  2E7D               	goto	l3118
  6492     1E63                     u4910:
  6493     1E63                     l3110:
  6494     1E63  085E               	movf	___fltol@exp1,w
  6495     1E64  3A80               	xorlw	128
  6496     1E65  3E97               	addlw	151
  6497     1E66  1803               	skipnc
  6498     1E67  2E69               	goto	u4921
  6499     1E68  2E6A               	goto	u4920
  6500     1E69                     u4921:
  6501     1E69  2E6B               	goto	l3116
  6502     1E6A                     u4920:
  6503     1E6A  2E38               	goto	l3096
  6504     1E6B                     l3116:
  6505     1E6B  3001               	movlw	1
  6506     1E6C                     u4935:
  6507     1E6C  1003               	clrc
  6508     1E6D  0CD8               	rrf	___fltol@f1+3,f
  6509     1E6E  0CD7               	rrf	___fltol@f1+2,f
  6510     1E6F  0CD6               	rrf	___fltol@f1+1,f
  6511     1E70  0CD5               	rrf	___fltol@f1,f
  6512     1E71  3EFF               	addlw	-1
  6513     1E72  1D03               	skipz
  6514     1E73  2E6C               	goto	u4935
  6515     1E74  3001               	movlw	1
  6516     1E75  00D9               	movwf	??___fltol
  6517     1E76  0859               	movf	??___fltol,w
  6518     1E77  07DE               	addwf	___fltol@exp1,f
  6519     1E78  1D03               	btfss	3,2
  6520     1E79  2E7B               	goto	u4941
  6521     1E7A  2E7C               	goto	u4940
  6522     1E7B                     u4941:
  6523     1E7B  2E6B               	goto	l3116
  6524     1E7C                     u4940:
  6525     1E7C  2E94               	goto	l3126
  6526     1E7D                     l3118:
  6527     1E7D  3020               	movlw	32
  6528     1E7E  025E               	subwf	___fltol@exp1,w
  6529     1E7F  1C03               	skipc
  6530     1E80  2E82               	goto	u4951
  6531     1E81  2E83               	goto	u4950
  6532     1E82                     u4951:
  6533     1E82  2E8F               	goto	l539
  6534     1E83                     u4950:
  6535     1E83  2E38               	goto	l3096
  6536     1E84                     l3124:
  6537     1E84  3001               	movlw	1
  6538     1E85  00D9               	movwf	??___fltol
  6539     1E86                     u4965:
  6540     1E86  1003               	clrc
  6541     1E87  0DD5               	rlf	___fltol@f1,f
  6542     1E88  0DD6               	rlf	___fltol@f1+1,f
  6543     1E89  0DD7               	rlf	___fltol@f1+2,f
  6544     1E8A  0DD8               	rlf	___fltol@f1+3,f
  6545     1E8B  0BD9               	decfsz	??___fltol,f
  6546     1E8C  2E86               	goto	u4965
  6547     1E8D  3001               	movlw	1
  6548     1E8E  02DE               	subwf	___fltol@exp1,f
  6549     1E8F                     l539:
  6550     1E8F  085E               	movf	___fltol@exp1,w
  6551     1E90  1D03               	btfss	3,2
  6552     1E91  2E93               	goto	u4971
  6553     1E92  2E94               	goto	u4970
  6554     1E93                     u4971:
  6555     1E93  2E84               	goto	l3124
  6556     1E94                     u4970:
  6557     1E94                     l3126:
  6558     1E94  085D               	movf	___fltol@sign1,w
  6559     1E95  1903               	btfsc	3,2
  6560     1E96  2E98               	goto	u4981
  6561     1E97  2E99               	goto	u4980
  6562     1E98                     u4981:
  6563     1E98  2EA4               	goto	l542
  6564     1E99                     u4980:
  6565     1E99                     l3128:
  6566     1E99  09D5               	comf	___fltol@f1,f
  6567     1E9A  09D6               	comf	___fltol@f1+1,f
  6568     1E9B  09D7               	comf	___fltol@f1+2,f
  6569     1E9C  09D8               	comf	___fltol@f1+3,f
  6570     1E9D  0AD5               	incf	___fltol@f1,f
  6571     1E9E  1903               	skipnz
  6572     1E9F  0AD6               	incf	___fltol@f1+1,f
  6573     1EA0  1903               	skipnz
  6574     1EA1  0AD7               	incf	___fltol@f1+2,f
  6575     1EA2  1903               	skipnz
  6576     1EA3  0AD8               	incf	___fltol@f1+3,f
  6577     1EA4                     l542:
  6578     1EA4                     l532:
  6579     1EA4  0008               	return
  6580     1EA5                     __end_of___fltol:
  6581                           
  6582                           	psect	text15
  6583     1BFE                     __ptext15:	
  6584 ;; *************** function ___flsub *****************
  6585 ;; Defined at:
  6586 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  a               4    0[BANK1 ] long 
  6589 ;;  b               4    4[BANK1 ] long 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;		None
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  4    0[BANK1 ] long 
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6601 ;;      Params:         0       0       8       0       0
  6602 ;;      Locals:         0       0       0       0       0
  6603 ;;      Temps:          0       0       0       0       0
  6604 ;;      Totals:         0       0       8       0       0
  6605 ;;Total ram usage:        8 bytes
  6606 ;; Hardware stack levels used: 1
  6607 ;; Hardware stack levels required when called: 2
  6608 ;; This function calls:
  6609 ;;		___fladd
  6610 ;; This function is called by:
  6611 ;;		_sprintf
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615     1BFE                     ___flsub:	
  6616                           ;psect for function ___flsub
  6617                           
  6618     1BFE                     l3150:	
  6619                           ;incstack = 0
  6620                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6621                           
  6622     1BFE  3080               	movlw	128
  6623     1BFF  1683               	bsf	3,5	;RP0=1, select bank1
  6624     1C00  1303               	bcf	3,6	;RP1=0, select bank1
  6625     1C01  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6626     1C02                     l3152:
  6627     1C02  0827               	movf	(___flsub@b+3)^(0+128),w
  6628     1C03  1283               	bcf	3,5	;RP0=0, select bank0
  6629     1C04  1303               	bcf	3,6	;RP1=0, select bank0
  6630     1C05  00D9               	movwf	___fladd@b+3
  6631     1C06  1683               	bsf	3,5	;RP0=1, select bank1
  6632     1C07  1303               	bcf	3,6	;RP1=0, select bank1
  6633     1C08  0826               	movf	(___flsub@b+2)^(0+128),w
  6634     1C09  1283               	bcf	3,5	;RP0=0, select bank0
  6635     1C0A  1303               	bcf	3,6	;RP1=0, select bank0
  6636     1C0B  00D8               	movwf	___fladd@b+2
  6637     1C0C  1683               	bsf	3,5	;RP0=1, select bank1
  6638     1C0D  1303               	bcf	3,6	;RP1=0, select bank1
  6639     1C0E  0825               	movf	(___flsub@b+1)^(0+128),w
  6640     1C0F  1283               	bcf	3,5	;RP0=0, select bank0
  6641     1C10  1303               	bcf	3,6	;RP1=0, select bank0
  6642     1C11  00D7               	movwf	___fladd@b+1
  6643     1C12  1683               	bsf	3,5	;RP0=1, select bank1
  6644     1C13  1303               	bcf	3,6	;RP1=0, select bank1
  6645     1C14  0824               	movf	___flsub@b^(0+128),w
  6646     1C15  1283               	bcf	3,5	;RP0=0, select bank0
  6647     1C16  1303               	bcf	3,6	;RP1=0, select bank0
  6648     1C17  00D6               	movwf	___fladd@b
  6649     1C18  1683               	bsf	3,5	;RP0=1, select bank1
  6650     1C19  1303               	bcf	3,6	;RP1=0, select bank1
  6651     1C1A  0823               	movf	(___flsub@a+3)^(0+128),w
  6652     1C1B  1283               	bcf	3,5	;RP0=0, select bank0
  6653     1C1C  1303               	bcf	3,6	;RP1=0, select bank0
  6654     1C1D  00DD               	movwf	___fladd@a+3
  6655     1C1E  1683               	bsf	3,5	;RP0=1, select bank1
  6656     1C1F  1303               	bcf	3,6	;RP1=0, select bank1
  6657     1C20  0822               	movf	(___flsub@a+2)^(0+128),w
  6658     1C21  1283               	bcf	3,5	;RP0=0, select bank0
  6659     1C22  1303               	bcf	3,6	;RP1=0, select bank0
  6660     1C23  00DC               	movwf	___fladd@a+2
  6661     1C24  1683               	bsf	3,5	;RP0=1, select bank1
  6662     1C25  1303               	bcf	3,6	;RP1=0, select bank1
  6663     1C26  0821               	movf	(___flsub@a+1)^(0+128),w
  6664     1C27  1283               	bcf	3,5	;RP0=0, select bank0
  6665     1C28  1303               	bcf	3,6	;RP1=0, select bank0
  6666     1C29  00DB               	movwf	___fladd@a+1
  6667     1C2A  1683               	bsf	3,5	;RP0=1, select bank1
  6668     1C2B  1303               	bcf	3,6	;RP1=0, select bank1
  6669     1C2C  0820               	movf	___flsub@a^(0+128),w
  6670     1C2D  1283               	bcf	3,5	;RP0=0, select bank0
  6671     1C2E  1303               	bcf	3,6	;RP1=0, select bank0
  6672     1C2F  00DA               	movwf	___fladd@a
  6673     1C30  160A  118A  25A8  160A  158A  	fcall	___fladd
  6674     1C35  1283               	bcf	3,5	;RP0=0, select bank0
  6675     1C36  1303               	bcf	3,6	;RP1=0, select bank0
  6676     1C37  0859               	movf	?___fladd+3,w
  6677     1C38  1683               	bsf	3,5	;RP0=1, select bank1
  6678     1C39  1303               	bcf	3,6	;RP1=0, select bank1
  6679     1C3A  00A3               	movwf	(?___flsub+3)^(0+128)
  6680     1C3B  1283               	bcf	3,5	;RP0=0, select bank0
  6681     1C3C  1303               	bcf	3,6	;RP1=0, select bank0
  6682     1C3D  0858               	movf	?___fladd+2,w
  6683     1C3E  1683               	bsf	3,5	;RP0=1, select bank1
  6684     1C3F  1303               	bcf	3,6	;RP1=0, select bank1
  6685     1C40  00A2               	movwf	(?___flsub+2)^(0+128)
  6686     1C41  1283               	bcf	3,5	;RP0=0, select bank0
  6687     1C42  1303               	bcf	3,6	;RP1=0, select bank0
  6688     1C43  0857               	movf	?___fladd+1,w
  6689     1C44  1683               	bsf	3,5	;RP0=1, select bank1
  6690     1C45  1303               	bcf	3,6	;RP1=0, select bank1
  6691     1C46  00A1               	movwf	(?___flsub+1)^(0+128)
  6692     1C47  1283               	bcf	3,5	;RP0=0, select bank0
  6693     1C48  1303               	bcf	3,6	;RP1=0, select bank0
  6694     1C49  0856               	movf	?___fladd,w
  6695     1C4A  1683               	bsf	3,5	;RP0=1, select bank1
  6696     1C4B  1303               	bcf	3,6	;RP1=0, select bank1
  6697     1C4C  00A0               	movwf	?___flsub^(0+128)
  6698     1C4D                     l702:
  6699     1C4D  0008               	return
  6700     1C4E                     __end_of___flsub:
  6701                           
  6702                           	psect	text16
  6703     15A8                     __ptext16:	
  6704 ;; *************** function ___fladd *****************
  6705 ;; Defined at:
  6706 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  b               4   54[BANK0 ] long 
  6709 ;;  a               4   58[BANK0 ] long 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  grs             1   73[BANK0 ] unsigned char 
  6712 ;;  bexp            1   72[BANK0 ] unsigned char 
  6713 ;;  aexp            1   71[BANK0 ] unsigned char 
  6714 ;;  signs           1   70[BANK0 ] unsigned char 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  4   54[BANK0 ] unsigned char 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0, btemp+1
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6724 ;;      Params:         0       8       0       0       0
  6725 ;;      Locals:         0       4       0       0       0
  6726 ;;      Temps:          0       8       0       0       0
  6727 ;;      Totals:         0      20       0       0       0
  6728 ;;Total ram usage:       20 bytes
  6729 ;; Hardware stack levels used: 1
  6730 ;; Hardware stack levels required when called: 1
  6731 ;; This function calls:
  6732 ;;		Nothing
  6733 ;; This function is called by:
  6734 ;;		_sprintf
  6735 ;;		___flsub
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739     15A8                     ___fladd:	
  6740                           ;psect for function ___fladd
  6741                           
  6742     15A8                     l2476:	
  6743                           ;incstack = 0
  6744                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6745                           
  6746     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  6747     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  6748     15AA  0859               	movf	___fladd@b+3,w
  6749     15AB  3980               	andlw	128
  6750     15AC  00E6               	movwf	___fladd@signs
  6751     15AD                     l2478:
  6752     15AD  0859               	movf	___fladd@b+3,w
  6753     15AE  00DE               	movwf	??___fladd
  6754     15AF  075E               	addwf	??___fladd,w
  6755     15B0  00E8               	movwf	___fladd@bexp
  6756     15B1                     l2480:
  6757     15B1  1FD8               	btfss	___fladd@b+2,7
  6758     15B2  2DB4               	goto	u3311
  6759     15B3  2DB5               	goto	u3310
  6760     15B4                     u3311:
  6761     15B4  2DB6               	goto	l2484
  6762     15B5                     u3310:
  6763     15B5                     l2482:
  6764     15B5  1468               	bsf	___fladd@bexp,0
  6765     15B6                     l2484:
  6766     15B6  0868               	movf	___fladd@bexp,w
  6767     15B7  1903               	btfsc	3,2
  6768     15B8  2DBA               	goto	u3321
  6769     15B9  2DBB               	goto	u3320
  6770     15BA                     u3321:
  6771     15BA  2DCB               	goto	l2494
  6772     15BB                     u3320:
  6773     15BB                     l2486:
  6774     15BB  0A68               	incf	___fladd@bexp,w
  6775     15BC  1D03               	btfss	3,2
  6776     15BD  2DBF               	goto	u3331
  6777     15BE  2DC0               	goto	u3330
  6778     15BF                     u3331:
  6779     15BF  2DC8               	goto	l2490
  6780     15C0                     u3330:
  6781     15C0                     l2488:
  6782     15C0  3000               	movlw	0
  6783     15C1  00D9               	movwf	___fladd@b+3
  6784     15C2  3000               	movlw	0
  6785     15C3  00D8               	movwf	___fladd@b+2
  6786     15C4  3000               	movlw	0
  6787     15C5  00D7               	movwf	___fladd@b+1
  6788     15C6  3000               	movlw	0
  6789     15C7  00D6               	movwf	___fladd@b
  6790     15C8                     l2490:
  6791     15C8  17D8               	bsf	___fladd@b+2,7
  6792     15C9                     l2492:
  6793     15C9  01D9               	clrf	___fladd@b+3
  6794     15CA  2DD3               	goto	l2496
  6795     15CB                     l2494:
  6796     15CB  3000               	movlw	0
  6797     15CC  00D9               	movwf	___fladd@b+3
  6798     15CD  3000               	movlw	0
  6799     15CE  00D8               	movwf	___fladd@b+2
  6800     15CF  3000               	movlw	0
  6801     15D0  00D7               	movwf	___fladd@b+1
  6802     15D1  3000               	movlw	0
  6803     15D2  00D6               	movwf	___fladd@b
  6804     15D3                     l2496:
  6805     15D3  085D               	movf	___fladd@a+3,w
  6806     15D4  3980               	andlw	128
  6807     15D5  00E7               	movwf	___fladd@aexp
  6808     15D6                     l2498:
  6809     15D6  0867               	movf	___fladd@aexp,w
  6810     15D7  0666               	xorwf	___fladd@signs,w
  6811     15D8  1903               	skipnz
  6812     15D9  2DDB               	goto	u3341
  6813     15DA  2DDC               	goto	u3340
  6814     15DB                     u3341:
  6815     15DB  2DDD               	goto	l2502
  6816     15DC                     u3340:
  6817     15DC                     l2500:
  6818     15DC  1766               	bsf	___fladd@signs,6
  6819     15DD                     l2502:
  6820     15DD  085D               	movf	___fladd@a+3,w
  6821     15DE  00DE               	movwf	??___fladd
  6822     15DF  075E               	addwf	??___fladd,w
  6823     15E0  00E7               	movwf	___fladd@aexp
  6824     15E1                     l2504:
  6825     15E1  1FDC               	btfss	___fladd@a+2,7
  6826     15E2  2DE4               	goto	u3351
  6827     15E3  2DE5               	goto	u3350
  6828     15E4                     u3351:
  6829     15E4  2DE6               	goto	l2508
  6830     15E5                     u3350:
  6831     15E5                     l2506:
  6832     15E5  1467               	bsf	___fladd@aexp,0
  6833     15E6                     l2508:
  6834     15E6  0867               	movf	___fladd@aexp,w
  6835     15E7  1903               	btfsc	3,2
  6836     15E8  2DEA               	goto	u3361
  6837     15E9  2DEB               	goto	u3360
  6838     15EA                     u3361:
  6839     15EA  2DFB               	goto	l2518
  6840     15EB                     u3360:
  6841     15EB                     l2510:
  6842     15EB  0A67               	incf	___fladd@aexp,w
  6843     15EC  1D03               	btfss	3,2
  6844     15ED  2DEF               	goto	u3371
  6845     15EE  2DF0               	goto	u3370
  6846     15EF                     u3371:
  6847     15EF  2DF8               	goto	l2514
  6848     15F0                     u3370:
  6849     15F0                     l2512:
  6850     15F0  3000               	movlw	0
  6851     15F1  00DD               	movwf	___fladd@a+3
  6852     15F2  3000               	movlw	0
  6853     15F3  00DC               	movwf	___fladd@a+2
  6854     15F4  3000               	movlw	0
  6855     15F5  00DB               	movwf	___fladd@a+1
  6856     15F6  3000               	movlw	0
  6857     15F7  00DA               	movwf	___fladd@a
  6858     15F8                     l2514:
  6859     15F8  17DC               	bsf	___fladd@a+2,7
  6860     15F9                     l2516:
  6861     15F9  01DD               	clrf	___fladd@a+3
  6862     15FA  2E03               	goto	l656
  6863     15FB                     l2518:
  6864     15FB  3000               	movlw	0
  6865     15FC  00DD               	movwf	___fladd@a+3
  6866     15FD  3000               	movlw	0
  6867     15FE  00DC               	movwf	___fladd@a+2
  6868     15FF  3000               	movlw	0
  6869     1600  00DB               	movwf	___fladd@a+1
  6870     1601  3000               	movlw	0
  6871     1602  00DA               	movwf	___fladd@a
  6872     1603                     l656:
  6873     1603  0868               	movf	___fladd@bexp,w
  6874     1604  0267               	subwf	___fladd@aexp,w
  6875     1605  1803               	skipnc
  6876     1606  2E08               	goto	u3381
  6877     1607  2E09               	goto	u3380
  6878     1608                     u3381:
  6879     1608  2E2F               	goto	l2554
  6880     1609                     u3380:
  6881     1609                     l2520:
  6882     1609  1F66               	btfss	___fladd@signs,6
  6883     160A  2E0C               	goto	u3391
  6884     160B  2E0D               	goto	u3390
  6885     160C                     u3391:
  6886     160C  2E11               	goto	l2524
  6887     160D                     u3390:
  6888     160D                     l2522:
  6889     160D  3080               	movlw	128
  6890     160E  00DE               	movwf	??___fladd
  6891     160F  085E               	movf	??___fladd,w
  6892     1610  06E6               	xorwf	___fladd@signs,f
  6893     1611                     l2524:
  6894     1611  0868               	movf	___fladd@bexp,w
  6895     1612  00E9               	movwf	___fladd@grs
  6896     1613                     l2526:
  6897     1613  0867               	movf	___fladd@aexp,w
  6898     1614  00E8               	movwf	___fladd@bexp
  6899     1615                     l2528:
  6900     1615  0869               	movf	___fladd@grs,w
  6901     1616  00E7               	movwf	___fladd@aexp
  6902     1617                     l2530:
  6903     1617  0856               	movf	___fladd@b,w
  6904     1618  00E9               	movwf	___fladd@grs
  6905     1619                     l2532:
  6906     1619  085A               	movf	___fladd@a,w
  6907     161A  00D6               	movwf	___fladd@b
  6908     161B                     l2534:
  6909     161B  0869               	movf	___fladd@grs,w
  6910     161C  00DA               	movwf	___fladd@a
  6911     161D                     l2536:
  6912     161D  0857               	movf	___fladd@b+1,w
  6913     161E  00E9               	movwf	___fladd@grs
  6914     161F                     l2538:
  6915     161F  085B               	movf	___fladd@a+1,w
  6916     1620  00D7               	movwf	___fladd@b+1
  6917     1621                     l2540:
  6918     1621  0869               	movf	___fladd@grs,w
  6919     1622  00DB               	movwf	___fladd@a+1
  6920     1623                     l2542:
  6921     1623  0858               	movf	___fladd@b+2,w
  6922     1624  00E9               	movwf	___fladd@grs
  6923     1625                     l2544:
  6924     1625  085C               	movf	___fladd@a+2,w
  6925     1626  00D8               	movwf	___fladd@b+2
  6926     1627                     l2546:
  6927     1627  0869               	movf	___fladd@grs,w
  6928     1628  00DC               	movwf	___fladd@a+2
  6929     1629                     l2548:
  6930     1629  0859               	movf	___fladd@b+3,w
  6931     162A  00E9               	movwf	___fladd@grs
  6932     162B                     l2550:
  6933     162B  085D               	movf	___fladd@a+3,w
  6934     162C  00D9               	movwf	___fladd@b+3
  6935     162D                     l2552:
  6936     162D  0869               	movf	___fladd@grs,w
  6937     162E  00DD               	movwf	___fladd@a+3
  6938     162F                     l2554:
  6939     162F  01E9               	clrf	___fladd@grs
  6940     1630                     l2556:
  6941     1630  0867               	movf	___fladd@aexp,w
  6942     1631  00DE               	movwf	??___fladd
  6943     1632  01DF               	clrf	??___fladd+1
  6944     1633  085F               	movf	??___fladd+1,w
  6945     1634  00E1               	movwf	??___fladd+3
  6946     1635  0868               	movf	___fladd@bexp,w
  6947     1636  025E               	subwf	??___fladd,w
  6948     1637  00E0               	movwf	??___fladd+2
  6949     1638  1C03               	skipc
  6950     1639  03E1               	decf	??___fladd+3,f
  6951     163A  0861               	movf	??___fladd+3,w
  6952     163B  3A80               	xorlw	128
  6953     163C  00FF               	movwf	btemp+1
  6954     163D  3080               	movlw	128
  6955     163E  027F               	subwf	btemp+1,w
  6956     163F  1D03               	skipz
  6957     1640  2E43               	goto	u3405
  6958     1641  301A               	movlw	26
  6959     1642  0260               	subwf	??___fladd+2,w
  6960     1643                     u3405:
  6961     1643  1C03               	skipc
  6962     1644  2E46               	goto	u3401
  6963     1645  2E47               	goto	u3400
  6964     1646                     u3401:
  6965     1646  2E7E               	goto	l2572
  6966     1647                     u3400:
  6967     1647                     l2558:
  6968     1647  1283               	bcf	3,5	;RP0=0, select bank0
  6969     1648  1303               	bcf	3,6	;RP1=0, select bank0
  6970     1649  0859               	movf	___fladd@b+3,w
  6971     164A  0458               	iorwf	___fladd@b+2,w
  6972     164B  0457               	iorwf	___fladd@b+1,w
  6973     164C  0456               	iorwf	___fladd@b,w
  6974     164D  1D03               	skipz
  6975     164E  2E50               	goto	u3411
  6976     164F  2E52               	goto	u3410
  6977     1650                     u3411:
  6978     1650  3001               	movlw	1
  6979     1651  2E53               	goto	u3420
  6980     1652                     u3410:
  6981     1652  3000               	movlw	0
  6982     1653                     u3420:
  6983     1653  00E9               	movwf	___fladd@grs
  6984     1654  3000               	movlw	0
  6985     1655  00D9               	movwf	___fladd@b+3
  6986     1656  3000               	movlw	0
  6987     1657  00D8               	movwf	___fladd@b+2
  6988     1658  3000               	movlw	0
  6989     1659  00D7               	movwf	___fladd@b+1
  6990     165A  3000               	movlw	0
  6991     165B  00D6               	movwf	___fladd@b
  6992     165C  0867               	movf	___fladd@aexp,w
  6993     165D  00E8               	movwf	___fladd@bexp
  6994     165E  2E86               	goto	l660
  6995     165F                     l662:
  6996     165F  1C69               	btfss	___fladd@grs,0
  6997     1660  2E62               	goto	u3431
  6998     1661  2E63               	goto	u3430
  6999     1662                     u3431:
  7000     1662  2E6A               	goto	l2562
  7001     1663                     u3430:
  7002     1663                     l2560:
  7003     1663  0869               	movf	___fladd@grs,w
  7004     1664  00DE               	movwf	??___fladd
  7005     1665  1003               	clrc
  7006     1666  0C5E               	rrf	??___fladd,w
  7007     1667  3801               	iorlw	1
  7008     1668  00E9               	movwf	___fladd@grs
  7009     1669  2E6C               	goto	l2564
  7010     166A                     l2562:
  7011     166A  1003               	clrc
  7012     166B  0CE9               	rrf	___fladd@grs,f
  7013     166C                     l2564:
  7014     166C  1C56               	btfss	___fladd@b,0
  7015     166D  2E6F               	goto	u3441
  7016     166E  2E70               	goto	u3440
  7017     166F                     u3441:
  7018     166F  2E71               	goto	l2568
  7019     1670                     u3440:
  7020     1670                     l2566:
  7021     1670  17E9               	bsf	___fladd@grs,7
  7022     1671                     l2568:
  7023     1671  3001               	movlw	1
  7024     1672  00DE               	movwf	??___fladd
  7025     1673                     u3455:
  7026     1673  0D59               	rlf	___fladd@b+3,w
  7027     1674  0CD9               	rrf	___fladd@b+3,f
  7028     1675  0CD8               	rrf	___fladd@b+2,f
  7029     1676  0CD7               	rrf	___fladd@b+1,f
  7030     1677  0CD6               	rrf	___fladd@b,f
  7031     1678  0BDE               	decfsz	??___fladd& (0+127),f
  7032     1679  2E73               	goto	u3455
  7033     167A                     l2570:
  7034     167A  3001               	movlw	1
  7035     167B  00DE               	movwf	??___fladd
  7036     167C  085E               	movf	??___fladd,w
  7037     167D  07E8               	addwf	___fladd@bexp,f
  7038     167E                     l2572:
  7039     167E  1283               	bcf	3,5	;RP0=0, select bank0
  7040     167F  1303               	bcf	3,6	;RP1=0, select bank0
  7041     1680  0867               	movf	___fladd@aexp,w
  7042     1681  0268               	subwf	___fladd@bexp,w
  7043     1682  1C03               	skipc
  7044     1683  2E85               	goto	u3461
  7045     1684  2E86               	goto	u3460
  7046     1685                     u3461:
  7047     1685  2E5F               	goto	l662
  7048     1686                     u3460:
  7049     1686                     l660:
  7050     1686  1B66               	btfsc	___fladd@signs,6
  7051     1687  2E89               	goto	u3471
  7052     1688  2E8A               	goto	u3470
  7053     1689                     u3471:
  7054     1689  2ED3               	goto	l2598
  7055     168A                     u3470:
  7056     168A                     l2574:
  7057     168A  0868               	movf	___fladd@bexp,w
  7058     168B  1D03               	btfss	3,2
  7059     168C  2E8E               	goto	u3481
  7060     168D  2E8F               	goto	u3480
  7061     168E                     u3481:
  7062     168E  2E98               	goto	l2580
  7063     168F                     u3480:
  7064     168F                     l2576:
  7065     168F  3000               	movlw	0
  7066     1690  00D9               	movwf	?___fladd+3
  7067     1691  3000               	movlw	0
  7068     1692  00D8               	movwf	?___fladd+2
  7069     1693  3000               	movlw	0
  7070     1694  00D7               	movwf	?___fladd+1
  7071     1695  3000               	movlw	0
  7072     1696  00D6               	movwf	?___fladd
  7073     1697  2FFF               	goto	l669
  7074     1698                     l2580:
  7075     1698  085A               	movf	___fladd@a,w
  7076     1699  07D6               	addwf	___fladd@b,f
  7077     169A  085B               	movf	___fladd@a+1,w
  7078     169B  1103               	clrz
  7079     169C  1803               	skipnc
  7080     169D  3E01               	addlw	1
  7081     169E  1903               	skipnz
  7082     169F  2EA1               	goto	u3491
  7083     16A0  07D7               	addwf	___fladd@b+1,f
  7084     16A1                     u3491:
  7085     16A1  085C               	movf	___fladd@a+2,w
  7086     16A2  1103               	clrz
  7087     16A3  1803               	skipnc
  7088     16A4  3E01               	addlw	1
  7089     16A5  1903               	skipnz
  7090     16A6  2EA8               	goto	u3492
  7091     16A7  07D8               	addwf	___fladd@b+2,f
  7092     16A8                     u3492:
  7093     16A8  085D               	movf	___fladd@a+3,w
  7094     16A9  1103               	clrz
  7095     16AA  1803               	skipnc
  7096     16AB  3E01               	addlw	1
  7097     16AC  1903               	skipnz
  7098     16AD  2EAF               	goto	u3493
  7099     16AE  07D9               	addwf	___fladd@b+3,f
  7100     16AF                     u3493:
  7101     16AF                     l2582:
  7102     16AF  1C59               	btfss	___fladd@b+3,0
  7103     16B0  2EB2               	goto	u3501
  7104     16B1  2EB3               	goto	u3500
  7105     16B2                     u3501:
  7106     16B2  2F87               	goto	l2632
  7107     16B3                     u3500:
  7108     16B3                     l2584:
  7109     16B3  1C69               	btfss	___fladd@grs,0
  7110     16B4  2EB6               	goto	u3511
  7111     16B5  2EB7               	goto	u3510
  7112     16B6                     u3511:
  7113     16B6  2EBE               	goto	l2588
  7114     16B7                     u3510:
  7115     16B7                     l2586:
  7116     16B7  0869               	movf	___fladd@grs,w
  7117     16B8  00DE               	movwf	??___fladd
  7118     16B9  1003               	clrc
  7119     16BA  0C5E               	rrf	??___fladd,w
  7120     16BB  3801               	iorlw	1
  7121     16BC  00E9               	movwf	___fladd@grs
  7122     16BD  2EC0               	goto	l2590
  7123     16BE                     l2588:
  7124     16BE  1003               	clrc
  7125     16BF  0CE9               	rrf	___fladd@grs,f
  7126     16C0                     l2590:
  7127     16C0  1C56               	btfss	___fladd@b,0
  7128     16C1  2EC3               	goto	u3521
  7129     16C2  2EC4               	goto	u3520
  7130     16C3                     u3521:
  7131     16C3  2EC5               	goto	l2594
  7132     16C4                     u3520:
  7133     16C4                     l2592:
  7134     16C4  17E9               	bsf	___fladd@grs,7
  7135     16C5                     l2594:
  7136     16C5  3001               	movlw	1
  7137     16C6  00DE               	movwf	??___fladd
  7138     16C7                     u3535:
  7139     16C7  0D59               	rlf	___fladd@b+3,w
  7140     16C8  0CD9               	rrf	___fladd@b+3,f
  7141     16C9  0CD8               	rrf	___fladd@b+2,f
  7142     16CA  0CD7               	rrf	___fladd@b+1,f
  7143     16CB  0CD6               	rrf	___fladd@b,f
  7144     16CC  0BDE               	decfsz	??___fladd& (0+127),f
  7145     16CD  2EC7               	goto	u3535
  7146     16CE                     l2596:
  7147     16CE  3001               	movlw	1
  7148     16CF  00DE               	movwf	??___fladd
  7149     16D0  085E               	movf	??___fladd,w
  7150     16D1  07E8               	addwf	___fladd@bexp,f
  7151     16D2  2F87               	goto	l2632
  7152     16D3                     l2598:
  7153     16D3  0859               	movf	___fladd@b+3,w
  7154     16D4  3A80               	xorlw	128
  7155     16D5  00FF               	movwf	btemp+1
  7156     16D6  085D               	movf	___fladd@a+3,w
  7157     16D7  3A80               	xorlw	128
  7158     16D8  027F               	subwf	btemp+1,w
  7159     16D9  1D03               	skipz
  7160     16DA  2EE5               	goto	u3543
  7161     16DB  085C               	movf	___fladd@a+2,w
  7162     16DC  0258               	subwf	___fladd@b+2,w
  7163     16DD  1D03               	skipz
  7164     16DE  2EE5               	goto	u3543
  7165     16DF  085B               	movf	___fladd@a+1,w
  7166     16E0  0257               	subwf	___fladd@b+1,w
  7167     16E1  1D03               	skipz
  7168     16E2  2EE5               	goto	u3543
  7169     16E3  085A               	movf	___fladd@a,w
  7170     16E4  0256               	subwf	___fladd@b,w
  7171     16E5                     u3543:
  7172     16E5  1803               	skipnc
  7173     16E6  2EE8               	goto	u3541
  7174     16E7  2EE9               	goto	u3540
  7175     16E8                     u3541:
  7176     16E8  2F41               	goto	l2608
  7177     16E9                     u3540:
  7178     16E9                     l2600:
  7179     16E9  30FF               	movlw	255
  7180     16EA  00DE               	movwf	??___fladd
  7181     16EB  30FF               	movlw	255
  7182     16EC  00DF               	movwf	??___fladd+1
  7183     16ED  30FF               	movlw	255
  7184     16EE  00E0               	movwf	??___fladd+2
  7185     16EF  30FF               	movlw	255
  7186     16F0  00E1               	movwf	??___fladd+3
  7187     16F1  085A               	movf	___fladd@a,w
  7188     16F2  00E2               	movwf	??___fladd+4
  7189     16F3  085B               	movf	___fladd@a+1,w
  7190     16F4  00E3               	movwf	??___fladd+5
  7191     16F5  085C               	movf	___fladd@a+2,w
  7192     16F6  00E4               	movwf	??___fladd+6
  7193     16F7  085D               	movf	___fladd@a+3,w
  7194     16F8  00E5               	movwf	??___fladd+7
  7195     16F9  0856               	movf	___fladd@b,w
  7196     16FA  02E2               	subwf	??___fladd+4,f
  7197     16FB  0857               	movf	___fladd@b+1,w
  7198     16FC  1C03               	skipc
  7199     16FD  0F57               	incfsz	___fladd@b+1,w
  7200     16FE  2F00               	goto	u3551
  7201     16FF  2F01               	goto	u3552
  7202     1700                     u3551:
  7203     1700  02E3               	subwf	??___fladd+5,f
  7204     1701                     u3552:
  7205     1701  0858               	movf	___fladd@b+2,w
  7206     1702  1C03               	skipc
  7207     1703  0F58               	incfsz	___fladd@b+2,w
  7208     1704  2F06               	goto	u3553
  7209     1705  2F07               	goto	u3554
  7210     1706                     u3553:
  7211     1706  02E4               	subwf	??___fladd+6,f
  7212     1707                     u3554:
  7213     1707  0859               	movf	___fladd@b+3,w
  7214     1708  1C03               	skipc
  7215     1709  0F59               	incfsz	___fladd@b+3,w
  7216     170A  2F0C               	goto	u3555
  7217     170B  2F0D               	goto	u3556
  7218     170C                     u3555:
  7219     170C  02E5               	subwf	??___fladd+7,f
  7220     170D                     u3556:
  7221     170D  0862               	movf	??___fladd+4,w
  7222     170E  07DE               	addwf	??___fladd,f
  7223     170F  0863               	movf	??___fladd+5,w
  7224     1710  1803               	skipnc
  7225     1711  0F63               	incfsz	??___fladd+5,w
  7226     1712  2F14               	goto	u3560
  7227     1713  2F15               	goto	u3561
  7228     1714                     u3560:
  7229     1714  07DF               	addwf	??___fladd+1,f
  7230     1715                     u3561:
  7231     1715  0864               	movf	??___fladd+6,w
  7232     1716  1803               	skipnc
  7233     1717  0F64               	incfsz	??___fladd+6,w
  7234     1718  2F1A               	goto	u3562
  7235     1719  2F1B               	goto	u3563
  7236     171A                     u3562:
  7237     171A  07E0               	addwf	??___fladd+2,f
  7238     171B                     u3563:
  7239     171B  0865               	movf	??___fladd+7,w
  7240     171C  1803               	skipnc
  7241     171D  0A65               	incf	??___fladd+7,w
  7242     171E  07E1               	addwf	??___fladd+3,f
  7243     171F  0861               	movf	??___fladd+3,w
  7244     1720  00D9               	movwf	___fladd@b+3
  7245     1721  0860               	movf	??___fladd+2,w
  7246     1722  00D8               	movwf	___fladd@b+2
  7247     1723  085F               	movf	??___fladd+1,w
  7248     1724  00D7               	movwf	___fladd@b+1
  7249     1725  085E               	movf	??___fladd,w
  7250     1726  00D6               	movwf	___fladd@b
  7251     1727                     l2602:
  7252     1727  3080               	movlw	128
  7253     1728  00DE               	movwf	??___fladd
  7254     1729  085E               	movf	??___fladd,w
  7255     172A  06E6               	xorwf	___fladd@signs,f
  7256     172B  09E9               	comf	___fladd@grs,f
  7257     172C  0AE9               	incf	___fladd@grs,f
  7258     172D                     l2604:
  7259     172D  0869               	movf	___fladd@grs,w
  7260     172E  1D03               	btfss	3,2
  7261     172F  2F31               	goto	u3571
  7262     1730  2F32               	goto	u3570
  7263     1731                     u3571:
  7264     1731  2F4F               	goto	l677
  7265     1732                     u3570:
  7266     1732                     l2606:
  7267     1732  3001               	movlw	1
  7268     1733  07D6               	addwf	___fladd@b,f
  7269     1734  3000               	movlw	0
  7270     1735  1803               	skipnc
  7271     1736  3001               	movlw	1
  7272     1737  07D7               	addwf	___fladd@b+1,f
  7273     1738  3000               	movlw	0
  7274     1739  1803               	skipnc
  7275     173A  3001               	movlw	1
  7276     173B  07D8               	addwf	___fladd@b+2,f
  7277     173C  3000               	movlw	0
  7278     173D  1803               	skipnc
  7279     173E  3001               	movlw	1
  7280     173F  07D9               	addwf	___fladd@b+3,f
  7281     1740  2F4F               	goto	l677
  7282     1741                     l2608:
  7283     1741  085A               	movf	___fladd@a,w
  7284     1742  02D6               	subwf	___fladd@b,f
  7285     1743  085B               	movf	___fladd@a+1,w
  7286     1744  1C03               	skipc
  7287     1745  0F5B               	incfsz	___fladd@a+1,w
  7288     1746  02D7               	subwf	___fladd@b+1,f
  7289     1747  085C               	movf	___fladd@a+2,w
  7290     1748  1C03               	skipc
  7291     1749  0F5C               	incfsz	___fladd@a+2,w
  7292     174A  02D8               	subwf	___fladd@b+2,f
  7293     174B  085D               	movf	___fladd@a+3,w
  7294     174C  1C03               	skipc
  7295     174D  0F5D               	incfsz	___fladd@a+3,w
  7296     174E  02D9               	subwf	___fladd@b+3,f
  7297     174F                     l677:
  7298     174F  0859               	movf	___fladd@b+3,w
  7299     1750  0458               	iorwf	___fladd@b+2,w
  7300     1751  0457               	iorwf	___fladd@b+1,w
  7301     1752  0456               	iorwf	___fladd@b,w
  7302     1753  1D03               	skipz
  7303     1754  2F56               	goto	u3581
  7304     1755  2F57               	goto	u3580
  7305     1756                     u3581:
  7306     1756  2F83               	goto	l2630
  7307     1757                     u3580:
  7308     1757                     l2610:
  7309     1757  0869               	movf	___fladd@grs,w
  7310     1758  1D03               	btfss	3,2
  7311     1759  2F5B               	goto	u3591
  7312     175A  2F5C               	goto	u3590
  7313     175B                     u3591:
  7314     175B  2F83               	goto	l2630
  7315     175C                     u3590:
  7316     175C                     l2612:
  7317     175C  3000               	movlw	0
  7318     175D  00D9               	movwf	?___fladd+3
  7319     175E  3000               	movlw	0
  7320     175F  00D8               	movwf	?___fladd+2
  7321     1760  3000               	movlw	0
  7322     1761  00D7               	movwf	?___fladd+1
  7323     1762  3000               	movlw	0
  7324     1763  00D6               	movwf	?___fladd
  7325     1764  2FFF               	goto	l669
  7326     1765                     l2616:
  7327     1765  3001               	movlw	1
  7328     1766  00DE               	movwf	??___fladd
  7329     1767                     u3605:
  7330     1767  1003               	clrc
  7331     1768  0DD6               	rlf	___fladd@b,f
  7332     1769  0DD7               	rlf	___fladd@b+1,f
  7333     176A  0DD8               	rlf	___fladd@b+2,f
  7334     176B  0DD9               	rlf	___fladd@b+3,f
  7335     176C  0BDE               	decfsz	??___fladd,f
  7336     176D  2F67               	goto	u3605
  7337     176E                     l2618:
  7338     176E  1FE9               	btfss	___fladd@grs,7
  7339     176F  2F71               	goto	u3611
  7340     1770  2F72               	goto	u3610
  7341     1771                     u3611:
  7342     1771  2F73               	goto	l681
  7343     1772                     u3610:
  7344     1772                     l2620:
  7345     1772  1456               	bsf	___fladd@b,0
  7346     1773                     l681:
  7347     1773  1C69               	btfss	___fladd@grs,0
  7348     1774  2F76               	goto	u3621
  7349     1775  2F77               	goto	u3620
  7350     1776                     u3621:
  7351     1776  2F7A               	goto	l2624
  7352     1777                     u3620:
  7353     1777                     l2622:
  7354     1777  1403               	setc
  7355     1778  0DE9               	rlf	___fladd@grs,f
  7356     1779  2F7C               	goto	l2626
  7357     177A                     l2624:
  7358     177A  1003               	clrc
  7359     177B  0DE9               	rlf	___fladd@grs,f
  7360     177C                     l2626:
  7361     177C  0868               	movf	___fladd@bexp,w
  7362     177D  1903               	btfsc	3,2
  7363     177E  2F80               	goto	u3631
  7364     177F  2F81               	goto	u3630
  7365     1780                     u3631:
  7366     1780  2F83               	goto	l2630
  7367     1781                     u3630:
  7368     1781                     l2628:
  7369     1781  3001               	movlw	1
  7370     1782  02E8               	subwf	___fladd@bexp,f
  7371     1783                     l2630:
  7372     1783  1FD8               	btfss	___fladd@b+2,7
  7373     1784  2F86               	goto	u3641
  7374     1785  2F87               	goto	u3640
  7375     1786                     u3641:
  7376     1786  2F65               	goto	l2616
  7377     1787                     u3640:
  7378     1787                     l2632:
  7379     1787  01E7               	clrf	___fladd@aexp
  7380     1788                     l2634:
  7381     1788  1FE9               	btfss	___fladd@grs,7
  7382     1789  2F8B               	goto	u3651
  7383     178A  2F8C               	goto	u3650
  7384     178B                     u3651:
  7385     178B  2F9A               	goto	l2642
  7386     178C                     u3650:
  7387     178C                     l2636:
  7388     178C  0869               	movf	___fladd@grs,w
  7389     178D  397F               	andlw	127
  7390     178E  1903               	btfsc	3,2
  7391     178F  2F91               	goto	u3661
  7392     1790  2F92               	goto	u3660
  7393     1791                     u3661:
  7394     1791  2F95               	goto	l687
  7395     1792                     u3660:
  7396     1792                     l2638:
  7397     1792  01E7               	clrf	___fladd@aexp
  7398     1793  0AE7               	incf	___fladd@aexp,f
  7399     1794  2F9A               	goto	l2642
  7400     1795                     l687:
  7401     1795  1C56               	btfss	___fladd@b,0
  7402     1796  2F98               	goto	u3671
  7403     1797  2F99               	goto	u3670
  7404     1798                     u3671:
  7405     1798  2F9A               	goto	l2642
  7406     1799                     u3670:
  7407     1799  2F92               	goto	l2638
  7408     179A                     l2642:
  7409     179A  0867               	movf	___fladd@aexp,w
  7410     179B  1903               	btfsc	3,2
  7411     179C  2F9E               	goto	u3681
  7412     179D  2F9F               	goto	u3680
  7413     179E                     u3681:
  7414     179E  2FD3               	goto	l690
  7415     179F                     u3680:
  7416     179F                     l2644:
  7417     179F  3001               	movlw	1
  7418     17A0  07D6               	addwf	___fladd@b,f
  7419     17A1  3000               	movlw	0
  7420     17A2  1803               	skipnc
  7421     17A3  3001               	movlw	1
  7422     17A4  07D7               	addwf	___fladd@b+1,f
  7423     17A5  3000               	movlw	0
  7424     17A6  1803               	skipnc
  7425     17A7  3001               	movlw	1
  7426     17A8  07D8               	addwf	___fladd@b+2,f
  7427     17A9  3000               	movlw	0
  7428     17AA  1803               	skipnc
  7429     17AB  3001               	movlw	1
  7430     17AC  07D9               	addwf	___fladd@b+3,f
  7431     17AD                     l2646:
  7432     17AD  1C59               	btfss	___fladd@b+3,0
  7433     17AE  2FB0               	goto	u3691
  7434     17AF  2FB1               	goto	u3690
  7435     17B0                     u3691:
  7436     17B0  2FD3               	goto	l690
  7437     17B1                     u3690:
  7438     17B1                     l2648:
  7439     17B1  0856               	movf	___fladd@b,w
  7440     17B2  00DE               	movwf	??___fladd
  7441     17B3  0857               	movf	___fladd@b+1,w
  7442     17B4  00DF               	movwf	??___fladd+1
  7443     17B5  0858               	movf	___fladd@b+2,w
  7444     17B6  00E0               	movwf	??___fladd+2
  7445     17B7  0859               	movf	___fladd@b+3,w
  7446     17B8  00E1               	movwf	??___fladd+3
  7447     17B9  3001               	movlw	1
  7448     17BA  00E2               	movwf	??___fladd+4
  7449     17BB                     u3705:
  7450     17BB  0D61               	rlf	??___fladd+3,w
  7451     17BC  0CE1               	rrf	??___fladd+3,f
  7452     17BD  0CE0               	rrf	??___fladd+2,f
  7453     17BE  0CDF               	rrf	??___fladd+1,f
  7454     17BF  0CDE               	rrf	??___fladd,f
  7455     17C0                     u3700:
  7456     17C0  0BE2               	decfsz	??___fladd+4,f
  7457     17C1  2FBB               	goto	u3705
  7458     17C2  0861               	movf	??___fladd+3,w
  7459     17C3  00D9               	movwf	___fladd@b+3
  7460     17C4  0860               	movf	??___fladd+2,w
  7461     17C5  00D8               	movwf	___fladd@b+2
  7462     17C6  085F               	movf	??___fladd+1,w
  7463     17C7  00D7               	movwf	___fladd@b+1
  7464     17C8  085E               	movf	??___fladd,w
  7465     17C9  00D6               	movwf	___fladd@b
  7466     17CA  0A68               	incf	___fladd@bexp,w
  7467     17CB  1903               	btfsc	3,2
  7468     17CC  2FCE               	goto	u3711
  7469     17CD  2FCF               	goto	u3710
  7470     17CE                     u3711:
  7471     17CE  2FD3               	goto	l690
  7472     17CF                     u3710:
  7473     17CF                     l2650:
  7474     17CF  3001               	movlw	1
  7475     17D0  00DE               	movwf	??___fladd
  7476     17D1  085E               	movf	??___fladd,w
  7477     17D2  07E8               	addwf	___fladd@bexp,f
  7478     17D3                     l690:
  7479     17D3  0A68               	incf	___fladd@bexp,w
  7480     17D4  1903               	btfsc	3,2
  7481     17D5  2FD7               	goto	u3721
  7482     17D6  2FD8               	goto	u3720
  7483     17D7                     u3721:
  7484     17D7  2FDD               	goto	l2654
  7485     17D8                     u3720:
  7486     17D8                     l2652:
  7487     17D8  0868               	movf	___fladd@bexp,w
  7488     17D9  1D03               	btfss	3,2
  7489     17DA  2FDC               	goto	u3731
  7490     17DB  2FDD               	goto	u3730
  7491     17DC                     u3731:
  7492     17DC  2FEB               	goto	l2660
  7493     17DD                     u3730:
  7494     17DD                     l2654:
  7495     17DD  3000               	movlw	0
  7496     17DE  00D9               	movwf	___fladd@b+3
  7497     17DF  3000               	movlw	0
  7498     17E0  00D8               	movwf	___fladd@b+2
  7499     17E1  3000               	movlw	0
  7500     17E2  00D7               	movwf	___fladd@b+1
  7501     17E3  3000               	movlw	0
  7502     17E4  00D6               	movwf	___fladd@b
  7503     17E5                     l2656:
  7504     17E5  0868               	movf	___fladd@bexp,w
  7505     17E6  1D03               	btfss	3,2
  7506     17E7  2FE9               	goto	u3741
  7507     17E8  2FEA               	goto	u3740
  7508     17E9                     u3741:
  7509     17E9  2FEB               	goto	l2660
  7510     17EA                     u3740:
  7511     17EA                     l2658:
  7512     17EA  01E6               	clrf	___fladd@signs
  7513     17EB                     l2660:
  7514     17EB  1C68               	btfss	___fladd@bexp,0
  7515     17EC  2FEE               	goto	u3751
  7516     17ED  2FEF               	goto	u3750
  7517     17EE                     u3751:
  7518     17EE  2FF1               	goto	l2664
  7519     17EF                     u3750:
  7520     17EF                     l2662:
  7521     17EF  17D8               	bsf	___fladd@b+2,7
  7522     17F0  2FF5               	goto	l698
  7523     17F1                     l2664:
  7524     17F1  307F               	movlw	127
  7525     17F2  00DE               	movwf	??___fladd
  7526     17F3  085E               	movf	??___fladd,w
  7527     17F4  05D8               	andwf	___fladd@b+2,f
  7528     17F5                     l698:
  7529     17F5  0868               	movf	___fladd@bexp,w
  7530     17F6  00DE               	movwf	??___fladd
  7531     17F7  1003               	clrc
  7532     17F8  0C5E               	rrf	??___fladd,w
  7533     17F9  00D9               	movwf	___fladd@b+3
  7534     17FA                     l2666:
  7535     17FA  1FE6               	btfss	___fladd@signs,7
  7536     17FB  2FFD               	goto	u3761
  7537     17FC  2FFE               	goto	u3760
  7538     17FD                     u3761:
  7539     17FD  2FFF               	goto	l699
  7540     17FE                     u3760:
  7541     17FE                     l2668:
  7542     17FE  17D9               	bsf	___fladd@b+3,7
  7543     17FF                     l699:
  7544     17FF                     l669:
  7545     17FF  0008               	return
  7546     1800                     __end_of___fladd:
  7547                           
  7548                           	psect	text17
  7549     1A00                     __ptext17:	
  7550 ;; *************** function ___flneg *****************
  7551 ;; Defined at:
  7552 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  f1              4    2[COMMON] unsigned char 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;		None
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  4    2[COMMON] unsigned char 
  7559 ;; Registers used:
  7560 ;;		wreg
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7566 ;;      Params:         4       0       0       0       0
  7567 ;;      Locals:         0       0       0       0       0
  7568 ;;      Temps:          0       0       0       0       0
  7569 ;;      Totals:         4       0       0       0       0
  7570 ;;Total ram usage:        4 bytes
  7571 ;; Hardware stack levels used: 1
  7572 ;; Hardware stack levels required when called: 1
  7573 ;; This function calls:
  7574 ;;		Nothing
  7575 ;; This function is called by:
  7576 ;;		_sprintf
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580     1A00                     ___flneg:	
  7581                           ;psect for function ___flneg
  7582                           
  7583     1A00                     l3086:	
  7584                           ;incstack = 0
  7585                           ; Regs used in ___flneg: [wreg]
  7586                           
  7587     1A00  0875               	movf	___flneg@f1+3,w
  7588     1A01  0474               	iorwf	___flneg@f1+2,w
  7589     1A02  0473               	iorwf	___flneg@f1+1,w
  7590     1A03  0472               	iorwf	___flneg@f1,w
  7591     1A04  1903               	skipnz
  7592     1A05  2A07               	goto	u4881
  7593     1A06  2A08               	goto	u4880
  7594     1A07                     u4881:
  7595     1A07  2A0A               	goto	l3090
  7596     1A08                     u4880:
  7597     1A08                     l3088:
  7598     1A08  3080               	movlw	128
  7599     1A09  06F5               	xorwf	___flneg@f1+3,f
  7600     1A0A                     l3090:
  7601     1A0A                     l528:
  7602     1A0A  0008               	return
  7603     1A0B                     __end_of___flneg:
  7604                           
  7605                           	psect	text18
  7606     1EA5                     __ptext18:	
  7607 ;; *************** function ___flge *****************
  7608 ;; Defined at:
  7609 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  ff1             4    2[COMMON] unsigned char 
  7612 ;;  ff2             4    6[COMMON] unsigned char 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;		None
  7615 ;; Return value:  Size  Location     Type
  7616 ;;		None               void
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7624 ;;      Params:         8       0       0       0       0
  7625 ;;      Locals:         0       0       0       0       0
  7626 ;;      Temps:          0       4       0       0       0
  7627 ;;      Totals:         8       4       0       0       0
  7628 ;;Total ram usage:       12 bytes
  7629 ;; Hardware stack levels used: 1
  7630 ;; Hardware stack levels required when called: 1
  7631 ;; This function calls:
  7632 ;;		Nothing
  7633 ;; This function is called by:
  7634 ;;		_sprintf
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638     1EA5                     ___flge:	
  7639                           ;psect for function ___flge
  7640                           
  7641     1EA5                     l3066:	
  7642                           ;incstack = 0
  7643                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7644                           
  7645     1EA5  3000               	movlw	0
  7646     1EA6  0572               	andwf	___flge@ff1,w
  7647     1EA7  1283               	bcf	3,5	;RP0=0, select bank0
  7648     1EA8  1303               	bcf	3,6	;RP1=0, select bank0
  7649     1EA9  00A0               	movwf	??___flge
  7650     1EAA  3000               	movlw	0
  7651     1EAB  0573               	andwf	___flge@ff1+1,w
  7652     1EAC  00A1               	movwf	??___flge+1
  7653     1EAD  3080               	movlw	128
  7654     1EAE  0574               	andwf	___flge@ff1+2,w
  7655     1EAF  00A2               	movwf	??___flge+2
  7656     1EB0  307F               	movlw	127
  7657     1EB1  0575               	andwf	___flge@ff1+3,w
  7658     1EB2  00A3               	movwf	??___flge+3
  7659     1EB3  0823               	movf	??___flge+3,w
  7660     1EB4  0422               	iorwf	??___flge+2,w
  7661     1EB5  0421               	iorwf	??___flge+1,w
  7662     1EB6  0420               	iorwf	??___flge,w
  7663     1EB7  1D03               	skipz
  7664     1EB8  2EBA               	goto	u4811
  7665     1EB9  2EBB               	goto	u4810
  7666     1EBA                     u4811:
  7667     1EBA  2EC3               	goto	l520
  7668     1EBB                     u4810:
  7669     1EBB                     l3068:
  7670     1EBB  3000               	movlw	0
  7671     1EBC  00F5               	movwf	___flge@ff1+3
  7672     1EBD  3000               	movlw	0
  7673     1EBE  00F4               	movwf	___flge@ff1+2
  7674     1EBF  3000               	movlw	0
  7675     1EC0  00F3               	movwf	___flge@ff1+1
  7676     1EC1  3000               	movlw	0
  7677     1EC2  00F2               	movwf	___flge@ff1
  7678     1EC3                     l520:
  7679     1EC3  3000               	movlw	0
  7680     1EC4  0576               	andwf	___flge@ff2,w
  7681     1EC5  00A0               	movwf	??___flge
  7682     1EC6  3000               	movlw	0
  7683     1EC7  0577               	andwf	___flge@ff2+1,w
  7684     1EC8  00A1               	movwf	??___flge+1
  7685     1EC9  3080               	movlw	128
  7686     1ECA  0578               	andwf	___flge@ff2+2,w
  7687     1ECB  00A2               	movwf	??___flge+2
  7688     1ECC  307F               	movlw	127
  7689     1ECD  0579               	andwf	___flge@ff2+3,w
  7690     1ECE  00A3               	movwf	??___flge+3
  7691     1ECF  0823               	movf	??___flge+3,w
  7692     1ED0  0422               	iorwf	??___flge+2,w
  7693     1ED1  0421               	iorwf	??___flge+1,w
  7694     1ED2  0420               	iorwf	??___flge,w
  7695     1ED3  1D03               	skipz
  7696     1ED4  2ED6               	goto	u4821
  7697     1ED5  2ED7               	goto	u4820
  7698     1ED6                     u4821:
  7699     1ED6  2EDF               	goto	l3072
  7700     1ED7                     u4820:
  7701     1ED7                     l3070:
  7702     1ED7  3000               	movlw	0
  7703     1ED8  00F9               	movwf	___flge@ff2+3
  7704     1ED9  3000               	movlw	0
  7705     1EDA  00F8               	movwf	___flge@ff2+2
  7706     1EDB  3000               	movlw	0
  7707     1EDC  00F7               	movwf	___flge@ff2+1
  7708     1EDD  3000               	movlw	0
  7709     1EDE  00F6               	movwf	___flge@ff2
  7710     1EDF                     l3072:
  7711     1EDF  1FF5               	btfss	___flge@ff1+3,7
  7712     1EE0  2EE2               	goto	u4831
  7713     1EE1  2EE3               	goto	u4830
  7714     1EE2                     u4831:
  7715     1EE2  2F07               	goto	l3076
  7716     1EE3                     u4830:
  7717     1EE3                     l3074:
  7718     1EE3  3000               	movlw	0
  7719     1EE4  00A0               	movwf	??___flge
  7720     1EE5  3000               	movlw	0
  7721     1EE6  00A1               	movwf	??___flge+1
  7722     1EE7  3000               	movlw	0
  7723     1EE8  00A2               	movwf	??___flge+2
  7724     1EE9  3080               	movlw	128
  7725     1EEA  00A3               	movwf	??___flge+3
  7726     1EEB  0872               	movf	___flge@ff1,w
  7727     1EEC  02A0               	subwf	??___flge,f
  7728     1EED  0873               	movf	___flge@ff1+1,w
  7729     1EEE  1C03               	skipc
  7730     1EEF  0F73               	incfsz	___flge@ff1+1,w
  7731     1EF0  2EF2               	goto	u4841
  7732     1EF1  2EF3               	goto	u4842
  7733     1EF2                     u4841:
  7734     1EF2  02A1               	subwf	??___flge+1,f
  7735     1EF3                     u4842:
  7736     1EF3  0874               	movf	___flge@ff1+2,w
  7737     1EF4  1C03               	skipc
  7738     1EF5  0F74               	incfsz	___flge@ff1+2,w
  7739     1EF6  2EF8               	goto	u4843
  7740     1EF7  2EF9               	goto	u4844
  7741     1EF8                     u4843:
  7742     1EF8  02A2               	subwf	??___flge+2,f
  7743     1EF9                     u4844:
  7744     1EF9  0875               	movf	___flge@ff1+3,w
  7745     1EFA  1C03               	skipc
  7746     1EFB  0F75               	incfsz	___flge@ff1+3,w
  7747     1EFC  2EFE               	goto	u4845
  7748     1EFD  2EFF               	goto	u4846
  7749     1EFE                     u4845:
  7750     1EFE  02A3               	subwf	??___flge+3,f
  7751     1EFF                     u4846:
  7752     1EFF  0823               	movf	??___flge+3,w
  7753     1F00  00F5               	movwf	___flge@ff1+3
  7754     1F01  0822               	movf	??___flge+2,w
  7755     1F02  00F4               	movwf	___flge@ff1+2
  7756     1F03  0821               	movf	??___flge+1,w
  7757     1F04  00F3               	movwf	___flge@ff1+1
  7758     1F05  0820               	movf	??___flge,w
  7759     1F06  00F2               	movwf	___flge@ff1
  7760     1F07                     l3076:
  7761     1F07  1FF9               	btfss	___flge@ff2+3,7
  7762     1F08  2F0A               	goto	u4851
  7763     1F09  2F0B               	goto	u4850
  7764     1F0A                     u4851:
  7765     1F0A  2F2F               	goto	l523
  7766     1F0B                     u4850:
  7767     1F0B                     l3078:
  7768     1F0B  3000               	movlw	0
  7769     1F0C  00A0               	movwf	??___flge
  7770     1F0D  3000               	movlw	0
  7771     1F0E  00A1               	movwf	??___flge+1
  7772     1F0F  3000               	movlw	0
  7773     1F10  00A2               	movwf	??___flge+2
  7774     1F11  3080               	movlw	128
  7775     1F12  00A3               	movwf	??___flge+3
  7776     1F13  0876               	movf	___flge@ff2,w
  7777     1F14  02A0               	subwf	??___flge,f
  7778     1F15  0877               	movf	___flge@ff2+1,w
  7779     1F16  1C03               	skipc
  7780     1F17  0F77               	incfsz	___flge@ff2+1,w
  7781     1F18  2F1A               	goto	u4861
  7782     1F19  2F1B               	goto	u4862
  7783     1F1A                     u4861:
  7784     1F1A  02A1               	subwf	??___flge+1,f
  7785     1F1B                     u4862:
  7786     1F1B  0878               	movf	___flge@ff2+2,w
  7787     1F1C  1C03               	skipc
  7788     1F1D  0F78               	incfsz	___flge@ff2+2,w
  7789     1F1E  2F20               	goto	u4863
  7790     1F1F  2F21               	goto	u4864
  7791     1F20                     u4863:
  7792     1F20  02A2               	subwf	??___flge+2,f
  7793     1F21                     u4864:
  7794     1F21  0879               	movf	___flge@ff2+3,w
  7795     1F22  1C03               	skipc
  7796     1F23  0F79               	incfsz	___flge@ff2+3,w
  7797     1F24  2F26               	goto	u4865
  7798     1F25  2F27               	goto	u4866
  7799     1F26                     u4865:
  7800     1F26  02A3               	subwf	??___flge+3,f
  7801     1F27                     u4866:
  7802     1F27  0823               	movf	??___flge+3,w
  7803     1F28  00F9               	movwf	___flge@ff2+3
  7804     1F29  0822               	movf	??___flge+2,w
  7805     1F2A  00F8               	movwf	___flge@ff2+2
  7806     1F2B  0821               	movf	??___flge+1,w
  7807     1F2C  00F7               	movwf	___flge@ff2+1
  7808     1F2D  0820               	movf	??___flge,w
  7809     1F2E  00F6               	movwf	___flge@ff2
  7810     1F2F                     l523:
  7811     1F2F  3080               	movlw	128
  7812     1F30  06F5               	xorwf	___flge@ff1+3,f
  7813     1F31  3080               	movlw	128
  7814     1F32  06F9               	xorwf	___flge@ff2+3,f
  7815     1F33  0879               	movf	___flge@ff2+3,w
  7816     1F34  0275               	subwf	___flge@ff1+3,w
  7817     1F35  1D03               	skipz
  7818     1F36  2F41               	goto	u4875
  7819     1F37  0878               	movf	___flge@ff2+2,w
  7820     1F38  0274               	subwf	___flge@ff1+2,w
  7821     1F39  1D03               	skipz
  7822     1F3A  2F41               	goto	u4875
  7823     1F3B  0877               	movf	___flge@ff2+1,w
  7824     1F3C  0273               	subwf	___flge@ff1+1,w
  7825     1F3D  1D03               	skipz
  7826     1F3E  2F41               	goto	u4875
  7827     1F3F  0876               	movf	___flge@ff2,w
  7828     1F40  0272               	subwf	___flge@ff1,w
  7829     1F41                     u4875:
  7830     1F41  1803               	skipnc
  7831     1F42  2F44               	goto	u4871
  7832     1F43  2F45               	goto	u4870
  7833     1F44                     u4871:
  7834     1F44  2F47               	goto	l3082
  7835     1F45                     u4870:
  7836     1F45                     l3080:
  7837     1F45  1003               	clrc
  7838     1F46  2F48               	goto	l524
  7839     1F47                     l3082:
  7840     1F47  1403               	setc
  7841     1F48                     l524:
  7842     1F48  0008               	return
  7843     1F49                     __end_of___flge:
  7844                           
  7845                           	psect	text19
  7846     1BAE                     __ptext19:	
  7847 ;; *************** function ___fleq *****************
  7848 ;; Defined at:
  7849 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  ff1             4    2[COMMON] unsigned char 
  7852 ;;  ff2             4    6[COMMON] unsigned char 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;		None
  7855 ;; Return value:  Size  Location     Type
  7856 ;;		None               void
  7857 ;; Registers used:
  7858 ;;		wreg, status,2, status,0
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7864 ;;      Params:         8       0       0       0       0
  7865 ;;      Locals:         0       0       0       0       0
  7866 ;;      Temps:          0       4       0       0       0
  7867 ;;      Totals:         8       4       0       0       0
  7868 ;;Total ram usage:       12 bytes
  7869 ;; Hardware stack levels used: 1
  7870 ;; Hardware stack levels required when called: 1
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_sprintf
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878     1BAE                     ___fleq:	
  7879                           ;psect for function ___fleq
  7880                           
  7881     1BAE                     l3054:	
  7882                           ;incstack = 0
  7883                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7884                           
  7885     1BAE  3000               	movlw	0
  7886     1BAF  0572               	andwf	___fleq@ff1,w
  7887     1BB0  1283               	bcf	3,5	;RP0=0, select bank0
  7888     1BB1  1303               	bcf	3,6	;RP1=0, select bank0
  7889     1BB2  00A0               	movwf	??___fleq
  7890     1BB3  3000               	movlw	0
  7891     1BB4  0573               	andwf	___fleq@ff1+1,w
  7892     1BB5  00A1               	movwf	??___fleq+1
  7893     1BB6  3080               	movlw	128
  7894     1BB7  0574               	andwf	___fleq@ff1+2,w
  7895     1BB8  00A2               	movwf	??___fleq+2
  7896     1BB9  307F               	movlw	127
  7897     1BBA  0575               	andwf	___fleq@ff1+3,w
  7898     1BBB  00A3               	movwf	??___fleq+3
  7899     1BBC  0823               	movf	??___fleq+3,w
  7900     1BBD  0422               	iorwf	??___fleq+2,w
  7901     1BBE  0421               	iorwf	??___fleq+1,w
  7902     1BBF  0420               	iorwf	??___fleq,w
  7903     1BC0  1D03               	skipz
  7904     1BC1  2BC3               	goto	u4781
  7905     1BC2  2BC4               	goto	u4780
  7906     1BC3                     u4781:
  7907     1BC3  2BCC               	goto	l515
  7908     1BC4                     u4780:
  7909     1BC4                     l3056:
  7910     1BC4  3000               	movlw	0
  7911     1BC5  00F5               	movwf	___fleq@ff1+3
  7912     1BC6  3000               	movlw	0
  7913     1BC7  00F4               	movwf	___fleq@ff1+2
  7914     1BC8  3000               	movlw	0
  7915     1BC9  00F3               	movwf	___fleq@ff1+1
  7916     1BCA  3000               	movlw	0
  7917     1BCB  00F2               	movwf	___fleq@ff1
  7918     1BCC                     l515:
  7919     1BCC  3000               	movlw	0
  7920     1BCD  0576               	andwf	___fleq@ff2,w
  7921     1BCE  00A0               	movwf	??___fleq
  7922     1BCF  3000               	movlw	0
  7923     1BD0  0577               	andwf	___fleq@ff2+1,w
  7924     1BD1  00A1               	movwf	??___fleq+1
  7925     1BD2  3080               	movlw	128
  7926     1BD3  0578               	andwf	___fleq@ff2+2,w
  7927     1BD4  00A2               	movwf	??___fleq+2
  7928     1BD5  307F               	movlw	127
  7929     1BD6  0579               	andwf	___fleq@ff2+3,w
  7930     1BD7  00A3               	movwf	??___fleq+3
  7931     1BD8  0823               	movf	??___fleq+3,w
  7932     1BD9  0422               	iorwf	??___fleq+2,w
  7933     1BDA  0421               	iorwf	??___fleq+1,w
  7934     1BDB  0420               	iorwf	??___fleq,w
  7935     1BDC  1D03               	skipz
  7936     1BDD  2BDF               	goto	u4791
  7937     1BDE  2BE0               	goto	u4790
  7938     1BDF                     u4791:
  7939     1BDF  2BE8               	goto	l516
  7940     1BE0                     u4790:
  7941     1BE0                     l3058:
  7942     1BE0  3000               	movlw	0
  7943     1BE1  00F9               	movwf	___fleq@ff2+3
  7944     1BE2  3000               	movlw	0
  7945     1BE3  00F8               	movwf	___fleq@ff2+2
  7946     1BE4  3000               	movlw	0
  7947     1BE5  00F7               	movwf	___fleq@ff2+1
  7948     1BE6  3000               	movlw	0
  7949     1BE7  00F6               	movwf	___fleq@ff2
  7950     1BE8                     l516:
  7951     1BE8  0879               	movf	___fleq@ff2+3,w
  7952     1BE9  0675               	xorwf	___fleq@ff1+3,w
  7953     1BEA  1D03               	skipz
  7954     1BEB  2BF6               	goto	u4805
  7955     1BEC  0878               	movf	___fleq@ff2+2,w
  7956     1BED  0674               	xorwf	___fleq@ff1+2,w
  7957     1BEE  1D03               	skipz
  7958     1BEF  2BF6               	goto	u4805
  7959     1BF0  0877               	movf	___fleq@ff2+1,w
  7960     1BF1  0673               	xorwf	___fleq@ff1+1,w
  7961     1BF2  1D03               	skipz
  7962     1BF3  2BF6               	goto	u4805
  7963     1BF4  0876               	movf	___fleq@ff2,w
  7964     1BF5  0672               	xorwf	___fleq@ff1,w
  7965     1BF6                     u4805:
  7966     1BF6  1903               	skipnz
  7967     1BF7  2BF9               	goto	u4801
  7968     1BF8  2BFA               	goto	u4800
  7969     1BF9                     u4801:
  7970     1BF9  2BFC               	goto	l3062
  7971     1BFA                     u4800:
  7972     1BFA                     l3060:
  7973     1BFA  1003               	clrc
  7974     1BFB  2BFD               	goto	l517
  7975     1BFC                     l3062:
  7976     1BFC  1403               	setc
  7977     1BFD                     l517:
  7978     1BFD  0008               	return
  7979     1BFE                     __end_of___fleq:
  7980                           
  7981                           	psect	text20
  7982     1CFB                     __ptext20:	
  7983 ;; *************** function _adc_volt *****************
  7984 ;; Defined at:
  7985 ;;		line 125 in file "adc.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  channel         1    wreg     unsigned char 
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;  channel         1   72[BANK0 ] unsigned char 
  7990 ;;  final           4   66[BANK0 ] float 
  7991 ;;  out             2   70[BANK0 ] int 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  4   60[BANK0 ] float 
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8001 ;;      Params:         0       4       0       0       0
  8002 ;;      Locals:         0       7       0       0       0
  8003 ;;      Temps:          0       2       0       0       0
  8004 ;;      Totals:         0      13       0       0       0
  8005 ;;Total ram usage:       13 bytes
  8006 ;; Hardware stack levels used: 1
  8007 ;; Hardware stack levels required when called: 3
  8008 ;; This function calls:
  8009 ;;		___fldiv
  8010 ;;		___flmul
  8011 ;;		___xxtofl
  8012 ;;		_adc_RO
  8013 ;; This function is called by:
  8014 ;;		_main
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018     1CFB                     _adc_volt:	
  8019                           ;psect for function _adc_volt
  8020                           
  8021                           
  8022                           ;incstack = 0
  8023                           ; Regs used in _adc_volt: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8024                           ;adc_volt@channel stored from wreg
  8025     1CFB  1283               	bcf	3,5	;RP0=0, select bank0
  8026     1CFC  1303               	bcf	3,6	;RP1=0, select bank0
  8027     1CFD  00E8               	movwf	adc_volt@channel
  8028     1CFE                     l3414:
  8029                           
  8030                           ;adc.c: 126:     int out;;adc.c: 127:     float final;;adc.c: 128:     out = (int)adc_RO
      +                          (channel);
  8031     1CFE  0868               	movf	adc_volt@channel,w
  8032     1CFF  160A  158A  2226  160A  158A  	fcall	_adc_RO
  8033     1D04  1283               	bcf	3,5	;RP0=0, select bank0
  8034     1D05  1303               	bcf	3,6	;RP1=0, select bank0
  8035     1D06  00E0               	movwf	??_adc_volt
  8036     1D07  01E1               	clrf	??_adc_volt+1
  8037     1D08  0860               	movf	??_adc_volt,w
  8038     1D09  00E6               	movwf	adc_volt@out
  8039     1D0A  0861               	movf	??_adc_volt+1,w
  8040     1D0B  00E7               	movwf	adc_volt@out+1
  8041     1D0C                     l3416:
  8042                           
  8043                           ;adc.c: 129:     final = (float)out * 5 / 256;
  8044     1D0C  3043               	movlw	67
  8045     1D0D  00C5               	movwf	___fldiv@a+3
  8046     1D0E  3080               	movlw	128
  8047     1D0F  00C4               	movwf	___fldiv@a+2
  8048     1D10  3000               	movlw	0
  8049     1D11  00C3               	movwf	___fldiv@a+1
  8050     1D12  3000               	movlw	0
  8051     1D13  00C2               	movwf	___fldiv@a
  8052     1D14  3040               	movlw	64
  8053     1D15  00AB               	movwf	___flmul@b+3
  8054     1D16  30A0               	movlw	160
  8055     1D17  00AA               	movwf	___flmul@b+2
  8056     1D18  3000               	movlw	0
  8057     1D19  00A9               	movwf	___flmul@b+1
  8058     1D1A  3000               	movlw	0
  8059     1D1B  00A8               	movwf	___flmul@b
  8060     1D1C  0866               	movf	adc_volt@out,w
  8061     1D1D  00F2               	movwf	___xxtofl@val
  8062     1D1E  0867               	movf	adc_volt@out+1,w
  8063     1D1F  00F3               	movwf	___xxtofl@val+1
  8064     1D20  3000               	movlw	0
  8065     1D21  1BF3               	btfsc	___xxtofl@val+1,7
  8066     1D22  30FF               	movlw	255
  8067     1D23  00F4               	movwf	___xxtofl@val+2
  8068     1D24  00F5               	movwf	___xxtofl@val+3
  8069     1D25  3001               	movlw	1
  8070     1D26  160A  118A  2110  160A  158A  	fcall	___xxtofl
  8071     1D2B  0875               	movf	?___xxtofl+3,w
  8072     1D2C  1283               	bcf	3,5	;RP0=0, select bank0
  8073     1D2D  1303               	bcf	3,6	;RP1=0, select bank0
  8074     1D2E  00AF               	movwf	___flmul@a+3
  8075     1D2F  0874               	movf	?___xxtofl+2,w
  8076     1D30  00AE               	movwf	___flmul@a+2
  8077     1D31  0873               	movf	?___xxtofl+1,w
  8078     1D32  00AD               	movwf	___flmul@a+1
  8079     1D33  0872               	movf	?___xxtofl,w
  8080     1D34  00AC               	movwf	___flmul@a
  8081     1D35  120A  158A  2158  160A  158A  	fcall	___flmul
  8082     1D3A  1283               	bcf	3,5	;RP0=0, select bank0
  8083     1D3B  1303               	bcf	3,6	;RP1=0, select bank0
  8084     1D3C  082B               	movf	?___flmul+3,w
  8085     1D3D  00C9               	movwf	___fldiv@b+3
  8086     1D3E  082A               	movf	?___flmul+2,w
  8087     1D3F  00C8               	movwf	___fldiv@b+2
  8088     1D40  0829               	movf	?___flmul+1,w
  8089     1D41  00C7               	movwf	___fldiv@b+1
  8090     1D42  0828               	movf	?___flmul,w
  8091     1D43  00C6               	movwf	___fldiv@b
  8092     1D44  160A  118A  21CA  160A  158A  	fcall	___fldiv
  8093     1D49  1283               	bcf	3,5	;RP0=0, select bank0
  8094     1D4A  1303               	bcf	3,6	;RP1=0, select bank0
  8095     1D4B  0845               	movf	?___fldiv+3,w
  8096     1D4C  00E5               	movwf	adc_volt@final+3
  8097     1D4D  0844               	movf	?___fldiv+2,w
  8098     1D4E  00E4               	movwf	adc_volt@final+2
  8099     1D4F  0843               	movf	?___fldiv+1,w
  8100     1D50  00E3               	movwf	adc_volt@final+1
  8101     1D51  0842               	movf	?___fldiv,w
  8102     1D52  00E2               	movwf	adc_volt@final
  8103     1D53                     l3418:
  8104                           
  8105                           ;adc.c: 130:     return final;
  8106     1D53  0865               	movf	adc_volt@final+3,w
  8107     1D54  00DF               	movwf	?_adc_volt+3
  8108     1D55  0864               	movf	adc_volt@final+2,w
  8109     1D56  00DE               	movwf	?_adc_volt+2
  8110     1D57  0863               	movf	adc_volt@final+1,w
  8111     1D58  00DD               	movwf	?_adc_volt+1
  8112     1D59  0862               	movf	adc_volt@final,w
  8113     1D5A  00DC               	movwf	?_adc_volt
  8114     1D5B                     l147:
  8115     1D5B  0008               	return
  8116     1D5C                     __end_of_adc_volt:
  8117                           
  8118                           	psect	text21
  8119     1A26                     __ptext21:	
  8120 ;; *************** function _adc_RO *****************
  8121 ;; Defined at:
  8122 ;;		line 119 in file "adc.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  channel         1    wreg     unsigned char 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;  channel         1    5[COMMON] unsigned char 
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      unsigned char 
  8129 ;; Registers used:
  8130 ;;		wreg, status,2, status,0, pclath, cstack
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8136 ;;      Params:         0       0       0       0       0
  8137 ;;      Locals:         1       0       0       0       0
  8138 ;;      Temps:          1       0       0       0       0
  8139 ;;      Totals:         2       0       0       0       0
  8140 ;;Total ram usage:        2 bytes
  8141 ;; Hardware stack levels used: 1
  8142 ;; Hardware stack levels required when called: 2
  8143 ;; This function calls:
  8144 ;;		_adc_output
  8145 ;;		_adc_read
  8146 ;; This function is called by:
  8147 ;;		_adc_volt
  8148 ;;		_adc_mv
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152     1A26                     _adc_RO:	
  8153                           ;psect for function _adc_RO
  8154                           
  8155                           
  8156                           ;incstack = 0
  8157                           ; Regs used in _adc_RO: [wreg+status,2+status,0+pclath+cstack]
  8158                           ;adc_RO@channel stored from wreg
  8159     1A26  00F5               	movwf	adc_RO@channel
  8160     1A27                     l2834:
  8161                           
  8162                           ;adc.c: 120:     adc_read(channel);
  8163     1A27  0875               	movf	adc_RO@channel,w
  8164     1A28  160A  158A  2218  160A  158A  	fcall	_adc_read
  8165     1A2D                     l2836:
  8166                           
  8167                           ;adc.c: 121:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  8168     1A2D  3010               	movlw	16
  8169     1A2E  00F4               	movwf	??_adc_RO
  8170     1A2F                     u5937:
  8171     1A2F  0BF4               	decfsz	??_adc_RO,f
  8172     1A30  2A2F               	goto	u5937
  8173     1A31  0000               	nop
  8174     1A32                     l2838:
  8175                           
  8176                           ;adc.c: 122:     return adc_output();
  8177     1A32  160A  158A  21F7  160A  158A  	fcall	_adc_output
  8178     1A37                     l144:
  8179     1A37  0008               	return
  8180     1A38                     __end_of_adc_RO:
  8181                           
  8182                           	psect	text22
  8183     1A18                     __ptext22:	
  8184 ;; *************** function _adc_read *****************
  8185 ;; Defined at:
  8186 ;;		line 105 in file "adc.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  channel         1    wreg     unsigned char 
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;  channel         1    3[COMMON] unsigned char 
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  1    wreg      void 
  8193 ;; Registers used:
  8194 ;;		wreg, status,2, status,0
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8200 ;;      Params:         0       0       0       0       0
  8201 ;;      Locals:         1       0       0       0       0
  8202 ;;      Temps:          1       0       0       0       0
  8203 ;;      Totals:         2       0       0       0       0
  8204 ;;Total ram usage:        2 bytes
  8205 ;; Hardware stack levels used: 1
  8206 ;; Hardware stack levels required when called: 1
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_adc_RO
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214     1A18                     _adc_read:	
  8215                           ;psect for function _adc_read
  8216                           
  8217                           
  8218                           ;incstack = 0
  8219                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  8220                           ;adc_read@channel stored from wreg
  8221     1A18  00F3               	movwf	adc_read@channel
  8222     1A19                     l2334:
  8223                           
  8224                           ;adc.c: 106:     ADCON0bits.CHS = channel;
  8225     1A19  0873               	movf	adc_read@channel,w
  8226     1A1A  00F2               	movwf	??_adc_read
  8227     1A1B  0DF2               	rlf	??_adc_read,f
  8228     1A1C  0DF2               	rlf	??_adc_read,f
  8229     1A1D  1283               	bcf	3,5	;RP0=0, select bank0
  8230     1A1E  1303               	bcf	3,6	;RP1=0, select bank0
  8231     1A1F  081F               	movf	31,w	;volatile
  8232     1A20  0672               	xorwf	??_adc_read,w
  8233     1A21  39C3               	andlw	-61
  8234     1A22  0672               	xorwf	??_adc_read,w
  8235     1A23  009F               	movwf	31	;volatile
  8236     1A24                     l2336:
  8237                           
  8238                           ;adc.c: 107:     ADCON0bits.GO = 1;
  8239     1A24  149F               	bsf	31,1	;volatile
  8240     1A25                     l137:
  8241     1A25  0008               	return
  8242     1A26                     __end_of_adc_read:
  8243                           
  8244                           	psect	text23
  8245     19F7                     __ptext23:	
  8246 ;; *************** function _adc_output *****************
  8247 ;; Defined at:
  8248 ;;		line 112 in file "adc.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;		None
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;		None
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  1    wreg      unsigned char 
  8255 ;; Registers used:
  8256 ;;		wreg
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8262 ;;      Params:         0       0       0       0       0
  8263 ;;      Locals:         0       0       0       0       0
  8264 ;;      Temps:          0       0       0       0       0
  8265 ;;      Totals:         0       0       0       0       0
  8266 ;;Total ram usage:        0 bytes
  8267 ;; Hardware stack levels used: 1
  8268 ;; Hardware stack levels required when called: 1
  8269 ;; This function calls:
  8270 ;;		Nothing
  8271 ;; This function is called by:
  8272 ;;		_adc_RO
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276     19F7                     _adc_output:	
  8277                           ;psect for function _adc_output
  8278                           
  8279     19F7                     l2338:	
  8280                           ;incstack = 0
  8281                           ; Regs used in _adc_output: [wreg]
  8282                           
  8283                           
  8284                           ;adc.c: 113:     if (PIR1bits.ADIF == 1) {
  8285     19F7  1283               	bcf	3,5	;RP0=0, select bank0
  8286     19F8  1303               	bcf	3,6	;RP1=0, select bank0
  8287     19F9  1F0C               	btfss	12,6	;volatile
  8288     19FA  29FC               	goto	u2981
  8289     19FB  29FD               	goto	u2980
  8290     19FC                     u2981:
  8291     19FC  29FE               	goto	l2342
  8292     19FD                     u2980:
  8293     19FD                     l2340:
  8294                           
  8295                           ;adc.c: 114:         PIR1bits.ADIF = 0;
  8296     19FD  130C               	bcf	12,6	;volatile
  8297     19FE                     l2342:
  8298                           
  8299                           ;adc.c: 116:     return ADRESH;
  8300     19FE  081E               	movf	30,w	;volatile
  8301     19FF                     l141:
  8302     19FF  0008               	return
  8303     1A00                     __end_of_adc_output:
  8304                           
  8305                           	psect	text24
  8306     1110                     __ptext24:	
  8307 ;; *************** function ___xxtofl *****************
  8308 ;; Defined at:
  8309 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;  sign            1    wreg     unsigned char 
  8312 ;;  val             4    2[COMMON] long 
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;  sign            1    0[BANK0 ] unsigned char 
  8315 ;;  arg             4    2[BANK0 ] unsigned long 
  8316 ;;  exp             1    1[BANK0 ] unsigned char 
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  4    2[COMMON] unsigned char 
  8319 ;; Registers used:
  8320 ;;		wreg, status,2, status,0
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8326 ;;      Params:         4       0       0       0       0
  8327 ;;      Locals:         0       6       0       0       0
  8328 ;;      Temps:          4       0       0       0       0
  8329 ;;      Totals:         8       6       0       0       0
  8330 ;;Total ram usage:       14 bytes
  8331 ;; Hardware stack levels used: 1
  8332 ;; Hardware stack levels required when called: 1
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_adc_volt
  8337 ;;		_sprintf
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341     1110                     ___xxtofl:	
  8342                           ;psect for function ___xxtofl
  8343                           
  8344                           
  8345                           ;incstack = 0
  8346                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8347                           ;___xxtofl@sign stored from wreg
  8348     1110  1283               	bcf	3,5	;RP0=0, select bank0
  8349     1111  1303               	bcf	3,6	;RP1=0, select bank0
  8350     1112  00A0               	movwf	___xxtofl@sign
  8351     1113                     l3298:
  8352     1113  0820               	movf	___xxtofl@sign,w
  8353     1114  1903               	btfsc	3,2
  8354     1115  2917               	goto	u5341
  8355     1116  2918               	goto	u5340
  8356     1117                     u5341:
  8357     1117  292C               	goto	l3304
  8358     1118                     u5340:
  8359     1118                     l3300:
  8360     1118  1FF5               	btfss	___xxtofl@val+3,7
  8361     1119  291B               	goto	u5351
  8362     111A  291C               	goto	u5350
  8363     111B                     u5351:
  8364     111B  292C               	goto	l3304
  8365     111C                     u5350:
  8366     111C                     l3302:
  8367     111C  0972               	comf	___xxtofl@val,w
  8368     111D  00A2               	movwf	___xxtofl@arg
  8369     111E  0973               	comf	___xxtofl@val+1,w
  8370     111F  00A3               	movwf	___xxtofl@arg+1
  8371     1120  0974               	comf	___xxtofl@val+2,w
  8372     1121  00A4               	movwf	___xxtofl@arg+2
  8373     1122  0975               	comf	___xxtofl@val+3,w
  8374     1123  00A5               	movwf	___xxtofl@arg+3
  8375     1124  0AA2               	incf	___xxtofl@arg,f
  8376     1125  1903               	skipnz
  8377     1126  0AA3               	incf	___xxtofl@arg+1,f
  8378     1127  1903               	skipnz
  8379     1128  0AA4               	incf	___xxtofl@arg+2,f
  8380     1129  1903               	skipnz
  8381     112A  0AA5               	incf	___xxtofl@arg+3,f
  8382     112B  2934               	goto	l796
  8383     112C                     l3304:
  8384     112C  0875               	movf	___xxtofl@val+3,w
  8385     112D  00A5               	movwf	___xxtofl@arg+3
  8386     112E  0874               	movf	___xxtofl@val+2,w
  8387     112F  00A4               	movwf	___xxtofl@arg+2
  8388     1130  0873               	movf	___xxtofl@val+1,w
  8389     1131  00A3               	movwf	___xxtofl@arg+1
  8390     1132  0872               	movf	___xxtofl@val,w
  8391     1133  00A2               	movwf	___xxtofl@arg
  8392     1134                     l796:
  8393     1134  0875               	movf	___xxtofl@val+3,w
  8394     1135  0474               	iorwf	___xxtofl@val+2,w
  8395     1136  0473               	iorwf	___xxtofl@val+1,w
  8396     1137  0472               	iorwf	___xxtofl@val,w
  8397     1138  1D03               	skipz
  8398     1139  293B               	goto	u5361
  8399     113A  293C               	goto	u5360
  8400     113B                     u5361:
  8401     113B  2945               	goto	l3310
  8402     113C                     u5360:
  8403     113C                     l3306:
  8404     113C  3000               	movlw	0
  8405     113D  00F5               	movwf	?___xxtofl+3
  8406     113E  3000               	movlw	0
  8407     113F  00F4               	movwf	?___xxtofl+2
  8408     1140  3000               	movlw	0
  8409     1141  00F3               	movwf	?___xxtofl+1
  8410     1142  3000               	movlw	0
  8411     1143  00F2               	movwf	?___xxtofl
  8412     1144  29C9               	goto	l798
  8413     1145                     l3310:
  8414     1145  3096               	movlw	150
  8415     1146  00A1               	movwf	___xxtofl@exp
  8416     1147  2955               	goto	l3314
  8417     1148                     l3312:
  8418     1148  3001               	movlw	1
  8419     1149  00F6               	movwf	??___xxtofl
  8420     114A  0876               	movf	??___xxtofl,w
  8421     114B  07A1               	addwf	___xxtofl@exp,f
  8422     114C  3001               	movlw	1
  8423     114D                     u5375:
  8424     114D  1003               	clrc
  8425     114E  0CA5               	rrf	___xxtofl@arg+3,f
  8426     114F  0CA4               	rrf	___xxtofl@arg+2,f
  8427     1150  0CA3               	rrf	___xxtofl@arg+1,f
  8428     1151  0CA2               	rrf	___xxtofl@arg,f
  8429     1152  3EFF               	addlw	-1
  8430     1153  1D03               	skipz
  8431     1154  294D               	goto	u5375
  8432     1155                     l3314:
  8433     1155  30FE               	movlw	254
  8434     1156  0525               	andwf	___xxtofl@arg+3,w
  8435     1157  1D03               	btfss	3,2
  8436     1158  295A               	goto	u5381
  8437     1159  295B               	goto	u5380
  8438     115A                     u5381:
  8439     115A  2948               	goto	l3312
  8440     115B                     u5380:
  8441     115B  2977               	goto	l802
  8442     115C                     l3316:
  8443     115C  3001               	movlw	1
  8444     115D  00F6               	movwf	??___xxtofl
  8445     115E  0876               	movf	??___xxtofl,w
  8446     115F  07A1               	addwf	___xxtofl@exp,f
  8447     1160                     l3318:
  8448     1160  3001               	movlw	1
  8449     1161  07A2               	addwf	___xxtofl@arg,f
  8450     1162  3000               	movlw	0
  8451     1163  1803               	skipnc
  8452     1164  3001               	movlw	1
  8453     1165  07A3               	addwf	___xxtofl@arg+1,f
  8454     1166  3000               	movlw	0
  8455     1167  1803               	skipnc
  8456     1168  3001               	movlw	1
  8457     1169  07A4               	addwf	___xxtofl@arg+2,f
  8458     116A  3000               	movlw	0
  8459     116B  1803               	skipnc
  8460     116C  3001               	movlw	1
  8461     116D  07A5               	addwf	___xxtofl@arg+3,f
  8462     116E                     l3320:
  8463     116E  3001               	movlw	1
  8464     116F                     u5395:
  8465     116F  1003               	clrc
  8466     1170  0CA5               	rrf	___xxtofl@arg+3,f
  8467     1171  0CA4               	rrf	___xxtofl@arg+2,f
  8468     1172  0CA3               	rrf	___xxtofl@arg+1,f
  8469     1173  0CA2               	rrf	___xxtofl@arg,f
  8470     1174  3EFF               	addlw	-1
  8471     1175  1D03               	skipz
  8472     1176  296F               	goto	u5395
  8473     1177                     l802:
  8474     1177  30FF               	movlw	255
  8475     1178  0525               	andwf	___xxtofl@arg+3,w
  8476     1179  1D03               	btfss	3,2
  8477     117A  297C               	goto	u5401
  8478     117B  297D               	goto	u5400
  8479     117C                     u5401:
  8480     117C  295C               	goto	l3316
  8481     117D                     u5400:
  8482     117D  2989               	goto	l3324
  8483     117E                     l3322:
  8484     117E  3001               	movlw	1
  8485     117F  02A1               	subwf	___xxtofl@exp,f
  8486     1180  3001               	movlw	1
  8487     1181  00F6               	movwf	??___xxtofl
  8488     1182                     u5415:
  8489     1182  1003               	clrc
  8490     1183  0DA2               	rlf	___xxtofl@arg,f
  8491     1184  0DA3               	rlf	___xxtofl@arg+1,f
  8492     1185  0DA4               	rlf	___xxtofl@arg+2,f
  8493     1186  0DA5               	rlf	___xxtofl@arg+3,f
  8494     1187  0BF6               	decfsz	??___xxtofl,f
  8495     1188  2982               	goto	u5415
  8496     1189                     l3324:
  8497     1189  1BA4               	btfsc	___xxtofl@arg+2,7
  8498     118A  298C               	goto	u5421
  8499     118B  298D               	goto	u5420
  8500     118C                     u5421:
  8501     118C  2993               	goto	l809
  8502     118D                     u5420:
  8503     118D                     l3326:
  8504     118D  3002               	movlw	2
  8505     118E  0221               	subwf	___xxtofl@exp,w
  8506     118F  1803               	skipnc
  8507     1190  2992               	goto	u5431
  8508     1191  2993               	goto	u5430
  8509     1192                     u5431:
  8510     1192  297E               	goto	l3322
  8511     1193                     u5430:
  8512     1193                     l809:
  8513     1193  1821               	btfsc	___xxtofl@exp,0
  8514     1194  2996               	goto	u5441
  8515     1195  2997               	goto	u5440
  8516     1196                     u5441:
  8517     1196  299F               	goto	l810
  8518     1197                     u5440:
  8519     1197                     l3328:
  8520     1197  30FF               	movlw	255
  8521     1198  05A2               	andwf	___xxtofl@arg,f
  8522     1199  30FF               	movlw	255
  8523     119A  05A3               	andwf	___xxtofl@arg+1,f
  8524     119B  307F               	movlw	127
  8525     119C  05A4               	andwf	___xxtofl@arg+2,f
  8526     119D  30FF               	movlw	255
  8527     119E  05A5               	andwf	___xxtofl@arg+3,f
  8528     119F                     l810:
  8529     119F  1003               	clrc
  8530     11A0  0CA1               	rrf	___xxtofl@exp,f
  8531     11A1                     l3330:
  8532     11A1  0821               	movf	___xxtofl@exp,w
  8533     11A2  00F6               	movwf	??___xxtofl
  8534     11A3  01F7               	clrf	??___xxtofl+1
  8535     11A4  01F8               	clrf	??___xxtofl+2
  8536     11A5  01F9               	clrf	??___xxtofl+3
  8537     11A6  3018               	movlw	24
  8538     11A7                     u5455:
  8539     11A7  1003               	clrc
  8540     11A8  0DF6               	rlf	??___xxtofl,f
  8541     11A9  0DF7               	rlf	??___xxtofl+1,f
  8542     11AA  0DF8               	rlf	??___xxtofl+2,f
  8543     11AB  0DF9               	rlf	??___xxtofl+3,f
  8544     11AC                     u5450:
  8545     11AC  3EFF               	addlw	-1
  8546     11AD  1D03               	skipz
  8547     11AE  29A7               	goto	u5455
  8548     11AF  0876               	movf	??___xxtofl,w
  8549     11B0  04A2               	iorwf	___xxtofl@arg,f
  8550     11B1  0877               	movf	??___xxtofl+1,w
  8551     11B2  04A3               	iorwf	___xxtofl@arg+1,f
  8552     11B3  0878               	movf	??___xxtofl+2,w
  8553     11B4  04A4               	iorwf	___xxtofl@arg+2,f
  8554     11B5  0879               	movf	??___xxtofl+3,w
  8555     11B6  04A5               	iorwf	___xxtofl@arg+3,f
  8556     11B7                     l3332:
  8557     11B7  0820               	movf	___xxtofl@sign,w
  8558     11B8  1903               	btfsc	3,2
  8559     11B9  29BB               	goto	u5461
  8560     11BA  29BC               	goto	u5460
  8561     11BB                     u5461:
  8562     11BB  29C1               	goto	l3338
  8563     11BC                     u5460:
  8564     11BC                     l3334:
  8565     11BC  1FF5               	btfss	___xxtofl@val+3,7
  8566     11BD  29BF               	goto	u5471
  8567     11BE  29C0               	goto	u5470
  8568     11BF                     u5471:
  8569     11BF  29C1               	goto	l3338
  8570     11C0                     u5470:
  8571     11C0                     l3336:
  8572     11C0  17A5               	bsf	___xxtofl@arg+3,7
  8573     11C1                     l3338:
  8574     11C1  0825               	movf	___xxtofl@arg+3,w
  8575     11C2  00F5               	movwf	?___xxtofl+3
  8576     11C3  0824               	movf	___xxtofl@arg+2,w
  8577     11C4  00F4               	movwf	?___xxtofl+2
  8578     11C5  0823               	movf	___xxtofl@arg+1,w
  8579     11C6  00F3               	movwf	?___xxtofl+1
  8580     11C7  0822               	movf	___xxtofl@arg,w
  8581     11C8  00F2               	movwf	?___xxtofl
  8582     11C9                     l798:
  8583     11C9  0008               	return
  8584     11CA                     __end_of___xxtofl:
  8585                           
  8586                           	psect	text25
  8587     0958                     __ptext25:	
  8588 ;; *************** function ___flmul *****************
  8589 ;; Defined at:
  8590 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  b               4    8[BANK0 ] unsigned char 
  8593 ;;  a               4   12[BANK0 ] unsigned char 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;  prod            4   28[BANK0 ] struct .
  8596 ;;  grs             4   22[BANK0 ] unsigned long 
  8597 ;;  temp            2   32[BANK0 ] struct .
  8598 ;;  bexp            1   27[BANK0 ] unsigned char 
  8599 ;;  aexp            1   26[BANK0 ] unsigned char 
  8600 ;;  sign            1   21[BANK0 ] unsigned char 
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  4    8[BANK0 ] unsigned char 
  8603 ;; Registers used:
  8604 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/0
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8610 ;;      Params:         0       8       0       0       0
  8611 ;;      Locals:         0      13       0       0       0
  8612 ;;      Temps:          0       5       0       0       0
  8613 ;;      Totals:         0      26       0       0       0
  8614 ;;Total ram usage:       26 bytes
  8615 ;; Hardware stack levels used: 1
  8616 ;; Hardware stack levels required when called: 2
  8617 ;; This function calls:
  8618 ;;		__Umul8_16
  8619 ;; This function is called by:
  8620 ;;		_adc_volt
  8621 ;;		_fround
  8622 ;;		_scale
  8623 ;;		_sprintf
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627     0958                     ___flmul:	
  8628                           ;psect for function ___flmul
  8629                           
  8630     0958                     l2670:	
  8631                           ;incstack = 0
  8632                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8633                           
  8634     0958  1283               	bcf	3,5	;RP0=0, select bank0
  8635     0959  1303               	bcf	3,6	;RP1=0, select bank0
  8636     095A  082B               	movf	___flmul@b+3,w
  8637     095B  3980               	andlw	128
  8638     095C  00B5               	movwf	___flmul@sign
  8639     095D                     l2672:
  8640     095D  082B               	movf	___flmul@b+3,w
  8641     095E  00B0               	movwf	??___flmul
  8642     095F  0730               	addwf	??___flmul,w
  8643     0960  00BB               	movwf	___flmul@bexp
  8644     0961                     l2674:
  8645     0961  1FAA               	btfss	___flmul@b+2,7
  8646     0962  2964               	goto	u3771
  8647     0963  2965               	goto	u3770
  8648     0964                     u3771:
  8649     0964  2966               	goto	l2678
  8650     0965                     u3770:
  8651     0965                     l2676:
  8652     0965  143B               	bsf	___flmul@bexp,0
  8653     0966                     l2678:
  8654     0966  083B               	movf	___flmul@bexp,w
  8655     0967  1903               	btfsc	3,2
  8656     0968  296A               	goto	u3781
  8657     0969  296B               	goto	u3780
  8658     096A                     u3781:
  8659     096A  297A               	goto	l2686
  8660     096B                     u3780:
  8661     096B                     l2680:
  8662     096B  0A3B               	incf	___flmul@bexp,w
  8663     096C  1D03               	btfss	3,2
  8664     096D  296F               	goto	u3791
  8665     096E  2970               	goto	u3790
  8666     096F                     u3791:
  8667     096F  2978               	goto	l2684
  8668     0970                     u3790:
  8669     0970                     l2682:
  8670     0970  3000               	movlw	0
  8671     0971  00AB               	movwf	___flmul@b+3
  8672     0972  3000               	movlw	0
  8673     0973  00AA               	movwf	___flmul@b+2
  8674     0974  3000               	movlw	0
  8675     0975  00A9               	movwf	___flmul@b+1
  8676     0976  3000               	movlw	0
  8677     0977  00A8               	movwf	___flmul@b
  8678     0978                     l2684:
  8679     0978  17AA               	bsf	___flmul@b+2,7
  8680     0979  2982               	goto	l2688
  8681     097A                     l2686:
  8682     097A  3000               	movlw	0
  8683     097B  00AB               	movwf	___flmul@b+3
  8684     097C  3000               	movlw	0
  8685     097D  00AA               	movwf	___flmul@b+2
  8686     097E  3000               	movlw	0
  8687     097F  00A9               	movwf	___flmul@b+1
  8688     0980  3000               	movlw	0
  8689     0981  00A8               	movwf	___flmul@b
  8690     0982                     l2688:
  8691     0982  082F               	movf	___flmul@a+3,w
  8692     0983  3980               	andlw	128
  8693     0984  00B0               	movwf	??___flmul
  8694     0985  0830               	movf	??___flmul,w
  8695     0986  06B5               	xorwf	___flmul@sign,f
  8696     0987                     l2690:
  8697     0987  082F               	movf	___flmul@a+3,w
  8698     0988  00B0               	movwf	??___flmul
  8699     0989  0730               	addwf	??___flmul,w
  8700     098A  00BA               	movwf	___flmul@aexp
  8701     098B                     l2692:
  8702     098B  1FAE               	btfss	___flmul@a+2,7
  8703     098C  298E               	goto	u3801
  8704     098D  298F               	goto	u3800
  8705     098E                     u3801:
  8706     098E  2990               	goto	l2696
  8707     098F                     u3800:
  8708     098F                     l2694:
  8709     098F  143A               	bsf	___flmul@aexp,0
  8710     0990                     l2696:
  8711     0990  083A               	movf	___flmul@aexp,w
  8712     0991  1903               	btfsc	3,2
  8713     0992  2994               	goto	u3811
  8714     0993  2995               	goto	u3810
  8715     0994                     u3811:
  8716     0994  29A4               	goto	l2704
  8717     0995                     u3810:
  8718     0995                     l2698:
  8719     0995  0A3A               	incf	___flmul@aexp,w
  8720     0996  1D03               	btfss	3,2
  8721     0997  2999               	goto	u3821
  8722     0998  299A               	goto	u3820
  8723     0999                     u3821:
  8724     0999  29A2               	goto	l2702
  8725     099A                     u3820:
  8726     099A                     l2700:
  8727     099A  3000               	movlw	0
  8728     099B  00AF               	movwf	___flmul@a+3
  8729     099C  3000               	movlw	0
  8730     099D  00AE               	movwf	___flmul@a+2
  8731     099E  3000               	movlw	0
  8732     099F  00AD               	movwf	___flmul@a+1
  8733     09A0  3000               	movlw	0
  8734     09A1  00AC               	movwf	___flmul@a
  8735     09A2                     l2702:
  8736     09A2  17AE               	bsf	___flmul@a+2,7
  8737     09A3  29AC               	goto	l2706
  8738     09A4                     l2704:
  8739     09A4  3000               	movlw	0
  8740     09A5  00AF               	movwf	___flmul@a+3
  8741     09A6  3000               	movlw	0
  8742     09A7  00AE               	movwf	___flmul@a+2
  8743     09A8  3000               	movlw	0
  8744     09A9  00AD               	movwf	___flmul@a+1
  8745     09AA  3000               	movlw	0
  8746     09AB  00AC               	movwf	___flmul@a
  8747     09AC                     l2706:
  8748     09AC  083A               	movf	___flmul@aexp,w
  8749     09AD  1903               	btfsc	3,2
  8750     09AE  29B0               	goto	u3831
  8751     09AF  29B1               	goto	u3830
  8752     09B0                     u3831:
  8753     09B0  29B6               	goto	l2710
  8754     09B1                     u3830:
  8755     09B1                     l2708:
  8756     09B1  083B               	movf	___flmul@bexp,w
  8757     09B2  1D03               	btfss	3,2
  8758     09B3  29B5               	goto	u3841
  8759     09B4  29B6               	goto	u3840
  8760     09B5                     u3841:
  8761     09B5  29BF               	goto	l2714
  8762     09B6                     u3840:
  8763     09B6                     l2710:
  8764     09B6  3000               	movlw	0
  8765     09B7  00AB               	movwf	?___flmul+3
  8766     09B8  3000               	movlw	0
  8767     09B9  00AA               	movwf	?___flmul+2
  8768     09BA  3000               	movlw	0
  8769     09BB  00A9               	movwf	?___flmul+1
  8770     09BC  3000               	movlw	0
  8771     09BD  00A8               	movwf	?___flmul
  8772     09BE  2C9C               	goto	l752
  8773     09BF                     l2714:
  8774     09BF  0828               	movf	___flmul@b,w
  8775     09C0  00F2               	movwf	__Umul8_16@multiplicand
  8776     09C1  082E               	movf	___flmul@a+2,w
  8777     09C2  160A  158A  22C5  120A  158A  	fcall	__Umul8_16
  8778     09C7  0873               	movf	?__Umul8_16+1,w
  8779     09C8  1283               	bcf	3,5	;RP0=0, select bank0
  8780     09C9  1303               	bcf	3,6	;RP1=0, select bank0
  8781     09CA  00C1               	movwf	___flmul@temp+1
  8782     09CB  0872               	movf	?__Umul8_16,w
  8783     09CC  00C0               	movwf	___flmul@temp
  8784     09CD                     l2716:
  8785     09CD  0840               	movf	___flmul@temp,w
  8786     09CE  00B0               	movwf	??___flmul
  8787     09CF  01B1               	clrf	??___flmul+1
  8788     09D0  01B2               	clrf	??___flmul+2
  8789     09D1  01B3               	clrf	??___flmul+3
  8790     09D2  0833               	movf	??___flmul+3,w
  8791     09D3  00B9               	movwf	___flmul@grs+3
  8792     09D4  0832               	movf	??___flmul+2,w
  8793     09D5  00B8               	movwf	___flmul@grs+2
  8794     09D6  0831               	movf	??___flmul+1,w
  8795     09D7  00B7               	movwf	___flmul@grs+1
  8796     09D8  0830               	movf	??___flmul,w
  8797     09D9  00B6               	movwf	___flmul@grs
  8798     09DA                     l2718:
  8799     09DA  0841               	movf	___flmul@temp+1,w
  8800     09DB  00B0               	movwf	??___flmul
  8801     09DC  01B1               	clrf	??___flmul+1
  8802     09DD  01B2               	clrf	??___flmul+2
  8803     09DE  01B3               	clrf	??___flmul+3
  8804     09DF  0833               	movf	??___flmul+3,w
  8805     09E0  00BF               	movwf	___flmul@prod+3
  8806     09E1  0832               	movf	??___flmul+2,w
  8807     09E2  00BE               	movwf	___flmul@prod+2
  8808     09E3  0831               	movf	??___flmul+1,w
  8809     09E4  00BD               	movwf	___flmul@prod+1
  8810     09E5  0830               	movf	??___flmul,w
  8811     09E6  00BC               	movwf	___flmul@prod
  8812     09E7  0829               	movf	___flmul@b+1,w
  8813     09E8  00F2               	movwf	__Umul8_16@multiplicand
  8814     09E9  082D               	movf	___flmul@a+1,w
  8815     09EA  160A  158A  22C5  120A  158A  	fcall	__Umul8_16
  8816     09EF  0873               	movf	?__Umul8_16+1,w
  8817     09F0  1283               	bcf	3,5	;RP0=0, select bank0
  8818     09F1  1303               	bcf	3,6	;RP1=0, select bank0
  8819     09F2  00C1               	movwf	___flmul@temp+1
  8820     09F3  0872               	movf	?__Umul8_16,w
  8821     09F4  00C0               	movwf	___flmul@temp
  8822     09F5                     l2720:
  8823     09F5  0840               	movf	___flmul@temp,w
  8824     09F6  00B0               	movwf	??___flmul
  8825     09F7  01B1               	clrf	??___flmul+1
  8826     09F8  01B2               	clrf	??___flmul+2
  8827     09F9  01B3               	clrf	??___flmul+3
  8828     09FA  0830               	movf	??___flmul,w
  8829     09FB  07B6               	addwf	___flmul@grs,f
  8830     09FC  0831               	movf	??___flmul+1,w
  8831     09FD  1103               	clrz
  8832     09FE  1803               	skipnc
  8833     09FF  3E01               	addlw	1
  8834     0A00  1903               	skipnz
  8835     0A01  2A03               	goto	u3851
  8836     0A02  07B7               	addwf	___flmul@grs+1,f
  8837     0A03                     u3851:
  8838     0A03  0832               	movf	??___flmul+2,w
  8839     0A04  1103               	clrz
  8840     0A05  1803               	skipnc
  8841     0A06  3E01               	addlw	1
  8842     0A07  1903               	skipnz
  8843     0A08  2A0A               	goto	u3852
  8844     0A09  07B8               	addwf	___flmul@grs+2,f
  8845     0A0A                     u3852:
  8846     0A0A  0833               	movf	??___flmul+3,w
  8847     0A0B  1103               	clrz
  8848     0A0C  1803               	skipnc
  8849     0A0D  3E01               	addlw	1
  8850     0A0E  1903               	skipnz
  8851     0A0F  2A11               	goto	u3853
  8852     0A10  07B9               	addwf	___flmul@grs+3,f
  8853     0A11                     u3853:
  8854     0A11                     l2722:
  8855     0A11  0841               	movf	___flmul@temp+1,w
  8856     0A12  00B0               	movwf	??___flmul
  8857     0A13  01B1               	clrf	??___flmul+1
  8858     0A14  01B2               	clrf	??___flmul+2
  8859     0A15  01B3               	clrf	??___flmul+3
  8860     0A16  0830               	movf	??___flmul,w
  8861     0A17  07BC               	addwf	___flmul@prod,f
  8862     0A18  0831               	movf	??___flmul+1,w
  8863     0A19  1103               	clrz
  8864     0A1A  1803               	skipnc
  8865     0A1B  3E01               	addlw	1
  8866     0A1C  1903               	skipnz
  8867     0A1D  2A1F               	goto	u3861
  8868     0A1E  07BD               	addwf	___flmul@prod+1,f
  8869     0A1F                     u3861:
  8870     0A1F  0832               	movf	??___flmul+2,w
  8871     0A20  1103               	clrz
  8872     0A21  1803               	skipnc
  8873     0A22  3E01               	addlw	1
  8874     0A23  1903               	skipnz
  8875     0A24  2A26               	goto	u3862
  8876     0A25  07BE               	addwf	___flmul@prod+2,f
  8877     0A26                     u3862:
  8878     0A26  0833               	movf	??___flmul+3,w
  8879     0A27  1103               	clrz
  8880     0A28  1803               	skipnc
  8881     0A29  3E01               	addlw	1
  8882     0A2A  1903               	skipnz
  8883     0A2B  2A2D               	goto	u3863
  8884     0A2C  07BF               	addwf	___flmul@prod+3,f
  8885     0A2D                     u3863:
  8886     0A2D  082A               	movf	___flmul@b+2,w
  8887     0A2E  00F2               	movwf	__Umul8_16@multiplicand
  8888     0A2F  082C               	movf	___flmul@a,w
  8889     0A30  160A  158A  22C5  120A  158A  	fcall	__Umul8_16
  8890     0A35  0873               	movf	?__Umul8_16+1,w
  8891     0A36  1283               	bcf	3,5	;RP0=0, select bank0
  8892     0A37  1303               	bcf	3,6	;RP1=0, select bank0
  8893     0A38  00C1               	movwf	___flmul@temp+1
  8894     0A39  0872               	movf	?__Umul8_16,w
  8895     0A3A  00C0               	movwf	___flmul@temp
  8896     0A3B                     l2724:
  8897     0A3B  0840               	movf	___flmul@temp,w
  8898     0A3C  00B0               	movwf	??___flmul
  8899     0A3D  01B1               	clrf	??___flmul+1
  8900     0A3E  01B2               	clrf	??___flmul+2
  8901     0A3F  01B3               	clrf	??___flmul+3
  8902     0A40  0830               	movf	??___flmul,w
  8903     0A41  07B6               	addwf	___flmul@grs,f
  8904     0A42  0831               	movf	??___flmul+1,w
  8905     0A43  1103               	clrz
  8906     0A44  1803               	skipnc
  8907     0A45  3E01               	addlw	1
  8908     0A46  1903               	skipnz
  8909     0A47  2A49               	goto	u3871
  8910     0A48  07B7               	addwf	___flmul@grs+1,f
  8911     0A49                     u3871:
  8912     0A49  0832               	movf	??___flmul+2,w
  8913     0A4A  1103               	clrz
  8914     0A4B  1803               	skipnc
  8915     0A4C  3E01               	addlw	1
  8916     0A4D  1903               	skipnz
  8917     0A4E  2A50               	goto	u3872
  8918     0A4F  07B8               	addwf	___flmul@grs+2,f
  8919     0A50                     u3872:
  8920     0A50  0833               	movf	??___flmul+3,w
  8921     0A51  1103               	clrz
  8922     0A52  1803               	skipnc
  8923     0A53  3E01               	addlw	1
  8924     0A54  1903               	skipnz
  8925     0A55  2A57               	goto	u3873
  8926     0A56  07B9               	addwf	___flmul@grs+3,f
  8927     0A57                     u3873:
  8928     0A57                     l2726:
  8929     0A57  0841               	movf	___flmul@temp+1,w
  8930     0A58  00B0               	movwf	??___flmul
  8931     0A59  01B1               	clrf	??___flmul+1
  8932     0A5A  01B2               	clrf	??___flmul+2
  8933     0A5B  01B3               	clrf	??___flmul+3
  8934     0A5C  0830               	movf	??___flmul,w
  8935     0A5D  07BC               	addwf	___flmul@prod,f
  8936     0A5E  0831               	movf	??___flmul+1,w
  8937     0A5F  1103               	clrz
  8938     0A60  1803               	skipnc
  8939     0A61  3E01               	addlw	1
  8940     0A62  1903               	skipnz
  8941     0A63  2A65               	goto	u3881
  8942     0A64  07BD               	addwf	___flmul@prod+1,f
  8943     0A65                     u3881:
  8944     0A65  0832               	movf	??___flmul+2,w
  8945     0A66  1103               	clrz
  8946     0A67  1803               	skipnc
  8947     0A68  3E01               	addlw	1
  8948     0A69  1903               	skipnz
  8949     0A6A  2A6C               	goto	u3882
  8950     0A6B  07BE               	addwf	___flmul@prod+2,f
  8951     0A6C                     u3882:
  8952     0A6C  0833               	movf	??___flmul+3,w
  8953     0A6D  1103               	clrz
  8954     0A6E  1803               	skipnc
  8955     0A6F  3E01               	addlw	1
  8956     0A70  1903               	skipnz
  8957     0A71  2A73               	goto	u3883
  8958     0A72  07BF               	addwf	___flmul@prod+3,f
  8959     0A73                     u3883:
  8960     0A73                     l2728:
  8961     0A73  3008               	movlw	8
  8962     0A74  00B0               	movwf	??___flmul
  8963     0A75                     u3895:
  8964     0A75  1003               	clrc
  8965     0A76  0DB6               	rlf	___flmul@grs,f
  8966     0A77  0DB7               	rlf	___flmul@grs+1,f
  8967     0A78  0DB8               	rlf	___flmul@grs+2,f
  8968     0A79  0DB9               	rlf	___flmul@grs+3,f
  8969     0A7A  0BB0               	decfsz	??___flmul,f
  8970     0A7B  2A75               	goto	u3895
  8971     0A7C                     l2730:
  8972     0A7C  0829               	movf	___flmul@b+1,w
  8973     0A7D  00F2               	movwf	__Umul8_16@multiplicand
  8974     0A7E  082C               	movf	___flmul@a,w
  8975     0A7F  160A  158A  22C5  120A  158A  	fcall	__Umul8_16
  8976     0A84  0873               	movf	?__Umul8_16+1,w
  8977     0A85  1283               	bcf	3,5	;RP0=0, select bank0
  8978     0A86  1303               	bcf	3,6	;RP1=0, select bank0
  8979     0A87  00C1               	movwf	___flmul@temp+1
  8980     0A88  0872               	movf	?__Umul8_16,w
  8981     0A89  00C0               	movwf	___flmul@temp
  8982     0A8A                     l2732:
  8983     0A8A  0840               	movf	___flmul@temp,w
  8984     0A8B  00B0               	movwf	??___flmul
  8985     0A8C  0841               	movf	___flmul@temp+1,w
  8986     0A8D  00B1               	movwf	??___flmul+1
  8987     0A8E  01B2               	clrf	??___flmul+2
  8988     0A8F  01B3               	clrf	??___flmul+3
  8989     0A90  0830               	movf	??___flmul,w
  8990     0A91  07B6               	addwf	___flmul@grs,f
  8991     0A92  0831               	movf	??___flmul+1,w
  8992     0A93  1103               	clrz
  8993     0A94  1803               	skipnc
  8994     0A95  3E01               	addlw	1
  8995     0A96  1903               	skipnz
  8996     0A97  2A99               	goto	u3901
  8997     0A98  07B7               	addwf	___flmul@grs+1,f
  8998     0A99                     u3901:
  8999     0A99  0832               	movf	??___flmul+2,w
  9000     0A9A  1103               	clrz
  9001     0A9B  1803               	skipnc
  9002     0A9C  3E01               	addlw	1
  9003     0A9D  1903               	skipnz
  9004     0A9E  2AA0               	goto	u3902
  9005     0A9F  07B8               	addwf	___flmul@grs+2,f
  9006     0AA0                     u3902:
  9007     0AA0  0833               	movf	??___flmul+3,w
  9008     0AA1  1103               	clrz
  9009     0AA2  1803               	skipnc
  9010     0AA3  3E01               	addlw	1
  9011     0AA4  1903               	skipnz
  9012     0AA5  2AA7               	goto	u3903
  9013     0AA6  07B9               	addwf	___flmul@grs+3,f
  9014     0AA7                     u3903:
  9015     0AA7                     l2734:
  9016     0AA7  0828               	movf	___flmul@b,w
  9017     0AA8  00F2               	movwf	__Umul8_16@multiplicand
  9018     0AA9  082D               	movf	___flmul@a+1,w
  9019     0AAA  160A  158A  22C5  120A  158A  	fcall	__Umul8_16
  9020     0AAF  0873               	movf	?__Umul8_16+1,w
  9021     0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  9022     0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  9023     0AB2  00C1               	movwf	___flmul@temp+1
  9024     0AB3  0872               	movf	?__Umul8_16,w
  9025     0AB4  00C0               	movwf	___flmul@temp
  9026     0AB5                     l2736:
  9027     0AB5  0840               	movf	___flmul@temp,w
  9028     0AB6  00B0               	movwf	??___flmul
  9029     0AB7  0841               	movf	___flmul@temp+1,w
  9030     0AB8  00B1               	movwf	??___flmul+1
  9031     0AB9  01B2               	clrf	??___flmul+2
  9032     0ABA  01B3               	clrf	??___flmul+3
  9033     0ABB  0830               	movf	??___flmul,w
  9034     0ABC  07B6               	addwf	___flmul@grs,f
  9035     0ABD  0831               	movf	??___flmul+1,w
  9036     0ABE  1103               	clrz
  9037     0ABF  1803               	skipnc
  9038     0AC0  3E01               	addlw	1
  9039     0AC1  1903               	skipnz
  9040     0AC2  2AC4               	goto	u3911
  9041     0AC3  07B7               	addwf	___flmul@grs+1,f
  9042     0AC4                     u3911:
  9043     0AC4  0832               	movf	??___flmul+2,w
  9044     0AC5  1103               	clrz
  9045     0AC6  1803               	skipnc
  9046     0AC7  3E01               	addlw	1
  9047     0AC8  1903               	skipnz
  9048     0AC9  2ACB               	goto	u3912
  9049     0ACA  07B8               	addwf	___flmul@grs+2,f
  9050     0ACB                     u3912:
  9051     0ACB  0833               	movf	??___flmul+3,w
  9052     0ACC  1103               	clrz
  9053     0ACD  1803               	skipnc
  9054     0ACE  3E01               	addlw	1
  9055     0ACF  1903               	skipnz
  9056     0AD0  2AD2               	goto	u3913
  9057     0AD1  07B9               	addwf	___flmul@grs+3,f
  9058     0AD2                     u3913:
  9059     0AD2                     l2738:
  9060     0AD2  3008               	movlw	8
  9061     0AD3  00B0               	movwf	??___flmul
  9062     0AD4                     u3925:
  9063     0AD4  1003               	clrc
  9064     0AD5  0DB6               	rlf	___flmul@grs,f
  9065     0AD6  0DB7               	rlf	___flmul@grs+1,f
  9066     0AD7  0DB8               	rlf	___flmul@grs+2,f
  9067     0AD8  0DB9               	rlf	___flmul@grs+3,f
  9068     0AD9  0BB0               	decfsz	??___flmul,f
  9069     0ADA  2AD4               	goto	u3925
  9070     0ADB  0828               	movf	___flmul@b,w
  9071     0ADC  00F2               	movwf	__Umul8_16@multiplicand
  9072     0ADD  082C               	movf	___flmul@a,w
  9073     0ADE  160A  158A  22C5  120A  158A  	fcall	__Umul8_16
  9074     0AE3  0873               	movf	?__Umul8_16+1,w
  9075     0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  9076     0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  9077     0AE6  00C1               	movwf	___flmul@temp+1
  9078     0AE7  0872               	movf	?__Umul8_16,w
  9079     0AE8  00C0               	movwf	___flmul@temp
  9080     0AE9                     l2740:
  9081     0AE9  0840               	movf	___flmul@temp,w
  9082     0AEA  00B0               	movwf	??___flmul
  9083     0AEB  0841               	movf	___flmul@temp+1,w
  9084     0AEC  00B1               	movwf	??___flmul+1
  9085     0AED  01B2               	clrf	??___flmul+2
  9086     0AEE  01B3               	clrf	??___flmul+3
  9087     0AEF  0830               	movf	??___flmul,w
  9088     0AF0  07B6               	addwf	___flmul@grs,f
  9089     0AF1  0831               	movf	??___flmul+1,w
  9090     0AF2  1103               	clrz
  9091     0AF3  1803               	skipnc
  9092     0AF4  3E01               	addlw	1
  9093     0AF5  1903               	skipnz
  9094     0AF6  2AF8               	goto	u3931
  9095     0AF7  07B7               	addwf	___flmul@grs+1,f
  9096     0AF8                     u3931:
  9097     0AF8  0832               	movf	??___flmul+2,w
  9098     0AF9  1103               	clrz
  9099     0AFA  1803               	skipnc
  9100     0AFB  3E01               	addlw	1
  9101     0AFC  1903               	skipnz
  9102     0AFD  2AFF               	goto	u3932
  9103     0AFE  07B8               	addwf	___flmul@grs+2,f
  9104     0AFF                     u3932:
  9105     0AFF  0833               	movf	??___flmul+3,w
  9106     0B00  1103               	clrz
  9107     0B01  1803               	skipnc
  9108     0B02  3E01               	addlw	1
  9109     0B03  1903               	skipnz
  9110     0B04  2B06               	goto	u3933
  9111     0B05  07B9               	addwf	___flmul@grs+3,f
  9112     0B06                     u3933:
  9113     0B06                     l2742:
  9114     0B06  0829               	movf	___flmul@b+1,w
  9115     0B07  00F2               	movwf	__Umul8_16@multiplicand
  9116     0B08  082E               	movf	___flmul@a+2,w
  9117     0B09  160A  158A  22C5  120A  158A  	fcall	__Umul8_16
  9118     0B0E  0873               	movf	?__Umul8_16+1,w
  9119     0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  9120     0B10  1303               	bcf	3,6	;RP1=0, select bank0
  9121     0B11  00C1               	movwf	___flmul@temp+1
  9122     0B12  0872               	movf	?__Umul8_16,w
  9123     0B13  00C0               	movwf	___flmul@temp
  9124     0B14  0840               	movf	___flmul@temp,w
  9125     0B15  00B0               	movwf	??___flmul
  9126     0B16  0841               	movf	___flmul@temp+1,w
  9127     0B17  00B1               	movwf	??___flmul+1
  9128     0B18  01B2               	clrf	??___flmul+2
  9129     0B19  01B3               	clrf	??___flmul+3
  9130     0B1A  0830               	movf	??___flmul,w
  9131     0B1B  07BC               	addwf	___flmul@prod,f
  9132     0B1C  0831               	movf	??___flmul+1,w
  9133     0B1D  1103               	clrz
  9134     0B1E  1803               	skipnc
  9135     0B1F  3E01               	addlw	1
  9136     0B20  1903               	skipnz
  9137     0B21  2B23               	goto	u3941
  9138     0B22  07BD               	addwf	___flmul@prod+1,f
  9139     0B23                     u3941:
  9140     0B23  0832               	movf	??___flmul+2,w
  9141     0B24  1103               	clrz
  9142     0B25  1803               	skipnc
  9143     0B26  3E01               	addlw	1
  9144     0B27  1903               	skipnz
  9145     0B28  2B2A               	goto	u3942
  9146     0B29  07BE               	addwf	___flmul@prod+2,f
  9147     0B2A                     u3942:
  9148     0B2A  0833               	movf	??___flmul+3,w
  9149     0B2B  1103               	clrz
  9150     0B2C  1803               	skipnc
  9151     0B2D  3E01               	addlw	1
  9152     0B2E  1903               	skipnz
  9153     0B2F  2B31               	goto	u3943
  9154     0B30  07BF               	addwf	___flmul@prod+3,f
  9155     0B31                     u3943:
  9156     0B31                     l2744:
  9157     0B31  082A               	movf	___flmul@b+2,w
  9158     0B32  00F2               	movwf	__Umul8_16@multiplicand
  9159     0B33  082D               	movf	___flmul@a+1,w
  9160     0B34  160A  158A  22C5  120A  158A  	fcall	__Umul8_16
  9161     0B39  0873               	movf	?__Umul8_16+1,w
  9162     0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  9163     0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  9164     0B3C  00C1               	movwf	___flmul@temp+1
  9165     0B3D  0872               	movf	?__Umul8_16,w
  9166     0B3E  00C0               	movwf	___flmul@temp
  9167     0B3F                     l2746:
  9168     0B3F  0840               	movf	___flmul@temp,w
  9169     0B40  00B0               	movwf	??___flmul
  9170     0B41  0841               	movf	___flmul@temp+1,w
  9171     0B42  00B1               	movwf	??___flmul+1
  9172     0B43  01B2               	clrf	??___flmul+2
  9173     0B44  01B3               	clrf	??___flmul+3
  9174     0B45  0830               	movf	??___flmul,w
  9175     0B46  07BC               	addwf	___flmul@prod,f
  9176     0B47  0831               	movf	??___flmul+1,w
  9177     0B48  1103               	clrz
  9178     0B49  1803               	skipnc
  9179     0B4A  3E01               	addlw	1
  9180     0B4B  1903               	skipnz
  9181     0B4C  2B4E               	goto	u3951
  9182     0B4D  07BD               	addwf	___flmul@prod+1,f
  9183     0B4E                     u3951:
  9184     0B4E  0832               	movf	??___flmul+2,w
  9185     0B4F  1103               	clrz
  9186     0B50  1803               	skipnc
  9187     0B51  3E01               	addlw	1
  9188     0B52  1903               	skipnz
  9189     0B53  2B55               	goto	u3952
  9190     0B54  07BE               	addwf	___flmul@prod+2,f
  9191     0B55                     u3952:
  9192     0B55  0833               	movf	??___flmul+3,w
  9193     0B56  1103               	clrz
  9194     0B57  1803               	skipnc
  9195     0B58  3E01               	addlw	1
  9196     0B59  1903               	skipnz
  9197     0B5A  2B5C               	goto	u3953
  9198     0B5B  07BF               	addwf	___flmul@prod+3,f
  9199     0B5C                     u3953:
  9200     0B5C  082A               	movf	___flmul@b+2,w
  9201     0B5D  00F2               	movwf	__Umul8_16@multiplicand
  9202     0B5E  082E               	movf	___flmul@a+2,w
  9203     0B5F  160A  158A  22C5  120A  158A  	fcall	__Umul8_16
  9204     0B64  0873               	movf	?__Umul8_16+1,w
  9205     0B65  1283               	bcf	3,5	;RP0=0, select bank0
  9206     0B66  1303               	bcf	3,6	;RP1=0, select bank0
  9207     0B67  00C1               	movwf	___flmul@temp+1
  9208     0B68  0872               	movf	?__Umul8_16,w
  9209     0B69  00C0               	movwf	___flmul@temp
  9210     0B6A                     l2748:
  9211     0B6A  0840               	movf	___flmul@temp,w
  9212     0B6B  00B0               	movwf	??___flmul
  9213     0B6C  0841               	movf	___flmul@temp+1,w
  9214     0B6D  00B1               	movwf	??___flmul+1
  9215     0B6E  01B2               	clrf	??___flmul+2
  9216     0B6F  01B3               	clrf	??___flmul+3
  9217     0B70  3008               	movlw	8
  9218     0B71                     u3965:
  9219     0B71  1003               	clrc
  9220     0B72  0DB0               	rlf	??___flmul,f
  9221     0B73  0DB1               	rlf	??___flmul+1,f
  9222     0B74  0DB2               	rlf	??___flmul+2,f
  9223     0B75  0DB3               	rlf	??___flmul+3,f
  9224     0B76                     u3960:
  9225     0B76  3EFF               	addlw	-1
  9226     0B77  1D03               	skipz
  9227     0B78  2B71               	goto	u3965
  9228     0B79  0830               	movf	??___flmul,w
  9229     0B7A  07BC               	addwf	___flmul@prod,f
  9230     0B7B  0831               	movf	??___flmul+1,w
  9231     0B7C  1103               	clrz
  9232     0B7D  1803               	skipnc
  9233     0B7E  3E01               	addlw	1
  9234     0B7F  1903               	skipnz
  9235     0B80  2B82               	goto	u3971
  9236     0B81  07BD               	addwf	___flmul@prod+1,f
  9237     0B82                     u3971:
  9238     0B82  0832               	movf	??___flmul+2,w
  9239     0B83  1103               	clrz
  9240     0B84  1803               	skipnc
  9241     0B85  3E01               	addlw	1
  9242     0B86  1903               	skipnz
  9243     0B87  2B89               	goto	u3972
  9244     0B88  07BE               	addwf	___flmul@prod+2,f
  9245     0B89                     u3972:
  9246     0B89  0833               	movf	??___flmul+3,w
  9247     0B8A  1103               	clrz
  9248     0B8B  1803               	skipnc
  9249     0B8C  3E01               	addlw	1
  9250     0B8D  1903               	skipnz
  9251     0B8E  2B90               	goto	u3973
  9252     0B8F  07BF               	addwf	___flmul@prod+3,f
  9253     0B90                     u3973:
  9254     0B90                     l2750:
  9255     0B90  0836               	movf	___flmul@grs,w
  9256     0B91  00B0               	movwf	??___flmul
  9257     0B92  0837               	movf	___flmul@grs+1,w
  9258     0B93  00B1               	movwf	??___flmul+1
  9259     0B94  0838               	movf	___flmul@grs+2,w
  9260     0B95  00B2               	movwf	??___flmul+2
  9261     0B96  0839               	movf	___flmul@grs+3,w
  9262     0B97  00B3               	movwf	??___flmul+3
  9263     0B98  3018               	movlw	24
  9264     0B99                     u3985:
  9265     0B99  1003               	clrc
  9266     0B9A  0CB3               	rrf	??___flmul+3,f
  9267     0B9B  0CB2               	rrf	??___flmul+2,f
  9268     0B9C  0CB1               	rrf	??___flmul+1,f
  9269     0B9D  0CB0               	rrf	??___flmul,f
  9270     0B9E                     u3980:
  9271     0B9E  3EFF               	addlw	-1
  9272     0B9F  1D03               	skipz
  9273     0BA0  2B99               	goto	u3985
  9274     0BA1  0830               	movf	??___flmul,w
  9275     0BA2  07BC               	addwf	___flmul@prod,f
  9276     0BA3  0831               	movf	??___flmul+1,w
  9277     0BA4  1103               	clrz
  9278     0BA5  1803               	skipnc
  9279     0BA6  3E01               	addlw	1
  9280     0BA7  1903               	skipnz
  9281     0BA8  2BAA               	goto	u3991
  9282     0BA9  07BD               	addwf	___flmul@prod+1,f
  9283     0BAA                     u3991:
  9284     0BAA  0832               	movf	??___flmul+2,w
  9285     0BAB  1103               	clrz
  9286     0BAC  1803               	skipnc
  9287     0BAD  3E01               	addlw	1
  9288     0BAE  1903               	skipnz
  9289     0BAF  2BB1               	goto	u3992
  9290     0BB0  07BE               	addwf	___flmul@prod+2,f
  9291     0BB1                     u3992:
  9292     0BB1  0833               	movf	??___flmul+3,w
  9293     0BB2  1103               	clrz
  9294     0BB3  1803               	skipnc
  9295     0BB4  3E01               	addlw	1
  9296     0BB5  1903               	skipnz
  9297     0BB6  2BB8               	goto	u3993
  9298     0BB7  07BF               	addwf	___flmul@prod+3,f
  9299     0BB8                     u3993:
  9300     0BB8                     l2752:
  9301     0BB8  3008               	movlw	8
  9302     0BB9  00B0               	movwf	??___flmul
  9303     0BBA                     u4005:
  9304     0BBA  1003               	clrc
  9305     0BBB  0DB6               	rlf	___flmul@grs,f
  9306     0BBC  0DB7               	rlf	___flmul@grs+1,f
  9307     0BBD  0DB8               	rlf	___flmul@grs+2,f
  9308     0BBE  0DB9               	rlf	___flmul@grs+3,f
  9309     0BBF  0BB0               	decfsz	??___flmul,f
  9310     0BC0  2BBA               	goto	u4005
  9311     0BC1                     l2754:
  9312     0BC1  083B               	movf	___flmul@bexp,w
  9313     0BC2  073A               	addwf	___flmul@aexp,w
  9314     0BC3  00B0               	movwf	??___flmul
  9315     0BC4  01B1               	clrf	??___flmul+1
  9316     0BC5  0DB1               	rlf	??___flmul+1,f
  9317     0BC6  0830               	movf	??___flmul,w
  9318     0BC7  3E82               	addlw	130
  9319     0BC8  00C0               	movwf	___flmul@temp
  9320     0BC9  0831               	movf	??___flmul+1,w
  9321     0BCA  1803               	skipnc
  9322     0BCB  3E01               	addlw	1
  9323     0BCC  3EFF               	addlw	255
  9324     0BCD  00C1               	movwf	___flmul@temp+1
  9325     0BCE  2BEC               	goto	l2766
  9326     0BCF                     l2756:
  9327     0BCF  3001               	movlw	1
  9328     0BD0  00B0               	movwf	??___flmul
  9329     0BD1                     u4015:
  9330     0BD1  1003               	clrc
  9331     0BD2  0DBC               	rlf	___flmul@prod,f
  9332     0BD3  0DBD               	rlf	___flmul@prod+1,f
  9333     0BD4  0DBE               	rlf	___flmul@prod+2,f
  9334     0BD5  0DBF               	rlf	___flmul@prod+3,f
  9335     0BD6  0BB0               	decfsz	??___flmul,f
  9336     0BD7  2BD1               	goto	u4015
  9337     0BD8                     l2758:
  9338     0BD8  1FB9               	btfss	___flmul@grs+3,7
  9339     0BD9  2BDB               	goto	u4021
  9340     0BDA  2BDC               	goto	u4020
  9341     0BDB                     u4021:
  9342     0BDB  2BDD               	goto	l2762
  9343     0BDC                     u4020:
  9344     0BDC                     l2760:
  9345     0BDC  143C               	bsf	___flmul@prod,0
  9346     0BDD                     l2762:
  9347     0BDD  3001               	movlw	1
  9348     0BDE  00B0               	movwf	??___flmul
  9349     0BDF                     u4035:
  9350     0BDF  1003               	clrc
  9351     0BE0  0DB6               	rlf	___flmul@grs,f
  9352     0BE1  0DB7               	rlf	___flmul@grs+1,f
  9353     0BE2  0DB8               	rlf	___flmul@grs+2,f
  9354     0BE3  0DB9               	rlf	___flmul@grs+3,f
  9355     0BE4  0BB0               	decfsz	??___flmul,f
  9356     0BE5  2BDF               	goto	u4035
  9357     0BE6                     l2764:
  9358     0BE6  30FF               	movlw	255
  9359     0BE7  07C0               	addwf	___flmul@temp,f
  9360     0BE8  1803               	skipnc
  9361     0BE9  0AC1               	incf	___flmul@temp+1,f
  9362     0BEA  30FF               	movlw	255
  9363     0BEB  07C1               	addwf	___flmul@temp+1,f
  9364     0BEC                     l2766:
  9365     0BEC  1FBE               	btfss	___flmul@prod+2,7
  9366     0BED  2BEF               	goto	u4041
  9367     0BEE  2BF0               	goto	u4040
  9368     0BEF                     u4041:
  9369     0BEF  2BCF               	goto	l2756
  9370     0BF0                     u4040:
  9371     0BF0                     l2768:
  9372     0BF0  01BA               	clrf	___flmul@aexp
  9373     0BF1                     l2770:
  9374     0BF1  1FB9               	btfss	___flmul@grs+3,7
  9375     0BF2  2BF4               	goto	u4051
  9376     0BF3  2BF5               	goto	u4050
  9377     0BF4                     u4051:
  9378     0BF4  2C11               	goto	l2778
  9379     0BF5                     u4050:
  9380     0BF5                     l2772:
  9381     0BF5  30FF               	movlw	255
  9382     0BF6  0536               	andwf	___flmul@grs,w
  9383     0BF7  00B0               	movwf	??___flmul
  9384     0BF8  30FF               	movlw	255
  9385     0BF9  0537               	andwf	___flmul@grs+1,w
  9386     0BFA  00B1               	movwf	??___flmul+1
  9387     0BFB  30FF               	movlw	255
  9388     0BFC  0538               	andwf	___flmul@grs+2,w
  9389     0BFD  00B2               	movwf	??___flmul+2
  9390     0BFE  307F               	movlw	127
  9391     0BFF  0539               	andwf	___flmul@grs+3,w
  9392     0C00  00B3               	movwf	??___flmul+3
  9393     0C01  0833               	movf	??___flmul+3,w
  9394     0C02  0432               	iorwf	??___flmul+2,w
  9395     0C03  0431               	iorwf	??___flmul+1,w
  9396     0C04  0430               	iorwf	??___flmul,w
  9397     0C05  1903               	skipnz
  9398     0C06  2C08               	goto	u4061
  9399     0C07  2C09               	goto	u4060
  9400     0C08                     u4061:
  9401     0C08  2C0C               	goto	l758
  9402     0C09                     u4060:
  9403     0C09                     l2774:
  9404     0C09  01BA               	clrf	___flmul@aexp
  9405     0C0A  0ABA               	incf	___flmul@aexp,f
  9406     0C0B  2C11               	goto	l2778
  9407     0C0C                     l758:
  9408     0C0C  1C3C               	btfss	___flmul@prod,0
  9409     0C0D  2C0F               	goto	u4071
  9410     0C0E  2C10               	goto	u4070
  9411     0C0F                     u4071:
  9412     0C0F  2C11               	goto	l2778
  9413     0C10                     u4070:
  9414     0C10  2C09               	goto	l2774
  9415     0C11                     l2778:
  9416     0C11  083A               	movf	___flmul@aexp,w
  9417     0C12  1903               	btfsc	3,2
  9418     0C13  2C15               	goto	u4081
  9419     0C14  2C16               	goto	u4080
  9420     0C15                     u4081:
  9421     0C15  2C47               	goto	l2788
  9422     0C16                     u4080:
  9423     0C16                     l2780:
  9424     0C16  3001               	movlw	1
  9425     0C17  07BC               	addwf	___flmul@prod,f
  9426     0C18  3000               	movlw	0
  9427     0C19  1803               	skipnc
  9428     0C1A  3001               	movlw	1
  9429     0C1B  07BD               	addwf	___flmul@prod+1,f
  9430     0C1C  3000               	movlw	0
  9431     0C1D  1803               	skipnc
  9432     0C1E  3001               	movlw	1
  9433     0C1F  07BE               	addwf	___flmul@prod+2,f
  9434     0C20  3000               	movlw	0
  9435     0C21  1803               	skipnc
  9436     0C22  3001               	movlw	1
  9437     0C23  07BF               	addwf	___flmul@prod+3,f
  9438     0C24                     l2782:
  9439     0C24  1C3F               	btfss	___flmul@prod+3,0
  9440     0C25  2C27               	goto	u4091
  9441     0C26  2C28               	goto	u4090
  9442     0C27                     u4091:
  9443     0C27  2C47               	goto	l2788
  9444     0C28                     u4090:
  9445     0C28                     l2784:
  9446     0C28  083C               	movf	___flmul@prod,w
  9447     0C29  00B0               	movwf	??___flmul
  9448     0C2A  083D               	movf	___flmul@prod+1,w
  9449     0C2B  00B1               	movwf	??___flmul+1
  9450     0C2C  083E               	movf	___flmul@prod+2,w
  9451     0C2D  00B2               	movwf	??___flmul+2
  9452     0C2E  083F               	movf	___flmul@prod+3,w
  9453     0C2F  00B3               	movwf	??___flmul+3
  9454     0C30  3001               	movlw	1
  9455     0C31  00B4               	movwf	??___flmul+4
  9456     0C32                     u4105:
  9457     0C32  0D33               	rlf	??___flmul+3,w
  9458     0C33  0CB3               	rrf	??___flmul+3,f
  9459     0C34  0CB2               	rrf	??___flmul+2,f
  9460     0C35  0CB1               	rrf	??___flmul+1,f
  9461     0C36  0CB0               	rrf	??___flmul,f
  9462     0C37                     u4100:
  9463     0C37  0BB4               	decfsz	??___flmul+4,f
  9464     0C38  2C32               	goto	u4105
  9465     0C39  0833               	movf	??___flmul+3,w
  9466     0C3A  00BF               	movwf	___flmul@prod+3
  9467     0C3B  0832               	movf	??___flmul+2,w
  9468     0C3C  00BE               	movwf	___flmul@prod+2
  9469     0C3D  0831               	movf	??___flmul+1,w
  9470     0C3E  00BD               	movwf	___flmul@prod+1
  9471     0C3F  0830               	movf	??___flmul,w
  9472     0C40  00BC               	movwf	___flmul@prod
  9473     0C41                     l2786:
  9474     0C41  3001               	movlw	1
  9475     0C42  07C0               	addwf	___flmul@temp,f
  9476     0C43  1803               	skipnc
  9477     0C44  0AC1               	incf	___flmul@temp+1,f
  9478     0C45  3000               	movlw	0
  9479     0C46  07C1               	addwf	___flmul@temp+1,f
  9480     0C47                     l2788:
  9481     0C47  0841               	movf	___flmul@temp+1,w
  9482     0C48  3A80               	xorlw	128
  9483     0C49  00FF               	movwf	btemp+1
  9484     0C4A  3080               	movlw	128
  9485     0C4B  027F               	subwf	btemp+1,w
  9486     0C4C  1D03               	skipz
  9487     0C4D  2C50               	goto	u4115
  9488     0C4E  30FF               	movlw	255
  9489     0C4F  0240               	subwf	___flmul@temp,w
  9490     0C50                     u4115:
  9491     0C50  1C03               	skipc
  9492     0C51  2C53               	goto	u4111
  9493     0C52  2C54               	goto	u4110
  9494     0C53                     u4111:
  9495     0C53  2C5F               	goto	l2792
  9496     0C54                     u4110:
  9497     0C54                     l2790:
  9498     0C54  307F               	movlw	127
  9499     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  9500     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  9501     0C57  00BF               	movwf	___flmul@prod+3
  9502     0C58  3080               	movlw	128
  9503     0C59  00BE               	movwf	___flmul@prod+2
  9504     0C5A  3000               	movlw	0
  9505     0C5B  00BD               	movwf	___flmul@prod+1
  9506     0C5C  3000               	movlw	0
  9507     0C5D  00BC               	movwf	___flmul@prod
  9508     0C5E  2C90               	goto	l764
  9509     0C5F                     l2792:
  9510     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  9511     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  9512     0C61  0841               	movf	___flmul@temp+1,w
  9513     0C62  3A80               	xorlw	128
  9514     0C63  00FF               	movwf	btemp+1
  9515     0C64  3080               	movlw	128
  9516     0C65  027F               	subwf	btemp+1,w
  9517     0C66  1D03               	skipz
  9518     0C67  2C6A               	goto	u4125
  9519     0C68  3001               	movlw	1
  9520     0C69  0240               	subwf	___flmul@temp,w
  9521     0C6A                     u4125:
  9522     0C6A  1803               	skipnc
  9523     0C6B  2C6D               	goto	u4121
  9524     0C6C  2C6E               	goto	u4120
  9525     0C6D                     u4121:
  9526     0C6D  2C7A               	goto	l2798
  9527     0C6E                     u4120:
  9528     0C6E                     l2794:
  9529     0C6E  3000               	movlw	0
  9530     0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  9531     0C70  1303               	bcf	3,6	;RP1=0, select bank0
  9532     0C71  00BF               	movwf	___flmul@prod+3
  9533     0C72  3000               	movlw	0
  9534     0C73  00BE               	movwf	___flmul@prod+2
  9535     0C74  3000               	movlw	0
  9536     0C75  00BD               	movwf	___flmul@prod+1
  9537     0C76  3000               	movlw	0
  9538     0C77  00BC               	movwf	___flmul@prod
  9539     0C78                     l2796:
  9540     0C78  01B5               	clrf	___flmul@sign
  9541     0C79  2C90               	goto	l764
  9542     0C7A                     l2798:
  9543     0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  9544     0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  9545     0C7C  0840               	movf	___flmul@temp,w
  9546     0C7D  00BB               	movwf	___flmul@bexp
  9547     0C7E  30FF               	movlw	255
  9548     0C7F  05BC               	andwf	___flmul@prod,f
  9549     0C80  30FF               	movlw	255
  9550     0C81  05BD               	andwf	___flmul@prod+1,f
  9551     0C82  307F               	movlw	127
  9552     0C83  05BE               	andwf	___flmul@prod+2,f
  9553     0C84  3000               	movlw	0
  9554     0C85  05BF               	andwf	___flmul@prod+3,f
  9555     0C86                     l2800:
  9556     0C86  1C3B               	btfss	___flmul@bexp,0
  9557     0C87  2C89               	goto	u4131
  9558     0C88  2C8A               	goto	u4130
  9559     0C89                     u4131:
  9560     0C89  2C8B               	goto	l2804
  9561     0C8A                     u4130:
  9562     0C8A                     l2802:
  9563     0C8A  17BE               	bsf	___flmul@prod+2,7
  9564     0C8B                     l2804:
  9565     0C8B  083B               	movf	___flmul@bexp,w
  9566     0C8C  00B0               	movwf	??___flmul
  9567     0C8D  1003               	clrc
  9568     0C8E  0C30               	rrf	??___flmul,w
  9569     0C8F  00BF               	movwf	___flmul@prod+3
  9570     0C90                     l764:
  9571     0C90  0835               	movf	___flmul@sign,w
  9572     0C91  00B0               	movwf	??___flmul
  9573     0C92  0830               	movf	??___flmul,w
  9574     0C93  04BF               	iorwf	___flmul@prod+3,f
  9575     0C94                     l2806:
  9576     0C94  083F               	movf	___flmul@prod+3,w
  9577     0C95  00AB               	movwf	?___flmul+3
  9578     0C96  083E               	movf	___flmul@prod+2,w
  9579     0C97  00AA               	movwf	?___flmul+2
  9580     0C98  083D               	movf	___flmul@prod+1,w
  9581     0C99  00A9               	movwf	?___flmul+1
  9582     0C9A  083C               	movf	___flmul@prod,w
  9583     0C9B  00A8               	movwf	?___flmul
  9584     0C9C                     l752:
  9585     0C9C  0008               	return
  9586     0C9D                     __end_of___flmul:
  9587                           
  9588                           	psect	text26
  9589     1AC5                     __ptext26:	
  9590 ;; *************** function __Umul8_16 *****************
  9591 ;; Defined at:
  9592 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  9593 ;; Parameters:    Size  Location     Type
  9594 ;;  multiplier      1    wreg     unsigned char 
  9595 ;;  multiplicand    1    2[COMMON] unsigned char 
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;  multiplier      1   10[COMMON] unsigned char 
  9598 ;;  word_mpld       2    8[COMMON] unsigned int 
  9599 ;;  product         2    6[COMMON] unsigned int 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  2    2[COMMON] unsigned int 
  9602 ;; Registers used:
  9603 ;;		wreg, status,2, status,0
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9609 ;;      Params:         2       0       0       0       0
  9610 ;;      Locals:         5       0       0       0       0
  9611 ;;      Temps:          2       0       0       0       0
  9612 ;;      Totals:         9       0       0       0       0
  9613 ;;Total ram usage:        9 bytes
  9614 ;; Hardware stack levels used: 1
  9615 ;; Hardware stack levels required when called: 1
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		___flmul
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623     1AC5                     __Umul8_16:	
  9624                           ;psect for function __Umul8_16
  9625                           
  9626                           
  9627                           ;incstack = 0
  9628                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9629                           ;__Umul8_16@multiplier stored from wreg
  9630     1AC5  00FA               	movwf	__Umul8_16@multiplier
  9631     1AC6                     l2318:
  9632     1AC6  01F6               	clrf	__Umul8_16@product
  9633     1AC7  01F7               	clrf	__Umul8_16@product+1
  9634     1AC8                     l2320:
  9635     1AC8  0872               	movf	__Umul8_16@multiplicand,w
  9636     1AC9  00F4               	movwf	??__Umul8_16
  9637     1ACA  01F5               	clrf	??__Umul8_16+1
  9638     1ACB  0874               	movf	??__Umul8_16,w
  9639     1ACC  00F8               	movwf	__Umul8_16@word_mpld
  9640     1ACD  0875               	movf	??__Umul8_16+1,w
  9641     1ACE  00F9               	movwf	__Umul8_16@word_mpld+1
  9642     1ACF                     l2322:
  9643     1ACF  1C7A               	btfss	__Umul8_16@multiplier,0
  9644     1AD0  2AD2               	goto	u2951
  9645     1AD1  2AD3               	goto	u2950
  9646     1AD2                     u2951:
  9647     1AD2  2AD9               	goto	l771
  9648     1AD3                     u2950:
  9649     1AD3                     l2324:
  9650     1AD3  0878               	movf	__Umul8_16@word_mpld,w
  9651     1AD4  07F6               	addwf	__Umul8_16@product,f
  9652     1AD5  1803               	skipnc
  9653     1AD6  0AF7               	incf	__Umul8_16@product+1,f
  9654     1AD7  0879               	movf	__Umul8_16@word_mpld+1,w
  9655     1AD8  07F7               	addwf	__Umul8_16@product+1,f
  9656     1AD9                     l771:
  9657     1AD9  3001               	movlw	1
  9658     1ADA                     u2965:
  9659     1ADA  1003               	clrc
  9660     1ADB  0DF8               	rlf	__Umul8_16@word_mpld,f
  9661     1ADC  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  9662     1ADD  3EFF               	addlw	-1
  9663     1ADE  1D03               	skipz
  9664     1ADF  2ADA               	goto	u2965
  9665     1AE0  1003               	clrc
  9666     1AE1  0CFA               	rrf	__Umul8_16@multiplier,f
  9667     1AE2                     l2326:
  9668     1AE2  087A               	movf	__Umul8_16@multiplier,w
  9669     1AE3  1D03               	btfss	3,2
  9670     1AE4  2AE6               	goto	u2971
  9671     1AE5  2AE7               	goto	u2970
  9672     1AE6                     u2971:
  9673     1AE6  2ACF               	goto	l2322
  9674     1AE7                     u2970:
  9675     1AE7                     l2328:
  9676     1AE7  0877               	movf	__Umul8_16@product+1,w
  9677     1AE8  00F3               	movwf	?__Umul8_16+1
  9678     1AE9  0876               	movf	__Umul8_16@product,w
  9679     1AEA  00F2               	movwf	?__Umul8_16
  9680     1AEB                     l773:
  9681     1AEB  0008               	return
  9682     1AEC                     __end_of__Umul8_16:
  9683                           
  9684                           	psect	text27
  9685     11CA                     __ptext27:	
  9686 ;; *************** function ___fldiv *****************
  9687 ;; Defined at:
  9688 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;  a               4   34[BANK0 ] unsigned int 
  9691 ;;  b               4   38[BANK0 ] unsigned int 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;  grs             4   54[BANK0 ] unsigned long 
  9694 ;;  rem             4   47[BANK0 ] unsigned long 
  9695 ;;  new_exp         2   52[BANK0 ] int 
  9696 ;;  aexp            1   59[BANK0 ] unsigned char 
  9697 ;;  bexp            1   58[BANK0 ] unsigned char 
  9698 ;;  sign            1   51[BANK0 ] unsigned char 
  9699 ;; Return value:  Size  Location     Type
  9700 ;;                  4   34[BANK0 ] unsigned char 
  9701 ;; Registers used:
  9702 ;;		wreg, status,2, status,0, btemp+1
  9703 ;; Tracked objects:
  9704 ;;		On entry : 0/0
  9705 ;;		On exit  : 0/0
  9706 ;;		Unchanged: 0/0
  9707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9708 ;;      Params:         0       8       0       0       0
  9709 ;;      Locals:         0      13       0       0       0
  9710 ;;      Temps:          0       5       0       0       0
  9711 ;;      Totals:         0      26       0       0       0
  9712 ;;Total ram usage:       26 bytes
  9713 ;; Hardware stack levels used: 1
  9714 ;; Hardware stack levels required when called: 1
  9715 ;; This function calls:
  9716 ;;		Nothing
  9717 ;; This function is called by:
  9718 ;;		_adc_volt
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722     11CA                     ___fldiv:	
  9723                           ;psect for function ___fldiv
  9724                           
  9725     11CA                     l3156:	
  9726                           ;incstack = 0
  9727                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9728                           
  9729     11CA  1283               	bcf	3,5	;RP0=0, select bank0
  9730     11CB  1303               	bcf	3,6	;RP1=0, select bank0
  9731     11CC  0849               	movf	___fldiv@b+3,w
  9732     11CD  3980               	andlw	128
  9733     11CE  00D3               	movwf	___fldiv@sign
  9734     11CF                     l3158:
  9735     11CF  0849               	movf	___fldiv@b+3,w
  9736     11D0  00CA               	movwf	??___fldiv
  9737     11D1  074A               	addwf	??___fldiv,w
  9738     11D2  00DA               	movwf	___fldiv@bexp
  9739     11D3                     l3160:
  9740     11D3  1FC8               	btfss	___fldiv@b+2,7
  9741     11D4  29D6               	goto	u5051
  9742     11D5  29D7               	goto	u5050
  9743     11D6                     u5051:
  9744     11D6  29D8               	goto	l3164
  9745     11D7                     u5050:
  9746     11D7                     l3162:
  9747     11D7  145A               	bsf	___fldiv@bexp,0
  9748     11D8                     l3164:
  9749     11D8  085A               	movf	___fldiv@bexp,w
  9750     11D9  1903               	btfsc	3,2
  9751     11DA  29DC               	goto	u5061
  9752     11DB  29DD               	goto	u5060
  9753     11DC                     u5061:
  9754     11DC  29ED               	goto	l3174
  9755     11DD                     u5060:
  9756     11DD                     l3166:
  9757     11DD  0A5A               	incf	___fldiv@bexp,w
  9758     11DE  1D03               	btfss	3,2
  9759     11DF  29E1               	goto	u5071
  9760     11E0  29E2               	goto	u5070
  9761     11E1                     u5071:
  9762     11E1  29EA               	goto	l3170
  9763     11E2                     u5070:
  9764     11E2                     l3168:
  9765     11E2  3000               	movlw	0
  9766     11E3  00C9               	movwf	___fldiv@b+3
  9767     11E4  3000               	movlw	0
  9768     11E5  00C8               	movwf	___fldiv@b+2
  9769     11E6  3000               	movlw	0
  9770     11E7  00C7               	movwf	___fldiv@b+1
  9771     11E8  3000               	movlw	0
  9772     11E9  00C6               	movwf	___fldiv@b
  9773     11EA                     l3170:
  9774     11EA  17C8               	bsf	___fldiv@b+2,7
  9775     11EB                     l3172:
  9776     11EB  01C9               	clrf	___fldiv@b+3
  9777     11EC  29F5               	goto	l3176
  9778     11ED                     l3174:
  9779     11ED  3000               	movlw	0
  9780     11EE  00C9               	movwf	___fldiv@b+3
  9781     11EF  3000               	movlw	0
  9782     11F0  00C8               	movwf	___fldiv@b+2
  9783     11F1  3000               	movlw	0
  9784     11F2  00C7               	movwf	___fldiv@b+1
  9785     11F3  3000               	movlw	0
  9786     11F4  00C6               	movwf	___fldiv@b
  9787     11F5                     l3176:
  9788     11F5  0845               	movf	___fldiv@a+3,w
  9789     11F6  3980               	andlw	128
  9790     11F7  00CA               	movwf	??___fldiv
  9791     11F8  084A               	movf	??___fldiv,w
  9792     11F9  06D3               	xorwf	___fldiv@sign,f
  9793     11FA                     l3178:
  9794     11FA  0845               	movf	___fldiv@a+3,w
  9795     11FB  00CA               	movwf	??___fldiv
  9796     11FC  074A               	addwf	??___fldiv,w
  9797     11FD  00DB               	movwf	___fldiv@aexp
  9798     11FE                     l3180:
  9799     11FE  1FC4               	btfss	___fldiv@a+2,7
  9800     11FF  2A01               	goto	u5081
  9801     1200  2A02               	goto	u5080
  9802     1201                     u5081:
  9803     1201  2A03               	goto	l3184
  9804     1202                     u5080:
  9805     1202                     l3182:
  9806     1202  145B               	bsf	___fldiv@aexp,0
  9807     1203                     l3184:
  9808     1203  085B               	movf	___fldiv@aexp,w
  9809     1204  1903               	btfsc	3,2
  9810     1205  2A07               	goto	u5091
  9811     1206  2A08               	goto	u5090
  9812     1207                     u5091:
  9813     1207  2A18               	goto	l3194
  9814     1208                     u5090:
  9815     1208                     l3186:
  9816     1208  0A5B               	incf	___fldiv@aexp,w
  9817     1209  1D03               	btfss	3,2
  9818     120A  2A0C               	goto	u5101
  9819     120B  2A0D               	goto	u5100
  9820     120C                     u5101:
  9821     120C  2A15               	goto	l3190
  9822     120D                     u5100:
  9823     120D                     l3188:
  9824     120D  3000               	movlw	0
  9825     120E  00C5               	movwf	___fldiv@a+3
  9826     120F  3000               	movlw	0
  9827     1210  00C4               	movwf	___fldiv@a+2
  9828     1211  3000               	movlw	0
  9829     1212  00C3               	movwf	___fldiv@a+1
  9830     1213  3000               	movlw	0
  9831     1214  00C2               	movwf	___fldiv@a
  9832     1215                     l3190:
  9833     1215  17C4               	bsf	___fldiv@a+2,7
  9834     1216                     l3192:
  9835     1216  01C5               	clrf	___fldiv@a+3
  9836     1217  2A20               	goto	l712
  9837     1218                     l3194:
  9838     1218  3000               	movlw	0
  9839     1219  00C5               	movwf	___fldiv@a+3
  9840     121A  3000               	movlw	0
  9841     121B  00C4               	movwf	___fldiv@a+2
  9842     121C  3000               	movlw	0
  9843     121D  00C3               	movwf	___fldiv@a+1
  9844     121E  3000               	movlw	0
  9845     121F  00C2               	movwf	___fldiv@a
  9846     1220                     l712:
  9847     1220  0845               	movf	___fldiv@a+3,w
  9848     1221  0444               	iorwf	___fldiv@a+2,w
  9849     1222  0443               	iorwf	___fldiv@a+1,w
  9850     1223  0442               	iorwf	___fldiv@a,w
  9851     1224  1D03               	skipz
  9852     1225  2A27               	goto	u5111
  9853     1226  2A28               	goto	u5110
  9854     1227                     u5111:
  9855     1227  2A41               	goto	l3204
  9856     1228                     u5110:
  9857     1228                     l3196:
  9858     1228  3000               	movlw	0
  9859     1229  00C9               	movwf	___fldiv@b+3
  9860     122A  3000               	movlw	0
  9861     122B  00C8               	movwf	___fldiv@b+2
  9862     122C  3000               	movlw	0
  9863     122D  00C7               	movwf	___fldiv@b+1
  9864     122E  3000               	movlw	0
  9865     122F  00C6               	movwf	___fldiv@b
  9866     1230  3080               	movlw	128
  9867     1231  04C8               	iorwf	___fldiv@b+2,f
  9868     1232  307F               	movlw	127
  9869     1233  04C9               	iorwf	___fldiv@b+3,f
  9870     1234                     l3198:
  9871     1234  0853               	movf	___fldiv@sign,w
  9872     1235  00CA               	movwf	??___fldiv
  9873     1236  084A               	movf	??___fldiv,w
  9874     1237  04C9               	iorwf	___fldiv@b+3,f
  9875     1238                     l3200:
  9876     1238  0849               	movf	___fldiv@b+3,w
  9877     1239  00C5               	movwf	?___fldiv+3
  9878     123A  0848               	movf	___fldiv@b+2,w
  9879     123B  00C4               	movwf	?___fldiv+2
  9880     123C  0847               	movf	___fldiv@b+1,w
  9881     123D  00C3               	movwf	?___fldiv+1
  9882     123E  0846               	movf	___fldiv@b,w
  9883     123F  00C2               	movwf	?___fldiv
  9884     1240  2B9C               	goto	l714
  9885     1241                     l3204:
  9886     1241  085A               	movf	___fldiv@bexp,w
  9887     1242  1D03               	btfss	3,2
  9888     1243  2A45               	goto	u5121
  9889     1244  2A46               	goto	u5120
  9890     1245                     u5121:
  9891     1245  2A4F               	goto	l3210
  9892     1246                     u5120:
  9893     1246                     l3206:
  9894     1246  3000               	movlw	0
  9895     1247  00C5               	movwf	?___fldiv+3
  9896     1248  3000               	movlw	0
  9897     1249  00C4               	movwf	?___fldiv+2
  9898     124A  3000               	movlw	0
  9899     124B  00C3               	movwf	?___fldiv+1
  9900     124C  3000               	movlw	0
  9901     124D  00C2               	movwf	?___fldiv
  9902     124E  2B9C               	goto	l714
  9903     124F                     l3210:
  9904     124F  085A               	movf	___fldiv@bexp,w
  9905     1250  00CA               	movwf	??___fldiv
  9906     1251  01CB               	clrf	??___fldiv+1
  9907     1252  084B               	movf	??___fldiv+1,w
  9908     1253  00CD               	movwf	??___fldiv+3
  9909     1254  085B               	movf	___fldiv@aexp,w
  9910     1255  024A               	subwf	??___fldiv,w
  9911     1256  00CC               	movwf	??___fldiv+2
  9912     1257  1C03               	skipc
  9913     1258  03CD               	decf	??___fldiv+3,f
  9914     1259  084C               	movf	??___fldiv+2,w
  9915     125A  3E7F               	addlw	127
  9916     125B  00D4               	movwf	___fldiv@new_exp
  9917     125C  084D               	movf	??___fldiv+3,w
  9918     125D  1803               	skipnc
  9919     125E  3E01               	addlw	1
  9920     125F  3E00               	addlw	0
  9921     1260  00D5               	movwf	___fldiv@new_exp+1
  9922     1261                     l3212:
  9923     1261  0849               	movf	___fldiv@b+3,w
  9924     1262  00D2               	movwf	___fldiv@rem+3
  9925     1263  0848               	movf	___fldiv@b+2,w
  9926     1264  00D1               	movwf	___fldiv@rem+2
  9927     1265  0847               	movf	___fldiv@b+1,w
  9928     1266  00D0               	movwf	___fldiv@rem+1
  9929     1267  0846               	movf	___fldiv@b,w
  9930     1268  00CF               	movwf	___fldiv@rem
  9931     1269                     l3214:
  9932     1269  3000               	movlw	0
  9933     126A  00C9               	movwf	___fldiv@b+3
  9934     126B  3000               	movlw	0
  9935     126C  00C8               	movwf	___fldiv@b+2
  9936     126D  3000               	movlw	0
  9937     126E  00C7               	movwf	___fldiv@b+1
  9938     126F  3000               	movlw	0
  9939     1270  00C6               	movwf	___fldiv@b
  9940     1271                     l3216:
  9941     1271  3000               	movlw	0
  9942     1272  00D9               	movwf	___fldiv@grs+3
  9943     1273  3000               	movlw	0
  9944     1274  00D8               	movwf	___fldiv@grs+2
  9945     1275  3000               	movlw	0
  9946     1276  00D7               	movwf	___fldiv@grs+1
  9947     1277  3000               	movlw	0
  9948     1278  00D6               	movwf	___fldiv@grs
  9949     1279                     l3218:
  9950     1279  01DB               	clrf	___fldiv@aexp
  9951     127A  2AC5               	goto	l3238
  9952     127B                     l3220:
  9953     127B  085B               	movf	___fldiv@aexp,w
  9954     127C  1903               	btfsc	3,2
  9955     127D  2A7F               	goto	u5131
  9956     127E  2A80               	goto	u5130
  9957     127F                     u5131:
  9958     127F  2AA0               	goto	l3230
  9959     1280                     u5130:
  9960     1280                     l3222:
  9961     1280  3001               	movlw	1
  9962     1281  00CA               	movwf	??___fldiv
  9963     1282                     u5145:
  9964     1282  1003               	clrc
  9965     1283  0DCF               	rlf	___fldiv@rem,f
  9966     1284  0DD0               	rlf	___fldiv@rem+1,f
  9967     1285  0DD1               	rlf	___fldiv@rem+2,f
  9968     1286  0DD2               	rlf	___fldiv@rem+3,f
  9969     1287  0BCA               	decfsz	??___fldiv,f
  9970     1288  2A82               	goto	u5145
  9971     1289  3001               	movlw	1
  9972     128A  00CA               	movwf	??___fldiv
  9973     128B                     u5155:
  9974     128B  1003               	clrc
  9975     128C  0DC6               	rlf	___fldiv@b,f
  9976     128D  0DC7               	rlf	___fldiv@b+1,f
  9977     128E  0DC8               	rlf	___fldiv@b+2,f
  9978     128F  0DC9               	rlf	___fldiv@b+3,f
  9979     1290  0BCA               	decfsz	??___fldiv,f
  9980     1291  2A8B               	goto	u5155
  9981     1292                     l3224:
  9982     1292  1FD9               	btfss	___fldiv@grs+3,7
  9983     1293  2A95               	goto	u5161
  9984     1294  2A96               	goto	u5160
  9985     1295                     u5161:
  9986     1295  2A97               	goto	l3228
  9987     1296                     u5160:
  9988     1296                     l3226:
  9989     1296  1446               	bsf	___fldiv@b,0
  9990     1297                     l3228:
  9991     1297  3001               	movlw	1
  9992     1298  00CA               	movwf	??___fldiv
  9993     1299                     u5175:
  9994     1299  1003               	clrc
  9995     129A  0DD6               	rlf	___fldiv@grs,f
  9996     129B  0DD7               	rlf	___fldiv@grs+1,f
  9997     129C  0DD8               	rlf	___fldiv@grs+2,f
  9998     129D  0DD9               	rlf	___fldiv@grs+3,f
  9999     129E  0BCA               	decfsz	??___fldiv,f
 10000     129F  2A99               	goto	u5175
 10001     12A0                     l3230:
 10002     12A0  0845               	movf	___fldiv@a+3,w
 10003     12A1  0252               	subwf	___fldiv@rem+3,w
 10004     12A2  1D03               	skipz
 10005     12A3  2AAE               	goto	u5185
 10006     12A4  0844               	movf	___fldiv@a+2,w
 10007     12A5  0251               	subwf	___fldiv@rem+2,w
 10008     12A6  1D03               	skipz
 10009     12A7  2AAE               	goto	u5185
 10010     12A8  0843               	movf	___fldiv@a+1,w
 10011     12A9  0250               	subwf	___fldiv@rem+1,w
 10012     12AA  1D03               	skipz
 10013     12AB  2AAE               	goto	u5185
 10014     12AC  0842               	movf	___fldiv@a,w
 10015     12AD  024F               	subwf	___fldiv@rem,w
 10016     12AE                     u5185:
 10017     12AE  1C03               	skipc
 10018     12AF  2AB1               	goto	u5181
 10019     12B0  2AB2               	goto	u5180
 10020     12B1                     u5181:
 10021     12B1  2AC1               	goto	l3236
 10022     12B2                     u5180:
 10023     12B2                     l3232:
 10024     12B2  1759               	bsf	___fldiv@grs+3,6
 10025     12B3                     l3234:
 10026     12B3  0842               	movf	___fldiv@a,w
 10027     12B4  02CF               	subwf	___fldiv@rem,f
 10028     12B5  0843               	movf	___fldiv@a+1,w
 10029     12B6  1C03               	skipc
 10030     12B7  0F43               	incfsz	___fldiv@a+1,w
 10031     12B8  02D0               	subwf	___fldiv@rem+1,f
 10032     12B9  0844               	movf	___fldiv@a+2,w
 10033     12BA  1C03               	skipc
 10034     12BB  0F44               	incfsz	___fldiv@a+2,w
 10035     12BC  02D1               	subwf	___fldiv@rem+2,f
 10036     12BD  0845               	movf	___fldiv@a+3,w
 10037     12BE  1C03               	skipc
 10038     12BF  0F45               	incfsz	___fldiv@a+3,w
 10039     12C0  02D2               	subwf	___fldiv@rem+3,f
 10040     12C1                     l3236:
 10041     12C1  3001               	movlw	1
 10042     12C2  00CA               	movwf	??___fldiv
 10043     12C3  084A               	movf	??___fldiv,w
 10044     12C4  07DB               	addwf	___fldiv@aexp,f
 10045     12C5                     l3238:
 10046     12C5  301A               	movlw	26
 10047     12C6  025B               	subwf	___fldiv@aexp,w
 10048     12C7  1C03               	skipc
 10049     12C8  2ACA               	goto	u5191
 10050     12C9  2ACB               	goto	u5190
 10051     12CA                     u5191:
 10052     12CA  2A7B               	goto	l3220
 10053     12CB                     u5190:
 10054     12CB                     l3240:
 10055     12CB  0852               	movf	___fldiv@rem+3,w
 10056     12CC  0451               	iorwf	___fldiv@rem+2,w
 10057     12CD  0450               	iorwf	___fldiv@rem+1,w
 10058     12CE  044F               	iorwf	___fldiv@rem,w
 10059     12CF  1903               	skipnz
 10060     12D0  2AD2               	goto	u5201
 10061     12D1  2AD3               	goto	u5200
 10062     12D2                     u5201:
 10063     12D2  2AF2               	goto	l3254
 10064     12D3                     u5200:
 10065     12D3                     l3242:
 10066     12D3  1456               	bsf	___fldiv@grs,0
 10067     12D4  2AF2               	goto	l3254
 10068     12D5                     l3244:
 10069     12D5  3001               	movlw	1
 10070     12D6  00CA               	movwf	??___fldiv
 10071     12D7                     u5215:
 10072     12D7  1003               	clrc
 10073     12D8  0DC6               	rlf	___fldiv@b,f
 10074     12D9  0DC7               	rlf	___fldiv@b+1,f
 10075     12DA  0DC8               	rlf	___fldiv@b+2,f
 10076     12DB  0DC9               	rlf	___fldiv@b+3,f
 10077     12DC  0BCA               	decfsz	??___fldiv,f
 10078     12DD  2AD7               	goto	u5215
 10079     12DE                     l3246:
 10080     12DE  1FD9               	btfss	___fldiv@grs+3,7
 10081     12DF  2AE1               	goto	u5221
 10082     12E0  2AE2               	goto	u5220
 10083     12E1                     u5221:
 10084     12E1  2AE3               	goto	l3250
 10085     12E2                     u5220:
 10086     12E2                     l3248:
 10087     12E2  1446               	bsf	___fldiv@b,0
 10088     12E3                     l3250:
 10089     12E3  3001               	movlw	1
 10090     12E4  00CA               	movwf	??___fldiv
 10091     12E5                     u5235:
 10092     12E5  1003               	clrc
 10093     12E6  0DD6               	rlf	___fldiv@grs,f
 10094     12E7  0DD7               	rlf	___fldiv@grs+1,f
 10095     12E8  0DD8               	rlf	___fldiv@grs+2,f
 10096     12E9  0DD9               	rlf	___fldiv@grs+3,f
 10097     12EA  0BCA               	decfsz	??___fldiv,f
 10098     12EB  2AE5               	goto	u5235
 10099     12EC                     l3252:
 10100     12EC  30FF               	movlw	255
 10101     12ED  07D4               	addwf	___fldiv@new_exp,f
 10102     12EE  1803               	skipnc
 10103     12EF  0AD5               	incf	___fldiv@new_exp+1,f
 10104     12F0  30FF               	movlw	255
 10105     12F1  07D5               	addwf	___fldiv@new_exp+1,f
 10106     12F2                     l3254:
 10107     12F2  1FC8               	btfss	___fldiv@b+2,7
 10108     12F3  2AF5               	goto	u5241
 10109     12F4  2AF6               	goto	u5240
 10110     12F5                     u5241:
 10111     12F5  2AD5               	goto	l3244
 10112     12F6                     u5240:
 10113     12F6                     l3256:
 10114     12F6  01DB               	clrf	___fldiv@aexp
 10115     12F7                     l3258:
 10116     12F7  1FD9               	btfss	___fldiv@grs+3,7
 10117     12F8  2AFA               	goto	u5251
 10118     12F9  2AFB               	goto	u5250
 10119     12FA                     u5251:
 10120     12FA  2B17               	goto	l3266
 10121     12FB                     u5250:
 10122     12FB                     l3260:
 10123     12FB  30FF               	movlw	255
 10124     12FC  0556               	andwf	___fldiv@grs,w
 10125     12FD  00CA               	movwf	??___fldiv
 10126     12FE  30FF               	movlw	255
 10127     12FF  0557               	andwf	___fldiv@grs+1,w
 10128     1300  00CB               	movwf	??___fldiv+1
 10129     1301  30FF               	movlw	255
 10130     1302  0558               	andwf	___fldiv@grs+2,w
 10131     1303  00CC               	movwf	??___fldiv+2
 10132     1304  307F               	movlw	127
 10133     1305  0559               	andwf	___fldiv@grs+3,w
 10134     1306  00CD               	movwf	??___fldiv+3
 10135     1307  084D               	movf	??___fldiv+3,w
 10136     1308  044C               	iorwf	??___fldiv+2,w
 10137     1309  044B               	iorwf	??___fldiv+1,w
 10138     130A  044A               	iorwf	??___fldiv,w
 10139     130B  1903               	skipnz
 10140     130C  2B0E               	goto	u5261
 10141     130D  2B0F               	goto	u5260
 10142     130E                     u5261:
 10143     130E  2B12               	goto	l728
 10144     130F                     u5260:
 10145     130F                     l3262:
 10146     130F  01DB               	clrf	___fldiv@aexp
 10147     1310  0ADB               	incf	___fldiv@aexp,f
 10148     1311  2B17               	goto	l3266
 10149     1312                     l728:
 10150     1312  1C46               	btfss	___fldiv@b,0
 10151     1313  2B15               	goto	u5271
 10152     1314  2B16               	goto	u5270
 10153     1315                     u5271:
 10154     1315  2B17               	goto	l3266
 10155     1316                     u5270:
 10156     1316  2B0F               	goto	l3262
 10157     1317                     l3266:
 10158     1317  085B               	movf	___fldiv@aexp,w
 10159     1318  1903               	btfsc	3,2
 10160     1319  2B1B               	goto	u5281
 10161     131A  2B1C               	goto	u5280
 10162     131B                     u5281:
 10163     131B  2B4D               	goto	l3276
 10164     131C                     u5280:
 10165     131C                     l3268:
 10166     131C  3001               	movlw	1
 10167     131D  07C6               	addwf	___fldiv@b,f
 10168     131E  3000               	movlw	0
 10169     131F  1803               	skipnc
 10170     1320  3001               	movlw	1
 10171     1321  07C7               	addwf	___fldiv@b+1,f
 10172     1322  3000               	movlw	0
 10173     1323  1803               	skipnc
 10174     1324  3001               	movlw	1
 10175     1325  07C8               	addwf	___fldiv@b+2,f
 10176     1326  3000               	movlw	0
 10177     1327  1803               	skipnc
 10178     1328  3001               	movlw	1
 10179     1329  07C9               	addwf	___fldiv@b+3,f
 10180     132A                     l3270:
 10181     132A  1C49               	btfss	___fldiv@b+3,0
 10182     132B  2B2D               	goto	u5291
 10183     132C  2B2E               	goto	u5290
 10184     132D                     u5291:
 10185     132D  2B4D               	goto	l3276
 10186     132E                     u5290:
 10187     132E                     l3272:
 10188     132E  0846               	movf	___fldiv@b,w
 10189     132F  00CA               	movwf	??___fldiv
 10190     1330  0847               	movf	___fldiv@b+1,w
 10191     1331  00CB               	movwf	??___fldiv+1
 10192     1332  0848               	movf	___fldiv@b+2,w
 10193     1333  00CC               	movwf	??___fldiv+2
 10194     1334  0849               	movf	___fldiv@b+3,w
 10195     1335  00CD               	movwf	??___fldiv+3
 10196     1336  3001               	movlw	1
 10197     1337  00CE               	movwf	??___fldiv+4
 10198     1338                     u5305:
 10199     1338  0D4D               	rlf	??___fldiv+3,w
 10200     1339  0CCD               	rrf	??___fldiv+3,f
 10201     133A  0CCC               	rrf	??___fldiv+2,f
 10202     133B  0CCB               	rrf	??___fldiv+1,f
 10203     133C  0CCA               	rrf	??___fldiv,f
 10204     133D                     u5300:
 10205     133D  0BCE               	decfsz	??___fldiv+4,f
 10206     133E  2B38               	goto	u5305
 10207     133F  084D               	movf	??___fldiv+3,w
 10208     1340  00C9               	movwf	___fldiv@b+3
 10209     1341  084C               	movf	??___fldiv+2,w
 10210     1342  00C8               	movwf	___fldiv@b+2
 10211     1343  084B               	movf	??___fldiv+1,w
 10212     1344  00C7               	movwf	___fldiv@b+1
 10213     1345  084A               	movf	??___fldiv,w
 10214     1346  00C6               	movwf	___fldiv@b
 10215     1347                     l3274:
 10216     1347  3001               	movlw	1
 10217     1348  07D4               	addwf	___fldiv@new_exp,f
 10218     1349  1803               	skipnc
 10219     134A  0AD5               	incf	___fldiv@new_exp+1,f
 10220     134B  3000               	movlw	0
 10221     134C  07D5               	addwf	___fldiv@new_exp+1,f
 10222     134D                     l3276:
 10223     134D  0855               	movf	___fldiv@new_exp+1,w
 10224     134E  3A80               	xorlw	128
 10225     134F  00FF               	movwf	btemp+1
 10226     1350  3080               	movlw	128
 10227     1351  027F               	subwf	btemp+1,w
 10228     1352  1D03               	skipz
 10229     1353  2B56               	goto	u5315
 10230     1354  30FF               	movlw	255
 10231     1355  0254               	subwf	___fldiv@new_exp,w
 10232     1356                     u5315:
 10233     1356  1C03               	skipc
 10234     1357  2B59               	goto	u5311
 10235     1358  2B5A               	goto	u5310
 10236     1359                     u5311:
 10237     1359  2B68               	goto	l3280
 10238     135A                     u5310:
 10239     135A                     l3278:
 10240     135A  30FF               	movlw	255
 10241     135B  1283               	bcf	3,5	;RP0=0, select bank0
 10242     135C  1303               	bcf	3,6	;RP1=0, select bank0
 10243     135D  00D4               	movwf	___fldiv@new_exp
 10244     135E  3000               	movlw	0
 10245     135F  00D5               	movwf	___fldiv@new_exp+1
 10246     1360  3000               	movlw	0
 10247     1361  00C9               	movwf	___fldiv@b+3
 10248     1362  3000               	movlw	0
 10249     1363  00C8               	movwf	___fldiv@b+2
 10250     1364  3000               	movlw	0
 10251     1365  00C7               	movwf	___fldiv@b+1
 10252     1366  3000               	movlw	0
 10253     1367  00C6               	movwf	___fldiv@b
 10254     1368                     l3280:
 10255     1368  1283               	bcf	3,5	;RP0=0, select bank0
 10256     1369  1303               	bcf	3,6	;RP1=0, select bank0
 10257     136A  0855               	movf	___fldiv@new_exp+1,w
 10258     136B  3A80               	xorlw	128
 10259     136C  00FF               	movwf	btemp+1
 10260     136D  3080               	movlw	128
 10261     136E  027F               	subwf	btemp+1,w
 10262     136F  1D03               	skipz
 10263     1370  2B73               	goto	u5325
 10264     1371  3001               	movlw	1
 10265     1372  0254               	subwf	___fldiv@new_exp,w
 10266     1373                     u5325:
 10267     1373  1803               	skipnc
 10268     1374  2B76               	goto	u5321
 10269     1375  2B77               	goto	u5320
 10270     1376                     u5321:
 10271     1376  2B84               	goto	l734
 10272     1377                     u5320:
 10273     1377                     l3282:
 10274     1377  1283               	bcf	3,5	;RP0=0, select bank0
 10275     1378  1303               	bcf	3,6	;RP1=0, select bank0
 10276     1379  01D4               	clrf	___fldiv@new_exp
 10277     137A  01D5               	clrf	___fldiv@new_exp+1
 10278     137B                     l3284:
 10279     137B  3000               	movlw	0
 10280     137C  00C9               	movwf	___fldiv@b+3
 10281     137D  3000               	movlw	0
 10282     137E  00C8               	movwf	___fldiv@b+2
 10283     137F  3000               	movlw	0
 10284     1380  00C7               	movwf	___fldiv@b+1
 10285     1381  3000               	movlw	0
 10286     1382  00C6               	movwf	___fldiv@b
 10287     1383                     l3286:
 10288     1383  01D3               	clrf	___fldiv@sign
 10289     1384                     l734:
 10290     1384  1283               	bcf	3,5	;RP0=0, select bank0
 10291     1385  1303               	bcf	3,6	;RP1=0, select bank0
 10292     1386  0854               	movf	___fldiv@new_exp,w
 10293     1387  00DA               	movwf	___fldiv@bexp
 10294     1388                     l3288:
 10295     1388  1C5A               	btfss	___fldiv@bexp,0
 10296     1389  2B8B               	goto	u5331
 10297     138A  2B8C               	goto	u5330
 10298     138B                     u5331:
 10299     138B  2B8E               	goto	l3292
 10300     138C                     u5330:
 10301     138C                     l3290:
 10302     138C  17C8               	bsf	___fldiv@b+2,7
 10303     138D  2B92               	goto	l736
 10304     138E                     l3292:
 10305     138E  307F               	movlw	127
 10306     138F  00CA               	movwf	??___fldiv
 10307     1390  084A               	movf	??___fldiv,w
 10308     1391  05C8               	andwf	___fldiv@b+2,f
 10309     1392                     l736:
 10310     1392  085A               	movf	___fldiv@bexp,w
 10311     1393  00CA               	movwf	??___fldiv
 10312     1394  1003               	clrc
 10313     1395  0C4A               	rrf	??___fldiv,w
 10314     1396  00C9               	movwf	___fldiv@b+3
 10315     1397  0853               	movf	___fldiv@sign,w
 10316     1398  00CA               	movwf	??___fldiv
 10317     1399  084A               	movf	??___fldiv,w
 10318     139A  04C9               	iorwf	___fldiv@b+3,f
 10319     139B  2A38               	goto	l3200
 10320     139C                     l714:
 10321     139C  0008               	return
 10322     139D                     __end_of___fldiv:
 10323                           
 10324                           	psect	text28
 10325     07CF                     __ptext28:	
 10326 ;; *************** function _adc_setup *****************
 10327 ;; Defined at:
 10328 ;;		line 16 in file "adc.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;  inter           1    wreg     _Bool 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;  inter           1    3[COMMON] _Bool 
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      void 
 10335 ;; Registers used:
 10336 ;;		wreg, status,2, status,0
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10342 ;;      Params:         0       0       0       0       0
 10343 ;;      Locals:         1       0       0       0       0
 10344 ;;      Temps:          1       0       0       0       0
 10345 ;;      Totals:         2       0       0       0       0
 10346 ;;Total ram usage:        2 bytes
 10347 ;; Hardware stack levels used: 1
 10348 ;; Hardware stack levels required when called: 1
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_main
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356     07CF                     _adc_setup:	
 10357                           ;psect for function _adc_setup
 10358                           
 10359                           
 10360                           ;incstack = 0
 10361                           ; Regs used in _adc_setup: [wreg+status,2+status,0]
 10362                           ;adc_setup@inter stored from wreg
 10363     07CF  00F3               	movwf	adc_setup@inter
 10364     07D0                     l3388:
 10365                           
 10366                           ;adc.c: 17:     if (inter == 1) {
 10367     07D0  0373               	decf	adc_setup@inter,w
 10368     07D1  1D03               	btfss	3,2
 10369     07D2  2FD4               	goto	u5531
 10370     07D3  2FD5               	goto	u5530
 10371     07D4                     u5531:
 10372     07D4  2FDB               	goto	l112
 10373     07D5                     u5530:
 10374     07D5                     l3390:
 10375                           
 10376                           ;adc.c: 18:     INTCONbits.GIE = 1;
 10377     07D5  178B               	bsf	11,7	;volatile
 10378                           
 10379                           ;adc.c: 19:     INTCONbits.PEIE = 1;
 10380     07D6  170B               	bsf	11,6	;volatile
 10381                           
 10382                           ;adc.c: 20:     PIE1bits.ADIE = 0;}
 10383     07D7  1683               	bsf	3,5	;RP0=1, select bank1
 10384     07D8  1303               	bcf	3,6	;RP1=0, select bank1
 10385     07D9  130C               	bcf	12,6	;volatile
 10386     07DA  2FDE               	goto	l113
 10387     07DB                     l112:	
 10388                           ;adc.c: 21:     else {
 10389                           
 10390                           
 10391                           ;adc.c: 22:     PIE1bits.ADIE = 0;}
 10392     07DB  1683               	bsf	3,5	;RP0=1, select bank1
 10393     07DC  1303               	bcf	3,6	;RP1=0, select bank1
 10394     07DD  130C               	bcf	12,6	;volatile
 10395     07DE                     l113:
 10396                           
 10397                           ;adc.c: 24:     ADCON1bits.ADFM = 0;
 10398     07DE  139F               	bcf	31,7	;volatile
 10399                           
 10400                           ;adc.c: 25:     ADCON1bits.VCFG0 = 0;
 10401     07DF  121F               	bcf	31,4	;volatile
 10402                           
 10403                           ;adc.c: 26:     ADCON1bits.VCFG1 = 0;
 10404     07E0  129F               	bcf	31,5	;volatile
 10405     07E1                     l3392:
 10406                           
 10407                           ;adc.c: 28:     ANSEL = 0x00;
 10408     07E1  1683               	bsf	3,5	;RP0=1, select bank3
 10409     07E2  1703               	bsf	3,6	;RP1=1, select bank3
 10410     07E3  0188               	clrf	8	;volatile
 10411                           
 10412                           ;adc.c: 29:     ANSELH = 0x00;
 10413     07E4  0189               	clrf	9	;volatile
 10414     07E5                     l3394:
 10415                           
 10416                           ;adc.c: 31:     ADCON0bits.ADCS = 1;
 10417     07E5  1283               	bcf	3,5	;RP0=0, select bank0
 10418     07E6  1303               	bcf	3,6	;RP1=0, select bank0
 10419     07E7  081F               	movf	31,w	;volatile
 10420     07E8  393F               	andlw	-193
 10421     07E9  3840               	iorlw	64
 10422     07EA  009F               	movwf	31	;volatile
 10423     07EB                     l3396:
 10424                           
 10425                           ;adc.c: 32:     ADCON0bits.CHS = 0;
 10426     07EB  30C3               	movlw	-61
 10427     07EC  059F               	andwf	31,f	;volatile
 10428     07ED                     l3398:
 10429                           
 10430                           ;adc.c: 33:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 10431     07ED  3021               	movlw	33
 10432     07EE  00F2               	movwf	??_adc_setup
 10433     07EF                     u5947:
 10434     07EF  0BF2               	decfsz	??_adc_setup,f
 10435     07F0  2FEF               	goto	u5947
 10436     07F1                     l3400:
 10437                           
 10438                           ;adc.c: 34:     ADCON0bits.ADON = 1;
 10439     07F1  1283               	bcf	3,5	;RP0=0, select bank0
 10440     07F2  1303               	bcf	3,6	;RP1=0, select bank0
 10441     07F3  141F               	bsf	31,0	;volatile
 10442     07F4                     l3402:
 10443                           
 10444                           ;adc.c: 35:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 10445     07F4  3021               	movlw	33
 10446     07F5  00F2               	movwf	??_adc_setup
 10447     07F6                     u5957:
 10448     07F6  0BF2               	decfsz	??_adc_setup,f
 10449     07F7  2FF6               	goto	u5957
 10450     07F8                     l114:
 10451     07F8  0008               	return
 10452     07F9                     __end_of_adc_setup:
 10453                           
 10454                           	psect	text29
 10455     08C3                     __ptext29:	
 10456 ;; *************** function _adc_channel *****************
 10457 ;; Defined at:
 10458 ;;		line 41 in file "adc.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;  channel         2    2[COMMON] int 
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;		None
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      void 
 10465 ;; Registers used:
 10466 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10472 ;;      Params:         2       0       0       0       0
 10473 ;;      Locals:         0       0       0       0       0
 10474 ;;      Temps:          0       0       0       0       0
 10475 ;;      Totals:         2       0       0       0       0
 10476 ;;Total ram usage:        2 bytes
 10477 ;; Hardware stack levels used: 1
 10478 ;; Hardware stack levels required when called: 1
 10479 ;; This function calls:
 10480 ;;		Nothing
 10481 ;; This function is called by:
 10482 ;;		_main
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486     08C3                     _adc_channel:	
 10487                           ;psect for function _adc_channel
 10488                           
 10489     08C3                     l3404:	
 10490                           ;incstack = 0
 10491                           ; Regs used in _adc_channel: [wreg-fsr0h+status,2+status,0]
 10492                           
 10493                           
 10494                           ;adc.c: 42:     switch (channel)
 10495     08C3  2926               	goto	l3408
 10496     08C4                     l118:	
 10497                           ;adc.c: 43:     {case 0:
 10498                           
 10499                           
 10500                           ;adc.c: 44:         ANSELbits.ANS0 = 1;
 10501     08C4  1683               	bsf	3,5	;RP0=1, select bank3
 10502     08C5  1703               	bsf	3,6	;RP1=1, select bank3
 10503     08C6  1408               	bsf	8,0	;volatile
 10504                           
 10505                           ;adc.c: 45:         TRISAbits.TRISA0 = 1;
 10506     08C7  1683               	bsf	3,5	;RP0=1, select bank1
 10507     08C8  1303               	bcf	3,6	;RP1=0, select bank1
 10508     08C9  1405               	bsf	5,0	;volatile
 10509                           
 10510                           ;adc.c: 46:         break;
 10511     08CA  2957               	goto	l134
 10512     08CB                     l120:	
 10513                           ;adc.c: 47:     case 1:
 10514                           
 10515                           
 10516                           ;adc.c: 48:         ANSELbits.ANS1 = 1;
 10517     08CB  1683               	bsf	3,5	;RP0=1, select bank3
 10518     08CC  1703               	bsf	3,6	;RP1=1, select bank3
 10519     08CD  1488               	bsf	8,1	;volatile
 10520                           
 10521                           ;adc.c: 49:         TRISAbits.TRISA1 = 1;
 10522     08CE  1683               	bsf	3,5	;RP0=1, select bank1
 10523     08CF  1303               	bcf	3,6	;RP1=0, select bank1
 10524     08D0  1485               	bsf	5,1	;volatile
 10525                           
 10526                           ;adc.c: 50:         break;
 10527     08D1  2957               	goto	l134
 10528     08D2                     l121:	
 10529                           ;adc.c: 51:     case 2:
 10530                           
 10531                           
 10532                           ;adc.c: 52:         ANSELbits.ANS2 = 1;
 10533     08D2  1683               	bsf	3,5	;RP0=1, select bank3
 10534     08D3  1703               	bsf	3,6	;RP1=1, select bank3
 10535     08D4  1508               	bsf	8,2	;volatile
 10536                           
 10537                           ;adc.c: 53:         TRISAbits.TRISA2 = 1;
 10538     08D5  1683               	bsf	3,5	;RP0=1, select bank1
 10539     08D6  1303               	bcf	3,6	;RP1=0, select bank1
 10540     08D7  1505               	bsf	5,2	;volatile
 10541                           
 10542                           ;adc.c: 54:         break;
 10543     08D8  2957               	goto	l134
 10544     08D9                     l122:	
 10545                           ;adc.c: 55:     case 3:
 10546                           
 10547                           
 10548                           ;adc.c: 56:         ANSELbits.ANS3 = 1;
 10549     08D9  1683               	bsf	3,5	;RP0=1, select bank3
 10550     08DA  1703               	bsf	3,6	;RP1=1, select bank3
 10551     08DB  1588               	bsf	8,3	;volatile
 10552                           
 10553                           ;adc.c: 57:         TRISAbits.TRISA3 = 1;
 10554     08DC  1683               	bsf	3,5	;RP0=1, select bank1
 10555     08DD  1303               	bcf	3,6	;RP1=0, select bank1
 10556     08DE  1585               	bsf	5,3	;volatile
 10557                           
 10558                           ;adc.c: 58:         break;
 10559     08DF  2957               	goto	l134
 10560     08E0                     l123:	
 10561                           ;adc.c: 59:     case 4:
 10562                           
 10563                           
 10564                           ;adc.c: 60:         ANSELbits.ANS4 = 1;
 10565     08E0  1683               	bsf	3,5	;RP0=1, select bank3
 10566     08E1  1703               	bsf	3,6	;RP1=1, select bank3
 10567     08E2  1608               	bsf	8,4	;volatile
 10568                           
 10569                           ;adc.c: 61:         TRISAbits.TRISA5 = 1;
 10570     08E3  1683               	bsf	3,5	;RP0=1, select bank1
 10571     08E4  1303               	bcf	3,6	;RP1=0, select bank1
 10572     08E5  1685               	bsf	5,5	;volatile
 10573                           
 10574                           ;adc.c: 62:         break;
 10575     08E6  2957               	goto	l134
 10576     08E7                     l124:	
 10577                           ;adc.c: 63:     case 5:
 10578                           
 10579                           
 10580                           ;adc.c: 64:         ANSELbits.ANS5 = 1;
 10581     08E7  1683               	bsf	3,5	;RP0=1, select bank3
 10582     08E8  1703               	bsf	3,6	;RP1=1, select bank3
 10583     08E9  1688               	bsf	8,5	;volatile
 10584                           
 10585                           ;adc.c: 65:         TRISEbits.TRISE0 = 1;
 10586     08EA  1683               	bsf	3,5	;RP0=1, select bank1
 10587     08EB  1303               	bcf	3,6	;RP1=0, select bank1
 10588     08EC  1409               	bsf	9,0	;volatile
 10589                           
 10590                           ;adc.c: 66:         break;
 10591     08ED  2957               	goto	l134
 10592     08EE                     l125:	
 10593                           ;adc.c: 67:     case 6:
 10594                           
 10595                           
 10596                           ;adc.c: 68:         ANSELbits.ANS6 = 1;
 10597     08EE  1683               	bsf	3,5	;RP0=1, select bank3
 10598     08EF  1703               	bsf	3,6	;RP1=1, select bank3
 10599     08F0  1708               	bsf	8,6	;volatile
 10600                           
 10601                           ;adc.c: 69:         TRISEbits.TRISE1 = 1;
 10602     08F1  1683               	bsf	3,5	;RP0=1, select bank1
 10603     08F2  1303               	bcf	3,6	;RP1=0, select bank1
 10604     08F3  1489               	bsf	9,1	;volatile
 10605                           
 10606                           ;adc.c: 70:         break;
 10607     08F4  2957               	goto	l134
 10608     08F5                     l126:	
 10609                           ;adc.c: 71:     case 7:
 10610                           
 10611                           
 10612                           ;adc.c: 72:         ANSELbits.ANS7 = 1;
 10613     08F5  1683               	bsf	3,5	;RP0=1, select bank3
 10614     08F6  1703               	bsf	3,6	;RP1=1, select bank3
 10615     08F7  1788               	bsf	8,7	;volatile
 10616                           
 10617                           ;adc.c: 73:         TRISEbits.TRISE2 = 1;
 10618     08F8  1683               	bsf	3,5	;RP0=1, select bank1
 10619     08F9  1303               	bcf	3,6	;RP1=0, select bank1
 10620     08FA  1509               	bsf	9,2	;volatile
 10621                           
 10622                           ;adc.c: 74:         break;
 10623     08FB  2957               	goto	l134
 10624     08FC                     l127:	
 10625                           ;adc.c: 75:     case 8:
 10626                           
 10627                           
 10628                           ;adc.c: 76:         ANSELHbits.ANS8 = 1;
 10629     08FC  1683               	bsf	3,5	;RP0=1, select bank3
 10630     08FD  1703               	bsf	3,6	;RP1=1, select bank3
 10631     08FE  1409               	bsf	9,0	;volatile
 10632                           
 10633                           ;adc.c: 77:         TRISBbits.TRISB2 = 1;
 10634     08FF  1683               	bsf	3,5	;RP0=1, select bank1
 10635     0900  1303               	bcf	3,6	;RP1=0, select bank1
 10636     0901  1506               	bsf	6,2	;volatile
 10637                           
 10638                           ;adc.c: 78:         break;
 10639     0902  2957               	goto	l134
 10640     0903                     l128:	
 10641                           ;adc.c: 79:     case 9:
 10642                           
 10643                           
 10644                           ;adc.c: 80:         ANSELHbits.ANS9 = 1;
 10645     0903  1683               	bsf	3,5	;RP0=1, select bank3
 10646     0904  1703               	bsf	3,6	;RP1=1, select bank3
 10647     0905  1489               	bsf	9,1	;volatile
 10648                           
 10649                           ;adc.c: 81:         TRISBbits.TRISB3 = 1;
 10650     0906  1683               	bsf	3,5	;RP0=1, select bank1
 10651     0907  1303               	bcf	3,6	;RP1=0, select bank1
 10652     0908  1586               	bsf	6,3	;volatile
 10653                           
 10654                           ;adc.c: 82:         break;
 10655     0909  2957               	goto	l134
 10656     090A                     l129:	
 10657                           ;adc.c: 83:     case 10:
 10658                           
 10659                           
 10660                           ;adc.c: 84:         ANSELHbits.ANS10 = 1;
 10661     090A  1683               	bsf	3,5	;RP0=1, select bank3
 10662     090B  1703               	bsf	3,6	;RP1=1, select bank3
 10663     090C  1509               	bsf	9,2	;volatile
 10664                           
 10665                           ;adc.c: 85:         TRISBbits.TRISB1 = 1;
 10666     090D  1683               	bsf	3,5	;RP0=1, select bank1
 10667     090E  1303               	bcf	3,6	;RP1=0, select bank1
 10668     090F  1486               	bsf	6,1	;volatile
 10669                           
 10670                           ;adc.c: 86:         break;
 10671     0910  2957               	goto	l134
 10672     0911                     l130:	
 10673                           ;adc.c: 87:     case 11:
 10674                           
 10675                           
 10676                           ;adc.c: 88:         ANSELHbits.ANS11 = 1;
 10677     0911  1683               	bsf	3,5	;RP0=1, select bank3
 10678     0912  1703               	bsf	3,6	;RP1=1, select bank3
 10679     0913  1589               	bsf	9,3	;volatile
 10680                           
 10681                           ;adc.c: 89:         TRISBbits.TRISB4 = 1;
 10682     0914  1683               	bsf	3,5	;RP0=1, select bank1
 10683     0915  1303               	bcf	3,6	;RP1=0, select bank1
 10684     0916  1606               	bsf	6,4	;volatile
 10685                           
 10686                           ;adc.c: 90:         break;
 10687     0917  2957               	goto	l134
 10688     0918                     l131:	
 10689                           ;adc.c: 91:     case 12:
 10690                           
 10691                           
 10692                           ;adc.c: 92:         ANSELHbits.ANS12 = 1;
 10693     0918  1683               	bsf	3,5	;RP0=1, select bank3
 10694     0919  1703               	bsf	3,6	;RP1=1, select bank3
 10695     091A  1609               	bsf	9,4	;volatile
 10696                           
 10697                           ;adc.c: 93:         TRISBbits.TRISB0 = 1;
 10698     091B  1683               	bsf	3,5	;RP0=1, select bank1
 10699     091C  1303               	bcf	3,6	;RP1=0, select bank1
 10700     091D  1406               	bsf	6,0	;volatile
 10701                           
 10702                           ;adc.c: 94:         break;
 10703     091E  2957               	goto	l134
 10704     091F                     l132:	
 10705                           ;adc.c: 95:     case 13:
 10706                           
 10707                           
 10708                           ;adc.c: 96:         ANSELHbits.ANS13 = 1;
 10709     091F  1683               	bsf	3,5	;RP0=1, select bank3
 10710     0920  1703               	bsf	3,6	;RP1=1, select bank3
 10711     0921  1689               	bsf	9,5	;volatile
 10712                           
 10713                           ;adc.c: 97:         TRISBbits.TRISB5 = 1;
 10714     0922  1683               	bsf	3,5	;RP0=1, select bank1
 10715     0923  1303               	bcf	3,6	;RP1=0, select bank1
 10716     0924  1686               	bsf	6,5	;volatile
 10717                           
 10718                           ;adc.c: 98:         break;
 10719     0925  2957               	goto	l134
 10720     0926                     l3408:
 10721                           
 10722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10723                           ; Switch size 1, requested type "simple"
 10724                           ; Number of cases is 1, Range of values is 0 to 0
 10725                           ; switch strategies available:
 10726                           ; Name         Instructions Cycles
 10727                           ; simple_byte            4     3 (average)
 10728                           ; direct_byte           11     8 (fixed)
 10729                           ; jumptable            260     6 (fixed)
 10730                           ;	Chosen strategy is simple_byte
 10731     0926  0873               	movf	adc_channel@channel+1,w
 10732     0927  3A00               	xorlw	0	; case 0
 10733     0928  1903               	skipnz
 10734     0929  292B               	goto	l3736
 10735     092A  2957               	goto	l134
 10736     092B                     l3736:
 10737                           
 10738                           ; Switch size 1, requested type "simple"
 10739                           ; Number of cases is 14, Range of values is 0 to 13
 10740                           ; switch strategies available:
 10741                           ; Name         Instructions Cycles
 10742                           ; simple_byte           43    22 (average)
 10743                           ; direct_byte           50     8 (fixed)
 10744                           ; jumptable            260     6 (fixed)
 10745                           ;	Chosen strategy is simple_byte
 10746     092B  0872               	movf	adc_channel@channel,w
 10747     092C  3A00               	xorlw	0	; case 0
 10748     092D  1903               	skipnz
 10749     092E  28C4               	goto	l118
 10750     092F  3A01               	xorlw	1	; case 1
 10751     0930  1903               	skipnz
 10752     0931  28CB               	goto	l120
 10753     0932  3A03               	xorlw	3	; case 2
 10754     0933  1903               	skipnz
 10755     0934  28D2               	goto	l121
 10756     0935  3A01               	xorlw	1	; case 3
 10757     0936  1903               	skipnz
 10758     0937  28D9               	goto	l122
 10759     0938  3A07               	xorlw	7	; case 4
 10760     0939  1903               	skipnz
 10761     093A  28E0               	goto	l123
 10762     093B  3A01               	xorlw	1	; case 5
 10763     093C  1903               	skipnz
 10764     093D  28E7               	goto	l124
 10765     093E  3A03               	xorlw	3	; case 6
 10766     093F  1903               	skipnz
 10767     0940  28EE               	goto	l125
 10768     0941  3A01               	xorlw	1	; case 7
 10769     0942  1903               	skipnz
 10770     0943  28F5               	goto	l126
 10771     0944  3A0F               	xorlw	15	; case 8
 10772     0945  1903               	skipnz
 10773     0946  28FC               	goto	l127
 10774     0947  3A01               	xorlw	1	; case 9
 10775     0948  1903               	skipnz
 10776     0949  2903               	goto	l128
 10777     094A  3A03               	xorlw	3	; case 10
 10778     094B  1903               	skipnz
 10779     094C  290A               	goto	l129
 10780     094D  3A01               	xorlw	1	; case 11
 10781     094E  1903               	skipnz
 10782     094F  2911               	goto	l130
 10783     0950  3A07               	xorlw	7	; case 12
 10784     0951  1903               	skipnz
 10785     0952  2918               	goto	l131
 10786     0953  3A01               	xorlw	1	; case 13
 10787     0954  1903               	skipnz
 10788     0955  291F               	goto	l132
 10789     0956  2957               	goto	l134
 10790     0957                     l134:
 10791     0957  0008               	return
 10792     0958                     __end_of_adc_channel:
 10793                           
 10794                           	psect	text30
 10795     1B26                     __ptext30:	
 10796 ;; *************** function _Lcd_Write_String *****************
 10797 ;; Defined at:
 10798 ;;		line 123 in file "LCD8.c"
 10799 ;; Parameters:    Size  Location     Type
 10800 ;;  a               2    5[COMMON] PTR unsigned char 
 10801 ;;		 -> main@display1(50), main@display0(50), STR_2(13), STR_1(13), 
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;  i               2   10[COMMON] int 
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  1    wreg      void 
 10806 ;; Registers used:
 10807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10813 ;;      Params:         2       0       0       0       0
 10814 ;;      Locals:         2       0       0       0       0
 10815 ;;      Temps:          3       0       0       0       0
 10816 ;;      Totals:         7       0       0       0       0
 10817 ;;Total ram usage:        7 bytes
 10818 ;; Hardware stack levels used: 1
 10819 ;; Hardware stack levels required when called: 3
 10820 ;; This function calls:
 10821 ;;		_Lcd_Write_Char
 10822 ;; This function is called by:
 10823 ;;		_main
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827     1B26                     _Lcd_Write_String:	
 10828                           ;psect for function _Lcd_Write_String
 10829                           
 10830     1B26                     l3380:	
 10831                           ;incstack = 0
 10832                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10833                           
 10834                           
 10835                           ;LCD8.c: 124:     int i;;LCD8.c: 125:     for (i = 0; a[i] != '\0'; i++)
 10836     1B26  01FA               	clrf	Lcd_Write_String@i
 10837     1B27  01FB               	clrf	Lcd_Write_String@i+1
 10838     1B28  2B4B               	goto	l3386
 10839     1B29                     l3382:
 10840                           
 10841                           ;LCD8.c: 126:         Lcd_Write_Char(a[i]);
 10842     1B29  087A               	movf	Lcd_Write_String@i,w
 10843     1B2A  0775               	addwf	Lcd_Write_String@a,w
 10844     1B2B  00F8               	movwf	??_Lcd_Write_String+1
 10845     1B2C  0876               	movf	Lcd_Write_String@a+1,w
 10846     1B2D  00F7               	movwf	??_Lcd_Write_String
 10847     1B2E  1803               	skipnc
 10848     1B2F  0AF7               	incf	??_Lcd_Write_String,f
 10849     1B30  1FFA               	btfss	Lcd_Write_String@i,7
 10850     1B31  2B33               	goto	u5500
 10851     1B32  03F7               	decf	??_Lcd_Write_String,f
 10852     1B33                     u5500:
 10853     1B33  0877               	movf	??_Lcd_Write_String,w
 10854     1B34  00F9               	movwf	??_Lcd_Write_String+2
 10855     1B35  0879               	movf	??_Lcd_Write_String+2,w
 10856     1B36  1283               	bcf	3,5	;RP0=0, select bank0
 10857     1B37  1303               	bcf	3,6	;RP1=0, select bank0
 10858     1B38  00FF               	movwf	btemp+1
 10859     1B39  0878               	movf	??_Lcd_Write_String+1,w
 10860     1B3A  0084               	movwf	4
 10861     1B3B  120A  158A  2000  160A  158A  	fcall	stringtab
 10862     1B40  160A  158A  2264  160A  158A  	fcall	_Lcd_Write_Char
 10863     1B45                     l3384:
 10864     1B45  3001               	movlw	1
 10865     1B46  07FA               	addwf	Lcd_Write_String@i,f
 10866     1B47  1803               	skipnc
 10867     1B48  0AFB               	incf	Lcd_Write_String@i+1,f
 10868     1B49  3000               	movlw	0
 10869     1B4A  07FB               	addwf	Lcd_Write_String@i+1,f
 10870     1B4B                     l3386:
 10871     1B4B  087A               	movf	Lcd_Write_String@i,w
 10872     1B4C  0775               	addwf	Lcd_Write_String@a,w
 10873     1B4D  00F8               	movwf	??_Lcd_Write_String+1
 10874     1B4E  0876               	movf	Lcd_Write_String@a+1,w
 10875     1B4F  00F7               	movwf	??_Lcd_Write_String
 10876     1B50  1803               	skipnc
 10877     1B51  0AF7               	incf	??_Lcd_Write_String,f
 10878     1B52  1FFA               	btfss	Lcd_Write_String@i,7
 10879     1B53  2B55               	goto	u5510
 10880     1B54  03F7               	decf	??_Lcd_Write_String,f
 10881     1B55                     u5510:
 10882     1B55  0877               	movf	??_Lcd_Write_String,w
 10883     1B56  00F9               	movwf	??_Lcd_Write_String+2
 10884     1B57  0879               	movf	??_Lcd_Write_String+2,w
 10885     1B58  1283               	bcf	3,5	;RP0=0, select bank0
 10886     1B59  1303               	bcf	3,6	;RP1=0, select bank0
 10887     1B5A  00FF               	movwf	btemp+1
 10888     1B5B  0878               	movf	??_Lcd_Write_String+1,w
 10889     1B5C  0084               	movwf	4
 10890     1B5D  120A  158A  2000  160A  158A  	fcall	stringtab
 10891     1B62  3A00               	xorlw	0
 10892     1B63  1D03               	skipz
 10893     1B64  2B66               	goto	u5521
 10894     1B65  2B67               	goto	u5520
 10895     1B66                     u5521:
 10896     1B66  2B29               	goto	l3382
 10897     1B67                     u5520:
 10898     1B67                     l33:
 10899     1B67  0008               	return
 10900     1B68                     __end_of_Lcd_Write_String:
 10901                           
 10902                           	psect	text31
 10903     1A64                     __ptext31:	
 10904 ;; *************** function _Lcd_Write_Char *****************
 10905 ;; Defined at:
 10906 ;;		line 113 in file "LCD8.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;  a               1    wreg     unsigned char 
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;  a               1    4[COMMON] unsigned char 
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  1    wreg      void 
 10913 ;; Registers used:
 10914 ;;		wreg, status,2, status,0, pclath, cstack
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10920 ;;      Params:         0       0       0       0       0
 10921 ;;      Locals:         1       0       0       0       0
 10922 ;;      Temps:          1       0       0       0       0
 10923 ;;      Totals:         2       0       0       0       0
 10924 ;;Total ram usage:        2 bytes
 10925 ;; Hardware stack levels used: 1
 10926 ;; Hardware stack levels required when called: 2
 10927 ;; This function calls:
 10928 ;;		_Lcd_Port
 10929 ;; This function is called by:
 10930 ;;		_Lcd_Write_String
 10931 ;; This function uses a non-reentrant model
 10932 ;;
 10933                           
 10934     1A64                     _Lcd_Write_Char:	
 10935                           ;psect for function _Lcd_Write_Char
 10936                           
 10937                           
 10938                           ;incstack = 0
 10939                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10940                           ;Lcd_Write_Char@a stored from wreg
 10941     1A64  00F4               	movwf	Lcd_Write_Char@a
 10942     1A65                     l2820:
 10943                           
 10944                           ;LCD8.c: 114:     PORTEbits.RE0 = 1;
 10945     1A65  1283               	bcf	3,5	;RP0=0, select bank0
 10946     1A66  1303               	bcf	3,6	;RP1=0, select bank0
 10947     1A67  1409               	bsf	9,0	;volatile
 10948     1A68                     l2822:
 10949                           
 10950                           ;LCD8.c: 115:     Lcd_Port(a);
 10951     1A68  0874               	movf	Lcd_Write_Char@a,w
 10952     1A69  160A  158A  21F1  160A  158A  	fcall	_Lcd_Port
 10953     1A6E                     l2824:
 10954                           
 10955                           ;LCD8.c: 116:     PORTEbits.RE2 = 1;
 10956     1A6E  1283               	bcf	3,5	;RP0=0, select bank0
 10957     1A6F  1303               	bcf	3,6	;RP1=0, select bank0
 10958     1A70  1509               	bsf	9,2	;volatile
 10959     1A71                     l2826:
 10960                           
 10961                           ;LCD8.c: 117:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10962     1A71  301A               	movlw	26
 10963     1A72  00F3               	movwf	??_Lcd_Write_Char
 10964     1A73                     u5967:
 10965     1A73  0BF3               	decfsz	??_Lcd_Write_Char,f
 10966     1A74  2A73               	goto	u5967
 10967     1A75  0000               	nop
 10968     1A76                     l2828:
 10969                           
 10970                           ;LCD8.c: 118:     PORTEbits.RE2 = 0;
 10971     1A76  1283               	bcf	3,5	;RP0=0, select bank0
 10972     1A77  1303               	bcf	3,6	;RP1=0, select bank0
 10973     1A78  1109               	bcf	9,2	;volatile
 10974     1A79                     l2830:
 10975                           
 10976                           ;LCD8.c: 119:     PORTEbits.RE0 = 0;
 10977     1A79  1009               	bcf	9,0	;volatile
 10978     1A7A                     l2832:
 10979                           
 10980                           ;LCD8.c: 120:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10981     1A7A  301A               	movlw	26
 10982     1A7B  00F3               	movwf	??_Lcd_Write_Char
 10983     1A7C                     u5977:
 10984     1A7C  0BF3               	decfsz	??_Lcd_Write_Char,f
 10985     1A7D  2A7C               	goto	u5977
 10986     1A7E  0000               	nop
 10987     1A7F                     l27:
 10988     1A7F  0008               	return
 10989     1A80                     __end_of_Lcd_Write_Char:
 10990                           
 10991                           	psect	text32
 10992     1A80                     __ptext32:	
 10993 ;; *************** function _Lcd_Set_Cursor *****************
 10994 ;; Defined at:
 10995 ;;		line 75 in file "LCD8.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;  a               1    wreg     unsigned char 
 10998 ;;  b               1    6[COMMON] unsigned char 
 10999 ;; Auto vars:     Size  Location     Type
 11000 ;;  a               1    7[COMMON] unsigned char 
 11001 ;;  temp            1    8[COMMON] unsigned char 
 11002 ;;  y               1    0        unsigned char 
 11003 ;;  z               1    0        unsigned char 
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  1    wreg      void 
 11006 ;; Registers used:
 11007 ;;		wreg, status,2, status,0, pclath, cstack
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11013 ;;      Params:         1       0       0       0       0
 11014 ;;      Locals:         2       0       0       0       0
 11015 ;;      Temps:          0       0       0       0       0
 11016 ;;      Totals:         3       0       0       0       0
 11017 ;;Total ram usage:        3 bytes
 11018 ;; Hardware stack levels used: 1
 11019 ;; Hardware stack levels required when called: 3
 11020 ;; This function calls:
 11021 ;;		_Lcd_Cmd
 11022 ;; This function is called by:
 11023 ;;		_main
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027     1A80                     _Lcd_Set_Cursor:	
 11028                           ;psect for function _Lcd_Set_Cursor
 11029                           
 11030                           
 11031                           ;incstack = 0
 11032                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11033                           ;Lcd_Set_Cursor@a stored from wreg
 11034     1A80  00F7               	movwf	Lcd_Set_Cursor@a
 11035     1A81                     l3344:
 11036                           
 11037                           ;LCD8.c: 76:     char temp, z, y;;LCD8.c: 77:     if (a == 1) {
 11038     1A81  0377               	decf	Lcd_Set_Cursor@a,w
 11039     1A82  1D03               	btfss	3,2
 11040     1A83  2A85               	goto	u5481
 11041     1A84  2A86               	goto	u5480
 11042     1A85                     u5481:
 11043     1A85  2A90               	goto	l3352
 11044     1A86                     u5480:
 11045     1A86                     l3346:
 11046                           
 11047                           ;LCD8.c: 78:         temp = 0x80 + b - 1;
 11048     1A86  0876               	movf	Lcd_Set_Cursor@b,w
 11049     1A87  3E7F               	addlw	127
 11050     1A88  00F8               	movwf	Lcd_Set_Cursor@temp
 11051     1A89                     l3348:
 11052     1A89                     l3350:
 11053                           
 11054                           ;LCD8.c: 81:         Lcd_Cmd(temp);
 11055     1A89  0878               	movf	Lcd_Set_Cursor@temp,w
 11056     1A8A  160A  158A  224A  160A  158A  	fcall	_Lcd_Cmd
 11057                           
 11058                           ;LCD8.c: 83:     } else if (a == 2) {
 11059     1A8F  2A9F               	goto	l21
 11060     1A90                     l3352:
 11061     1A90  3002               	movlw	2
 11062     1A91  0677               	xorwf	Lcd_Set_Cursor@a,w
 11063     1A92  1D03               	btfss	3,2
 11064     1A93  2A95               	goto	u5491
 11065     1A94  2A96               	goto	u5490
 11066     1A95                     u5491:
 11067     1A95  2A9F               	goto	l21
 11068     1A96                     u5490:
 11069     1A96                     l3354:
 11070                           
 11071                           ;LCD8.c: 84:         temp = 0xC0 + b - 1;
 11072     1A96  0876               	movf	Lcd_Set_Cursor@b,w
 11073     1A97  3EBF               	addlw	191
 11074     1A98  00F8               	movwf	Lcd_Set_Cursor@temp
 11075     1A99                     l3356:
 11076     1A99                     l3358:
 11077                           
 11078                           ;LCD8.c: 87:         Lcd_Cmd(temp);
 11079     1A99  0878               	movf	Lcd_Set_Cursor@temp,w
 11080     1A9A  160A  158A  224A  160A  158A  	fcall	_Lcd_Cmd
 11081     1A9F                     l21:
 11082     1A9F  0008               	return
 11083     1AA0                     __end_of_Lcd_Set_Cursor:
 11084                           
 11085                           	psect	text33
 11086     1000                     __ptext33:	
 11087 ;; *************** function _Lcd_Init *****************
 11088 ;; Defined at:
 11089 ;;		line 94 in file "LCD8.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;		None
 11092 ;; Auto vars:     Size  Location     Type
 11093 ;;		None
 11094 ;; Return value:  Size  Location     Type
 11095 ;;                  1    wreg      void 
 11096 ;; Registers used:
 11097 ;;		wreg, status,2, status,0, pclath, cstack
 11098 ;; Tracked objects:
 11099 ;;		On entry : 0/0
 11100 ;;		On exit  : 0/0
 11101 ;;		Unchanged: 0/0
 11102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11103 ;;      Params:         0       0       0       0       0
 11104 ;;      Locals:         0       0       0       0       0
 11105 ;;      Temps:          3       0       0       0       0
 11106 ;;      Totals:         3       0       0       0       0
 11107 ;;Total ram usage:        3 bytes
 11108 ;; Hardware stack levels used: 1
 11109 ;; Hardware stack levels required when called: 3
 11110 ;; This function calls:
 11111 ;;		_Lcd_Cmd
 11112 ;; This function is called by:
 11113 ;;		_main
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           
 11117     1000                     _Lcd_Init:	
 11118                           ;psect for function _Lcd_Init
 11119                           
 11120     1000                     l3360:	
 11121                           ;incstack = 0
 11122                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 11123                           
 11124                           
 11125                           ;LCD8.c: 95:     _delay((unsigned long)((101)*(8000000/4000.0)));
 11126     1000  3002               	movlw	2
 11127     1001  00F8               	movwf	??_Lcd_Init+2
 11128     1002  3007               	movlw	7
 11129     1003  00F7               	movwf	??_Lcd_Init+1
 11130     1004  3053               	movlw	83
 11131     1005  00F6               	movwf	??_Lcd_Init
 11132     1006                     u5987:
 11133     1006  0BF6               	decfsz	??_Lcd_Init,f
 11134     1007  2806               	goto	u5987
 11135     1008  0BF7               	decfsz	??_Lcd_Init+1,f
 11136     1009  2806               	goto	u5987
 11137     100A  0BF8               	decfsz	??_Lcd_Init+2,f
 11138     100B  2806               	goto	u5987
 11139     100C                     l3362:
 11140                           
 11141                           ;LCD8.c: 96:     Lcd_Cmd(0x30);
 11142     100C  3030               	movlw	48
 11143     100D  160A  158A  224A  160A  118A  	fcall	_Lcd_Cmd
 11144     1012                     l3364:
 11145                           
 11146                           ;LCD8.c: 97:     _delay((unsigned long)((5)*(8000000/4000.0)));
 11147     1012  300D               	movlw	13
 11148     1013  00F7               	movwf	??_Lcd_Init+1
 11149     1014  30FB               	movlw	251
 11150     1015  00F6               	movwf	??_Lcd_Init
 11151     1016                     u5997:
 11152     1016  0BF6               	decfsz	??_Lcd_Init,f
 11153     1017  2816               	goto	u5997
 11154     1018  0BF7               	decfsz	??_Lcd_Init+1,f
 11155     1019  2816               	goto	u5997
 11156     101A  281B               	nop2
 11157                           
 11158                           ;LCD8.c: 98:     Lcd_Cmd(0x30);
 11159     101B  3030               	movlw	48
 11160     101C  160A  158A  224A  160A  118A  	fcall	_Lcd_Cmd
 11161     1021                     l3366:
 11162                           
 11163                           ;LCD8.c: 99:     _delay((unsigned long)((1)*(8000000/4000.0)));
 11164     1021  3003               	movlw	3
 11165     1022  00F7               	movwf	??_Lcd_Init+1
 11166     1023  3097               	movlw	151
 11167     1024  00F6               	movwf	??_Lcd_Init
 11168     1025                     u6007:
 11169     1025  0BF6               	decfsz	??_Lcd_Init,f
 11170     1026  2825               	goto	u6007
 11171     1027  0BF7               	decfsz	??_Lcd_Init+1,f
 11172     1028  2825               	goto	u6007
 11173     1029  282A               	nop2
 11174     102A                     l3368:
 11175                           
 11176                           ;LCD8.c: 100:     Lcd_Cmd(0x30);
 11177     102A  3030               	movlw	48
 11178     102B  160A  158A  224A  160A  118A  	fcall	_Lcd_Cmd
 11179                           
 11180                           ;LCD8.c: 101:     _delay((unsigned long)((1)*(8000000/4000.0)));
 11181     1030  3003               	movlw	3
 11182     1031  00F7               	movwf	??_Lcd_Init+1
 11183     1032  3097               	movlw	151
 11184     1033  00F6               	movwf	??_Lcd_Init
 11185     1034                     u6017:
 11186     1034  0BF6               	decfsz	??_Lcd_Init,f
 11187     1035  2834               	goto	u6017
 11188     1036  0BF7               	decfsz	??_Lcd_Init+1,f
 11189     1037  2834               	goto	u6017
 11190     1038  2839               	nop2
 11191     1039                     l3370:
 11192                           
 11193                           ;LCD8.c: 103:     Lcd_Cmd(0x38);
 11194     1039  3038               	movlw	56
 11195     103A  160A  158A  224A  160A  118A  	fcall	_Lcd_Cmd
 11196     103F                     l3372:
 11197                           
 11198                           ;LCD8.c: 104:     Lcd_Cmd(0x08);
 11199     103F  3008               	movlw	8
 11200     1040  160A  158A  224A  160A  118A  	fcall	_Lcd_Cmd
 11201     1045                     l3374:
 11202                           
 11203                           ;LCD8.c: 105:     Lcd_Cmd(0x01);
 11204     1045  3001               	movlw	1
 11205     1046  160A  158A  224A  160A  118A  	fcall	_Lcd_Cmd
 11206     104B                     l3376:
 11207                           
 11208                           ;LCD8.c: 106:     Lcd_Cmd(0x06);
 11209     104B  3006               	movlw	6
 11210     104C  160A  158A  224A  160A  118A  	fcall	_Lcd_Cmd
 11211     1051                     l3378:
 11212                           
 11213                           ;LCD8.c: 107:     Lcd_Cmd(0x0C);
 11214     1051  300C               	movlw	12
 11215     1052  160A  158A  224A  160A  118A  	fcall	_Lcd_Cmd
 11216     1057                     l24:
 11217     1057  0008               	return
 11218     1058                     __end_of_Lcd_Init:
 11219                           
 11220                           	psect	text34
 11221     1A0B                     __ptext34:	
 11222 ;; *************** function _Lcd_Clear *****************
 11223 ;; Defined at:
 11224 ;;		line 70 in file "LCD8.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;		None
 11227 ;; Auto vars:     Size  Location     Type
 11228 ;;		None
 11229 ;; Return value:  Size  Location     Type
 11230 ;;                  1    wreg      void 
 11231 ;; Registers used:
 11232 ;;		wreg, status,2, status,0, pclath, cstack
 11233 ;; Tracked objects:
 11234 ;;		On entry : 0/0
 11235 ;;		On exit  : 0/0
 11236 ;;		Unchanged: 0/0
 11237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11238 ;;      Params:         0       0       0       0       0
 11239 ;;      Locals:         0       0       0       0       0
 11240 ;;      Temps:          0       0       0       0       0
 11241 ;;      Totals:         0       0       0       0       0
 11242 ;;Total ram usage:        0 bytes
 11243 ;; Hardware stack levels used: 1
 11244 ;; Hardware stack levels required when called: 3
 11245 ;; This function calls:
 11246 ;;		_Lcd_Cmd
 11247 ;; This function is called by:
 11248 ;;		_main
 11249 ;; This function uses a non-reentrant model
 11250 ;;
 11251                           
 11252     1A0B                     _Lcd_Clear:	
 11253                           ;psect for function _Lcd_Clear
 11254                           
 11255     1A0B                     l3342:	
 11256                           ;incstack = 0
 11257                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 11258                           
 11259                           
 11260                           ;LCD8.c: 71:     Lcd_Cmd(0);
 11261     1A0B  3000               	movlw	0
 11262     1A0C  160A  158A  224A  160A  158A  	fcall	_Lcd_Cmd
 11263                           
 11264                           ;LCD8.c: 72:     Lcd_Cmd(1);
 11265     1A11  3001               	movlw	1
 11266     1A12  160A  158A  224A  160A  158A  	fcall	_Lcd_Cmd
 11267     1A17                     l15:
 11268     1A17  0008               	return
 11269     1A18                     __end_of_Lcd_Clear:
 11270                           
 11271                           	psect	text35
 11272     1A4A                     __ptext35:	
 11273 ;; *************** function _Lcd_Cmd *****************
 11274 ;; Defined at:
 11275 ;;		line 61 in file "LCD8.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;  a               1    wreg     unsigned char 
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;  a               1    5[COMMON] unsigned char 
 11280 ;; Return value:  Size  Location     Type
 11281 ;;                  1    wreg      void 
 11282 ;; Registers used:
 11283 ;;		wreg, status,2, status,0, pclath, cstack
 11284 ;; Tracked objects:
 11285 ;;		On entry : 0/0
 11286 ;;		On exit  : 0/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11289 ;;      Params:         0       0       0       0       0
 11290 ;;      Locals:         1       0       0       0       0
 11291 ;;      Temps:          2       0       0       0       0
 11292 ;;      Totals:         3       0       0       0       0
 11293 ;;Total ram usage:        3 bytes
 11294 ;; Hardware stack levels used: 1
 11295 ;; Hardware stack levels required when called: 2
 11296 ;; This function calls:
 11297 ;;		_Lcd_Port
 11298 ;; This function is called by:
 11299 ;;		_Lcd_Clear
 11300 ;;		_Lcd_Set_Cursor
 11301 ;;		_Lcd_Init
 11302 ;;		_main
 11303 ;;		_Lcd_Shift_Right
 11304 ;;		_Lcd_Shift_Left
 11305 ;; This function uses a non-reentrant model
 11306 ;;
 11307                           
 11308     1A4A                     _Lcd_Cmd:	
 11309                           ;psect for function _Lcd_Cmd
 11310                           
 11311                           
 11312                           ;incstack = 0
 11313                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11314                           ;Lcd_Cmd@a stored from wreg
 11315     1A4A  00F5               	movwf	Lcd_Cmd@a
 11316     1A4B                     l2810:
 11317                           
 11318                           ;LCD8.c: 62:     PORTEbits.RE0 = 0;
 11319     1A4B  1283               	bcf	3,5	;RP0=0, select bank0
 11320     1A4C  1303               	bcf	3,6	;RP1=0, select bank0
 11321     1A4D  1009               	bcf	9,0	;volatile
 11322     1A4E                     l2812:
 11323                           
 11324                           ;LCD8.c: 63:     Lcd_Port(a);
 11325     1A4E  0875               	movf	Lcd_Cmd@a,w
 11326     1A4F  160A  158A  21F1  160A  158A  	fcall	_Lcd_Port
 11327     1A54                     l2814:
 11328                           
 11329                           ;LCD8.c: 64:     PORTEbits.RE2 = 1;
 11330     1A54  1283               	bcf	3,5	;RP0=0, select bank0
 11331     1A55  1303               	bcf	3,6	;RP1=0, select bank0
 11332     1A56  1509               	bsf	9,2	;volatile
 11333     1A57                     l2816:
 11334                           
 11335                           ;LCD8.c: 65:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11336     1A57  300B               	movlw	11
 11337     1A58  00F4               	movwf	??_Lcd_Cmd+1
 11338     1A59  3062               	movlw	98
 11339     1A5A  00F3               	movwf	??_Lcd_Cmd
 11340     1A5B                     u6027:
 11341     1A5B  0BF3               	decfsz	??_Lcd_Cmd,f
 11342     1A5C  2A5B               	goto	u6027
 11343     1A5D  0BF4               	decfsz	??_Lcd_Cmd+1,f
 11344     1A5E  2A5B               	goto	u6027
 11345     1A5F  0000               	nop
 11346     1A60                     l2818:
 11347                           
 11348                           ;LCD8.c: 66:     PORTEbits.RE2 = 0;
 11349     1A60  1283               	bcf	3,5	;RP0=0, select bank0
 11350     1A61  1303               	bcf	3,6	;RP1=0, select bank0
 11351     1A62  1109               	bcf	9,2	;volatile
 11352     1A63                     l12:
 11353     1A63  0008               	return
 11354     1A64                     __end_of_Lcd_Cmd:
 11355                           
 11356                           	psect	text36
 11357     19F1                     __ptext36:	
 11358 ;; *************** function _Lcd_Port *****************
 11359 ;; Defined at:
 11360 ;;		line 16 in file "LCD8.c"
 11361 ;; Parameters:    Size  Location     Type
 11362 ;;  a               1    wreg     unsigned char 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;  a               1    2[COMMON] unsigned char 
 11365 ;; Return value:  Size  Location     Type
 11366 ;;                  1    wreg      void 
 11367 ;; Registers used:
 11368 ;;		wreg
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11374 ;;      Params:         0       0       0       0       0
 11375 ;;      Locals:         1       0       0       0       0
 11376 ;;      Temps:          0       0       0       0       0
 11377 ;;      Totals:         1       0       0       0       0
 11378 ;;Total ram usage:        1 bytes
 11379 ;; Hardware stack levels used: 1
 11380 ;; Hardware stack levels required when called: 1
 11381 ;; This function calls:
 11382 ;;		Nothing
 11383 ;; This function is called by:
 11384 ;;		_Lcd_Cmd
 11385 ;;		_Lcd_Write_Char
 11386 ;; This function uses a non-reentrant model
 11387 ;;
 11388                           
 11389     19F1                     _Lcd_Port:	
 11390                           ;psect for function _Lcd_Port
 11391                           
 11392                           
 11393                           ;incstack = 0
 11394                           ; Regs used in _Lcd_Port: [wreg]
 11395                           ;Lcd_Port@a stored from wreg
 11396     19F1  00F2               	movwf	Lcd_Port@a
 11397     19F2                     l2332:
 11398                           
 11399                           ;LCD8.c: 17:     PORTD = a;
 11400     19F2  0872               	movf	Lcd_Port@a,w
 11401     19F3  1283               	bcf	3,5	;RP0=0, select bank0
 11402     19F4  1303               	bcf	3,6	;RP1=0, select bank0
 11403     19F5  0088               	movwf	8	;volatile
 11404     19F6                     l9:
 11405     19F6  0008               	return
 11406     19F7                     __end_of_Lcd_Port:
 11407                           
 11408                           	psect	text37
 11409     07F9                     __ptext37:	
 11410 ;; *************** function _Isr *****************
 11411 ;; Defined at:
 11412 ;;		line 85 in file "lab2.c"
 11413 ;; Parameters:    Size  Location     Type
 11414 ;;		None
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;		None
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  1    wreg      void 
 11419 ;; Registers used:
 11420 ;;		None
 11421 ;; Tracked objects:
 11422 ;;		On entry : 0/0
 11423 ;;		On exit  : 0/0
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11426 ;;      Params:         0       0       0       0       0
 11427 ;;      Locals:         0       0       0       0       0
 11428 ;;      Temps:          2       0       0       0       0
 11429 ;;      Totals:         2       0       0       0       0
 11430 ;;Total ram usage:        2 bytes
 11431 ;; Hardware stack levels used: 1
 11432 ;; This function calls:
 11433 ;;		Nothing
 11434 ;; This function is called by:
 11435 ;;		Interrupt level 1
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439     07F9                     _Isr:	
 11440                           ;psect for function _Isr
 11441                           
 11442     07F9                     i1l81:
 11443     07F9  0871               	movf	??_Isr+1,w
 11444     07FA  008A               	movwf	10
 11445     07FB  0E70               	swapf	??_Isr,w
 11446     07FC  0083               	movwf	3
 11447     07FD  0EFE               	swapf	btemp,f
 11448     07FE  0E7E               	swapf	btemp,w
 11449     07FF  0009               	retfie
 11450     0800                     __end_of_Isr:
 11451     007E                     btemp	set	126	;btemp
 11452     007E                     wtemp0	set	126
 11453                           
 11454                           	psect	intentry
 11455     0004                     __pintentry:	
 11456                           ;incstack = 0
 11457                           ; Regs used in _Isr: []
 11458                           
 11459     0004                     interrupt_function:
 11460     007E                     saved_w	set	btemp
 11461     0004  00FE               	movwf	btemp
 11462     0005  0E03               	swapf	3,w
 11463     0006  00F0               	movwf	??_Isr
 11464     0007  080A               	movf	10,w
 11465     0008  00F1               	movwf	??_Isr+1
 11466     0009  120A  118A  2FF9   	ljmp	_Isr
 11467                           
 11468                           	psect	idloc
 11469                           
 11470                           ;Config register IDLOC0 @ 0x2000
 11471                           ;	unspecified, using default values
 11472     2000                     	org	8192
 11473     2000  3FFF               	dw	16383
 11474                           
 11475                           ;Config register IDLOC1 @ 0x2001
 11476                           ;	unspecified, using default values
 11477     2001                     	org	8193
 11478     2001  3FFF               	dw	16383
 11479                           
 11480                           ;Config register IDLOC2 @ 0x2002
 11481                           ;	unspecified, using default values
 11482     2002                     	org	8194
 11483     2002  3FFF               	dw	16383
 11484                           
 11485                           ;Config register IDLOC3 @ 0x2003
 11486                           ;	unspecified, using default values
 11487     2003                     	org	8195
 11488     2003  3FFF               	dw	16383
 11489                           
 11490                           	psect	config
 11491                           
 11492                           ;Config register CONFIG1 @ 0x2007
 11493                           ;	Oscillator Selection bits
 11494                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
 11495                           ;	Watchdog Timer Enable bit
 11496                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11497                           ;	Power-up Timer Enable bit
 11498                           ;	PWRTE = OFF, PWRT disabled
 11499                           ;	RE3/MCLR pin function select bit
 11500                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11501                           ;	Code Protection bit
 11502                           ;	CP = OFF, Program memory code protection is disabled
 11503                           ;	Data Code Protection bit
 11504                           ;	CPD = OFF, Data memory code protection is disabled
 11505                           ;	Brown Out Reset Selection bits
 11506                           ;	BOREN = OFF, BOR disabled
 11507                           ;	Internal External Switchover bit
 11508                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11509                           ;	Fail-Safe Clock Monitor Enabled bit
 11510                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11511                           ;	Low Voltage Programming Enable bit
 11512                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11513                           ;	In-Circuit Debugger Mode bit
 11514                           ;	DEBUG = 0x1, unprogrammed default
 11515     2007                     	org	8199
 11516     2007  20D6               	dw	8406
 11517                           
 11518                           ;Config register CONFIG2 @ 0x2008
 11519                           ;	Brown-out Reset Selection bit
 11520                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11521                           ;	Flash Program Memory Self Write Enable bits
 11522                           ;	WRT = OFF, Write protection off
 11523     2008                     	org	8200
 11524     2008  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     80      80
    BANK1            80     49      49
    BANK3            96     50      50
    BANK2            96     50      50

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> main@display1(BANK2[50]), main@display0(BANK3[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 50
		 -> main@display1(BANK2[50]), main@display0(BANK3[50]), STR_2(CODE[13]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _sprintf->___llmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    _adc_RO->_adc_read
    ___flmul->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _Isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _adc_volt->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               112   112      0   39533
                                             79 BANK0      1     1      0
                                             38 BANK1     11    11      0
                                              0 BANK3     50    50      0
                                              0 BANK2     50    50      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _adc_channel
                          _adc_setup
                           _adc_volt
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31525
                                             74 BANK0      5     5      0
                                              8 BANK1     30    25      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              2 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             53 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_volt                                            13     9      4    6404
                                             60 BANK0     13     9      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                             _adc_RO
 ---------------------------------------------------------------------------------
 (2) _adc_RO                                               2     2      0      44
                                              4 COMMON     2     2      0
                         _adc_output
                           _adc_read
 ---------------------------------------------------------------------------------
 (3) _adc_read                                             2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _adc_output                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             34 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_setup                                            2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_channel                                          2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     438
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     574
                                              6 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0      44
                                              6 COMMON     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _adc_channel
   _adc_setup
   _adc_volt
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
     _adc_RO
       _adc_output
       _adc_read
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     31      31       7       61.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60     32      32       9       52.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60     32      32      11       52.1%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 18 16:40:14 2023

                       l9 19F6              ___fldiv@aexp 005B              ___fldiv@bexp 005A  
                       pc 0002              ___fldiv@sign 0053                        l12 1A63  
                      l21 1A9F                        l15 1A17                        l24 1057  
                      l33 1B67                        l27 1A7F              ___awdiv@sign 0025  
                      fsr 0004       ___wmul@multiplicand 0074       __Umul8_16@word_mpld 0078  
                     l120 08CB                       l112 07DB                       l121 08D2  
                     l113 07DE                       l130 0911                       l122 08D9  
                     l114 07F8                       l131 0918                       l123 08E0  
                     l132 091F                       l124 08E7                       l125 08EE  
                     l141 19FF                       l126 08F5                       l134 0957  
                     l118 08C4                       l127 08FC                       l311 04F2  
                     l128 0903                       l144 1A37                       l304 04AE  
                     l129 090A                       l137 1A25                       l147 1D5B  
                     l331 1AC4                       l500 1076                       l252 15A7  
                     l325 06C4                       l510 1102                       l503 10D2  
                     l319 0671                       l520 1EC3                       l329 1AAC  
                     l515 1BCC                       l523 1F2F                       l259 0FFF  
                     l516 1BE8                       l524 1F48                       l532 1EA4  
                     l517 1BFD                       l365 1DC3                       l702 1C4D  
                     l542 1EA4                       l550 1FC2                       l278 0094  
                     l712 1220                       l528 1A0A                       l714 139C  
                     l810 119F                       l802 1177                       l546 1FFF  
                     l482 1E2C                       l539 1E8F                       l547 1F73  
                     l635 1BAD                       l660 1686                       l557 1FF2  
                     l645 1B25                       l734 1384                       l662 165F  
                     l495 1CFA                       l736 1392                       l728 1312  
                     l752 0C9C                       l656 1603                       l816 1A49  
                     l809 1193                       l681 1773                       l585 1CA1  
                     l690 17D3                       l771 1AD9                       l499 110F  
                     l764 0C90                       l773 1AEB                       l677 174F  
                     l669 17FF                       l758 0C0C                       l687 1795  
                     l698 17F5                       l699 17FF                       l796 1134  
                     l798 11C9                       _Isr 07F9                       fsr0 0004  
                     indf 0000              ___awmod@sign 0078              ___flmul@aexp 003A  
            ___flmul@bexp 003B              ___flmul@sign 0035              ___flmul@temp 0040  
            ___flmul@prod 003C                      ?_Isr 0070              ___fltol@exp1 005E  
                    l3010 10F7                      l3002 10DE                      l3100 1E41  
                    l3020 1AA6                      l3012 1107                      l3004 10F0  
                    l3110 1E63                      l3102 1E54                      l3030 1D5C  
                    l3022 1AB3                      l3200 1238                      l2320 1AC8  
                    l3104 1E55                      l3040 1D8B                      l3032 1D6E  
                    l3024 1ABA                      l3016 1AA0                      l2400 1CB2  
                    l3210 124F                      l2322 1ACF                      l3106 1E5D  
                    l3042 1D9D                      l3034 1D71                      l3050 1DBB  
                    l3130 1C4E                      l3026 1AC0                      l3018 1AA2  
                    l2410 1CCB                      l2402 1CB7                      l2332 19F2  
                    l3220 127B                      l3212 1261                      l3204 1241  
                    l2324 1AD3                      l3300 1118                      l2340 19FD  
                    l3060 1BFA                      l2500 15DC                      l3124 1E84  
                    l3116 1E6B                      l3108 1E5F                      l3044 1DAB  
                    l3036 1D7E                      l3140 1C7C                      l3132 1C56  
                    l2412 1CCF                      l2404 1CBD                      l2420 1CEC  
                    l3222 1280                      l3230 12A0                      l3214 1269  
                    l3206 1246                      l2326 1AE2                      l2318 1AC6  
                    l3310 1145                      l3302 111C                      l2342 19FE  
                    l2334 1A19                      l3062 1BFC                      l3054 1BAE  
                    l3070 1ED7                      l2510 15EB                      l2502 15DD  
                    l3150 1BFE                      l3126 1E94                      l3118 1E7D  
                    l3046 1DAC                      l3038 1D82                      l3142 1C8A  
                    l3134 1C59                      l2430 1B6C                      l2350 1DCB  
                    l2422 1CF1                      l2414 1CD9                      l2406 1CC0  
                    l3400 07F1                      l3240 12CB                      l3232 12B2  
                    l3224 1292                      l3216 1271                      l3160 11D3  
                    l2328 1AE7                      l3320 116E                      l3312 1148  
                    l3304 112C                      l2336 1A24                      l3056 1BC4  
                    l3080 1F45                      l3072 1EDF                      l2600 16E9  
                    l2520 1609                      l2512 15F0                      l2504 15E1  
                    l3152 1C02                      l3128 1E99                      l3048 1DB5  
                    l3144 1C93                      l3136 1C66                      l2440 1B84  
                    l2432 1B72                      l2360 1DDF                      l2352 1DD0  
                    l2424 1CF6                      l2416 1CDF                      l2408 1CC7  
                    l3402 07F4                      l3250 12E3                      l3242 12D3  
                    l3234 12B3                      l3226 1296                      l3218 1279  
                    l3170 11EA                      l3162 11D7                      l3330 11A1  
                    l3322 117E                      l3314 1155                      l3306 113C  
                    l2338 19F7                      l3058 1BE0                      l3082 1F47  
                    l3074 1EE3                      l3066 1EA5                      l3090 1A0A  
                    l2610 1757                      l2602 1727                      l2530 1617  
                    l2522 160D                      l2514 15F8                      l2506 15E5  
                    l3138 1C6A                      l3146 1C99                      l2442 1B95  
                    l2434 1B75                      l2450 1BA9                      l2370 1DF5  
                    l2362 1DE1                      l2354 1DD2                      l2346 1DC4  
                    l2418 1CE6                      l3404 08C3                      l3260 12FB  
                    l3252 12EC                      l3244 12D5                      l3236 12C1  
                    l3228 1297                      l3180 11FE                      l3172 11EB  
                    l3164 11D8                      l3156 11CA                      l2700 099A  
                    l3332 11B7                      l3324 1189                      l3316 115C  
                    l3076 1F07                      l3068 1EBB                      l2620 1772  
                    l2612 175C                      l2604 172D                      l2540 1621  
                    l2532 1619                      l2524 1611                      l2516 15F9  
                    l2508 15E6                      l2444 1B9B                      l2436 1B7C  
                    l2428 1B68                      l2460 1AFC                      l2380 1E18  
                    l2372 1DF9                      l2364 1DE7                      l2356 1DD6  
                    l2348 1DC7                      l3500 023B                      l3342 1A0B  
                    l3350 1A89                      l3270 132A                      l3262 130F  
                    l3246 12DE                      l3254 12F2                      l3238 12C5  
                    l3190 1215                      l3182 1202                      l3166 11DD  
                    l3174 11ED                      l3158 11CF                      l2710 09B6  
                    l2702 09A2                      l3334 11BC                      l3326 118D  
                    l3318 1160                      l3414 1CFE                      l3078 1F0B  
                    l3086 1A00                      l2622 1777                      l2630 1783  
                    l2606 1732                      l2550 162B                      l2542 1623  
                    l2534 161B                      l2526 1613                      l2518 15FB  
                    l3094 1E2D                      l2446 1B9C                      l2438 1B80  
                    l2470 1B1B                      l2462 1B00                      l2454 1AEC  
                    l2374 1E0A                      l2366 1DEA                      l2382 1E1E  
                    l2358 1DDB                      l2390 1CA2                      l3510 02E2  
                    l3502 024A                      l3430 002D                      l3422 0016  
                    l3360 1000                      l3352 1A90                      l3344 1A81  
                    l3408 0926                      l3280 1368                      l3272 132E  
                    l3256 12F6                      l3248 12E2                      l3192 1216  
                    l3184 1203                      l3176 11F5                      l3168 11E2  
                    l2800 0C86                      l2720 09F5                      l2704 09A4  
                    l3336 11C0                      l3328 1197                      l3416 1D0C  
                    l3088 1A08                      l2624 177A                      l2616 1765  
                    l2608 1741                      l2632 1787                      l2560 1663  
                    l2552 162D                      l2544 1625                      l2536 161D  
                    l2528 1615                      l2480 15B1                      l3096 1E38  
                    l2448 1BA3                      l2464 1B04                      l2456 1AF2  
                    l2472 1B21                      l2384 1E23                      l2376 1E10  
                    l2368 1DF1                      l2392 1CA3                      l3600 0663  
                    l3520 033B                      l3512 02F1                      l3504 0291  
                    l3440 0047                      l3432 002F                      l3424 0019  
                    l2810 1A4B                      l3370 1039                      l3362 100C  
                    l3354 1A96                      l3346 1A86                      l3290 138C  
                    l3282 1377                      l3274 1347                      l3266 1317  
                    l3258 12F7                      l3186 1208                      l3194 1218  
                    l3178 11FA                      l2802 0C8A                      l2730 0A7C  
                    l2722 0A11                      l2714 09BF                      l2706 09AC  
                    l3338 11C1                      l3418 1D53                      l2650 17CF  
                    l2642 179A                      l2634 1788                      l2626 177C  
                    l2618 176E                      l2570 167A                      l2562 166A  
                    l2546 1627                      l2538 161F                      l2554 162F  
                    l2490 15C8                      l2482 15B5                      l2466 1B0E  
                    l2458 1AF5                      l2386 1E28                      l2378 1E11  
                    l2394 1CA7                      l3610 0690                      l3602 066B  
                    l3530 03C7                      l3514 030C                      l3506 02A0  
                    l3450 0092                      l3442 005C                      l3434 003B  
                    l3426 001F                      l2812 1A4E                      l3372 103F  
                    l3364 1012                      l3356 1A99                      l3348 1A89  
                    l2820 1A65                      l3380 1B26                      l3292 138E  
                    l3284 137B                      l3268 131C                      l3276 134D  
                    l3196 1228                      l3188 120D                      l2804 0C8B  
                    l2740 0AE9                      l2732 0A8A                      l2724 0A3B  
                    l2716 09CD                      l2708 09B1                      l2660 17EB  
                    l2652 17D8                      l2644 179F                      l2636 178C  
                    l2628 1781                      l2580 1698                      l2564 166C  
                    l2572 167E                      l2556 1630                      l2548 1629  
                    l2492 15C9                      l2484 15B6                      l2476 15A8  
                    l2468 1B14                      l2900 1A39                      l2396 1CAC  
                    l3612 06A4                      l3604 067C                      l3532 03C9  
                    l3524 035A                      l3516 0315                      l3508 02BB  
                    l3460 00CE                      l3444 0077                      l3436 003C  
                    l3428 0024                      l2814 1A54                      l3374 1045  
                    l3366 1021                      l3358 1A99                      l2830 1A79  
                    l2822 1A68                      l3382 1B29                      l3390 07D5  
                    l3286 1383                      l3278 135A                      l3198 1234  
                    l2806 0C94                      l2750 0B90                      l2742 0B06  
                    l2734 0AA7                      l2726 0A57                      l2718 09DA  
                    l2670 0958                      l2662 17EF                      l2654 17DD  
                    l2646 17AD                      l2638 1792                      l2590 16C0  
                    l2582 16AF                      l2574 168A                      l2566 1670  
                    l2558 1647                      l2486 15BB                      l2494 15CB  
                    l2478 15AD                      l2902 1A3A                      l2398 1CAE  
                    l3606 067D                      l3550 0442                      l3542 0412  
                    l3518 031D                      l3526 0363                      l3470 011A  
                    l3462 00D2                      l3454 0098                      l3446 007F  
                    l3438 0044                      l2816 1A57                      l3376 104B  
                    l3368 102A                      l2832 1A7A                      l2824 1A6E  
                    l3384 1B45                      l3392 07E1                      l3288 1388  
                    l2760 0BDC                      l2752 0BB8                      l2744 0B31  
                    l2736 0AB5                      l2728 0A73                      l2680 096B  
                    l2672 095D                      l2664 17F1                      l2656 17E5  
                    l2648 17B1                      l2592 16C4                      l2584 16B3  
                    l2576 168F                      l2568 1671                      l2496 15D3  
                    l2488 15C0                      l2912 1F49                      l2904 1A40  
                    l3608 0690                      l3560 04C7                      l3552 0481  
                    l3544 0420                      l3528 0398                      l3480 014C  
                    l3472 011E                      l3464 00E0                      l3456 00B6  
                    l3448 0090                      l3616 06AC                      l3640 06DB  
                    l3632 06C5                      l2818 1A60                      l3378 1051  
                    l2826 1A71                      l3386 1B4B                      l3394 07E5  
                    l2770 0BF1                      l2762 0BDD                      l2754 0BC1  
                    l2746 0B3F                      l2738 0AD2                      l2690 0987  
                    l2682 0970                      l2674 0961                      l3298 1113  
                    l2834 1A27                      l2666 17FA                      l2658 17EA  
                    l2594 16C5                      l2586 16B7                      l2498 15D6  
                    l2930 1F8B                      l2914 1F5A                      l2850 14B3  
                    l2842 13A0                      l2906 1A46                      l3570 0503  
                    l3562 04CD                      l3554 04A0                      l3546 0432  
                    l3538 03CB                      l3490 01AB                      l3482 015F  
                    l3474 0122                      l3466 00E8                      l3458 00C8  
                    l3618 06BE                      l3650 070A                      l3642 06E3  
                    l3634 06CB                      l2828 1A76                      l3396 07EB  
                    l3388 07D0                      l2780 0C16                      l2772 0BF5  
                    l2764 0BE6                      l2756 0BCF                      l2748 0B6A  
                    l2692 098B                      l2684 0978                      l2676 0965  
                    l2836 1A2D                      l2668 17FE                      l2596 16CE  
                    l2588 16BE                      l2940 1FB4                      l2932 1F92  
                    l2924 1F74                      l2852 14B9                      l2844 13A6  
                    l2908 1A48                      l2860 0CA0                      l3580 058E  
                    l3572 0508                      l3564 04DA                      l3556 04B8  
                    l3548 0439                      l3492 01F6                      l3484 0182  
                    l3476 013B                      l3468 0101                      l3660 074E  
                    l3652 0713                      l3644 06F8                      l3636 06CF  
                    l3398 07ED                      l2790 0C54                      l2782 0C24  
                    l2774 0C09                      l2758 0BD8                      l2766 0BEC  
                    l2694 098F                      l2686 097A                      l2678 0966  
                    l2838 1A32                      l2598 16D3                      l2950 1FCE  
                    l2942 1FBC                      l2934 1F9B                      l2926 1F7A  
                    l2918 1F63                      l2862 0CA4                      l3590 0641  
                    l3582 05CD                      l3574 050D                      l3566 04E9  
                    l3558 04BF                      l3494 020F                      l3486 0186  
                    l3478 0146                      l3734 00AE                      l3670 079F  
                    l3662 076E                      l3654 071B                      l3646 06FD  
                    l3638 06D5                      l3736 092B                      l2792 0C5F  
                    l2784 0C28                      l2768 0BF0                      l2696 0990  
                    l2688 0982                      l2960 1FF7                      l2944 1FC6  
                    l2952 1FE0                      l2936 1FA9                      l2928 1F89  
                    l2856 1564                      l2872 0D97                      l2864 0CA6  
                    l3592 0646                      l3584 05EC                      l3576 0515  
                    l3568 04EE                      l3496 0218                      l3488 018C  
                    l3672 07A8                      l3664 077E                      l3656 0724  
                    l3648 0702                      l2794 0C6E                      l2786 0C41  
                    l2778 0C11                      l2698 0995                      l2970 106C  
                    l2938 1FB3                      l2890 0F44                      l2874 0D9E  
                    l2866 0CAD                      l2882 0E53                      l3594 064E  
                    l3586 05FA                      l3578 0533                      l3498 0233  
                    l3674 07B0                      l3666 0790                      l3658 072E  
                    l2796 0C78                      l2788 0C47                      l2980 1090  
                    l2964 1058                      l2892 0F4B                      l2884 0E5A  
                    l3596 0654                      l3588 0639                      l3676 07B7  
                    l3668 0798                      l2798 0C7A                      l2990 10C2  
                    l2982 1092                      l2966 1063                      l2958 1FE7  
                    l2878 0E26                      l3598 065B                      l3678 07C0  
                    l2992 10C3                      l2984 1099                      l2976 1077  
                    l2896 0FD3                      l2994 10CC                      l2986 10A2  
                    l2978 107F                      l2996 10D6                      l2988 10B4  
                    STR_1 08A0                      STR_2 08AD                      STR_3 08BA  
                    STR_4 08BA                      u3000 1DD6                      u3001 1DD5  
                    u3010 1DE7                      u3011 1DE6                      u3100 1CB2  
                    u3101 1CB1                      u3030 1DF9                      u3110 1CBD  
                    u3031 1DF8                      u3111 1CBC                      u3200 1B84  
                    u3201 1B83                      u3025 1DEB                      u3050 1E0A  
                    u3130 1CCF                      u3051 1E09                      u3131 1CCE  
                    u4100 0C37                      u4020 0BDC                      u3220 1B95  
                    u3300 1B21                      u3140 1CD9                      u4021 0BDB  
                    u4005 0BBA                      u3221 1B94                      u3301 1B20  
                    u3045 1DFA                      u3141 1CD8                      u3125 1CC1  
                    u4110 0C54                      u3310 15B5                      u3070 1E1E  
                    u4111 0C53                      u4015 0BD1                      u3311 15B4  
                    u3215 1B85                      u3071 1E1D                      u3055 1E06  
                    u4120 0C6E                      u4040 0BF0                      u3400 1647  
                    u3320 15BB                      u3240 1BA9                      u3080 1E23  
                    u3160 1CEC                      u4121 0C6D                      u4105 0C32  
                    u4041 0BEF                      u3401 1646                      u3321 15BA  
                    u3241 1BA8                      u3225 1B91                      u3081 1E22  
                    u3065 1E12                      u3161 1CEB                      u3145 1CD5  
                    u4130 0C8A                      u4050 0BF5                      u3410 1652  
                    u3330 15C0                      u5010 1C6A                      u3250 1AF2  
                    u3170 1CF1                      u3090 1CA7                      u4131 0C89  
                    u4115 0C50                      u4051 0BF4                      u4035 0BDF  
                    u3411 1650                      u3331 15BF                      u5011 1C69  
                    u3235 1B9D                      u3251 1AF1                      u3171 1CF0  
                    u3155 1CE0                      u3091 1CA6                      u5100 120D  
                    u4060 0C09                      u3500 16B3                      u3420 1653  
                    u3340 15DC                      u5020 1C7C                      u3180 1B72  
                    u4140 13A6                      u4220 0CA4                      u5101 120C  
                    u4125 0C6A                      u4061 0C08                      u3501 16B2  
                    u3405 1643                      u3341 15DB                      u5021 1C7B  
                    u5005 1C5B                      u3181 1B71                      u4205 1523  
                    u4141 13A5                      u4221 0CA3                      u5110 1228  
                    u4070 0C10                      u3510 16B7                      u3430 1663  
                    u3350 15E5                      u3270 1B04                      u4310 0E5A  
                    u4230 0CAD                      u5111 1227                      u4071 0C0F  
                    u3511 16B6                      u3431 1662                      u3351 15E4  
                    u3271 1B03                      u4215 156F                      u4311 0E59  
                    u4231 0CAC                      u5200 12D3                      u5120 1246  
                    u4080 0C16                      u3520 16C4                      u3440 1670  
                    u3360 15EB                      u5040 1C99                      u3280 1B0E  
                    u4400 1A46                      u5201 12D2                      u5121 1245  
                    u4081 0C15                      u3521 16C3                      u3441 166F  
                    u3361 15EA                      u5041 1C98                      u5025 1C78  
                    u3281 1B0D                      u3265 1AF6                      u4401 1A45  
                    u4305 0E29                      u5130 1280                      u5050 11D7  
                    u4090 0C28                      u3610 1772                      u3370 15F0  
                    u4410 1F5A                      u5131 127F                      u5051 11D6  
                    u4091 0C27                      u3611 1771                      u3371 15EF  
                    u5035 1C8B                      u4411 1F59                      u3195 1B76  
                    u4155 13C3                      u5300 133D                      u5220 12E2  
                    u5060 11DD                      u3700 17C0                      u3620 1777  
                    u3540 16E9                      u3460 1686                      u3380 1609  
                    u4500 1FDF                      u4420 1F72                      u4180 14B9  
                    u5221 12E1                      u5061 11DC                      u3621 1776  
                    u3605 1767                      u3541 16E8                      u3461 1685  
                    u3381 1608                      u4501 1FDE                      u4421 1F71  
                    u3285 1B0A                      u4181 14B8                      u4165 141D  
                    u4325 0E7C                      u4245 0CCF                      u5310 135A  
                    u5070 11E2                      u3710 17CF                      u3630 1781  
                    u3470 168A                      u3390 160D                      u4510 1FE6  
                    u4350 0F4B                      u4270 0D9E                      u6007 1025  
                    u5311 1359                      u5215 12D7                      u5071 11E1  
                    u3711 17CE                      u3631 1780                      u3551 1700  
                    u3543 16E5                      u3535 16C7                      u3471 1689  
                    u3455 1673                      u3391 160C                      u4511 1FE5  
                    u3295 1B15                      u4175 1472                      u4351 0F4A  
                    u4335 0EB8                      u4271 0D9D                      u4255 0D0B  
                    u5320 1377                      u5240 12F6                      u5160 1296  
                    u5080 1202                      u3800 098F                      u5400 117D  
                    u3720 17D8                      u3640 1787                      u3560 1714  
                    u3552 1701                      u3480 168F                      u4600 10D6  
                    u4440 1FA9                      u6017 1034                      u5321 1376  
                    u5305 1338                      u5241 12F5                      u5161 1295  
                    u5145 1282                      u5081 1201                      u3801 098E  
                    u5401 117C                      u3721 17D7                      u3705 17BB  
                    u3641 1786                      u3561 1715                      u3553 1706  
                    u3481 168E                      u4601 10D5                      u4441 1FA8  
                    u4345 0F03                      u4265 0D56                      u5330 138C  
                    u5250 12FB                      u5090 1208                      u3810 0995  
                    u3730 17DD                      u3650 178C                      u3570 1732  
                    u3562 171A                      u3554 1707                      u4610 10DD  
                    u4530 1FF7                      u6027 1A5B                      u5331 138B  
                    u5315 1356                      u5251 12FA                      u5235 12E5  
                    u5155 128B                      u5091 1207                      u3811 0994  
                    u3731 17DC                      u3651 178B                      u3571 1731  
                    u3563 171B                      u3555 170C                      u3491 16A1  
                    u4611 10DC                      u4531 1FF6                      u4435 1F94  
                    u4195 14D6                      u5500 1B33                      u5260 130F  
                    u5180 12B2                      u3820 099A                      u5420 118D  
                    u5340 1118                      u3740 17EA                      u3660 1792  
                    u3580 1757                      u3556 170D                      u3492 16A8  
                    u4700 1AC0                      u4540 1063                      u4460 1FC2  
                    u5325 1373                      u5261 130E                      u5181 12B1  
                    u3901 0A99                      u3821 0999                      u5421 118C  
                    u5341 1117                      u3741 17E9                      u3661 1791  
                    u3581 1756                      u3493 16AF                      u4701 1ABF  
                    u4541 1062                      u4525 1FE9                      u4461 1FC1  
                    u4445 1FA5                      u4365 0F5E                      u4285 0DB1  
                    u5510 1B55                      u5270 1316                      u5190 12CB  
                    u2950 1AD3                      u3902 0AA0                      u3830 09B1  
                    u5430 1193                      u5350 111C                      u3750 17EF  
                    u3670 1799                      u3590 175C                      u4710 1D6E  
                    u4630 10EF                      u4550 1075                      u4470 1FC6  
                    u4390 1A40                      u5271 1315                      u5191 12CA  
                    u5175 1299                      u2951 1AD2                      u3911 0AC4  
                    u3903 0AA7                      u3831 09B0                      u5431 1192  
                    u5415 1182                      u5351 111B                      u3751 17EE  
                    u3671 1798                      u3591 175B                      u4711 1D6D  
                    u4631 10EE                      u4551 1074                      u4471 1FC5  
                    u4455 1FB5                      u4391 1A3F                      u4375 0F9A  
                    u4295 0DED                      u5520 1B67                      u5280 131C  
                    u3912 0ACB                      u3840 09B6                      u5440 1197  
                    u5360 113C                      u4800 1BFA                      u3760 17FE  
                    u3680 179F                      u4640 10F6                      u4480 1FCD  
                    u5600 013B                      u5521 1B66                      u5281 131B  
                    u5185 12AE                      u3913 0AD2                      u3841 09B5  
                    u5441 1196                      u5361 113B                      u4801 1BF9  
                    u3761 17FD                      u3681 179E                      u4641 10F5  
                    u4625 10DF                      u4481 1FCC                      u4385 0FD6  
                    u5601 013A                      u5530 07D5                      u5290 132E  
                    u2970 1AE7                      u3770 0965                      u5450 11AC  
                    u4810 1EBB                      u3690 17B1                      u4730 1D82  
                    u4570 10B4                      u5610 0186                      u5531 07D4  
                    u5291 132D                      u2971 1AE6                      u3931 0AF8  
                    u3851 0A03                      u3771 0964                      u4811 1EBA  
                    u3691 17B0                      u4731 1D81                      u4571 10B3  
                    u5611 0185                      u3932 0AFF                      u3852 0A0A  
                    u3780 096B                      u5460 11BC                      u5380 115B  
                    u2980 19FD                      u4820 1ED7                      u4900 1E4F  
                    u4660 1107                      u5620 020F                      u5540 001F  
                    u2965 1ADA                      u3941 0B23                      u3933 0B06  
                    u3925 0AD4                      u3861 0A1F                      u3853 0A11  
                    u3781 096A                      u5461 11BB                      u5381 115A  
                    u2981 19FC                      u4805 1BF6                      u4821 1ED6  
                    u4725 1D73                      u4661 1106                      u4565 109B  
                    u5621 020E                      u5541 001E                      u3942 0B2A  
                    u3862 0A26                      u3790 0970                      u5470 11C0  
                    u4830 1EE3                      u4910 1E63                      u4750 1D9D  
                    u4670 1AA6                      u4590 10D2                      u2990 1DCB  
                    u5710 0411                      u5630 0233                      u5550 003B  
                    u3951 0B4E                      u3943 0B31                      u3871 0A49  
                    u3863 0A2D                      u3791 096F                      u5471 11BF  
                    u5455 11A7                      u5375 114D                      u4831 1EE2  
                    u4911 1E62                      u4751 1D9C                      u4671 1AA5  
                    u4655 10F9                      u4591 10D1                      u4575 10B0  
                    u4495 1FCF                      u2991 1DCA                      u5711 0410  
                    u5631 0232                      u5551 003A                      u5480 1A86  
                    u3960 0B76                      u3952 0B55                      u3872 0A50  
                    u4920 1E6A                      u5720 0420                      u5640 024A  
                    u5560 008F                      i1l81 07F9                      u5481 1A85  
                    u3953 0B5C                      u3881 0A65                      u3873 0A57  
                    u4841 1EF2                      u4921 1E69                      u4905 1E4A  
                    u4745 1D84                      u4585 10C5                      u5721 041F  
                    u5705 03D0                      u5641 0249                      u5561 008E  
                    u5490 1A96                      u3882 0A6C                      u4850 1F0B  
                    u4842 1EF3                      u4770 1DBB                      u5810 0640  
                    u5730 0432                      u5650 02A0                      u5570 00C8  
                    u5491 1A95                      u3971 0B82                      u3883 0A73  
                    u5395 116F                      u4851 1F0A                      u4843 1EF8  
                    u4771 1DBA                      u4755 1D99                      u5811 063F  
                    u5731 0431                      u5715 040D                      u5651 029F  
                    u5571 00C7                      u3980 0B9E                      u3972 0B89  
                    u4780 1BC4                      u4844 1EF9                      u4940 1E7C  
                    u5820 065A                      u5660 02BB                      u5580 00CE  
                    u3973 0B90                      u3965 0B71                      u4781 1BC3  
                    u4861 1F1A                      u4845 1EFE                      u4941 1E7B  
                    u4765 1DAD                      u4685 1AAD                      u5821 0659  
                    u5805 05FF                      u5661 02BA                      u5645 0246  
                    u5581 00CD                      u4790 1BE0                      u4870 1F45  
                    u4862 1F1B                      u4846 1EFF                      u4950 1E83  
                    u5830 0663                      u5750 04B7                      u5670 02E2  
                    u5590 0101                      u3991 0BAA                      u3895 0A75  
                    u4791 1BDF                      u4871 1F44                      u4863 1F20  
                    u4951 1E82                      u4935 1E6C                      u4695 1AB4  
                    u5831 0662                      u5751 04B6                      u5671 02E1  
                    u5655 029C                      u5591 0100                      u3992 0BB1  
                    u4864 1F21                      u4880 1A08                      u5840 066B  
                    u5760 04DA                      u5680 02F1                      u3993 0BB8  
                    u3985 0B99                      u4865 1F26                      u4881 1A07  
                    u5841 066A                      u5761 04D9                      u5745 0447  
                    u5681 02F0                      u4866 1F27                      u4970 1E94  
                    u4890 1E38                      u5850 067C                      u5770 04E9  
                    u5690 030C                      u4875 1F41                      u4971 1E93  
                    u4891 1E37                      u5851 067B                      u5771 04E8  
                    u5691 030B                      u5907 079C                      u4980 1E99  
                    u5860 0690                      u5780 0508                      u4981 1E98  
                    u4965 1E86                      u5861 068F                      u5781 0507  
                    u5765 04D6                      u5685 02ED                      u5917 07B4  
                    u4990 1C56                      u5870 06A4                      u4991 1C55  
                    u5871 06A3                      u5855 0678                      u5775 04E5  
                    u5927 07C6                      u5880 06BE                      u5937 1A2F  
                    u5881 06BD                      u5865 068C                      u5947 07EF  
                    u5795 0593                      u5957 07F6                      u5967 1A73  
                    u5977 1A7C                      u5897 072A                      u5987 1006  
                    u5997 1016         ?_Lcd_Write_String 0075                      _main 06C5  
                    btemp 007E                      start 000C        ??_Lcd_Write_String 0077  
             main@output0 00C8               main@output1 00CC           ___fldiv@new_exp 0054  
            _sprintf$1136 00AD           __end_of_Lcd_Cmd 1A64                     ??_Isr 0070  
            main@display0 0190              main@display1 0110             ___fltol@sign1 005D  
         __end_of___fladd 1800                     ?_main 0070           __end_of___fldiv 139D  
         __end_of___awdiv 1E2D           __end_of___flneg 1A0B           __end_of___awmod 1CFB  
         __end_of___flmul 0C9D           __end_of___flsub 1C4E           __end_of___fltol 1EA5  
                   _ANSEL 0188           __end_of___lldiv 1DC4           ___awdiv@divisor 0020  
         __end_of___llmod 1CA2           __end_of___lwdiv 1BAE           __end_of___lwmod 1B26  
         ___awdiv@counter 0024                     _PORTA 0005                     _PORTD 0008  
                   _PORTE 0009                     _TRISD 0088                     _TRISE 0089  
         adc_volt@channel 0068           __end_of_dpowers 08A0                     _scale 0C9D  
         __end_of_isdigit 1A4A                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 06C5          __end_of_Lcd_Init 1058  
        __end_of_Lcd_Port 19F7           __initialization 000F              __end_of_main 07CF  
                  ??_main 00C6          ___llmod@dividend 0076                    ?_scale 0042  
                  _ADRESH 001E          ___awdiv@dividend 0022                    _ANSELH 0189  
        __end_of_adc_read 1A26          __end_of_adc_volt 1D5C                 ??_Lcd_Cmd 0073  
        __end_of___xxtofl 11CA          __end_of__powers_ 0844                    ___flge 1EA5  
                  _adc_RO 1A26                    ___fleq 1BAE                 ??___fladd 005E  
                  ___wmul 1AA0                 ??___fldiv 004A                 ??___awdiv 0079  
               ??___flneg 0076                 ??___awmod 0076                 ??___flmul 0030  
               ??___flsub 007C                 ??___fltol 0059                 ??___lldiv 007A  
               ??___llmod 007A                 ??___lwdiv 0020                 ??___lwmod 0076  
                  _fround 139D          ___awdiv@quotient 0026           ___awmod@divisor 0072  
         ___awmod@counter 0077                 ??_isdigit 0072                    saved_w 007E  
               ??_sprintf 006A           Lcd_Set_Cursor@a 0077           Lcd_Set_Cursor@b 0076  
           adc_RO@channel 0075                ___flge@ff1 0072                ___flge@ff2 0076  
            ___xxtofl@arg 0022              ___xxtofl@exp 0021              ___xxtofl@val 0072  
              ___fleq@ff1 0072                ___fleq@ff2 0076   __end_of__initialization 000F  
              ___flneg@f1 0072         __end_of_Lcd_Clear 1A18                ___fltol@f1 0055  
          __pcstackCOMMON 0070             __end_of_scale 1000                _adc_output 19F7  
          _Lcd_Set_Cursor 1A80                __div_to_l_ 1058                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070           __div_to_l_@exp1 0025           __div_to_l_@cntr 0024  
                 ??_scale 0046           __div_to_l_@quot 0020             __div_to_l_@f1 0072  
           __div_to_l_@f2 0076         __end_of__Umul8_16 1AEC                __pmaintext 06C5  
           ??_adc_channel 0074                   ?___flge 0072                   ?_adc_RO 0070  
                 ?___fleq 0072                   ?___wmul 0072                __pintentry 0004  
                 ?_fround 0042    __end_of_Lcd_Set_Cursor 1AA0                 ?_adc_read 0070  
               ?_adc_volt 005C         __end_of_adc_setup 07F9                 ?___xxtofl 0072  
              ??_Lcd_Init 0076                ??_Lcd_Port 0072                __stringtab 0800  
          _Lcd_Write_Char 1A64                   _Lcd_Cmd 1A4A         __end_of__npowers_ 0878  
              _scale$1135 0050                   ___fladd 15A8                   ___fldiv 11CA  
                 ___awdiv 1DC4                   ___flneg 1A00                   ___awmod 1CA2  
                 ___flmul 0958                   ___flsub 1BFE                   ___fltol 1E2D  
                 ___lldiv 1D5C                   ___llmod 1C4E                   ___lwdiv 1B68  
                 ___lwmod 1AEC               ?_adc_output 0070                 _ANSELbits 0188  
         ?_Lcd_Set_Cursor 0076                ??_adc_read 0072                   __ptext1 0013  
                 __ptext2 0C9D                   __ptext3 1CA2                   __ptext4 1DC4  
                 __ptext5 1A38                   __ptext6 139D                   __ptext7 1AEC  
                 __ptext8 1B68                   __ptext9 1F49                ??_adc_volt 0060  
     __end_of_adc_channel 0958               ?__div_to_l_ 0072                   _dpowers 0878  
                 _isdigit 1A38                ??___xxtofl 0076          ___awmod@dividend 0074  
                 main@ch0 00D0                   main@ch1 006F                   _sprintf 0013  
  __end_of_Lcd_Write_Char 1A80      end_of_initialization 000F        adc_channel@channel 0072  
         ___lldiv@divisor 0072           ___lldiv@counter 0024                 Lcd_Port@a 0072  
          __tdiv_to_l_@f1 0072            __tdiv_to_l_@f2 0076             ??__tdiv_to_l_ 0020  
          adc_setup@inter 0073                 _PORTEbits 0009               ___fladd@grs 0069  
           ___xxtofl@sign 0020                 _TRISAbits 0085                 _TRISBbits 0086  
               _TRISEbits 0089               ___fldiv@grs 0056               ___fldiv@rem 004F  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075         Lcd_Write_String@i 007A  
             ___flmul@grs 0036                 _Lcd_Clear 1A0B               _adc_channel 08C3  
          __end_of___flge 1F49            __end_of_adc_RO 1A38            __end_of___fleq 1BFE  
          __end_of___wmul 1AC5          _Lcd_Write_String 1B26            __end_of_fround 15A8  
     start_initialization 000F               __end_of_Isr 0800       __end_of__tdiv_to_l_ 2000  
         ___llmod@divisor 0072           ___llmod@counter 007B                ?_Lcd_Clear 0070  
                ??___flge 0020                  ??_adc_RO 0074                  ??___fleq 0020  
                ??___wmul 0076                 __Umul8_16 1AC5           Lcd_Write_Char@a 0074  
                ??_fround 0046             sprintf@tmpval 00BA                 ___fladd@a 005A  
               ___fladd@b 0056                fround@prec 0055                 ___fldiv@a 0042  
               ___fldiv@b 0046                 ___flmul@a 002C                 ___flmul@b 0028  
         adc_read@channel 0073                 ___flsub@a 00A0                 ___flsub@b 00A4  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
           __pcstackBANK2 0110             __pcstackBANK3 0190                 _adc_setup 07CF  
                ?_Lcd_Cmd 0070               sprintf@flag 00B2               sprintf@eexp 00B8  
             sprintf@fval 00C1               sprintf@prec 00BE          ___lwdiv@dividend 007A  
        ??_Lcd_Set_Cursor 0077                  ?___fladd 0056                  ?___fldiv 0042  
                ?___awdiv 0020                  ?___flneg 0072                  ?___awmod 0072  
                ?___flmul 0028                  ?___flsub 00A0                  ?___fltol 0055  
                ?___lldiv 0072                  ?___llmod 0072                 __npowers_ 0844  
              ?__Umul8_16 0072                  ?___lwdiv 0078                  ?___lwmod 0072  
            ??_adc_output 0072                 __pstrings 0800               __tdiv_to_l_ 1F49  
            ??__div_to_l_ 007A                  ?_isdigit 0070               adc_volt@out 0066  
        ___lwdiv@quotient 0021                ?_adc_setup 0070                  ?_sprintf 00A8  
       interrupt_function 0004            ___wmul@product 0076        __end_of_adc_output 1A00  
                _PIE1bits 008C                  Lcd_Cmd@a 0075                  _PIR1bits 000C  
      __end_of__div_to_l_ 1110               ??_Lcd_Clear 0076                _ADCON0bits 001F  
             __stringbase 080F                _ADCON1bits 009F         ___wmul@multiplier 0072  
        ??_Lcd_Write_Char 0073                  _Lcd_Init 1000                  _Lcd_Port 19F1  
           adc_volt@final 0062  __end_of_Lcd_Write_String 1B68              ?_adc_channel 0072  
             ??__Umul8_16 0074               _fround$1133 0051               _fround$1134 004D  
      __end_of__stringtab 0810                  _adc_read 1A18               _isdigit$935 0072  
                _adc_volt 1CFB                _ANSELHbits 0189                sprintf@val 00B4  
                ___xxtofl 1110           ___lwdiv@divisor 0078           ___lwdiv@counter 0023  
                __ptext10 1058                  __ptext11 1AA0                  __ptext20 1CFB  
                __ptext12 1C4E                  __ptext21 1A26                  __ptext13 1D5C  
                __ptext30 1B26                  __ptext22 1A18                  __ptext14 1E2D  
                __ptext31 1A64                  __ptext23 19F7                  __ptext15 1BFE  
                __ptext32 1A80                  __ptext24 1110                  __ptext16 15A8  
                __ptext33 1000                  __ptext25 0958                  __ptext17 1A00  
                __ptext34 1A0B                  __ptext26 1AC5                  __ptext18 1EA5  
                __ptext35 1A4A                  __ptext27 11CA                  __ptext19 1BAE  
                __ptext36 19F1                  __ptext28 07CF                  __ptext37 07F9  
                __ptext29 08C3               ??_adc_setup 0072                  __powers_ 0810  
              _INTCONbits 000B                  isdigit@c 0073                  scale@scl 0054  
                intlevel1 0000                 sprintf@ap 00B1          __tdiv_to_l_@exp1 0028  
        __tdiv_to_l_@cntr 0027                 sprintf@sp 00C0          __tdiv_to_l_@quot 0023  
        ___lwmod@dividend 0074          ___lldiv@dividend 0076                 stringcode 080A  
      Lcd_Set_Cursor@temp 0078              ?__tdiv_to_l_ 0072    __Umul8_16@multiplicand 0072  
                sprintf@c 00C5                  sprintf@f 00A8          ___lldiv@quotient 0020  
         ___lwmod@divisor 0072           ___lwmod@counter 0077                  stringdir 080A  
                stringtab 0800             ___fladd@signs 0066              ___fladd@aexp 0067  
            ___fladd@bexp 0068      __Umul8_16@multiplier 007A         __Umul8_16@product 0076  
