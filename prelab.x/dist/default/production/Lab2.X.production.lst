

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 18 00:09:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2
    46                           	psect	text36,local,class=CODE,merge=1,delta=2
    47                           	psect	text37,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52     0000                     
    53                           ; Version 2.40
    54                           ; Generated 17/11/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000D                     	;# 
   102     000E                     	;# 
   103     000E                     	;# 
   104     000F                     	;# 
   105     0010                     	;# 
   106     0011                     	;# 
   107     0012                     	;# 
   108     0013                     	;# 
   109     0014                     	;# 
   110     0015                     	;# 
   111     0015                     	;# 
   112     0016                     	;# 
   113     0017                     	;# 
   114     0018                     	;# 
   115     0019                     	;# 
   116     001A                     	;# 
   117     001B                     	;# 
   118     001B                     	;# 
   119     001C                     	;# 
   120     001D                     	;# 
   121     001E                     	;# 
   122     001F                     	;# 
   123     0081                     	;# 
   124     0085                     	;# 
   125     0086                     	;# 
   126     0087                     	;# 
   127     0088                     	;# 
   128     0089                     	;# 
   129     008C                     	;# 
   130     008D                     	;# 
   131     008E                     	;# 
   132     008F                     	;# 
   133     0090                     	;# 
   134     0091                     	;# 
   135     0092                     	;# 
   136     0093                     	;# 
   137     0093                     	;# 
   138     0093                     	;# 
   139     0094                     	;# 
   140     0095                     	;# 
   141     0096                     	;# 
   142     0097                     	;# 
   143     0098                     	;# 
   144     0099                     	;# 
   145     009A                     	;# 
   146     009B                     	;# 
   147     009C                     	;# 
   148     009D                     	;# 
   149     009E                     	;# 
   150     009F                     	;# 
   151     0105                     	;# 
   152     0107                     	;# 
   153     0108                     	;# 
   154     0109                     	;# 
   155     010C                     	;# 
   156     010C                     	;# 
   157     010D                     	;# 
   158     010E                     	;# 
   159     010F                     	;# 
   160     0185                     	;# 
   161     0187                     	;# 
   162     0188                     	;# 
   163     0189                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0000                     	;# 
   167     0001                     	;# 
   168     0002                     	;# 
   169     0003                     	;# 
   170     0004                     	;# 
   171     0005                     	;# 
   172     0006                     	;# 
   173     0007                     	;# 
   174     0008                     	;# 
   175     0009                     	;# 
   176     000A                     	;# 
   177     000B                     	;# 
   178     000C                     	;# 
   179     000D                     	;# 
   180     000E                     	;# 
   181     000E                     	;# 
   182     000F                     	;# 
   183     0010                     	;# 
   184     0011                     	;# 
   185     0012                     	;# 
   186     0013                     	;# 
   187     0014                     	;# 
   188     0015                     	;# 
   189     0015                     	;# 
   190     0016                     	;# 
   191     0017                     	;# 
   192     0018                     	;# 
   193     0019                     	;# 
   194     001A                     	;# 
   195     001B                     	;# 
   196     001B                     	;# 
   197     001C                     	;# 
   198     001D                     	;# 
   199     001E                     	;# 
   200     001F                     	;# 
   201     0081                     	;# 
   202     0085                     	;# 
   203     0086                     	;# 
   204     0087                     	;# 
   205     0088                     	;# 
   206     0089                     	;# 
   207     008C                     	;# 
   208     008D                     	;# 
   209     008E                     	;# 
   210     008F                     	;# 
   211     0090                     	;# 
   212     0091                     	;# 
   213     0092                     	;# 
   214     0093                     	;# 
   215     0093                     	;# 
   216     0093                     	;# 
   217     0094                     	;# 
   218     0095                     	;# 
   219     0096                     	;# 
   220     0097                     	;# 
   221     0098                     	;# 
   222     0099                     	;# 
   223     009A                     	;# 
   224     009B                     	;# 
   225     009C                     	;# 
   226     009D                     	;# 
   227     009E                     	;# 
   228     009F                     	;# 
   229     0105                     	;# 
   230     0107                     	;# 
   231     0108                     	;# 
   232     0109                     	;# 
   233     010C                     	;# 
   234     010C                     	;# 
   235     010D                     	;# 
   236     010E                     	;# 
   237     010F                     	;# 
   238     0185                     	;# 
   239     0187                     	;# 
   240     0188                     	;# 
   241     0189                     	;# 
   242     018C                     	;# 
   243     018D                     	;# 
   244     0000                     	;# 
   245     0001                     	;# 
   246     0002                     	;# 
   247     0003                     	;# 
   248     0004                     	;# 
   249     0005                     	;# 
   250     0006                     	;# 
   251     0007                     	;# 
   252     0008                     	;# 
   253     0009                     	;# 
   254     000A                     	;# 
   255     000B                     	;# 
   256     000C                     	;# 
   257     000D                     	;# 
   258     000E                     	;# 
   259     000E                     	;# 
   260     000F                     	;# 
   261     0010                     	;# 
   262     0011                     	;# 
   263     0012                     	;# 
   264     0013                     	;# 
   265     0014                     	;# 
   266     0015                     	;# 
   267     0015                     	;# 
   268     0016                     	;# 
   269     0017                     	;# 
   270     0018                     	;# 
   271     0019                     	;# 
   272     001A                     	;# 
   273     001B                     	;# 
   274     001B                     	;# 
   275     001C                     	;# 
   276     001D                     	;# 
   277     001E                     	;# 
   278     001F                     	;# 
   279     0081                     	;# 
   280     0085                     	;# 
   281     0086                     	;# 
   282     0087                     	;# 
   283     0088                     	;# 
   284     0089                     	;# 
   285     008C                     	;# 
   286     008D                     	;# 
   287     008E                     	;# 
   288     008F                     	;# 
   289     0090                     	;# 
   290     0091                     	;# 
   291     0092                     	;# 
   292     0093                     	;# 
   293     0093                     	;# 
   294     0093                     	;# 
   295     0094                     	;# 
   296     0095                     	;# 
   297     0096                     	;# 
   298     0097                     	;# 
   299     0098                     	;# 
   300     0099                     	;# 
   301     009A                     	;# 
   302     009B                     	;# 
   303     009C                     	;# 
   304     009D                     	;# 
   305     009E                     	;# 
   306     009F                     	;# 
   307     0105                     	;# 
   308     0107                     	;# 
   309     0108                     	;# 
   310     0109                     	;# 
   311     010C                     	;# 
   312     010C                     	;# 
   313     010D                     	;# 
   314     010E                     	;# 
   315     010F                     	;# 
   316     0185                     	;# 
   317     0187                     	;# 
   318     0188                     	;# 
   319     0189                     	;# 
   320     018C                     	;# 
   321     018D                     	;# 
   322     0000                     	;# 
   323     0001                     	;# 
   324     0002                     	;# 
   325     0003                     	;# 
   326     0004                     	;# 
   327     0005                     	;# 
   328     0006                     	;# 
   329     0007                     	;# 
   330     0008                     	;# 
   331     0009                     	;# 
   332     000A                     	;# 
   333     000B                     	;# 
   334     000C                     	;# 
   335     000D                     	;# 
   336     000E                     	;# 
   337     000E                     	;# 
   338     000F                     	;# 
   339     0010                     	;# 
   340     0011                     	;# 
   341     0012                     	;# 
   342     0013                     	;# 
   343     0014                     	;# 
   344     0015                     	;# 
   345     0015                     	;# 
   346     0016                     	;# 
   347     0017                     	;# 
   348     0018                     	;# 
   349     0019                     	;# 
   350     001A                     	;# 
   351     001B                     	;# 
   352     001B                     	;# 
   353     001C                     	;# 
   354     001D                     	;# 
   355     001E                     	;# 
   356     001F                     	;# 
   357     0081                     	;# 
   358     0085                     	;# 
   359     0086                     	;# 
   360     0087                     	;# 
   361     0088                     	;# 
   362     0089                     	;# 
   363     008C                     	;# 
   364     008D                     	;# 
   365     008E                     	;# 
   366     008F                     	;# 
   367     0090                     	;# 
   368     0091                     	;# 
   369     0092                     	;# 
   370     0093                     	;# 
   371     0093                     	;# 
   372     0093                     	;# 
   373     0094                     	;# 
   374     0095                     	;# 
   375     0096                     	;# 
   376     0097                     	;# 
   377     0098                     	;# 
   378     0099                     	;# 
   379     009A                     	;# 
   380     009B                     	;# 
   381     009C                     	;# 
   382     009D                     	;# 
   383     009E                     	;# 
   384     009F                     	;# 
   385     0105                     	;# 
   386     0107                     	;# 
   387     0108                     	;# 
   388     0109                     	;# 
   389     010C                     	;# 
   390     010C                     	;# 
   391     010D                     	;# 
   392     010E                     	;# 
   393     010F                     	;# 
   394     0185                     	;# 
   395     0187                     	;# 
   396     0188                     	;# 
   397     0189                     	;# 
   398     018C                     	;# 
   399     018D                     	;# 
   400                           
   401                           	psect	strings
   402     1000                     __pstrings:
   403     1000                     stringtab:
   404     1000                     __stringtab:
   405                           
   406                           ;	String table - string pointers are 1 byte each
   407     1000  1BFF               	btfsc	btemp+1,7
   408     1001  280A               	ljmp	stringcode
   409     1002  1383               	bcf	3,7
   410     1003  187F               	btfsc	btemp+1,0
   411     1004  1783               	bsf	3,7
   412     1005  0800               	movf	0,w
   413     1006  0A84               	incf	4,f
   414     1007  1903               	skipnz
   415     1008  0AFF               	incf	btemp+1,f
   416     1009  0008               	return
   417     100A                     stringcode:
   418     100A                     stringdir:
   419     100A  3010               	movlw	high stringdir
   420     100B  008A               	movwf	10
   421     100C  0804               	movf	4,w
   422     100D  0A84               	incf	4,f
   423     100E  0782               	addwf	2,f
   424     100F                     __stringbase:
   425     100F  3400               	retlw	0
   426     1010                     __end_of__stringtab:
   427     1010                     __powers_:
   428     1010  3400               	retlw	0
   429     1011  3400               	retlw	0
   430     1012  3480               	retlw	128
   431     1013  343F               	retlw	63
   432     1014  3400               	retlw	0
   433     1015  3400               	retlw	0
   434     1016  3420               	retlw	32
   435     1017  3441               	retlw	65
   436     1018  3400               	retlw	0
   437     1019  3400               	retlw	0
   438     101A  34C8               	retlw	200
   439     101B  3442               	retlw	66
   440     101C  3400               	retlw	0
   441     101D  3400               	retlw	0
   442     101E  347A               	retlw	122
   443     101F  3444               	retlw	68
   444     1020  3400               	retlw	0
   445     1021  3440               	retlw	64
   446     1022  341C               	retlw	28
   447     1023  3446               	retlw	70
   448     1024  3400               	retlw	0
   449     1025  3450               	retlw	80
   450     1026  34C3               	retlw	195
   451     1027  3447               	retlw	71
   452     1028  3400               	retlw	0
   453     1029  3424               	retlw	36
   454     102A  3474               	retlw	116
   455     102B  3449               	retlw	73
   456     102C  3480               	retlw	128
   457     102D  3496               	retlw	150
   458     102E  3418               	retlw	24
   459     102F  344B               	retlw	75
   460     1030  3420               	retlw	32
   461     1031  34BC               	retlw	188
   462     1032  34BE               	retlw	190
   463     1033  344C               	retlw	76
   464     1034  3428               	retlw	40
   465     1035  346B               	retlw	107
   466     1036  346E               	retlw	110
   467     1037  344E               	retlw	78
   468     1038  34F9               	retlw	249
   469     1039  3402               	retlw	2
   470     103A  3415               	retlw	21
   471     103B  3450               	retlw	80
   472     103C  34EC               	retlw	236
   473     103D  3478               	retlw	120
   474     103E  34AD               	retlw	173
   475     103F  3460               	retlw	96
   476     1040  34CA               	retlw	202
   477     1041  34F2               	retlw	242
   478     1042  3449               	retlw	73
   479     1043  3471               	retlw	113
   480     1044                     __end_of__powers_:
   481     1044                     __npowers_:
   482     1044  3400               	retlw	0
   483     1045  3400               	retlw	0
   484     1046  3480               	retlw	128
   485     1047  343F               	retlw	63
   486     1048  34CD               	retlw	205
   487     1049  34CC               	retlw	204
   488     104A  34CC               	retlw	204
   489     104B  343D               	retlw	61
   490     104C  340A               	retlw	10
   491     104D  34D7               	retlw	215
   492     104E  3423               	retlw	35
   493     104F  343C               	retlw	60
   494     1050  346F               	retlw	111
   495     1051  3412               	retlw	18
   496     1052  3483               	retlw	131
   497     1053  343A               	retlw	58
   498     1054  3417               	retlw	23
   499     1055  34B7               	retlw	183
   500     1056  34D1               	retlw	209
   501     1057  3438               	retlw	56
   502     1058  34AC               	retlw	172
   503     1059  34C5               	retlw	197
   504     105A  3427               	retlw	39
   505     105B  3437               	retlw	55
   506     105C  34BD               	retlw	189
   507     105D  3437               	retlw	55
   508     105E  3486               	retlw	134
   509     105F  3435               	retlw	53
   510     1060  3495               	retlw	149
   511     1061  34BF               	retlw	191
   512     1062  34D6               	retlw	214
   513     1063  3433               	retlw	51
   514     1064  3477               	retlw	119
   515     1065  34CC               	retlw	204
   516     1066  342B               	retlw	43
   517     1067  3432               	retlw	50
   518     1068  345F               	retlw	95
   519     1069  3470               	retlw	112
   520     106A  3489               	retlw	137
   521     106B  3430               	retlw	48
   522     106C  34FF               	retlw	255
   523     106D  34E6               	retlw	230
   524     106E  34DB               	retlw	219
   525     106F  342E               	retlw	46
   526     1070  3408               	retlw	8
   527     1071  34E5               	retlw	229
   528     1072  343C               	retlw	60
   529     1073  341E               	retlw	30
   530     1074  3460               	retlw	96
   531     1075  3442               	retlw	66
   532     1076  34A2               	retlw	162
   533     1077  340D               	retlw	13
   534     1078                     __end_of__npowers_:
   535     1078                     _dpowers:
   536     1078  3401               	retlw	1
   537     1079  3400               	retlw	0
   538     107A  3400               	retlw	0
   539     107B  3400               	retlw	0
   540     107C  340A               	retlw	10
   541     107D  3400               	retlw	0
   542     107E  3400               	retlw	0
   543     107F  3400               	retlw	0
   544     1080  3464               	retlw	100
   545     1081  3400               	retlw	0
   546     1082  3400               	retlw	0
   547     1083  3400               	retlw	0
   548     1084  34E8               	retlw	232
   549     1085  3403               	retlw	3
   550     1086  3400               	retlw	0
   551     1087  3400               	retlw	0
   552     1088  3410               	retlw	16
   553     1089  3427               	retlw	39
   554     108A  3400               	retlw	0
   555     108B  3400               	retlw	0
   556     108C  34A0               	retlw	160
   557     108D  3486               	retlw	134
   558     108E  3401               	retlw	1
   559     108F  3400               	retlw	0
   560     1090  3440               	retlw	64
   561     1091  3442               	retlw	66
   562     1092  340F               	retlw	15
   563     1093  3400               	retlw	0
   564     1094  3480               	retlw	128
   565     1095  3496               	retlw	150
   566     1096  3498               	retlw	152
   567     1097  3400               	retlw	0
   568     1098  3400               	retlw	0
   569     1099  34E1               	retlw	225
   570     109A  34F5               	retlw	245
   571     109B  3405               	retlw	5
   572     109C  3400               	retlw	0
   573     109D  34CA               	retlw	202
   574     109E  349A               	retlw	154
   575     109F  343B               	retlw	59
   576     10A0                     __end_of_dpowers:
   577     0008                     _PORTDbits	set	8
   578     001E                     _ADRESH	set	30
   579     000C                     _PIR1bits	set	12
   580     001F                     _ADCON0bits	set	31
   581     000B                     _INTCONbits	set	11
   582     0007                     _PORTC	set	7
   583     0005                     _PORTA	set	5
   584     0043                     _RD3	set	67
   585     0047                     _RD7	set	71
   586     0046                     _RD6	set	70
   587     0045                     _RD5	set	69
   588     0044                     _RD4	set	68
   589     0086                     _TRISBbits	set	134
   590     0089                     _TRISEbits	set	137
   591     0085                     _TRISAbits	set	133
   592     009F                     _ADCON1bits	set	159
   593     008C                     _PIE1bits	set	140
   594     0088                     _TRISD	set	136
   595     0087                     _TRISC	set	135
   596     0189                     _ANSELHbits	set	393
   597     0188                     _ANSELbits	set	392
   598     0189                     _ANSELH	set	393
   599     0188                     _ANSEL	set	392
   600     10A0                     STR_1:
   601     10A0  3456               	retlw	86	;'V'
   602     10A1  346F               	retlw	111	;'o'
   603     10A2  346C               	retlw	108	;'l'
   604     10A3  3474               	retlw	116	;'t'
   605     10A4  3461               	retlw	97	;'a'
   606     10A5  3467               	retlw	103	;'g'
   607     10A6  3465               	retlw	101	;'e'
   608     10A7  343A               	retlw	58	;':'
   609     10A8  3400               	retlw	0
   610     10A9                     STR_3:
   611     10A9  3425               	retlw	37	;'%'
   612     10AA  342E               	retlw	46	;'.'
   613     10AB  3432               	retlw	50	;'2'
   614     10AC  3466               	retlw	102	;'f'
   615     10AD  3400               	retlw	0
   616     10AE                     STR_2:
   617     10AE  3456               	retlw	86	;'V'
   618     10AF  3400               	retlw	0
   619                           
   620                           	psect	cinit
   621     000F                     start_initialization:	
   622                           ; #config settings
   623                           
   624     000F                     __initialization:
   625     000F                     end_of_initialization:	
   626                           ;End of C runtime variable initialization code
   627                           
   628     000F                     __end_of__initialization:
   629     000F  0183               	clrf	3
   630     0010  120A  118A  2E5C   	ljmp	_main	;jump to C main() function
   631                           
   632                           	psect	cstackBANK3
   633     0190                     __pcstackBANK3:
   634     0190                     main@display:
   635                           
   636                           ; 50 bytes @ 0x0
   637     0190                     	ds	50
   638     01C2                     main@out:
   639                           
   640                           ; 4 bytes @ 0x32
   641     01C2                     	ds	4
   642     01C6                     main@ch:
   643                           
   644                           ; 1 bytes @ 0x36
   645     01C6                     	ds	1
   646                           
   647                           	psect	cstackBANK1
   648     00A0                     __pcstackBANK1:
   649     00A0                     ?___flsub:
   650     00A0                     ___flsub@a:	
   651                           ; 4 bytes @ 0x0
   652                           
   653                           
   654                           ; 4 bytes @ 0x0
   655     00A0                     	ds	4
   656     00A4                     ___flsub@b:
   657                           
   658                           ; 4 bytes @ 0x4
   659     00A4                     	ds	4
   660     00A8                     ??_sprintf:
   661                           
   662                           ; 1 bytes @ 0x8
   663     00A8                     	ds	5
   664     00AD                     _sprintf$1154:
   665                           
   666                           ; 4 bytes @ 0xD
   667     00AD                     	ds	4
   668     00B1                     sprintf@ap:
   669                           
   670                           ; 1 bytes @ 0x11
   671     00B1                     	ds	1
   672     00B2                     sprintf@flag:
   673                           
   674                           ; 2 bytes @ 0x12
   675     00B2                     	ds	2
   676     00B4                     sprintf@val:
   677                           
   678                           ; 4 bytes @ 0x14
   679     00B4                     	ds	4
   680     00B8                     sprintf@eexp:
   681                           
   682                           ; 2 bytes @ 0x18
   683     00B8                     	ds	2
   684     00BA                     sprintf@tmpval:
   685                           
   686                           ; 4 bytes @ 0x1A
   687     00BA                     	ds	4
   688     00BE                     sprintf@sp:
   689                           
   690                           ; 1 bytes @ 0x1E
   691     00BE                     	ds	1
   692     00BF                     sprintf@prec:
   693                           
   694                           ; 2 bytes @ 0x1F
   695     00BF                     	ds	2
   696     00C1                     sprintf@fval:
   697                           
   698                           ; 4 bytes @ 0x21
   699     00C1                     	ds	4
   700     00C5                     sprintf@c:
   701                           
   702                           ; 1 bytes @ 0x25
   703     00C5                     	ds	1
   704     00C6                     ??_main:
   705                           
   706                           ; 1 bytes @ 0x26
   707     00C6                     	ds	2
   708                           
   709                           	psect	cstackCOMMON
   710     0070                     __pcstackCOMMON:
   711     0070                     ?_isdigit:
   712     0070                     ?_adc_setup:	
   713                           ; 1 bit 
   714                           
   715     0070                     ?_Lcd_Init:	
   716                           ; 1 bytes @ 0x0
   717                           
   718     0070                     ?_Lcd_Clear:	
   719                           ; 1 bytes @ 0x0
   720                           
   721     0070                     ?_adc_RO:	
   722                           ; 1 bytes @ 0x0
   723                           
   724     0070                     ?_main:	
   725                           ; 1 bytes @ 0x0
   726                           
   727     0070                     ?_Isr:	
   728                           ; 1 bytes @ 0x0
   729                           
   730     0070                     ??_Isr:	
   731                           ; 1 bytes @ 0x0
   732                           
   733     0070                     ?_adc_read:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     0070                     ?_adc_output:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ?_Lcd_Port:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ?_Lcd_Cmd:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ?_Lcd_Write_Char:	
   746                           ; 1 bytes @ 0x0
   747                           
   748                           
   749                           ; 1 bytes @ 0x0
   750     0070                     	ds	2
   751     0072                     ?___fleq:
   752     0072                     ?___flge:	
   753                           ; 1 bit 
   754                           
   755     0072                     ??_adc_setup:	
   756                           ; 1 bit 
   757                           
   758     0072                     ?_adc_channel:	
   759                           ; 1 bytes @ 0x2
   760                           
   761     0072                     ??_isdigit:	
   762                           ; 1 bytes @ 0x2
   763                           
   764     0072                     ??_adc_read:	
   765                           ; 1 bytes @ 0x2
   766                           
   767     0072                     ??_adc_output:	
   768                           ; 1 bytes @ 0x2
   769                           
   770     0072                     ??_Lcd_Port:	
   771                           ; 1 bytes @ 0x2
   772                           
   773     0072                     ?__Umul8_16:	
   774                           ; 1 bytes @ 0x2
   775                           
   776     0072                     ?___wmul:	
   777                           ; 2 bytes @ 0x2
   778                           
   779     0072                     ?___awmod:	
   780                           ; 2 bytes @ 0x2
   781                           
   782     0072                     ?___lwmod:	
   783                           ; 2 bytes @ 0x2
   784                           
   785     0072                     ?__tdiv_to_l_:	
   786                           ; 2 bytes @ 0x2
   787                           
   788     0072                     ?__div_to_l_:	
   789                           ; 4 bytes @ 0x2
   790                           
   791     0072                     ?___lldiv:	
   792                           ; 4 bytes @ 0x2
   793                           
   794     0072                     ?___flneg:	
   795                           ; 4 bytes @ 0x2
   796                           
   797     0072                     ?___llmod:	
   798                           ; 4 bytes @ 0x2
   799                           
   800     0072                     ?___xxtofl:	
   801                           ; 4 bytes @ 0x2
   802                           
   803     0072                     Lcd_Port@a:	
   804                           ; 4 bytes @ 0x2
   805                           
   806     0072                     __Umul8_16@multiplicand:	
   807                           ; 1 bytes @ 0x2
   808                           
   809     0072                     _isdigit$963:	
   810                           ; 1 bytes @ 0x2
   811                           
   812     0072                     adc_channel@channel:	
   813                           ; 1 bytes @ 0x2
   814                           
   815     0072                     ___wmul@multiplier:	
   816                           ; 2 bytes @ 0x2
   817                           
   818     0072                     ___awmod@divisor:	
   819                           ; 2 bytes @ 0x2
   820                           
   821     0072                     ___lwmod@divisor:	
   822                           ; 2 bytes @ 0x2
   823                           
   824     0072                     ___lldiv@divisor:	
   825                           ; 2 bytes @ 0x2
   826                           
   827     0072                     __div_to_l_@f1:	
   828                           ; 4 bytes @ 0x2
   829                           
   830     0072                     ___fleq@ff1:	
   831                           ; 4 bytes @ 0x2
   832                           
   833     0072                     ___flge@ff1:	
   834                           ; 4 bytes @ 0x2
   835                           
   836     0072                     ___flneg@f1:	
   837                           ; 4 bytes @ 0x2
   838                           
   839     0072                     __tdiv_to_l_@f1:	
   840                           ; 4 bytes @ 0x2
   841                           
   842     0072                     ___llmod@divisor:	
   843                           ; 4 bytes @ 0x2
   844                           
   845     0072                     ___xxtofl@val:	
   846                           ; 4 bytes @ 0x2
   847                           
   848                           
   849                           ; 4 bytes @ 0x2
   850     0072                     	ds	1
   851     0073                     ??_Lcd_Cmd:
   852     0073                     ??_Lcd_Write_Char:	
   853                           ; 1 bytes @ 0x3
   854                           
   855     0073                     adc_setup@inter:	
   856                           ; 1 bytes @ 0x3
   857                           
   858     0073                     adc_read@channel:	
   859                           ; 1 bytes @ 0x3
   860                           
   861     0073                     isdigit@c:	
   862                           ; 1 bytes @ 0x3
   863                           
   864                           
   865                           ; 1 bytes @ 0x3
   866     0073                     	ds	1
   867     0074                     ??_adc_channel:
   868     0074                     ??_adc_RO:	
   869                           ; 1 bytes @ 0x4
   870                           
   871     0074                     ??__Umul8_16:	
   872                           ; 1 bytes @ 0x4
   873                           
   874     0074                     Lcd_Write_Char@temp:	
   875                           ; 1 bytes @ 0x4
   876                           
   877     0074                     ___wmul@multiplicand:	
   878                           ; 1 bytes @ 0x4
   879                           
   880     0074                     ___awmod@dividend:	
   881                           ; 2 bytes @ 0x4
   882                           
   883     0074                     ___lwmod@dividend:	
   884                           ; 2 bytes @ 0x4
   885                           
   886                           
   887                           ; 2 bytes @ 0x4
   888     0074                     	ds	1
   889     0075                     adc_RO@channel:
   890     0075                     Lcd_Cmd@a:	
   891                           ; 1 bytes @ 0x5
   892                           
   893     0075                     Lcd_Write_Char@y:	
   894                           ; 1 bytes @ 0x5
   895                           
   896                           
   897                           ; 1 bytes @ 0x5
   898     0075                     	ds	1
   899     0076                     ??_Lcd_Init:
   900     0076                     ??_Lcd_Clear:	
   901                           ; 1 bytes @ 0x6
   902                           
   903     0076                     ?_Lcd_Set_Cursor:	
   904                           ; 1 bytes @ 0x6
   905                           
   906     0076                     ??___wmul:	
   907                           ; 1 bytes @ 0x6
   908                           
   909     0076                     ??___awmod:	
   910                           ; 1 bytes @ 0x6
   911                           
   912     0076                     ??___flneg:	
   913                           ; 1 bytes @ 0x6
   914                           
   915     0076                     ??___lwmod:	
   916                           ; 1 bytes @ 0x6
   917                           
   918     0076                     ??___xxtofl:	
   919                           ; 1 bytes @ 0x6
   920                           
   921     0076                     Lcd_Set_Cursor@b:	
   922                           ; 1 bytes @ 0x6
   923                           
   924     0076                     Lcd_Write_Char@a:	
   925                           ; 1 bytes @ 0x6
   926                           
   927     0076                     ___wmul@product:	
   928                           ; 1 bytes @ 0x6
   929                           
   930     0076                     __Umul8_16@product:	
   931                           ; 2 bytes @ 0x6
   932                           
   933     0076                     ___lldiv@dividend:	
   934                           ; 2 bytes @ 0x6
   935                           
   936     0076                     __div_to_l_@f2:	
   937                           ; 4 bytes @ 0x6
   938                           
   939     0076                     ___fleq@ff2:	
   940                           ; 4 bytes @ 0x6
   941                           
   942     0076                     ___flge@ff2:	
   943                           ; 4 bytes @ 0x6
   944                           
   945     0076                     __tdiv_to_l_@f2:	
   946                           ; 4 bytes @ 0x6
   947                           
   948     0076                     ___llmod@dividend:	
   949                           ; 4 bytes @ 0x6
   950                           
   951                           
   952                           ; 4 bytes @ 0x6
   953     0076                     	ds	1
   954     0077                     ??_Lcd_Set_Cursor:
   955     0077                     ?_Lcd_Write_String:	
   956                           ; 1 bytes @ 0x7
   957                           
   958     0077                     ___awmod@counter:	
   959                           ; 1 bytes @ 0x7
   960                           
   961     0077                     ___lwmod@counter:	
   962                           ; 1 bytes @ 0x7
   963                           
   964     0077                     Lcd_Write_String@a:	
   965                           ; 1 bytes @ 0x7
   966                           
   967                           
   968                           ; 2 bytes @ 0x7
   969     0077                     	ds	1
   970     0078                     ?___lwdiv:
   971     0078                     Lcd_Set_Cursor@a:	
   972                           ; 2 bytes @ 0x8
   973                           
   974     0078                     ___awmod@sign:	
   975                           ; 1 bytes @ 0x8
   976                           
   977     0078                     ___lwdiv@divisor:	
   978                           ; 1 bytes @ 0x8
   979                           
   980     0078                     __Umul8_16@word_mpld:	
   981                           ; 2 bytes @ 0x8
   982                           
   983                           
   984                           ; 2 bytes @ 0x8
   985     0078                     	ds	1
   986     0079                     ??_Lcd_Write_String:
   987     0079                     ??___awdiv:	
   988                           ; 1 bytes @ 0x9
   989                           
   990     0079                     Lcd_Set_Cursor@z:	
   991                           ; 1 bytes @ 0x9
   992                           
   993                           
   994                           ; 1 bytes @ 0x9
   995     0079                     	ds	1
   996     007A                     ??__div_to_l_:
   997     007A                     ??___lldiv:	
   998                           ; 1 bytes @ 0xA
   999                           
  1000     007A                     ??___llmod:	
  1001                           ; 1 bytes @ 0xA
  1002                           
  1003     007A                     Lcd_Set_Cursor@y:	
  1004                           ; 1 bytes @ 0xA
  1005                           
  1006     007A                     __Umul8_16@multiplier:	
  1007                           ; 1 bytes @ 0xA
  1008                           
  1009     007A                     ___lwdiv@dividend:	
  1010                           ; 1 bytes @ 0xA
  1011                           
  1012                           
  1013                           ; 2 bytes @ 0xA
  1014     007A                     	ds	1
  1015     007B                     Lcd_Set_Cursor@temp:
  1016     007B                     ___llmod@counter:	
  1017                           ; 1 bytes @ 0xB
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0xB
  1021     007B                     	ds	1
  1022     007C                     ??___flsub:
  1023                           
  1024                           	psect	cstackBANK0
  1025     0020                     __pcstackBANK0:	
  1026                           ; 1 bytes @ 0xC
  1027                           
  1028     0020                     ??__tdiv_to_l_:
  1029     0020                     ??___fleq:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032     0020                     ??___flge:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035     0020                     ??___lwdiv:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038     0020                     ?___awdiv:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041     0020                     ___xxtofl@sign:	
  1042                           ; 2 bytes @ 0x0
  1043                           
  1044     0020                     Lcd_Write_String@i:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047     0020                     ___awdiv@divisor:	
  1048                           ; 2 bytes @ 0x0
  1049                           
  1050     0020                     ___lldiv@quotient:	
  1051                           ; 2 bytes @ 0x0
  1052                           
  1053     0020                     __div_to_l_@quot:	
  1054                           ; 4 bytes @ 0x0
  1055                           
  1056                           
  1057                           ; 4 bytes @ 0x0
  1058     0020                     	ds	1
  1059     0021                     ___xxtofl@exp:
  1060     0021                     ___lwdiv@quotient:	
  1061                           ; 1 bytes @ 0x1
  1062                           
  1063                           
  1064                           ; 2 bytes @ 0x1
  1065     0021                     	ds	1
  1066     0022                     ___awdiv@dividend:
  1067     0022                     ___xxtofl@arg:	
  1068                           ; 2 bytes @ 0x2
  1069                           
  1070                           
  1071                           ; 4 bytes @ 0x2
  1072     0022                     	ds	1
  1073     0023                     ___lwdiv@counter:
  1074     0023                     __tdiv_to_l_@quot:	
  1075                           ; 1 bytes @ 0x3
  1076                           
  1077                           
  1078                           ; 4 bytes @ 0x3
  1079     0023                     	ds	1
  1080     0024                     ___lldiv@counter:
  1081     0024                     ___awdiv@counter:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084     0024                     __div_to_l_@cntr:	
  1085                           ; 1 bytes @ 0x4
  1086                           
  1087                           
  1088                           ; 1 bytes @ 0x4
  1089     0024                     	ds	1
  1090     0025                     ___awdiv@sign:
  1091     0025                     __div_to_l_@exp1:	
  1092                           ; 1 bytes @ 0x5
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x5
  1096     0025                     	ds	1
  1097     0026                     ___awdiv@quotient:
  1098                           
  1099                           ; 2 bytes @ 0x6
  1100     0026                     	ds	1
  1101     0027                     __tdiv_to_l_@cntr:
  1102                           
  1103                           ; 1 bytes @ 0x7
  1104     0027                     	ds	1
  1105     0028                     ?___flmul:
  1106     0028                     __tdiv_to_l_@exp1:	
  1107                           ; 4 bytes @ 0x8
  1108                           
  1109     0028                     ___flmul@b:	
  1110                           ; 1 bytes @ 0x8
  1111                           
  1112                           
  1113                           ; 4 bytes @ 0x8
  1114     0028                     	ds	4
  1115     002C                     ___flmul@a:
  1116                           
  1117                           ; 4 bytes @ 0xC
  1118     002C                     	ds	4
  1119     0030                     ??___flmul:
  1120                           
  1121                           ; 1 bytes @ 0x10
  1122     0030                     	ds	5
  1123     0035                     ___flmul@sign:
  1124                           
  1125                           ; 1 bytes @ 0x15
  1126     0035                     	ds	1
  1127     0036                     ___flmul@grs:
  1128                           
  1129                           ; 4 bytes @ 0x16
  1130     0036                     	ds	4
  1131     003A                     ___flmul@aexp:
  1132                           
  1133                           ; 1 bytes @ 0x1A
  1134     003A                     	ds	1
  1135     003B                     ___flmul@bexp:
  1136                           
  1137                           ; 1 bytes @ 0x1B
  1138     003B                     	ds	1
  1139     003C                     ___flmul@prod:
  1140                           
  1141                           ; 4 bytes @ 0x1C
  1142     003C                     	ds	4
  1143     0040                     ___flmul@temp:
  1144                           
  1145                           ; 2 bytes @ 0x20
  1146     0040                     	ds	2
  1147     0042                     ?_fround:
  1148     0042                     ?_scale:	
  1149                           ; 4 bytes @ 0x22
  1150                           
  1151     0042                     ?___fldiv:	
  1152                           ; 4 bytes @ 0x22
  1153                           
  1154     0042                     ___fldiv@a:	
  1155                           ; 4 bytes @ 0x22
  1156                           
  1157                           
  1158                           ; 4 bytes @ 0x22
  1159     0042                     	ds	4
  1160     0046                     ??_fround:
  1161     0046                     ??_scale:	
  1162                           ; 1 bytes @ 0x26
  1163                           
  1164     0046                     ___fldiv@b:	
  1165                           ; 1 bytes @ 0x26
  1166                           
  1167                           
  1168                           ; 4 bytes @ 0x26
  1169     0046                     	ds	4
  1170     004A                     ??___fldiv:
  1171                           
  1172                           ; 1 bytes @ 0x2A
  1173     004A                     	ds	3
  1174     004D                     _fround$1152:
  1175                           
  1176                           ; 4 bytes @ 0x2D
  1177     004D                     	ds	2
  1178     004F                     ___fldiv@rem:
  1179                           
  1180                           ; 4 bytes @ 0x2F
  1181     004F                     	ds	1
  1182     0050                     _scale$1153:
  1183                           
  1184                           ; 4 bytes @ 0x30
  1185     0050                     	ds	1
  1186     0051                     _fround$1151:
  1187                           
  1188                           ; 4 bytes @ 0x31
  1189     0051                     	ds	2
  1190     0053                     ___fldiv@sign:
  1191                           
  1192                           ; 1 bytes @ 0x33
  1193     0053                     	ds	1
  1194     0054                     scale@scl:
  1195     0054                     ___fldiv@new_exp:	
  1196                           ; 1 bytes @ 0x34
  1197                           
  1198                           
  1199                           ; 2 bytes @ 0x34
  1200     0054                     	ds	1
  1201     0055                     ?___fltol:
  1202     0055                     fround@prec:	
  1203                           ; 4 bytes @ 0x35
  1204                           
  1205     0055                     ___fltol@f1:	
  1206                           ; 1 bytes @ 0x35
  1207                           
  1208                           
  1209                           ; 4 bytes @ 0x35
  1210     0055                     	ds	1
  1211     0056                     ?___fladd:
  1212     0056                     ___fladd@b:	
  1213                           ; 4 bytes @ 0x36
  1214                           
  1215     0056                     ___fldiv@grs:	
  1216                           ; 4 bytes @ 0x36
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0x36
  1220     0056                     	ds	3
  1221     0059                     ??___fltol:
  1222                           
  1223                           ; 1 bytes @ 0x39
  1224     0059                     	ds	1
  1225     005A                     ___fldiv@bexp:
  1226     005A                     ___fladd@a:	
  1227                           ; 1 bytes @ 0x3A
  1228                           
  1229                           
  1230                           ; 4 bytes @ 0x3A
  1231     005A                     	ds	1
  1232     005B                     ___fldiv@aexp:
  1233                           
  1234                           ; 1 bytes @ 0x3B
  1235     005B                     	ds	1
  1236     005C                     ?_adc_volt:
  1237                           
  1238                           ; 4 bytes @ 0x3C
  1239     005C                     	ds	1
  1240     005D                     ___fltol@sign1:
  1241                           
  1242                           ; 1 bytes @ 0x3D
  1243     005D                     	ds	1
  1244     005E                     ??___fladd:
  1245     005E                     ___fltol@exp1:	
  1246                           ; 1 bytes @ 0x3E
  1247                           
  1248                           
  1249                           ; 1 bytes @ 0x3E
  1250     005E                     	ds	2
  1251     0060                     ??_adc_volt:
  1252                           
  1253                           ; 1 bytes @ 0x40
  1254     0060                     	ds	2
  1255     0062                     adc_volt@final:
  1256                           
  1257                           ; 4 bytes @ 0x42
  1258     0062                     	ds	4
  1259     0066                     ___fladd@signs:
  1260     0066                     adc_volt@out:	
  1261                           ; 1 bytes @ 0x46
  1262                           
  1263                           
  1264                           ; 2 bytes @ 0x46
  1265     0066                     	ds	1
  1266     0067                     ___fladd@aexp:
  1267                           
  1268                           ; 1 bytes @ 0x47
  1269     0067                     	ds	1
  1270     0068                     adc_volt@channel:
  1271     0068                     ___fladd@bexp:	
  1272                           ; 1 bytes @ 0x48
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0x48
  1276     0068                     	ds	1
  1277     0069                     ___fladd@grs:
  1278                           
  1279                           ; 1 bytes @ 0x49
  1280     0069                     	ds	1
  1281     006A                     ?_sprintf:
  1282     006A                     sprintf@f:	
  1283                           ; 2 bytes @ 0x4A
  1284                           
  1285                           
  1286                           ; 1 bytes @ 0x4A
  1287     006A                     	ds	5
  1288                           
  1289                           	psect	maintext
  1290     065C                     __pmaintext:	
  1291 ;;
  1292 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1293 ;;
  1294 ;; *************** function _main *****************
  1295 ;; Defined at:
  1296 ;;		line 30 in file "prelab.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  display        50    0[BANK3 ] unsigned char [50]
  1301 ;;  out             4   50[BANK3 ] float 
  1302 ;;  output          2    0        int 
  1303 ;;  ch              1   54[BANK3 ] unsigned char 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : B00/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1313 ;;      Params:         0       0       0       0       0
  1314 ;;      Locals:         0       0       0      55       0
  1315 ;;      Temps:          0       0       2       0       0
  1316 ;;      Totals:         0       0       2      55       0
  1317 ;;Total ram usage:       57 bytes
  1318 ;; Hardware stack levels required when called: 5
  1319 ;; This function calls:
  1320 ;;		_Lcd_Clear
  1321 ;;		_Lcd_Init
  1322 ;;		_Lcd_Set_Cursor
  1323 ;;		_Lcd_Write_String
  1324 ;;		_adc_RO
  1325 ;;		_adc_channel
  1326 ;;		_adc_setup
  1327 ;;		_adc_volt
  1328 ;;		_sprintf
  1329 ;; This function is called by:
  1330 ;;		Startup code after reset
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334     065C                     _main:	
  1335                           ;psect for function _main
  1336                           
  1337     065C                     l3654:	
  1338                           ;incstack = 0
  1339                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1340                           
  1341                           
  1342                           ;prelab.c: 31:     int output;;prelab.c: 32:     float out;;prelab.c: 33:     char ch;;p
      +                          relab.c: 34:     PORTA = 0;
  1343     065C  1283               	bcf	3,5	;RP0=0, select bank0
  1344     065D  1303               	bcf	3,6	;RP1=0, select bank0
  1345     065E  0185               	clrf	5	;volatile
  1346                           
  1347                           ;prelab.c: 36:     TRISC = 0;
  1348     065F  1683               	bsf	3,5	;RP0=1, select bank1
  1349     0660  1303               	bcf	3,6	;RP1=0, select bank1
  1350     0661  0187               	clrf	7	;volatile
  1351                           
  1352                           ;prelab.c: 37:     PORTC = 0;
  1353     0662  1283               	bcf	3,5	;RP0=0, select bank0
  1354     0663  1303               	bcf	3,6	;RP1=0, select bank0
  1355     0664  0187               	clrf	7	;volatile
  1356                           
  1357                           ;prelab.c: 39:     ch = 0;
  1358     0665  1683               	bsf	3,5	;RP0=1, select bank3
  1359     0666  1703               	bsf	3,6	;RP1=1, select bank3
  1360     0667  01C6               	clrf	main@ch^(0+384)
  1361     0668                     l3656:
  1362                           
  1363                           ;prelab.c: 40:     adc_setup(0);
  1364     0668  3000               	movlw	0
  1365     0669  160A  158A  22FE  120A  118A  	fcall	_adc_setup
  1366     066E                     l3658:
  1367                           
  1368                           ;prelab.c: 41:     adc_channel(ch);
  1369     066E  3000               	movlw	0
  1370     066F  00F2               	movwf	adc_channel@channel
  1371     0670  00F3               	movwf	adc_channel@channel+1
  1372     0671  120A  158A  200B  120A  118A  	fcall	_adc_channel
  1373     0676                     l3660:
  1374                           
  1375                           ;prelab.c: 42:     TRISD = 0x00;
  1376     0676  1683               	bsf	3,5	;RP0=1, select bank1
  1377     0677  1303               	bcf	3,6	;RP1=0, select bank1
  1378     0678  0188               	clrf	8	;volatile
  1379     0679                     l3662:
  1380                           
  1381                           ;prelab.c: 43:     Lcd_Init();
  1382     0679  160A  158A  25B6  120A  118A  	fcall	_Lcd_Init
  1383     067E                     l3664:
  1384                           
  1385                           ;prelab.c: 44:     Lcd_Clear();
  1386     067E  160A  158A  225C  120A  118A  	fcall	_Lcd_Clear
  1387     0683                     l3666:
  1388                           
  1389                           ;prelab.c: 45:     Lcd_Set_Cursor(1,1);
  1390     0683  01F6               	clrf	Lcd_Set_Cursor@b
  1391     0684  0AF6               	incf	Lcd_Set_Cursor@b,f
  1392     0685  3001               	movlw	1
  1393     0686  160A  158A  2397  120A  118A  	fcall	_Lcd_Set_Cursor
  1394     068B                     l3668:
  1395                           
  1396                           ;prelab.c: 46:     Lcd_Write_String("Voltage:");
  1397     068B  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1398     068C  00F7               	movwf	Lcd_Write_String@a
  1399     068D  3080               	movlw	128
  1400     068E  00F8               	movwf	Lcd_Write_String@a+1
  1401     068F  160A  158A  23DD  120A  118A  	fcall	_Lcd_Write_String
  1402     0694                     l3670:
  1403                           
  1404                           ;prelab.c: 47:     Lcd_Set_Cursor(2,5);
  1405     0694  3005               	movlw	5
  1406     0695  00F6               	movwf	Lcd_Set_Cursor@b
  1407     0696  3002               	movlw	2
  1408     0697  160A  158A  2397  120A  118A  	fcall	_Lcd_Set_Cursor
  1409     069C                     l3672:
  1410                           
  1411                           ;prelab.c: 48:      Lcd_Write_String("V");
  1412     069C  309F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1413     069D  00F7               	movwf	Lcd_Write_String@a
  1414     069E  3080               	movlw	128
  1415     069F  00F8               	movwf	Lcd_Write_String@a+1
  1416     06A0  160A  158A  23DD  120A  118A  	fcall	_Lcd_Write_String
  1417     06A5                     l3674:
  1418                           
  1419                           ;prelab.c: 52:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1420     06A5  3003               	movlw	3
  1421     06A6  1683               	bsf	3,5	;RP0=1, select bank1
  1422     06A7  1303               	bcf	3,6	;RP1=0, select bank1
  1423     06A8  00C7               	movwf	(??_main^(0+128)+1)
  1424     06A9  3097               	movlw	151
  1425     06AA  00C6               	movwf	??_main^(0+128)
  1426     06AB                     u6037:
  1427     06AB  0BC6               	decfsz	??_main^(0+128),f
  1428     06AC  2EAB               	goto	u6037
  1429     06AD  0BC7               	decfsz	(??_main^(0+128)+1),f
  1430     06AE  2EAB               	goto	u6037
  1431     06AF                     l3676:
  1432     06AF  1683               	bsf	3,5	;RP0=1, select bank3
  1433     06B0  1703               	bsf	3,6	;RP1=1, select bank3
  1434     06B1  0846               	movf	main@ch^(0+384),w
  1435     06B2  160A  158A  2277  120A  118A  	fcall	_adc_RO
  1436     06B7                     l3678:
  1437                           
  1438                           ;prelab.c: 54:         PORTC = adc_RO(ch);
  1439     06B7  1683               	bsf	3,5	;RP0=1, select bank3
  1440     06B8  1703               	bsf	3,6	;RP1=1, select bank3
  1441     06B9  0846               	movf	main@ch^(0+384),w
  1442     06BA  160A  158A  2277  120A  118A  	fcall	_adc_RO
  1443     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1444     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1445     06C1  0087               	movwf	7	;volatile
  1446     06C2                     l3680:
  1447                           
  1448                           ;prelab.c: 56:         out = adc_volt(ch);
  1449     06C2  1683               	bsf	3,5	;RP0=1, select bank3
  1450     06C3  1703               	bsf	3,6	;RP1=1, select bank3
  1451     06C4  0846               	movf	main@ch^(0+384),w
  1452     06C5  160A  118A  20B2  120A  118A  	fcall	_adc_volt
  1453     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1454     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1455     06CC  085F               	movf	?_adc_volt+3,w
  1456     06CD  1683               	bsf	3,5	;RP0=1, select bank3
  1457     06CE  1703               	bsf	3,6	;RP1=1, select bank3
  1458     06CF  00C5               	movwf	(main@out+3)^(0+384)
  1459     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1460     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1461     06D2  085E               	movf	?_adc_volt+2,w
  1462     06D3  1683               	bsf	3,5	;RP0=1, select bank3
  1463     06D4  1703               	bsf	3,6	;RP1=1, select bank3
  1464     06D5  00C4               	movwf	(main@out+2)^(0+384)
  1465     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1466     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1467     06D8  085D               	movf	?_adc_volt+1,w
  1468     06D9  1683               	bsf	3,5	;RP0=1, select bank3
  1469     06DA  1703               	bsf	3,6	;RP1=1, select bank3
  1470     06DB  00C3               	movwf	(main@out+1)^(0+384)
  1471     06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1472     06DD  1303               	bcf	3,6	;RP1=0, select bank0
  1473     06DE  085C               	movf	?_adc_volt,w
  1474     06DF  1683               	bsf	3,5	;RP0=1, select bank3
  1475     06E0  1703               	bsf	3,6	;RP1=1, select bank3
  1476     06E1  00C2               	movwf	main@out^(0+384)
  1477     06E2                     l3682:
  1478                           
  1479                           ;prelab.c: 57:         char display[50];;prelab.c: 58:         sprintf(display, "%.2f", 
      +                          out);
  1480     06E2  309A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1481     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1482     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1483     06E5  00EA               	movwf	sprintf@f
  1484     06E6  1683               	bsf	3,5	;RP0=1, select bank3
  1485     06E7  1703               	bsf	3,6	;RP1=1, select bank3
  1486     06E8  0845               	movf	(main@out+3)^(0+384),w
  1487     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1488     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1489     06EB  00EE               	movwf	?_sprintf+4
  1490     06EC  1683               	bsf	3,5	;RP0=1, select bank3
  1491     06ED  1703               	bsf	3,6	;RP1=1, select bank3
  1492     06EE  0844               	movf	(main@out+2)^(0+384),w
  1493     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1494     06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1495     06F1  00ED               	movwf	?_sprintf+3
  1496     06F2  1683               	bsf	3,5	;RP0=1, select bank3
  1497     06F3  1703               	bsf	3,6	;RP1=1, select bank3
  1498     06F4  0843               	movf	(main@out+1)^(0+384),w
  1499     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1500     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1501     06F7  00EC               	movwf	?_sprintf+2
  1502     06F8  1683               	bsf	3,5	;RP0=1, select bank3
  1503     06F9  1703               	bsf	3,6	;RP1=1, select bank3
  1504     06FA  0842               	movf	main@out^(0+384),w
  1505     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1506     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1507     06FD  00EB               	movwf	?_sprintf+1
  1508     06FE  3090               	movlw	(low (main@display| (0+256)))& (0+255)
  1509     06FF  120A  118A  2013  120A  118A  	fcall	_sprintf
  1510     0704                     l3684:
  1511                           
  1512                           ;prelab.c: 59:         Lcd_Set_Cursor(2,1);
  1513     0704  01F6               	clrf	Lcd_Set_Cursor@b
  1514     0705  0AF6               	incf	Lcd_Set_Cursor@b,f
  1515     0706  3002               	movlw	2
  1516     0707  160A  158A  2397  120A  118A  	fcall	_Lcd_Set_Cursor
  1517     070C                     l3686:
  1518                           
  1519                           ;prelab.c: 60:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1520     070C  3005               	movlw	5
  1521     070D  1683               	bsf	3,5	;RP0=1, select bank1
  1522     070E  1303               	bcf	3,6	;RP1=0, select bank1
  1523     070F  00C6               	movwf	??_main^(0+128)
  1524     0710                     u6047:
  1525     0710  0BC6               	decfsz	??_main^(0+128),f
  1526     0711  2F10               	goto	u6047
  1527     0712  2F13               	nop2
  1528     0713                     l3688:
  1529                           
  1530                           ;prelab.c: 61:         Lcd_Write_String(display);
  1531     0713  3090               	movlw	(low (main@display| (0+256)))& (0+255)
  1532     0714  00F7               	movwf	Lcd_Write_String@a
  1533     0715  3001               	movlw	1
  1534     0716  00F8               	movwf	Lcd_Write_String@a+1
  1535     0717  160A  158A  23DD  120A  118A  	fcall	_Lcd_Write_String
  1536                           
  1537                           ;prelab.c: 62:     }
  1538     071C  2EA5               	goto	l3674
  1539     071D  120A  118A  280C   	ljmp	start
  1540     0720                     __end_of_main:
  1541                           
  1542                           	psect	text1
  1543     0013                     __ptext1:	
  1544 ;; *************** function _sprintf *****************
  1545 ;; Defined at:
  1546 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  sp              1    wreg     PTR unsigned char 
  1549 ;;		 -> main@display(50), 
  1550 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1551 ;;		 -> STR_3(5), 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  sp              1   30[BANK1 ] PTR unsigned char 
  1554 ;;		 -> main@display(50), 
  1555 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1556 ;;  tmpval          4   26[BANK1 ] struct .
  1557 ;;  val             4   20[BANK1 ] unsigned long 
  1558 ;;  prec            2   31[BANK1 ] int 
  1559 ;;  eexp            2   24[BANK1 ] int 
  1560 ;;  flag            2   18[BANK1 ] unsigned short 
  1561 ;;  cp              2    0        PTR const unsigned char 
  1562 ;;  len             2    0        unsigned int 
  1563 ;;  width           2    0        int 
  1564 ;;  c               1   37[BANK1 ] unsigned char 
  1565 ;;  ap              1   17[BANK1 ] PTR void [1]
  1566 ;;		 -> ?_sprintf(2), 
  1567 ;;  d               1    0        unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  2   74[BANK0 ] int 
  1570 ;; Registers used:
  1571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         0       5       0       0       0
  1578 ;;      Locals:         0       0      25       0       0
  1579 ;;      Temps:          0       0       5       0       0
  1580 ;;      Totals:         0       5      30       0       0
  1581 ;;Total ram usage:       35 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; Hardware stack levels required when called: 4
  1584 ;; This function calls:
  1585 ;;		___awdiv
  1586 ;;		___fladd
  1587 ;;		___fleq
  1588 ;;		___flge
  1589 ;;		___flmul
  1590 ;;		___flneg
  1591 ;;		___flsub
  1592 ;;		___fltol
  1593 ;;		___lldiv
  1594 ;;		___llmod
  1595 ;;		___wmul
  1596 ;;		___xxtofl
  1597 ;;		__div_to_l_
  1598 ;;		__tdiv_to_l_
  1599 ;;		_fround
  1600 ;;		_isdigit
  1601 ;;		_scale
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607     0013                     _sprintf:	
  1608                           ;psect for function _sprintf
  1609                           
  1610                           
  1611                           ;incstack = 0
  1612                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1613                           ;sprintf@sp stored from wreg
  1614     0013  1683               	bsf	3,5	;RP0=1, select bank1
  1615     0014  1303               	bcf	3,6	;RP1=0, select bank1
  1616     0015  00BE               	movwf	sprintf@sp^(0+128)
  1617     0016                     l3448:
  1618                           
  1619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1620     0016  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1621     0017  00B1               	movwf	sprintf@ap^(0+128)
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1624     0018  2E43               	goto	l3642
  1625     0019                     l3450:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1628     0019  3025               	movlw	37
  1629     001A  0645               	xorwf	sprintf@c^(0+128),w
  1630     001B  1903               	btfsc	3,2
  1631     001C  281E               	goto	u5681
  1632     001D  281F               	goto	u5680
  1633     001E                     u5681:
  1634     001E  2829               	goto	l3456
  1635     001F                     u5680:
  1636     001F                     l3452:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1639     001F  083E               	movf	sprintf@sp^(0+128),w
  1640     0020  0084               	movwf	4
  1641     0021  0845               	movf	sprintf@c^(0+128),w
  1642     0022  1783               	bsf	3,7	;select IRP bank2
  1643     0023  0080               	movwf	0
  1644     0024                     l3454:
  1645     0024  3001               	movlw	1
  1646     0025  00A8               	movwf	??_sprintf^(0+128)
  1647     0026  0828               	movf	??_sprintf^(0+128),w
  1648     0027  07BE               	addwf	sprintf@sp^(0+128),f
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1651     0028  2E43               	goto	l3642
  1652     0029                     l3456:
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1655     0029  01B2               	clrf	sprintf@flag^(0+128)
  1656     002A  01B3               	clrf	(sprintf@flag+1)^(0+128)
  1657     002B                     l3458:
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1660     002B  1283               	bcf	3,5	;RP0=0, select bank0
  1661     002C  1303               	bcf	3,6	;RP1=0, select bank0
  1662     002D  086A               	movf	sprintf@f,w
  1663     002E  0084               	movwf	4
  1664     002F  160A  118A  200A  120A  118A  	fcall	stringdir
  1665     0034  3A2E               	xorlw	46
  1666     0035  1D03               	skipz
  1667     0036  2838               	goto	u5691
  1668     0037  2839               	goto	u5690
  1669     0038                     u5691:
  1670     0038  288B               	goto	l3474
  1671     0039                     u5690:
  1672     0039                     l3460:
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1675     0039  1683               	bsf	3,5	;RP0=1, select bank1
  1676     003A  1303               	bcf	3,6	;RP1=0, select bank1
  1677     003B  1733               	bsf	(sprintf@flag^(0+128)+1),6
  1678     003C                     l3462:
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  1681     003C  3001               	movlw	1
  1682     003D  00A8               	movwf	??_sprintf^(0+128)
  1683     003E  0828               	movf	??_sprintf^(0+128),w
  1684     003F  1283               	bcf	3,5	;RP0=0, select bank0
  1685     0040  1303               	bcf	3,6	;RP1=0, select bank0
  1686     0041  07EA               	addwf	sprintf@f,f
  1687     0042                     l3464:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1690     0042  1683               	bsf	3,5	;RP0=1, select bank1
  1691     0043  1303               	bcf	3,6	;RP1=0, select bank1
  1692     0044  01BF               	clrf	sprintf@prec^(0+128)
  1693     0045  01C0               	clrf	(sprintf@prec+1)^(0+128)
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1696     0046  2879               	goto	l3472
  1697     0047                     l3466:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1700     0047  300A               	movlw	10
  1701     0048  00F2               	movwf	___wmul@multiplier
  1702     0049  3000               	movlw	0
  1703     004A  00F3               	movwf	___wmul@multiplier+1
  1704     004B  1683               	bsf	3,5	;RP0=1, select bank1
  1705     004C  1303               	bcf	3,6	;RP1=0, select bank1
  1706     004D  0840               	movf	(sprintf@prec+1)^(0+128),w
  1707     004E  00F5               	movwf	___wmul@multiplicand+1
  1708     004F  083F               	movf	sprintf@prec^(0+128),w
  1709     0050  00F4               	movwf	___wmul@multiplicand
  1710     0051  120A  118A  27DA  120A  118A  	fcall	___wmul
  1711     0056  0873               	movf	?___wmul+1,w
  1712     0057  1683               	bsf	3,5	;RP0=1, select bank1
  1713     0058  1303               	bcf	3,6	;RP1=0, select bank1
  1714     0059  00C0               	movwf	(sprintf@prec+1)^(0+128)
  1715     005A  0872               	movf	?___wmul,w
  1716     005B  00BF               	movwf	sprintf@prec^(0+128)
  1717     005C                     l3468:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1720     005C  1283               	bcf	3,5	;RP0=0, select bank0
  1721     005D  1303               	bcf	3,6	;RP1=0, select bank0
  1722     005E  086A               	movf	sprintf@f,w
  1723     005F  0084               	movwf	4
  1724     0060  160A  118A  200A  120A  118A  	fcall	stringdir
  1725     0065  3ED0               	addlw	208
  1726     0066  1683               	bsf	3,5	;RP0=1, select bank1
  1727     0067  1303               	bcf	3,6	;RP1=0, select bank1
  1728     0068  00A8               	movwf	??_sprintf^(0+128)
  1729     0069  30FF               	movlw	255
  1730     006A  1803               	skipnc
  1731     006B  3000               	movlw	0
  1732     006C  00A9               	movwf	(??_sprintf^(0+128)+1)
  1733     006D  0828               	movf	??_sprintf^(0+128),w
  1734     006E  07BF               	addwf	sprintf@prec^(0+128),f
  1735     006F  1803               	skipnc
  1736     0070  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  1737     0071  0829               	movf	(??_sprintf+1)^(0+128),w
  1738     0072  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  1739     0073                     l3470:
  1740     0073  3001               	movlw	1
  1741     0074  00A8               	movwf	??_sprintf^(0+128)
  1742     0075  0828               	movf	??_sprintf^(0+128),w
  1743     0076  1283               	bcf	3,5	;RP0=0, select bank0
  1744     0077  1303               	bcf	3,6	;RP1=0, select bank0
  1745     0078  07EA               	addwf	sprintf@f,f
  1746     0079                     l3472:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1749     0079  1283               	bcf	3,5	;RP0=0, select bank0
  1750     007A  086A               	movf	sprintf@f,w
  1751     007B  0084               	movwf	4
  1752     007C  160A  118A  200A  120A  118A  	fcall	stringdir
  1753     0081  160A  158A  2289  120A  118A  	fcall	_isdigit
  1754     0086  1803               	btfsc	3,0
  1755     0087  2889               	goto	u5701
  1756     0088  288A               	goto	u5700
  1757     0089                     u5701:
  1758     0089  2847               	goto	l3466
  1759     008A                     u5700:
  1760     008A  2893               	goto	l3480
  1761     008B                     l3474:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1764     008B  1683               	bsf	3,5	;RP0=1, select bank1
  1765     008C  1303               	bcf	3,6	;RP1=0, select bank1
  1766     008D  01BF               	clrf	sprintf@prec^(0+128)
  1767     008E  01C0               	clrf	(sprintf@prec+1)^(0+128)
  1768     008F                     l3476:
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1771     008F  1633               	bsf	(sprintf@flag^(0+128)+1),4
  1772     0090  2893               	goto	l3480
  1773     0091                     l292:	
  1774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1775                           
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1778     0091  1533               	bsf	(sprintf@flag^(0+128)+1),2
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  1781     0092  28B1               	goto	l3482
  1782     0093                     l3480:
  1783     0093  3001               	movlw	1
  1784     0094  1283               	bcf	3,5	;RP0=0, select bank0
  1785     0095  1303               	bcf	3,6	;RP1=0, select bank0
  1786     0096  07EA               	addwf	sprintf@f,f
  1787     0097  30FF               	movlw	-1
  1788     0098  076A               	addwf	sprintf@f,w
  1789     0099  0084               	movwf	4
  1790     009A  160A  118A  200A  120A  118A  	fcall	stringdir
  1791     009F  1683               	bsf	3,5	;RP0=1, select bank1
  1792     00A0  1303               	bcf	3,6	;RP1=0, select bank1
  1793     00A1  00C5               	movwf	sprintf@c^(0+128)
  1794     00A2  00A8               	movwf	??_sprintf^(0+128)
  1795     00A3  01A9               	clrf	(??_sprintf^(0+128)+1)
  1796                           
  1797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1798                           ; Switch size 1, requested type "simple"
  1799                           ; Number of cases is 1, Range of values is 0 to 0
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte            4     3 (average)
  1803                           ; direct_byte           11     8 (fixed)
  1804                           ; jumptable            260     6 (fixed)
  1805                           ;	Chosen strategy is simple_byte
  1806     00A4  0829               	movf	(??_sprintf+1)^(0+128),w
  1807     00A5  3A00               	xorlw	0	; case 0
  1808     00A6  1903               	skipnz
  1809     00A7  28A9               	goto	l3748
  1810     00A8  2E43               	goto	l3642
  1811     00A9                     l3748:
  1812                           
  1813                           ; Switch size 1, requested type "simple"
  1814                           ; Number of cases is 2, Range of values is 0 to 102
  1815                           ; switch strategies available:
  1816                           ; Name         Instructions Cycles
  1817                           ; simple_byte            7     4 (average)
  1818                           ; jumptable            260     6 (fixed)
  1819                           ;	Chosen strategy is simple_byte
  1820     00A9  0828               	movf	??_sprintf^(0+128),w
  1821     00AA  3A00               	xorlw	0	; case 0
  1822     00AB  1903               	skipnz
  1823     00AC  2E57               	goto	l3644
  1824     00AD  3A66               	xorlw	102	; case 102
  1825     00AE  1903               	skipnz
  1826     00AF  2891               	goto	l292
  1827     00B0  2E43               	goto	l3642
  1828     00B1                     l3482:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1831     00B1  3000               	movlw	0
  1832     00B2  0532               	andwf	sprintf@flag^(0+128),w
  1833     00B3  00A8               	movwf	??_sprintf^(0+128)
  1834     00B4  3007               	movlw	7
  1835     00B5  0533               	andwf	(sprintf@flag+1)^(0+128),w
  1836     00B6  00A9               	movwf	(??_sprintf+1)^(0+128)
  1837     00B7  0828               	movf	??_sprintf^(0+128),w
  1838     00B8  0429               	iorwf	(??_sprintf^(0+128)+1),w
  1839     00B9  1903               	btfsc	3,2
  1840     00BA  28BC               	goto	u5711
  1841     00BB  28BD               	goto	u5710
  1842     00BC                     u5711:
  1843     00BC  2E00               	goto	l3624
  1844     00BD                     u5710:
  1845     00BD                     l3484:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1848     00BD  1E33               	btfss	(sprintf@flag+1)^(0+128),4
  1849     00BE  28C0               	goto	u5721
  1850     00BF  28C1               	goto	u5720
  1851     00C0                     u5721:
  1852     00C0  28C5               	goto	l3488
  1853     00C1                     u5720:
  1854     00C1                     l3486:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1857     00C1  3006               	movlw	6
  1858     00C2  00BF               	movwf	sprintf@prec^(0+128)
  1859     00C3  3000               	movlw	0
  1860     00C4  00C0               	movwf	(sprintf@prec^(0+128)+1)
  1861     00C5                     l3488:
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1864     00C5  0831               	movf	sprintf@ap^(0+128),w
  1865     00C6  0084               	movwf	4
  1866     00C7  1383               	bcf	3,7	;select IRP bank0
  1867     00C8  0800               	movf	0,w
  1868     00C9  00C1               	movwf	sprintf@fval^(0+128)
  1869     00CA  0A84               	incf	4,f
  1870     00CB  0800               	movf	0,w
  1871     00CC  00C2               	movwf	(sprintf@fval+1)^(0+128)
  1872     00CD  0A84               	incf	4,f
  1873     00CE  0800               	movf	0,w
  1874     00CF  00C3               	movwf	(sprintf@fval+2)^(0+128)
  1875     00D0  0A84               	incf	4,f
  1876     00D1  0800               	movf	0,w
  1877     00D2  00C4               	movwf	(sprintf@fval+3)^(0+128)
  1878     00D3                     l3490:
  1879     00D3  3004               	movlw	4
  1880     00D4  00A8               	movwf	??_sprintf^(0+128)
  1881     00D5  0828               	movf	??_sprintf^(0+128),w
  1882     00D6  07B1               	addwf	sprintf@ap^(0+128),f
  1883     00D7                     l3492:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1886     00D7  0844               	movf	(sprintf@fval+3)^(0+128),w
  1887     00D8  00F5               	movwf	___flge@ff1+3
  1888     00D9  0843               	movf	(sprintf@fval+2)^(0+128),w
  1889     00DA  00F4               	movwf	___flge@ff1+2
  1890     00DB  0842               	movf	(sprintf@fval+1)^(0+128),w
  1891     00DC  00F3               	movwf	___flge@ff1+1
  1892     00DD  0841               	movf	sprintf@fval^(0+128),w
  1893     00DE  00F2               	movwf	___flge@ff1
  1894     00DF  3000               	movlw	0
  1895     00E0  00F9               	movwf	___flge@ff2+3
  1896     00E1  3000               	movlw	0
  1897     00E2  00F8               	movwf	___flge@ff2+2
  1898     00E3  3000               	movlw	0
  1899     00E4  00F7               	movwf	___flge@ff2+1
  1900     00E5  3000               	movlw	0
  1901     00E6  00F6               	movwf	___flge@ff2
  1902     00E7  160A  158A  275C  120A  118A  	fcall	___flge
  1903     00EC  1803               	btfsc	3,0
  1904     00ED  28EF               	goto	u5731
  1905     00EE  28F0               	goto	u5730
  1906     00EF                     u5731:
  1907     00EF  290D               	goto	l3498
  1908     00F0                     u5730:
  1909     00F0                     l3494:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1912     00F0  1683               	bsf	3,5	;RP0=1, select bank1
  1913     00F1  1303               	bcf	3,6	;RP1=0, select bank1
  1914     00F2  0844               	movf	(sprintf@fval+3)^(0+128),w
  1915     00F3  00F5               	movwf	___flneg@f1+3
  1916     00F4  0843               	movf	(sprintf@fval+2)^(0+128),w
  1917     00F5  00F4               	movwf	___flneg@f1+2
  1918     00F6  0842               	movf	(sprintf@fval+1)^(0+128),w
  1919     00F7  00F3               	movwf	___flneg@f1+1
  1920     00F8  0841               	movf	sprintf@fval^(0+128),w
  1921     00F9  00F2               	movwf	___flneg@f1
  1922     00FA  120A  158A  2000  120A  118A  	fcall	___flneg
  1923     00FF  0875               	movf	?___flneg+3,w
  1924     0100  1683               	bsf	3,5	;RP0=1, select bank1
  1925     0101  1303               	bcf	3,6	;RP1=0, select bank1
  1926     0102  00C4               	movwf	(sprintf@fval+3)^(0+128)
  1927     0103  0874               	movf	?___flneg+2,w
  1928     0104  00C3               	movwf	(sprintf@fval+2)^(0+128)
  1929     0105  0873               	movf	?___flneg+1,w
  1930     0106  00C2               	movwf	(sprintf@fval+1)^(0+128)
  1931     0107  0872               	movf	?___flneg,w
  1932     0108  00C1               	movwf	sprintf@fval^(0+128)
  1933     0109                     l3496:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1936     0109  3003               	movlw	3
  1937     010A  04B2               	iorwf	sprintf@flag^(0+128),f
  1938     010B  3000               	movlw	0
  1939     010C  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  1940     010D                     l3498:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1943     010D  1683               	bsf	3,5	;RP0=1, select bank1
  1944     010E  1303               	bcf	3,6	;RP1=0, select bank1
  1945     010F  01B8               	clrf	sprintf@eexp^(0+128)
  1946     0110  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  1947     0111                     l3500:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1950     0111  0844               	movf	(sprintf@fval+3)^(0+128),w
  1951     0112  00F5               	movwf	___fleq@ff1+3
  1952     0113  0843               	movf	(sprintf@fval+2)^(0+128),w
  1953     0114  00F4               	movwf	___fleq@ff1+2
  1954     0115  0842               	movf	(sprintf@fval+1)^(0+128),w
  1955     0116  00F3               	movwf	___fleq@ff1+1
  1956     0117  0841               	movf	sprintf@fval^(0+128),w
  1957     0118  00F2               	movwf	___fleq@ff1
  1958     0119  3000               	movlw	0
  1959     011A  00F9               	movwf	___fleq@ff2+3
  1960     011B  3000               	movlw	0
  1961     011C  00F8               	movwf	___fleq@ff2+2
  1962     011D  3000               	movlw	0
  1963     011E  00F7               	movwf	___fleq@ff2+1
  1964     011F  3000               	movlw	0
  1965     0120  00F6               	movwf	___fleq@ff2
  1966     0121  160A  158A  2469  120A  118A  	fcall	___fleq
  1967     0126  1803               	btfsc	3,0
  1968     0127  2929               	goto	u5741
  1969     0128  292A               	goto	u5740
  1970     0129                     u5741:
  1971     0129  2A2A               	goto	l3526
  1972     012A                     u5740:
  1973     012A                     l3502:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1976     012A  1003               	clrc
  1977     012B  1683               	bsf	3,5	;RP0=1, select bank1
  1978     012C  1303               	bcf	3,6	;RP1=0, select bank1
  1979     012D  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  1980     012E  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  1981     012F  3E82               	addlw	130
  1982     0130  00B8               	movwf	sprintf@eexp^(0+128)
  1983     0131  30FF               	movlw	255
  1984     0132  1803               	skipnc
  1985     0133  3000               	movlw	0
  1986     0134  00B9               	movwf	(sprintf@eexp^(0+128)+1)
  1987     0135                     l3504:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1990     0135  30FF               	movlw	255
  1991     0136  07B8               	addwf	sprintf@eexp^(0+128),f
  1992     0137  1803               	skipnc
  1993     0138  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  1994     0139  30FF               	movlw	255
  1995     013A  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  1996     013B                     l3506:
  1997                           
  1998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1999     013B  3003               	movlw	3
  2000     013C  00F2               	movwf	___wmul@multiplier
  2001     013D  3000               	movlw	0
  2002     013E  00F3               	movwf	___wmul@multiplier+1
  2003     013F  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2004     0140  00F5               	movwf	___wmul@multiplicand+1
  2005     0141  0838               	movf	sprintf@eexp^(0+128),w
  2006     0142  00F4               	movwf	___wmul@multiplicand
  2007     0143  120A  118A  27DA  120A  118A  	fcall	___wmul
  2008     0148  0873               	movf	?___wmul+1,w
  2009     0149  1683               	bsf	3,5	;RP0=1, select bank1
  2010     014A  1303               	bcf	3,6	;RP1=0, select bank1
  2011     014B  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  2012     014C  0872               	movf	?___wmul,w
  2013     014D  00B8               	movwf	sprintf@eexp^(0+128)
  2014     014E                     l3508:
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2017     014E  300A               	movlw	10
  2018     014F  1283               	bcf	3,5	;RP0=0, select bank0
  2019     0150  1303               	bcf	3,6	;RP1=0, select bank0
  2020     0151  00A0               	movwf	___awdiv@divisor
  2021     0152  3000               	movlw	0
  2022     0153  00A1               	movwf	___awdiv@divisor+1
  2023     0154  1683               	bsf	3,5	;RP0=1, select bank1
  2024     0155  1303               	bcf	3,6	;RP1=0, select bank1
  2025     0156  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2026     0157  1283               	bcf	3,5	;RP0=0, select bank0
  2027     0158  1303               	bcf	3,6	;RP1=0, select bank0
  2028     0159  00A3               	movwf	___awdiv@dividend+1
  2029     015A  1683               	bsf	3,5	;RP0=1, select bank1
  2030     015B  1303               	bcf	3,6	;RP1=0, select bank1
  2031     015C  0838               	movf	sprintf@eexp^(0+128),w
  2032     015D  1283               	bcf	3,5	;RP0=0, select bank0
  2033     015E  1303               	bcf	3,6	;RP1=0, select bank0
  2034     015F  00A2               	movwf	___awdiv@dividend
  2035     0160  160A  158A  267B  120A  118A  	fcall	___awdiv
  2036     0165  1283               	bcf	3,5	;RP0=0, select bank0
  2037     0166  1303               	bcf	3,6	;RP1=0, select bank0
  2038     0167  0821               	movf	?___awdiv+1,w
  2039     0168  1683               	bsf	3,5	;RP0=1, select bank1
  2040     0169  1303               	bcf	3,6	;RP1=0, select bank1
  2041     016A  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  2042     016B  1283               	bcf	3,5	;RP0=0, select bank0
  2043     016C  1303               	bcf	3,6	;RP1=0, select bank0
  2044     016D  0820               	movf	?___awdiv,w
  2045     016E  1683               	bsf	3,5	;RP0=1, select bank1
  2046     016F  1303               	bcf	3,6	;RP1=0, select bank1
  2047     0170  00B8               	movwf	sprintf@eexp^(0+128)
  2048     0171                     l3510:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2051     0171  1FB9               	btfss	(sprintf@eexp+1)^(0+128),7
  2052     0172  2974               	goto	u5751
  2053     0173  2975               	goto	u5750
  2054     0174                     u5751:
  2055     0174  297B               	goto	l3514
  2056     0175                     u5750:
  2057     0175                     l3512:
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2060     0175  30FF               	movlw	255
  2061     0176  07B8               	addwf	sprintf@eexp^(0+128),f
  2062     0177  1803               	skipnc
  2063     0178  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2064     0179  30FF               	movlw	255
  2065     017A  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2066     017B                     l3514:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2069     017B  0338               	decf	sprintf@eexp^(0+128),w
  2070     017C  3AFF               	xorlw	255
  2071     017D  120A  158A  249D  120A  118A  	fcall	_scale
  2072     0182  1283               	bcf	3,5	;RP0=0, select bank0
  2073     0183  1303               	bcf	3,6	;RP1=0, select bank0
  2074     0184  0845               	movf	?_scale+3,w
  2075     0185  1683               	bsf	3,5	;RP0=1, select bank1
  2076     0186  1303               	bcf	3,6	;RP1=0, select bank1
  2077     0187  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2078     0188  1283               	bcf	3,5	;RP0=0, select bank0
  2079     0189  1303               	bcf	3,6	;RP1=0, select bank0
  2080     018A  0844               	movf	?_scale+2,w
  2081     018B  1683               	bsf	3,5	;RP0=1, select bank1
  2082     018C  1303               	bcf	3,6	;RP1=0, select bank1
  2083     018D  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2084     018E  1283               	bcf	3,5	;RP0=0, select bank0
  2085     018F  1303               	bcf	3,6	;RP1=0, select bank0
  2086     0190  0843               	movf	?_scale+1,w
  2087     0191  1683               	bsf	3,5	;RP0=1, select bank1
  2088     0192  1303               	bcf	3,6	;RP1=0, select bank1
  2089     0193  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2090     0194  1283               	bcf	3,5	;RP0=0, select bank0
  2091     0195  1303               	bcf	3,6	;RP1=0, select bank0
  2092     0196  0842               	movf	?_scale,w
  2093     0197  1683               	bsf	3,5	;RP0=1, select bank1
  2094     0198  1303               	bcf	3,6	;RP1=0, select bank1
  2095     0199  00BA               	movwf	sprintf@tmpval^(0+128)
  2096     019A                     l3516:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2099     019A  0844               	movf	(sprintf@fval+3)^(0+128),w
  2100     019B  1283               	bcf	3,5	;RP0=0, select bank0
  2101     019C  1303               	bcf	3,6	;RP1=0, select bank0
  2102     019D  00AB               	movwf	___flmul@b+3
  2103     019E  1683               	bsf	3,5	;RP0=1, select bank1
  2104     019F  1303               	bcf	3,6	;RP1=0, select bank1
  2105     01A0  0843               	movf	(sprintf@fval+2)^(0+128),w
  2106     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2107     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2108     01A3  00AA               	movwf	___flmul@b+2
  2109     01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2110     01A5  1303               	bcf	3,6	;RP1=0, select bank1
  2111     01A6  0842               	movf	(sprintf@fval+1)^(0+128),w
  2112     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2113     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2114     01A9  00A9               	movwf	___flmul@b+1
  2115     01AA  1683               	bsf	3,5	;RP0=1, select bank1
  2116     01AB  1303               	bcf	3,6	;RP1=0, select bank1
  2117     01AC  0841               	movf	sprintf@fval^(0+128),w
  2118     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2119     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  2120     01AF  00A8               	movwf	___flmul@b
  2121     01B0  1683               	bsf	3,5	;RP0=1, select bank1
  2122     01B1  1303               	bcf	3,6	;RP1=0, select bank1
  2123     01B2  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2124     01B3  1283               	bcf	3,5	;RP0=0, select bank0
  2125     01B4  1303               	bcf	3,6	;RP1=0, select bank0
  2126     01B5  00AF               	movwf	___flmul@a+3
  2127     01B6  1683               	bsf	3,5	;RP0=1, select bank1
  2128     01B7  1303               	bcf	3,6	;RP1=0, select bank1
  2129     01B8  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2130     01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2131     01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2132     01BB  00AE               	movwf	___flmul@a+2
  2133     01BC  1683               	bsf	3,5	;RP0=1, select bank1
  2134     01BD  1303               	bcf	3,6	;RP1=0, select bank1
  2135     01BE  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2136     01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2137     01C0  1303               	bcf	3,6	;RP1=0, select bank0
  2138     01C1  00AD               	movwf	___flmul@a+1
  2139     01C2  1683               	bsf	3,5	;RP0=1, select bank1
  2140     01C3  1303               	bcf	3,6	;RP1=0, select bank1
  2141     01C4  083A               	movf	sprintf@tmpval^(0+128),w
  2142     01C5  1283               	bcf	3,5	;RP0=0, select bank0
  2143     01C6  1303               	bcf	3,6	;RP1=0, select bank0
  2144     01C7  00AC               	movwf	___flmul@a
  2145     01C8  120A  158A  2158  120A  118A  	fcall	___flmul
  2146     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  2147     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  2148     01CF  082B               	movf	?___flmul+3,w
  2149     01D0  1683               	bsf	3,5	;RP0=1, select bank1
  2150     01D1  1303               	bcf	3,6	;RP1=0, select bank1
  2151     01D2  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2152     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2153     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2154     01D5  082A               	movf	?___flmul+2,w
  2155     01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2156     01D7  1303               	bcf	3,6	;RP1=0, select bank1
  2157     01D8  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2158     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2159     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2160     01DB  0829               	movf	?___flmul+1,w
  2161     01DC  1683               	bsf	3,5	;RP0=1, select bank1
  2162     01DD  1303               	bcf	3,6	;RP1=0, select bank1
  2163     01DE  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2164     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2165     01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2166     01E1  0828               	movf	?___flmul,w
  2167     01E2  1683               	bsf	3,5	;RP0=1, select bank1
  2168     01E3  1303               	bcf	3,6	;RP1=0, select bank1
  2169     01E4  00BA               	movwf	sprintf@tmpval^(0+128)
  2170     01E5                     l3518:
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2173     01E5  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2174     01E6  00F5               	movwf	___flge@ff1+3
  2175     01E7  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2176     01E8  00F4               	movwf	___flge@ff1+2
  2177     01E9  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2178     01EA  00F3               	movwf	___flge@ff1+1
  2179     01EB  083A               	movf	sprintf@tmpval^(0+128),w
  2180     01EC  00F2               	movwf	___flge@ff1
  2181     01ED  303F               	movlw	63
  2182     01EE  00F9               	movwf	___flge@ff2+3
  2183     01EF  3080               	movlw	128
  2184     01F0  00F8               	movwf	___flge@ff2+2
  2185     01F1  3000               	movlw	0
  2186     01F2  00F7               	movwf	___flge@ff2+1
  2187     01F3  3000               	movlw	0
  2188     01F4  00F6               	movwf	___flge@ff2
  2189     01F5  160A  158A  275C  120A  118A  	fcall	___flge
  2190     01FA  1803               	btfsc	3,0
  2191     01FB  29FD               	goto	u5761
  2192     01FC  29FE               	goto	u5760
  2193     01FD                     u5761:
  2194     01FD  2A07               	goto	l3522
  2195     01FE                     u5760:
  2196     01FE                     l3520:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2199     01FE  30FF               	movlw	255
  2200     01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2201     0200  1303               	bcf	3,6	;RP1=0, select bank1
  2202     0201  07B8               	addwf	sprintf@eexp^(0+128),f
  2203     0202  1803               	skipnc
  2204     0203  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2205     0204  30FF               	movlw	255
  2206     0205  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2207     0206  2A2A               	goto	l3526
  2208     0207                     l3522:
  2209     0207  1683               	bsf	3,5	;RP0=1, select bank1
  2210     0208  1303               	bcf	3,6	;RP1=0, select bank1
  2211     0209  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2212     020A  00F5               	movwf	___flge@ff1+3
  2213     020B  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2214     020C  00F4               	movwf	___flge@ff1+2
  2215     020D  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2216     020E  00F3               	movwf	___flge@ff1+1
  2217     020F  083A               	movf	sprintf@tmpval^(0+128),w
  2218     0210  00F2               	movwf	___flge@ff1
  2219     0211  3041               	movlw	65
  2220     0212  00F9               	movwf	___flge@ff2+3
  2221     0213  3020               	movlw	32
  2222     0214  00F8               	movwf	___flge@ff2+2
  2223     0215  3000               	movlw	0
  2224     0216  00F7               	movwf	___flge@ff2+1
  2225     0217  3000               	movlw	0
  2226     0218  00F6               	movwf	___flge@ff2
  2227     0219  160A  158A  275C  120A  118A  	fcall	___flge
  2228     021E  1C03               	btfss	3,0
  2229     021F  2A21               	goto	u5771
  2230     0220  2A22               	goto	u5770
  2231     0221                     u5771:
  2232     0221  2A2A               	goto	l3526
  2233     0222                     u5770:
  2234     0222                     l3524:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2237     0222  3001               	movlw	1
  2238     0223  1683               	bsf	3,5	;RP0=1, select bank1
  2239     0224  1303               	bcf	3,6	;RP1=0, select bank1
  2240     0225  07B8               	addwf	sprintf@eexp^(0+128),f
  2241     0226  1803               	skipnc
  2242     0227  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2243     0228  3000               	movlw	0
  2244     0229  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2245     022A                     l3526:
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2248     022A  1683               	bsf	3,5	;RP0=1, select bank1
  2249     022B  1303               	bcf	3,6	;RP1=0, select bank1
  2250     022C  0840               	movf	(sprintf@prec+1)^(0+128),w
  2251     022D  3A80               	xorlw	128
  2252     022E  00FF               	movwf	btemp+1
  2253     022F  3080               	movlw	128
  2254     0230  027F               	subwf	btemp+1,w
  2255     0231  1D03               	skipz
  2256     0232  2A35               	goto	u5785
  2257     0233  300D               	movlw	13
  2258     0234  023F               	subwf	sprintf@prec^(0+128),w
  2259     0235                     u5785:
  2260     0235  1803               	skipnc
  2261     0236  2A38               	goto	u5781
  2262     0237  2A39               	goto	u5780
  2263     0238                     u5781:
  2264     0238  2A80               	goto	l3530
  2265     0239                     u5780:
  2266     0239                     l3528:
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2269     0239  1683               	bsf	3,5	;RP0=1, select bank1
  2270     023A  1303               	bcf	3,6	;RP1=0, select bank1
  2271     023B  083F               	movf	sprintf@prec^(0+128),w
  2272     023C  160A  118A  239D  120A  118A  	fcall	_fround
  2273     0241  1283               	bcf	3,5	;RP0=0, select bank0
  2274     0242  1303               	bcf	3,6	;RP1=0, select bank0
  2275     0243  0845               	movf	?_fround+3,w
  2276     0244  00D9               	movwf	___fladd@b+3
  2277     0245  0844               	movf	?_fround+2,w
  2278     0246  00D8               	movwf	___fladd@b+2
  2279     0247  0843               	movf	?_fround+1,w
  2280     0248  00D7               	movwf	___fladd@b+1
  2281     0249  0842               	movf	?_fround,w
  2282     024A  00D6               	movwf	___fladd@b
  2283     024B  1683               	bsf	3,5	;RP0=1, select bank1
  2284     024C  1303               	bcf	3,6	;RP1=0, select bank1
  2285     024D  0844               	movf	(sprintf@fval+3)^(0+128),w
  2286     024E  1283               	bcf	3,5	;RP0=0, select bank0
  2287     024F  1303               	bcf	3,6	;RP1=0, select bank0
  2288     0250  00DD               	movwf	___fladd@a+3
  2289     0251  1683               	bsf	3,5	;RP0=1, select bank1
  2290     0252  1303               	bcf	3,6	;RP1=0, select bank1
  2291     0253  0843               	movf	(sprintf@fval+2)^(0+128),w
  2292     0254  1283               	bcf	3,5	;RP0=0, select bank0
  2293     0255  1303               	bcf	3,6	;RP1=0, select bank0
  2294     0256  00DC               	movwf	___fladd@a+2
  2295     0257  1683               	bsf	3,5	;RP0=1, select bank1
  2296     0258  1303               	bcf	3,6	;RP1=0, select bank1
  2297     0259  0842               	movf	(sprintf@fval+1)^(0+128),w
  2298     025A  1283               	bcf	3,5	;RP0=0, select bank0
  2299     025B  1303               	bcf	3,6	;RP1=0, select bank0
  2300     025C  00DB               	movwf	___fladd@a+1
  2301     025D  1683               	bsf	3,5	;RP0=1, select bank1
  2302     025E  1303               	bcf	3,6	;RP1=0, select bank1
  2303     025F  0841               	movf	sprintf@fval^(0+128),w
  2304     0260  1283               	bcf	3,5	;RP0=0, select bank0
  2305     0261  1303               	bcf	3,6	;RP1=0, select bank0
  2306     0262  00DA               	movwf	___fladd@a
  2307     0263  160A  118A  25A8  120A  118A  	fcall	___fladd
  2308     0268  1283               	bcf	3,5	;RP0=0, select bank0
  2309     0269  1303               	bcf	3,6	;RP1=0, select bank0
  2310     026A  0859               	movf	?___fladd+3,w
  2311     026B  1683               	bsf	3,5	;RP0=1, select bank1
  2312     026C  1303               	bcf	3,6	;RP1=0, select bank1
  2313     026D  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2314     026E  1283               	bcf	3,5	;RP0=0, select bank0
  2315     026F  1303               	bcf	3,6	;RP1=0, select bank0
  2316     0270  0858               	movf	?___fladd+2,w
  2317     0271  1683               	bsf	3,5	;RP0=1, select bank1
  2318     0272  1303               	bcf	3,6	;RP1=0, select bank1
  2319     0273  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2320     0274  1283               	bcf	3,5	;RP0=0, select bank0
  2321     0275  1303               	bcf	3,6	;RP1=0, select bank0
  2322     0276  0857               	movf	?___fladd+1,w
  2323     0277  1683               	bsf	3,5	;RP0=1, select bank1
  2324     0278  1303               	bcf	3,6	;RP1=0, select bank1
  2325     0279  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2326     027A  1283               	bcf	3,5	;RP0=0, select bank0
  2327     027B  1303               	bcf	3,6	;RP1=0, select bank0
  2328     027C  0856               	movf	?___fladd,w
  2329     027D  1683               	bsf	3,5	;RP0=1, select bank1
  2330     027E  1303               	bcf	3,6	;RP1=0, select bank1
  2331     027F  00C1               	movwf	sprintf@fval^(0+128)
  2332     0280                     l3530:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2335     0280  1683               	bsf	3,5	;RP0=1, select bank1
  2336     0281  1303               	bcf	3,6	;RP1=0, select bank1
  2337     0282  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2338     0283  3A80               	xorlw	128
  2339     0284  00FF               	movwf	btemp+1
  2340     0285  3080               	movlw	128
  2341     0286  027F               	subwf	btemp+1,w
  2342     0287  1D03               	skipz
  2343     0288  2A8B               	goto	u5795
  2344     0289  300A               	movlw	10
  2345     028A  0238               	subwf	sprintf@eexp^(0+128),w
  2346     028B                     u5795:
  2347     028B  1803               	skipnc
  2348     028C  2A8E               	goto	u5791
  2349     028D  2A8F               	goto	u5790
  2350     028E                     u5791:
  2351     028E  2AE0               	goto	l3538
  2352     028F                     u5790:
  2353     028F                     l3532:
  2354     028F  1683               	bsf	3,5	;RP0=1, select bank1
  2355     0290  1303               	bcf	3,6	;RP1=0, select bank1
  2356     0291  0844               	movf	(sprintf@fval+3)^(0+128),w
  2357     0292  00F5               	movwf	___fleq@ff1+3
  2358     0293  0843               	movf	(sprintf@fval+2)^(0+128),w
  2359     0294  00F4               	movwf	___fleq@ff1+2
  2360     0295  0842               	movf	(sprintf@fval+1)^(0+128),w
  2361     0296  00F3               	movwf	___fleq@ff1+1
  2362     0297  0841               	movf	sprintf@fval^(0+128),w
  2363     0298  00F2               	movwf	___fleq@ff1
  2364     0299  3000               	movlw	0
  2365     029A  00F9               	movwf	___fleq@ff2+3
  2366     029B  3000               	movlw	0
  2367     029C  00F8               	movwf	___fleq@ff2+2
  2368     029D  3000               	movlw	0
  2369     029E  00F7               	movwf	___fleq@ff2+1
  2370     029F  3000               	movlw	0
  2371     02A0  00F6               	movwf	___fleq@ff2
  2372     02A1  160A  158A  2469  120A  118A  	fcall	___fleq
  2373     02A6  1803               	btfsc	3,0
  2374     02A7  2AA9               	goto	u5801
  2375     02A8  2AAA               	goto	u5800
  2376     02A9                     u5801:
  2377     02A9  2B52               	goto	l3552
  2378     02AA                     u5800:
  2379     02AA                     l3534:
  2380     02AA  1683               	bsf	3,5	;RP0=1, select bank1
  2381     02AB  1303               	bcf	3,6	;RP1=0, select bank1
  2382     02AC  0844               	movf	(sprintf@fval+3)^(0+128),w
  2383     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2384     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2385     02AF  00D8               	movwf	___fltol@f1+3
  2386     02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2387     02B1  1303               	bcf	3,6	;RP1=0, select bank1
  2388     02B2  0843               	movf	(sprintf@fval+2)^(0+128),w
  2389     02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2390     02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2391     02B5  00D7               	movwf	___fltol@f1+2
  2392     02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2393     02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2394     02B8  0842               	movf	(sprintf@fval+1)^(0+128),w
  2395     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2396     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2397     02BB  00D6               	movwf	___fltol@f1+1
  2398     02BC  1683               	bsf	3,5	;RP0=1, select bank1
  2399     02BD  1303               	bcf	3,6	;RP1=0, select bank1
  2400     02BE  0841               	movf	sprintf@fval^(0+128),w
  2401     02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2402     02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2403     02C1  00D5               	movwf	___fltol@f1
  2404     02C2  160A  158A  26E4  120A  118A  	fcall	___fltol
  2405     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2406     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2407     02C9  0858               	movf	?___fltol+3,w
  2408     02CA  0457               	iorwf	?___fltol+2,w
  2409     02CB  0456               	iorwf	?___fltol+1,w
  2410     02CC  0455               	iorwf	?___fltol,w
  2411     02CD  1D03               	skipz
  2412     02CE  2AD0               	goto	u5811
  2413     02CF  2AD1               	goto	u5810
  2414     02D0                     u5811:
  2415     02D0  2B52               	goto	l3552
  2416     02D1                     u5810:
  2417     02D1                     l3536:
  2418     02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2419     02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2420     02D3  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2421     02D4  3A80               	xorlw	128
  2422     02D5  00FF               	movwf	btemp+1
  2423     02D6  3080               	movlw	128
  2424     02D7  027F               	subwf	btemp+1,w
  2425     02D8  1D03               	skipz
  2426     02D9  2ADC               	goto	u5825
  2427     02DA  3002               	movlw	2
  2428     02DB  0238               	subwf	sprintf@eexp^(0+128),w
  2429     02DC                     u5825:
  2430     02DC  1C03               	skipc
  2431     02DD  2ADF               	goto	u5821
  2432     02DE  2AE0               	goto	u5820
  2433     02DF                     u5821:
  2434     02DF  2B52               	goto	l3552
  2435     02E0                     u5820:
  2436     02E0                     l3538:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2439     02E0  1683               	bsf	3,5	;RP0=1, select bank1
  2440     02E1  1303               	bcf	3,6	;RP1=0, select bank1
  2441     02E2  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2442     02E3  00F5               	movwf	___flge@ff1+3
  2443     02E4  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2444     02E5  00F4               	movwf	___flge@ff1+2
  2445     02E6  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2446     02E7  00F3               	movwf	___flge@ff1+1
  2447     02E8  083A               	movf	sprintf@tmpval^(0+128),w
  2448     02E9  00F2               	movwf	___flge@ff1
  2449     02EA  3040               	movlw	64
  2450     02EB  00F9               	movwf	___flge@ff2+3
  2451     02EC  3089               	movlw	137
  2452     02ED  00F8               	movwf	___flge@ff2+2
  2453     02EE  3070               	movlw	112
  2454     02EF  00F7               	movwf	___flge@ff2+1
  2455     02F0  305F               	movlw	95
  2456     02F1  00F6               	movwf	___flge@ff2
  2457     02F2  160A  158A  275C  120A  118A  	fcall	___flge
  2458     02F7  1803               	btfsc	3,0
  2459     02F8  2AFA               	goto	u5831
  2460     02F9  2AFB               	goto	u5830
  2461     02FA                     u5831:
  2462     02FA  2B04               	goto	l3542
  2463     02FB                     u5830:
  2464     02FB                     l3540:
  2465                           
  2466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2467     02FB  30F7               	movlw	247
  2468     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2469     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2470     02FE  07B8               	addwf	sprintf@eexp^(0+128),f
  2471     02FF  1803               	skipnc
  2472     0300  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2473     0301  30FF               	movlw	255
  2474     0302  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2477     0303  2B0C               	goto	l3544
  2478     0304                     l3542:
  2479                           
  2480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2481     0304  30F8               	movlw	248
  2482     0305  1683               	bsf	3,5	;RP0=1, select bank1
  2483     0306  1303               	bcf	3,6	;RP1=0, select bank1
  2484     0307  07B8               	addwf	sprintf@eexp^(0+128),f
  2485     0308  1803               	skipnc
  2486     0309  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2487     030A  30FF               	movlw	255
  2488     030B  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2489     030C                     l3544:
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2492     030C  0838               	movf	sprintf@eexp^(0+128),w
  2493     030D  120A  158A  249D  120A  118A  	fcall	_scale
  2494     0312  1283               	bcf	3,5	;RP0=0, select bank0
  2495     0313  1303               	bcf	3,6	;RP1=0, select bank0
  2496     0314  0845               	movf	?_scale+3,w
  2497     0315  1683               	bsf	3,5	;RP0=1, select bank1
  2498     0316  1303               	bcf	3,6	;RP1=0, select bank1
  2499     0317  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2500     0318  1283               	bcf	3,5	;RP0=0, select bank0
  2501     0319  1303               	bcf	3,6	;RP1=0, select bank0
  2502     031A  0844               	movf	?_scale+2,w
  2503     031B  1683               	bsf	3,5	;RP0=1, select bank1
  2504     031C  1303               	bcf	3,6	;RP1=0, select bank1
  2505     031D  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2506     031E  1283               	bcf	3,5	;RP0=0, select bank0
  2507     031F  1303               	bcf	3,6	;RP1=0, select bank0
  2508     0320  0843               	movf	?_scale+1,w
  2509     0321  1683               	bsf	3,5	;RP0=1, select bank1
  2510     0322  1303               	bcf	3,6	;RP1=0, select bank1
  2511     0323  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2512     0324  1283               	bcf	3,5	;RP0=0, select bank0
  2513     0325  1303               	bcf	3,6	;RP1=0, select bank0
  2514     0326  0842               	movf	?_scale,w
  2515     0327  1683               	bsf	3,5	;RP0=1, select bank1
  2516     0328  1303               	bcf	3,6	;RP1=0, select bank1
  2517     0329  00BA               	movwf	sprintf@tmpval^(0+128)
  2518     032A                     l3546:
  2519     032A  0844               	movf	(sprintf@fval+3)^(0+128),w
  2520     032B  00F5               	movwf	__div_to_l_@f1+3
  2521     032C  0843               	movf	(sprintf@fval+2)^(0+128),w
  2522     032D  00F4               	movwf	__div_to_l_@f1+2
  2523     032E  0842               	movf	(sprintf@fval+1)^(0+128),w
  2524     032F  00F3               	movwf	__div_to_l_@f1+1
  2525     0330  0841               	movf	sprintf@fval^(0+128),w
  2526     0331  00F2               	movwf	__div_to_l_@f1
  2527     0332  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2528     0333  00F9               	movwf	__div_to_l_@f2+3
  2529     0334  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2530     0335  00F8               	movwf	__div_to_l_@f2+2
  2531     0336  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2532     0337  00F7               	movwf	__div_to_l_@f2+1
  2533     0338  083A               	movf	sprintf@tmpval^(0+128),w
  2534     0339  00F6               	movwf	__div_to_l_@f2
  2535     033A  120A  158A  20A0  120A  118A  	fcall	__div_to_l_
  2536     033F  0875               	movf	?__div_to_l_+3,w
  2537     0340  1683               	bsf	3,5	;RP0=1, select bank1
  2538     0341  1303               	bcf	3,6	;RP1=0, select bank1
  2539     0342  00B7               	movwf	(sprintf@val+3)^(0+128)
  2540     0343  0874               	movf	?__div_to_l_+2,w
  2541     0344  00B6               	movwf	(sprintf@val+2)^(0+128)
  2542     0345  0873               	movf	?__div_to_l_+1,w
  2543     0346  00B5               	movwf	(sprintf@val+1)^(0+128)
  2544     0347  0872               	movf	?__div_to_l_,w
  2545     0348  00B4               	movwf	sprintf@val^(0+128)
  2546     0349                     l3550:
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2549     0349  3000               	movlw	0
  2550     034A  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2551     034B  3000               	movlw	0
  2552     034C  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2553     034D  3000               	movlw	0
  2554     034E  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2555     034F  3000               	movlw	0
  2556     0350  00C1               	movwf	sprintf@fval^(0+128)
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2559     0351  2BB8               	goto	l3558
  2560     0352                     l3552:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2563     0352  1683               	bsf	3,5	;RP0=1, select bank1
  2564     0353  1303               	bcf	3,6	;RP1=0, select bank1
  2565     0354  0844               	movf	(sprintf@fval+3)^(0+128),w
  2566     0355  1283               	bcf	3,5	;RP0=0, select bank0
  2567     0356  1303               	bcf	3,6	;RP1=0, select bank0
  2568     0357  00D8               	movwf	___fltol@f1+3
  2569     0358  1683               	bsf	3,5	;RP0=1, select bank1
  2570     0359  1303               	bcf	3,6	;RP1=0, select bank1
  2571     035A  0843               	movf	(sprintf@fval+2)^(0+128),w
  2572     035B  1283               	bcf	3,5	;RP0=0, select bank0
  2573     035C  1303               	bcf	3,6	;RP1=0, select bank0
  2574     035D  00D7               	movwf	___fltol@f1+2
  2575     035E  1683               	bsf	3,5	;RP0=1, select bank1
  2576     035F  1303               	bcf	3,6	;RP1=0, select bank1
  2577     0360  0842               	movf	(sprintf@fval+1)^(0+128),w
  2578     0361  1283               	bcf	3,5	;RP0=0, select bank0
  2579     0362  1303               	bcf	3,6	;RP1=0, select bank0
  2580     0363  00D6               	movwf	___fltol@f1+1
  2581     0364  1683               	bsf	3,5	;RP0=1, select bank1
  2582     0365  1303               	bcf	3,6	;RP1=0, select bank1
  2583     0366  0841               	movf	sprintf@fval^(0+128),w
  2584     0367  1283               	bcf	3,5	;RP0=0, select bank0
  2585     0368  1303               	bcf	3,6	;RP1=0, select bank0
  2586     0369  00D5               	movwf	___fltol@f1
  2587     036A  160A  158A  26E4  120A  118A  	fcall	___fltol
  2588     036F  1283               	bcf	3,5	;RP0=0, select bank0
  2589     0370  1303               	bcf	3,6	;RP1=0, select bank0
  2590     0371  0858               	movf	?___fltol+3,w
  2591     0372  1683               	bsf	3,5	;RP0=1, select bank1
  2592     0373  1303               	bcf	3,6	;RP1=0, select bank1
  2593     0374  00B7               	movwf	(sprintf@val+3)^(0+128)
  2594     0375  1283               	bcf	3,5	;RP0=0, select bank0
  2595     0376  1303               	bcf	3,6	;RP1=0, select bank0
  2596     0377  0857               	movf	?___fltol+2,w
  2597     0378  1683               	bsf	3,5	;RP0=1, select bank1
  2598     0379  1303               	bcf	3,6	;RP1=0, select bank1
  2599     037A  00B6               	movwf	(sprintf@val+2)^(0+128)
  2600     037B  1283               	bcf	3,5	;RP0=0, select bank0
  2601     037C  1303               	bcf	3,6	;RP1=0, select bank0
  2602     037D  0856               	movf	?___fltol+1,w
  2603     037E  1683               	bsf	3,5	;RP0=1, select bank1
  2604     037F  1303               	bcf	3,6	;RP1=0, select bank1
  2605     0380  00B5               	movwf	(sprintf@val+1)^(0+128)
  2606     0381  1283               	bcf	3,5	;RP0=0, select bank0
  2607     0382  1303               	bcf	3,6	;RP1=0, select bank0
  2608     0383  0855               	movf	?___fltol,w
  2609     0384  1683               	bsf	3,5	;RP0=1, select bank1
  2610     0385  1303               	bcf	3,6	;RP1=0, select bank1
  2611     0386  00B4               	movwf	sprintf@val^(0+128)
  2612     0387                     l3554:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2615     0387  0837               	movf	(sprintf@val+3)^(0+128),w
  2616     0388  00F5               	movwf	___xxtofl@val+3
  2617     0389  0836               	movf	(sprintf@val+2)^(0+128),w
  2618     038A  00F4               	movwf	___xxtofl@val+2
  2619     038B  0835               	movf	(sprintf@val+1)^(0+128),w
  2620     038C  00F3               	movwf	___xxtofl@val+1
  2621     038D  0834               	movf	sprintf@val^(0+128),w
  2622     038E  00F2               	movwf	___xxtofl@val
  2623     038F  3000               	movlw	0
  2624     0390  120A  118A  2720  120A  118A  	fcall	___xxtofl
  2625     0395  0875               	movf	?___xxtofl+3,w
  2626     0396  1683               	bsf	3,5	;RP0=1, select bank1
  2627     0397  1303               	bcf	3,6	;RP1=0, select bank1
  2628     0398  00A3               	movwf	(___flsub@a+3)^(0+128)
  2629     0399  0874               	movf	?___xxtofl+2,w
  2630     039A  00A2               	movwf	(___flsub@a+2)^(0+128)
  2631     039B  0873               	movf	?___xxtofl+1,w
  2632     039C  00A1               	movwf	(___flsub@a+1)^(0+128)
  2633     039D  0872               	movf	?___xxtofl,w
  2634     039E  00A0               	movwf	___flsub@a^(0+128)
  2635     039F  0844               	movf	(sprintf@fval+3)^(0+128),w
  2636     03A0  00A7               	movwf	(___flsub@b+3)^(0+128)
  2637     03A1  0843               	movf	(sprintf@fval+2)^(0+128),w
  2638     03A2  00A6               	movwf	(___flsub@b+2)^(0+128)
  2639     03A3  0842               	movf	(sprintf@fval+1)^(0+128),w
  2640     03A4  00A5               	movwf	(___flsub@b+1)^(0+128)
  2641     03A5  0841               	movf	sprintf@fval^(0+128),w
  2642     03A6  00A4               	movwf	___flsub@b^(0+128)
  2643     03A7  160A  158A  24B9  120A  118A  	fcall	___flsub
  2644     03AC  1683               	bsf	3,5	;RP0=1, select bank1
  2645     03AD  1303               	bcf	3,6	;RP1=0, select bank1
  2646     03AE  0823               	movf	(?___flsub+3)^(0+128),w
  2647     03AF  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2648     03B0  0822               	movf	(?___flsub+2)^(0+128),w
  2649     03B1  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2650     03B2  0821               	movf	(?___flsub+1)^(0+128),w
  2651     03B3  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2652     03B4  0820               	movf	?___flsub^(0+128),w
  2653     03B5  00C1               	movwf	sprintf@fval^(0+128)
  2654     03B6                     l3556:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2657     03B6  01B8               	clrf	sprintf@eexp^(0+128)
  2658     03B7  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  2659     03B8                     l3558:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2662     03B8  01C5               	clrf	sprintf@c^(0+128)
  2663     03B9  0AC5               	incf	sprintf@c^(0+128),f
  2664     03BA                     l3564:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2667     03BA  0845               	movf	sprintf@c^(0+128),w
  2668     03BB  00A8               	movwf	??_sprintf^(0+128)
  2669     03BC  3001               	movlw	1
  2670     03BD                     u5845:
  2671     03BD  1003               	clrc
  2672     03BE  0DA8               	rlf	??_sprintf^(0+128),f
  2673     03BF  3EFF               	addlw	-1
  2674     03C0  1D03               	skipz
  2675     03C1  2BBD               	goto	u5845
  2676     03C2  1003               	clrc
  2677     03C3  0D28               	rlf	??_sprintf^(0+128),w
  2678     03C4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2679     03C5  0084               	movwf	4
  2680     03C6  160A  118A  200A  120A  118A  	fcall	stringdir
  2681     03CB  00A9               	movwf	(??_sprintf+1)^(0+128)
  2682     03CC  160A  118A  200A  120A  118A  	fcall	stringdir
  2683     03D1  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  2684     03D2  160A  118A  200A  120A  118A  	fcall	stringdir
  2685     03D7  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  2686     03D8  160A  118A  200A  120A  118A  	fcall	stringdir
  2687     03DD  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  2688     03DE  082C               	movf	(??_sprintf+4)^(0+128),w
  2689     03DF  0237               	subwf	(sprintf@val+3)^(0+128),w
  2690     03E0  1D03               	skipz
  2691     03E1  2BEC               	goto	u5855
  2692     03E2  082B               	movf	(??_sprintf+3)^(0+128),w
  2693     03E3  0236               	subwf	(sprintf@val+2)^(0+128),w
  2694     03E4  1D03               	skipz
  2695     03E5  2BEC               	goto	u5855
  2696     03E6  082A               	movf	(??_sprintf+2)^(0+128),w
  2697     03E7  0235               	subwf	(sprintf@val+1)^(0+128),w
  2698     03E8  1D03               	skipz
  2699     03E9  2BEC               	goto	u5855
  2700     03EA  0829               	movf	(??_sprintf+1)^(0+128),w
  2701     03EB  0234               	subwf	sprintf@val^(0+128),w
  2702     03EC                     u5855:
  2703     03EC  1803               	skipnc
  2704     03ED  2BEF               	goto	u5851
  2705     03EE  2BF0               	goto	u5850
  2706     03EF                     u5851:
  2707     03EF  2BF1               	goto	l3568
  2708     03F0                     u5850:
  2709     03F0  2BFB               	goto	l3570
  2710     03F1                     l3568:
  2711     03F1  3001               	movlw	1
  2712     03F2  00A8               	movwf	??_sprintf^(0+128)
  2713     03F3  0828               	movf	??_sprintf^(0+128),w
  2714     03F4  07C5               	addwf	sprintf@c^(0+128),f
  2715     03F5  300A               	movlw	10
  2716     03F6  0645               	xorwf	sprintf@c^(0+128),w
  2717     03F7  1D03               	btfss	3,2
  2718     03F8  2BFA               	goto	u5861
  2719     03F9  2BFB               	goto	u5860
  2720     03FA                     u5861:
  2721     03FA  2BBA               	goto	l3564
  2722     03FB                     u5860:
  2723     03FB                     l3570:
  2724                           
  2725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2726     03FB  3003               	movlw	3
  2727     03FC  0532               	andwf	sprintf@flag^(0+128),w
  2728     03FD  00A8               	movwf	??_sprintf^(0+128)
  2729     03FE  3000               	movlw	0
  2730     03FF  0533               	andwf	(sprintf@flag+1)^(0+128),w
  2731     0400  00A9               	movwf	(??_sprintf+1)^(0+128)
  2732     0401  0828               	movf	??_sprintf^(0+128),w
  2733     0402  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2734     0403  1903               	btfsc	3,2
  2735     0404  2C06               	goto	u5871
  2736     0405  2C07               	goto	u5870
  2737     0406                     u5871:
  2738     0406  2C75               	goto	l318
  2739     0407                     u5870:
  2740     0407                     l3572:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2743     0407  083E               	movf	sprintf@sp^(0+128),w
  2744     0408  0084               	movwf	4
  2745     0409  302D               	movlw	45
  2746     040A  1783               	bsf	3,7	;select IRP bank2
  2747     040B  0080               	movwf	0
  2748     040C                     l3574:
  2749     040C  3001               	movlw	1
  2750     040D  00A8               	movwf	??_sprintf^(0+128)
  2751     040E  0828               	movf	??_sprintf^(0+128),w
  2752     040F  07BE               	addwf	sprintf@sp^(0+128),f
  2753     0410  2C75               	goto	l318
  2754     0411                     l3576:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2757     0411  0845               	movf	sprintf@c^(0+128),w
  2758     0412  00A8               	movwf	??_sprintf^(0+128)
  2759     0413  3001               	movlw	1
  2760     0414                     u5885:
  2761     0414  1003               	clrc
  2762     0415  0DA8               	rlf	??_sprintf^(0+128),f
  2763     0416  3EFF               	addlw	-1
  2764     0417  1D03               	skipz
  2765     0418  2C14               	goto	u5885
  2766     0419  1003               	clrc
  2767     041A  0D28               	rlf	??_sprintf^(0+128),w
  2768     041B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2769     041C  0084               	movwf	4
  2770     041D  160A  118A  200A  120A  118A  	fcall	stringdir
  2771     0422  00F2               	movwf	___lldiv@divisor
  2772     0423  160A  118A  200A  120A  118A  	fcall	stringdir
  2773     0428  00F3               	movwf	___lldiv@divisor+1
  2774     0429  160A  118A  200A  120A  118A  	fcall	stringdir
  2775     042E  00F4               	movwf	___lldiv@divisor+2
  2776     042F  160A  118A  200A  120A  118A  	fcall	stringdir
  2777     0434  00F5               	movwf	___lldiv@divisor+3
  2778     0435  0837               	movf	(sprintf@val+3)^(0+128),w
  2779     0436  00F9               	movwf	___lldiv@dividend+3
  2780     0437  0836               	movf	(sprintf@val+2)^(0+128),w
  2781     0438  00F8               	movwf	___lldiv@dividend+2
  2782     0439  0835               	movf	(sprintf@val+1)^(0+128),w
  2783     043A  00F7               	movwf	___lldiv@dividend+1
  2784     043B  0834               	movf	sprintf@val^(0+128),w
  2785     043C  00F6               	movwf	___lldiv@dividend
  2786     043D  160A  158A  2613  120A  118A  	fcall	___lldiv
  2787     0442  0875               	movf	?___lldiv+3,w
  2788     0443  1683               	bsf	3,5	;RP0=1, select bank1
  2789     0444  1303               	bcf	3,6	;RP1=0, select bank1
  2790     0445  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2791     0446  0874               	movf	?___lldiv+2,w
  2792     0447  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2793     0448  0873               	movf	?___lldiv+1,w
  2794     0449  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2795     044A  0872               	movf	?___lldiv,w
  2796     044B  00BA               	movwf	sprintf@tmpval^(0+128)
  2797     044C                     l3578:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2800     044C  3000               	movlw	0
  2801     044D  00F5               	movwf	___llmod@divisor+3
  2802     044E  3000               	movlw	0
  2803     044F  00F4               	movwf	___llmod@divisor+2
  2804     0450  3000               	movlw	0
  2805     0451  00F3               	movwf	___llmod@divisor+1
  2806     0452  300A               	movlw	10
  2807     0453  00F2               	movwf	___llmod@divisor
  2808     0454  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2809     0455  00F9               	movwf	___llmod@dividend+3
  2810     0456  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2811     0457  00F8               	movwf	___llmod@dividend+2
  2812     0458  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2813     0459  00F7               	movwf	___llmod@dividend+1
  2814     045A  083A               	movf	sprintf@tmpval^(0+128),w
  2815     045B  00F6               	movwf	___llmod@dividend
  2816     045C  160A  158A  2509  120A  118A  	fcall	___llmod
  2817     0461  0875               	movf	?___llmod+3,w
  2818     0462  1683               	bsf	3,5	;RP0=1, select bank1
  2819     0463  1303               	bcf	3,6	;RP1=0, select bank1
  2820     0464  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2821     0465  0874               	movf	?___llmod+2,w
  2822     0466  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2823     0467  0873               	movf	?___llmod+1,w
  2824     0468  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2825     0469  0872               	movf	?___llmod,w
  2826     046A  00BA               	movwf	sprintf@tmpval^(0+128)
  2827     046B                     l3580:
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2830     046B  083E               	movf	sprintf@sp^(0+128),w
  2831     046C  0084               	movwf	4
  2832     046D  083A               	movf	sprintf@tmpval^(0+128),w
  2833     046E  3E30               	addlw	48
  2834     046F  1783               	bsf	3,7	;select IRP bank2
  2835     0470  0080               	movwf	0
  2836     0471  3001               	movlw	1
  2837     0472  00A8               	movwf	??_sprintf^(0+128)
  2838     0473  0828               	movf	??_sprintf^(0+128),w
  2839     0474  07BE               	addwf	sprintf@sp^(0+128),f
  2840     0475                     l318:	
  2841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  2842                           
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2845     0475  3001               	movlw	1
  2846     0476  02C5               	subwf	sprintf@c^(0+128),f
  2847     0477  0A45               	incf	sprintf@c^(0+128),w
  2848     0478  1D03               	btfss	3,2
  2849     0479  2C7B               	goto	u5891
  2850     047A  2C7C               	goto	u5890
  2851     047B                     u5891:
  2852     047B  2C11               	goto	l3576
  2853     047C                     u5890:
  2854     047C  2C8E               	goto	l3588
  2855     047D                     l3582:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2858     047D  1683               	bsf	3,5	;RP0=1, select bank1
  2859     047E  1303               	bcf	3,6	;RP1=0, select bank1
  2860     047F  083E               	movf	sprintf@sp^(0+128),w
  2861     0480  0084               	movwf	4
  2862     0481  3030               	movlw	48
  2863     0482  1783               	bsf	3,7	;select IRP bank2
  2864     0483  0080               	movwf	0
  2865     0484                     l3584:
  2866     0484  3001               	movlw	1
  2867     0485  00A8               	movwf	??_sprintf^(0+128)
  2868     0486  0828               	movf	??_sprintf^(0+128),w
  2869     0487  07BE               	addwf	sprintf@sp^(0+128),f
  2870     0488                     l3586:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2873     0488  30FF               	movlw	255
  2874     0489  07B8               	addwf	sprintf@eexp^(0+128),f
  2875     048A  1803               	skipnc
  2876     048B  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2877     048C  30FF               	movlw	255
  2878     048D  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2879     048E                     l3588:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2882     048E  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2883     048F  3A80               	xorlw	128
  2884     0490  00FF               	movwf	btemp+1
  2885     0491  3080               	movlw	128
  2886     0492  027F               	subwf	btemp+1,w
  2887     0493  1D03               	skipz
  2888     0494  2C97               	goto	u5905
  2889     0495  3001               	movlw	1
  2890     0496  0238               	subwf	sprintf@eexp^(0+128),w
  2891     0497                     u5905:
  2892     0497  1803               	skipnc
  2893     0498  2C9A               	goto	u5901
  2894     0499  2C9B               	goto	u5900
  2895     049A                     u5901:
  2896     049A  2C7D               	goto	l3582
  2897     049B                     u5900:
  2898     049B                     l3590:
  2899                           
  2900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2901     049B  1683               	bsf	3,5	;RP0=1, select bank1
  2902     049C  1303               	bcf	3,6	;RP1=0, select bank1
  2903     049D  0840               	movf	(sprintf@prec+1)^(0+128),w
  2904     049E  3A80               	xorlw	128
  2905     049F  00FF               	movwf	btemp+1
  2906     04A0  3080               	movlw	128
  2907     04A1  027F               	subwf	btemp+1,w
  2908     04A2  1D03               	skipz
  2909     04A3  2CA6               	goto	u5915
  2910     04A4  3009               	movlw	9
  2911     04A5  023F               	subwf	sprintf@prec^(0+128),w
  2912     04A6                     u5915:
  2913     04A6  1C03               	skipc
  2914     04A7  2CA9               	goto	u5911
  2915     04A8  2CAA               	goto	u5910
  2916     04A9                     u5911:
  2917     04A9  2CAF               	goto	l3594
  2918     04AA                     u5910:
  2919     04AA                     l3592:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2922     04AA  3008               	movlw	8
  2923     04AB  1683               	bsf	3,5	;RP0=1, select bank1
  2924     04AC  1303               	bcf	3,6	;RP1=0, select bank1
  2925     04AD  00C5               	movwf	sprintf@c^(0+128)
  2926     04AE  2CB3               	goto	l325
  2927     04AF                     l3594:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2930     04AF  1683               	bsf	3,5	;RP0=1, select bank1
  2931     04B0  1303               	bcf	3,6	;RP1=0, select bank1
  2932     04B1  083F               	movf	sprintf@prec^(0+128),w
  2933     04B2  00C5               	movwf	sprintf@c^(0+128)
  2934     04B3                     l325:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2937     04B3  0845               	movf	sprintf@c^(0+128),w
  2938     04B4  00A8               	movwf	??_sprintf^(0+128)
  2939     04B5  01A9               	clrf	(??_sprintf^(0+128)+1)
  2940     04B6  0828               	movf	??_sprintf^(0+128),w
  2941     04B7  02BF               	subwf	sprintf@prec^(0+128),f
  2942     04B8  0829               	movf	(??_sprintf+1)^(0+128),w
  2943     04B9  1C03               	skipc
  2944     04BA  03C0               	decf	(sprintf@prec+1)^(0+128),f
  2945     04BB  02C0               	subwf	(sprintf@prec+1)^(0+128),f
  2946     04BC                     l3596:
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2949     04BC  0845               	movf	sprintf@c^(0+128),w
  2950     04BD  1903               	btfsc	3,2
  2951     04BE  2CC0               	goto	u5921
  2952     04BF  2CC1               	goto	u5920
  2953     04C0                     u5921:
  2954     04C0  2CCA               	goto	l3602
  2955     04C1                     u5920:
  2956     04C1                     l3598:
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  2959     04C1  083E               	movf	sprintf@sp^(0+128),w
  2960     04C2  0084               	movwf	4
  2961     04C3  302E               	movlw	46
  2962     04C4  1783               	bsf	3,7	;select IRP bank2
  2963     04C5  0080               	movwf	0
  2964     04C6                     l3600:
  2965     04C6  3001               	movlw	1
  2966     04C7  00A8               	movwf	??_sprintf^(0+128)
  2967     04C8  0828               	movf	??_sprintf^(0+128),w
  2968     04C9  07BE               	addwf	sprintf@sp^(0+128),f
  2969     04CA                     l3602:
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2972     04CA  0845               	movf	sprintf@c^(0+128),w
  2973     04CB  120A  158A  249D  120A  118A  	fcall	_scale
  2974     04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2975     04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2976     04D2  0845               	movf	?_scale+3,w
  2977     04D3  1683               	bsf	3,5	;RP0=1, select bank1
  2978     04D4  1303               	bcf	3,6	;RP1=0, select bank1
  2979     04D5  00B0               	movwf	(_sprintf$1154+3)^(0+128)
  2980     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2981     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2982     04D8  0844               	movf	?_scale+2,w
  2983     04D9  1683               	bsf	3,5	;RP0=1, select bank1
  2984     04DA  1303               	bcf	3,6	;RP1=0, select bank1
  2985     04DB  00AF               	movwf	(_sprintf$1154+2)^(0+128)
  2986     04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2987     04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2988     04DE  0843               	movf	?_scale+1,w
  2989     04DF  1683               	bsf	3,5	;RP0=1, select bank1
  2990     04E0  1303               	bcf	3,6	;RP1=0, select bank1
  2991     04E1  00AE               	movwf	(_sprintf$1154+1)^(0+128)
  2992     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  2993     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  2994     04E4  0842               	movf	?_scale,w
  2995     04E5  1683               	bsf	3,5	;RP0=1, select bank1
  2996     04E6  1303               	bcf	3,6	;RP1=0, select bank1
  2997     04E7  00AD               	movwf	_sprintf$1154^(0+128)
  2998     04E8                     l3604:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3001     04E8  0830               	movf	(_sprintf$1154+3)^(0+128),w
  3002     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  3003     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  3004     04EB  00AF               	movwf	___flmul@a+3
  3005     04EC  1683               	bsf	3,5	;RP0=1, select bank1
  3006     04ED  1303               	bcf	3,6	;RP1=0, select bank1
  3007     04EE  082F               	movf	(_sprintf$1154+2)^(0+128),w
  3008     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3009     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  3010     04F1  00AE               	movwf	___flmul@a+2
  3011     04F2  1683               	bsf	3,5	;RP0=1, select bank1
  3012     04F3  1303               	bcf	3,6	;RP1=0, select bank1
  3013     04F4  082E               	movf	(_sprintf$1154+1)^(0+128),w
  3014     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3015     04F6  1303               	bcf	3,6	;RP1=0, select bank0
  3016     04F7  00AD               	movwf	___flmul@a+1
  3017     04F8  1683               	bsf	3,5	;RP0=1, select bank1
  3018     04F9  1303               	bcf	3,6	;RP1=0, select bank1
  3019     04FA  082D               	movf	_sprintf$1154^(0+128),w
  3020     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3021     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3022     04FD  00AC               	movwf	___flmul@a
  3023     04FE  1683               	bsf	3,5	;RP0=1, select bank1
  3024     04FF  1303               	bcf	3,6	;RP1=0, select bank1
  3025     0500  0844               	movf	(sprintf@fval+3)^(0+128),w
  3026     0501  1283               	bcf	3,5	;RP0=0, select bank0
  3027     0502  1303               	bcf	3,6	;RP1=0, select bank0
  3028     0503  00AB               	movwf	___flmul@b+3
  3029     0504  1683               	bsf	3,5	;RP0=1, select bank1
  3030     0505  1303               	bcf	3,6	;RP1=0, select bank1
  3031     0506  0843               	movf	(sprintf@fval+2)^(0+128),w
  3032     0507  1283               	bcf	3,5	;RP0=0, select bank0
  3033     0508  1303               	bcf	3,6	;RP1=0, select bank0
  3034     0509  00AA               	movwf	___flmul@b+2
  3035     050A  1683               	bsf	3,5	;RP0=1, select bank1
  3036     050B  1303               	bcf	3,6	;RP1=0, select bank1
  3037     050C  0842               	movf	(sprintf@fval+1)^(0+128),w
  3038     050D  1283               	bcf	3,5	;RP0=0, select bank0
  3039     050E  1303               	bcf	3,6	;RP1=0, select bank0
  3040     050F  00A9               	movwf	___flmul@b+1
  3041     0510  1683               	bsf	3,5	;RP0=1, select bank1
  3042     0511  1303               	bcf	3,6	;RP1=0, select bank1
  3043     0512  0841               	movf	sprintf@fval^(0+128),w
  3044     0513  1283               	bcf	3,5	;RP0=0, select bank0
  3045     0514  1303               	bcf	3,6	;RP1=0, select bank0
  3046     0515  00A8               	movwf	___flmul@b
  3047     0516  120A  158A  2158  120A  118A  	fcall	___flmul
  3048     051B  1283               	bcf	3,5	;RP0=0, select bank0
  3049     051C  1303               	bcf	3,6	;RP1=0, select bank0
  3050     051D  082B               	movf	?___flmul+3,w
  3051     051E  00D8               	movwf	___fltol@f1+3
  3052     051F  082A               	movf	?___flmul+2,w
  3053     0520  00D7               	movwf	___fltol@f1+2
  3054     0521  0829               	movf	?___flmul+1,w
  3055     0522  00D6               	movwf	___fltol@f1+1
  3056     0523  0828               	movf	?___flmul,w
  3057     0524  00D5               	movwf	___fltol@f1
  3058     0525  160A  158A  26E4  120A  118A  	fcall	___fltol
  3059     052A  1283               	bcf	3,5	;RP0=0, select bank0
  3060     052B  1303               	bcf	3,6	;RP1=0, select bank0
  3061     052C  0858               	movf	?___fltol+3,w
  3062     052D  1683               	bsf	3,5	;RP0=1, select bank1
  3063     052E  1303               	bcf	3,6	;RP1=0, select bank1
  3064     052F  00B7               	movwf	(sprintf@val+3)^(0+128)
  3065     0530  1283               	bcf	3,5	;RP0=0, select bank0
  3066     0531  1303               	bcf	3,6	;RP1=0, select bank0
  3067     0532  0857               	movf	?___fltol+2,w
  3068     0533  1683               	bsf	3,5	;RP0=1, select bank1
  3069     0534  1303               	bcf	3,6	;RP1=0, select bank1
  3070     0535  00B6               	movwf	(sprintf@val+2)^(0+128)
  3071     0536  1283               	bcf	3,5	;RP0=0, select bank0
  3072     0537  1303               	bcf	3,6	;RP1=0, select bank0
  3073     0538  0856               	movf	?___fltol+1,w
  3074     0539  1683               	bsf	3,5	;RP0=1, select bank1
  3075     053A  1303               	bcf	3,6	;RP1=0, select bank1
  3076     053B  00B5               	movwf	(sprintf@val+1)^(0+128)
  3077     053C  1283               	bcf	3,5	;RP0=0, select bank0
  3078     053D  1303               	bcf	3,6	;RP1=0, select bank0
  3079     053E  0855               	movf	?___fltol,w
  3080     053F  1683               	bsf	3,5	;RP0=1, select bank1
  3081     0540  1303               	bcf	3,6	;RP1=0, select bank1
  3082     0541  00B4               	movwf	sprintf@val^(0+128)
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3085     0542  2DE2               	goto	l3614
  3086     0543                     l3606:
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3089     0543  0845               	movf	sprintf@c^(0+128),w
  3090     0544  00A8               	movwf	??_sprintf^(0+128)
  3091     0545  3001               	movlw	1
  3092     0546                     u5935:
  3093     0546  1003               	clrc
  3094     0547  0DA8               	rlf	??_sprintf^(0+128),f
  3095     0548  3EFF               	addlw	-1
  3096     0549  1D03               	skipz
  3097     054A  2D46               	goto	u5935
  3098     054B  1003               	clrc
  3099     054C  0D28               	rlf	??_sprintf^(0+128),w
  3100     054D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3101     054E  0084               	movwf	4
  3102     054F  160A  118A  200A  120A  118A  	fcall	stringdir
  3103     0554  00F2               	movwf	___lldiv@divisor
  3104     0555  160A  118A  200A  120A  118A  	fcall	stringdir
  3105     055A  00F3               	movwf	___lldiv@divisor+1
  3106     055B  160A  118A  200A  120A  118A  	fcall	stringdir
  3107     0560  00F4               	movwf	___lldiv@divisor+2
  3108     0561  160A  118A  200A  120A  118A  	fcall	stringdir
  3109     0566  00F5               	movwf	___lldiv@divisor+3
  3110     0567  0837               	movf	(sprintf@val+3)^(0+128),w
  3111     0568  00F9               	movwf	___lldiv@dividend+3
  3112     0569  0836               	movf	(sprintf@val+2)^(0+128),w
  3113     056A  00F8               	movwf	___lldiv@dividend+2
  3114     056B  0835               	movf	(sprintf@val+1)^(0+128),w
  3115     056C  00F7               	movwf	___lldiv@dividend+1
  3116     056D  0834               	movf	sprintf@val^(0+128),w
  3117     056E  00F6               	movwf	___lldiv@dividend
  3118     056F  160A  158A  2613  120A  118A  	fcall	___lldiv
  3119     0574  0875               	movf	?___lldiv+3,w
  3120     0575  1683               	bsf	3,5	;RP0=1, select bank1
  3121     0576  1303               	bcf	3,6	;RP1=0, select bank1
  3122     0577  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3123     0578  0874               	movf	?___lldiv+2,w
  3124     0579  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3125     057A  0873               	movf	?___lldiv+1,w
  3126     057B  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3127     057C  0872               	movf	?___lldiv,w
  3128     057D  00BA               	movwf	sprintf@tmpval^(0+128)
  3129     057E                     l3608:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3132     057E  3000               	movlw	0
  3133     057F  00F5               	movwf	___llmod@divisor+3
  3134     0580  3000               	movlw	0
  3135     0581  00F4               	movwf	___llmod@divisor+2
  3136     0582  3000               	movlw	0
  3137     0583  00F3               	movwf	___llmod@divisor+1
  3138     0584  300A               	movlw	10
  3139     0585  00F2               	movwf	___llmod@divisor
  3140     0586  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3141     0587  00F9               	movwf	___llmod@dividend+3
  3142     0588  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3143     0589  00F8               	movwf	___llmod@dividend+2
  3144     058A  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3145     058B  00F7               	movwf	___llmod@dividend+1
  3146     058C  083A               	movf	sprintf@tmpval^(0+128),w
  3147     058D  00F6               	movwf	___llmod@dividend
  3148     058E  160A  158A  2509  120A  118A  	fcall	___llmod
  3149     0593  0875               	movf	?___llmod+3,w
  3150     0594  1683               	bsf	3,5	;RP0=1, select bank1
  3151     0595  1303               	bcf	3,6	;RP1=0, select bank1
  3152     0596  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3153     0597  0874               	movf	?___llmod+2,w
  3154     0598  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3155     0599  0873               	movf	?___llmod+1,w
  3156     059A  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3157     059B  0872               	movf	?___llmod,w
  3158     059C  00BA               	movwf	sprintf@tmpval^(0+128)
  3159     059D                     l3610:
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3162     059D  083E               	movf	sprintf@sp^(0+128),w
  3163     059E  0084               	movwf	4
  3164     059F  083A               	movf	sprintf@tmpval^(0+128),w
  3165     05A0  3E30               	addlw	48
  3166     05A1  1783               	bsf	3,7	;select IRP bank2
  3167     05A2  0080               	movwf	0
  3168     05A3  3001               	movlw	1
  3169     05A4  00A8               	movwf	??_sprintf^(0+128)
  3170     05A5  0828               	movf	??_sprintf^(0+128),w
  3171     05A6  07BE               	addwf	sprintf@sp^(0+128),f
  3172     05A7                     l3612:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3175     05A7  0845               	movf	sprintf@c^(0+128),w
  3176     05A8  00A8               	movwf	??_sprintf^(0+128)
  3177     05A9  3001               	movlw	1
  3178     05AA                     u5945:
  3179     05AA  1003               	clrc
  3180     05AB  0DA8               	rlf	??_sprintf^(0+128),f
  3181     05AC  3EFF               	addlw	-1
  3182     05AD  1D03               	skipz
  3183     05AE  2DAA               	goto	u5945
  3184     05AF  1003               	clrc
  3185     05B0  0D28               	rlf	??_sprintf^(0+128),w
  3186     05B1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3187     05B2  0084               	movwf	4
  3188     05B3  160A  118A  200A  120A  118A  	fcall	stringdir
  3189     05B8  00F2               	movwf	___llmod@divisor
  3190     05B9  160A  118A  200A  120A  118A  	fcall	stringdir
  3191     05BE  00F3               	movwf	___llmod@divisor+1
  3192     05BF  160A  118A  200A  120A  118A  	fcall	stringdir
  3193     05C4  00F4               	movwf	___llmod@divisor+2
  3194     05C5  160A  118A  200A  120A  118A  	fcall	stringdir
  3195     05CA  00F5               	movwf	___llmod@divisor+3
  3196     05CB  0837               	movf	(sprintf@val+3)^(0+128),w
  3197     05CC  00F9               	movwf	___llmod@dividend+3
  3198     05CD  0836               	movf	(sprintf@val+2)^(0+128),w
  3199     05CE  00F8               	movwf	___llmod@dividend+2
  3200     05CF  0835               	movf	(sprintf@val+1)^(0+128),w
  3201     05D0  00F7               	movwf	___llmod@dividend+1
  3202     05D1  0834               	movf	sprintf@val^(0+128),w
  3203     05D2  00F6               	movwf	___llmod@dividend
  3204     05D3  160A  158A  2509  120A  118A  	fcall	___llmod
  3205     05D8  0875               	movf	?___llmod+3,w
  3206     05D9  1683               	bsf	3,5	;RP0=1, select bank1
  3207     05DA  1303               	bcf	3,6	;RP1=0, select bank1
  3208     05DB  00B7               	movwf	(sprintf@val+3)^(0+128)
  3209     05DC  0874               	movf	?___llmod+2,w
  3210     05DD  00B6               	movwf	(sprintf@val+2)^(0+128)
  3211     05DE  0873               	movf	?___llmod+1,w
  3212     05DF  00B5               	movwf	(sprintf@val+1)^(0+128)
  3213     05E0  0872               	movf	?___llmod,w
  3214     05E1  00B4               	movwf	sprintf@val^(0+128)
  3215     05E2                     l3614:
  3216                           
  3217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3218     05E2  3001               	movlw	1
  3219     05E3  02C5               	subwf	sprintf@c^(0+128),f
  3220     05E4  0A45               	incf	sprintf@c^(0+128),w
  3221     05E5  1D03               	btfss	3,2
  3222     05E6  2DE8               	goto	u5951
  3223     05E7  2DE9               	goto	u5950
  3224     05E8                     u5951:
  3225     05E8  2D43               	goto	l3606
  3226     05E9                     u5950:
  3227     05E9  2DF9               	goto	l3622
  3228     05EA                     l3616:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3231     05EA  083E               	movf	sprintf@sp^(0+128),w
  3232     05EB  0084               	movwf	4
  3233     05EC  3030               	movlw	48
  3234     05ED  1783               	bsf	3,7	;select IRP bank2
  3235     05EE  0080               	movwf	0
  3236     05EF                     l3618:
  3237     05EF  3001               	movlw	1
  3238     05F0  00A8               	movwf	??_sprintf^(0+128)
  3239     05F1  0828               	movf	??_sprintf^(0+128),w
  3240     05F2  07BE               	addwf	sprintf@sp^(0+128),f
  3241     05F3                     l3620:
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3244     05F3  30FF               	movlw	255
  3245     05F4  07BF               	addwf	sprintf@prec^(0+128),f
  3246     05F5  1803               	skipnc
  3247     05F6  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3248     05F7  30FF               	movlw	255
  3249     05F8  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3250     05F9                     l3622:
  3251                           
  3252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3253     05F9  083F               	movf	sprintf@prec^(0+128),w
  3254     05FA  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3255     05FB  1D03               	btfss	3,2
  3256     05FC  2DFE               	goto	u5961
  3257     05FD  2DFF               	goto	u5960
  3258     05FE                     u5961:
  3259     05FE  2DEA               	goto	l3616
  3260     05FF                     u5960:
  3261     05FF  2E43               	goto	l3642
  3262     0600                     l3624:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3265     0600  083F               	movf	sprintf@prec^(0+128),w
  3266     0601  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3267     0602  1D03               	btfss	3,2
  3268     0603  2E05               	goto	u5971
  3269     0604  2E06               	goto	u5970
  3270     0605                     u5971:
  3271     0605  2E14               	goto	l333
  3272     0606                     u5970:
  3273     0606                     l3626:
  3274     0606  0837               	movf	(sprintf@val+3)^(0+128),w
  3275     0607  0436               	iorwf	(sprintf@val+2)^(0+128),w
  3276     0608  0435               	iorwf	(sprintf@val+1)^(0+128),w
  3277     0609  0434               	iorwf	sprintf@val^(0+128),w
  3278     060A  1D03               	skipz
  3279     060B  2E0D               	goto	u5981
  3280     060C  2E0E               	goto	u5980
  3281     060D                     u5981:
  3282     060D  2E14               	goto	l333
  3283     060E                     u5980:
  3284     060E                     l3628:
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3287     060E  3001               	movlw	1
  3288     060F  07BF               	addwf	sprintf@prec^(0+128),f
  3289     0610  1803               	skipnc
  3290     0611  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3291     0612  3000               	movlw	0
  3292     0613  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3293     0614                     l333:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3296     0614  0840               	movf	(sprintf@prec+1)^(0+128),w
  3297     0615  3A80               	xorlw	128
  3298     0616  3C80               	sublw	128
  3299     0617  1D03               	skipz
  3300     0618  2E1B               	goto	u5995
  3301     0619  083F               	movf	sprintf@prec^(0+128),w
  3302     061A  0245               	subwf	sprintf@c^(0+128),w
  3303     061B                     u5995:
  3304     061B  1803               	skipnc
  3305     061C  2E1E               	goto	u5991
  3306     061D  2E1F               	goto	u5990
  3307     061E                     u5991:
  3308     061E  2E20               	goto	l3632
  3309     061F                     u5990:
  3310     061F                     l3630:
  3311     061F  2E2F               	goto	l3636
  3312     0620                     l3632:
  3313     0620  1683               	bsf	3,5	;RP0=1, select bank1
  3314     0621  1303               	bcf	3,6	;RP1=0, select bank1
  3315     0622  0840               	movf	(sprintf@prec+1)^(0+128),w
  3316     0623  3A80               	xorlw	128
  3317     0624  00A8               	movwf	??_sprintf^(0+128)
  3318     0625  3080               	movlw	128
  3319     0626  0228               	subwf	??_sprintf^(0+128),w
  3320     0627  1D03               	skipz
  3321     0628  2E2B               	goto	u6005
  3322     0629  0845               	movf	sprintf@c^(0+128),w
  3323     062A  023F               	subwf	sprintf@prec^(0+128),w
  3324     062B                     u6005:
  3325     062B  1803               	skipnc
  3326     062C  2E2E               	goto	u6001
  3327     062D  2E2F               	goto	u6000
  3328     062E                     u6001:
  3329     062E  2E2F               	goto	l3636
  3330     062F                     u6000:
  3331     062F                     l3634:
  3332     062F                     l3636:
  3333                           
  3334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3335     062F  3003               	movlw	3
  3336     0630  1683               	bsf	3,5	;RP0=1, select bank1
  3337     0631  1303               	bcf	3,6	;RP1=0, select bank1
  3338     0632  0532               	andwf	sprintf@flag^(0+128),w
  3339     0633  00A8               	movwf	??_sprintf^(0+128)
  3340     0634  3000               	movlw	0
  3341     0635  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3342     0636  00A9               	movwf	(??_sprintf+1)^(0+128)
  3343     0637  0828               	movf	??_sprintf^(0+128),w
  3344     0638  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3345     0639  1903               	btfsc	3,2
  3346     063A  2E3C               	goto	u6011
  3347     063B  2E3D               	goto	u6010
  3348     063C                     u6011:
  3349     063C  2E43               	goto	l3642
  3350     063D                     u6010:
  3351     063D                     l3638:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3354     063D  083E               	movf	sprintf@sp^(0+128),w
  3355     063E  0084               	movwf	4
  3356     063F  302D               	movlw	45
  3357     0640  1783               	bsf	3,7	;select IRP bank2
  3358     0641  0080               	movwf	0
  3359     0642  2824               	goto	l3454
  3360     0643                     l3642:
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3363     0643  3001               	movlw	1
  3364     0644  1283               	bcf	3,5	;RP0=0, select bank0
  3365     0645  1303               	bcf	3,6	;RP1=0, select bank0
  3366     0646  07EA               	addwf	sprintf@f,f
  3367     0647  30FF               	movlw	-1
  3368     0648  076A               	addwf	sprintf@f,w
  3369     0649  0084               	movwf	4
  3370     064A  160A  118A  200A  120A  118A  	fcall	stringdir
  3371     064F  1683               	bsf	3,5	;RP0=1, select bank1
  3372     0650  1303               	bcf	3,6	;RP1=0, select bank1
  3373     0651  00C5               	movwf	sprintf@c^(0+128)
  3374     0652  0845               	movf	sprintf@c^(0+128),w
  3375     0653  1D03               	btfss	3,2
  3376     0654  2E56               	goto	u6021
  3377     0655  2E57               	goto	u6020
  3378     0656                     u6021:
  3379     0656  2819               	goto	l3450
  3380     0657                     u6020:
  3381     0657                     l3644:
  3382                           
  3383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3384     0657  083E               	movf	sprintf@sp^(0+128),w
  3385     0658  0084               	movwf	4
  3386     0659  1783               	bsf	3,7	;select IRP bank2
  3387     065A  0180               	clrf	0
  3388     065B                     l339:
  3389     065B  0008               	return
  3390     065C                     __end_of_sprintf:
  3391                           
  3392                           	psect	text2
  3393     0C9D                     __ptext2:	
  3394 ;; *************** function _scale *****************
  3395 ;; Defined at:
  3396 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  scl             1    wreg     char 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  scl             1   52[BANK0 ] char 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  4   34[BANK0 ] char 
  3403 ;; Registers used:
  3404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3410 ;;      Params:         0       4       0       0       0
  3411 ;;      Locals:         0       5       0       0       0
  3412 ;;      Temps:          0      10       0       0       0
  3413 ;;      Totals:         0      19       0       0       0
  3414 ;;Total ram usage:       19 bytes
  3415 ;; Hardware stack levels used: 1
  3416 ;; Hardware stack levels required when called: 3
  3417 ;; This function calls:
  3418 ;;		___awdiv
  3419 ;;		___awmod
  3420 ;;		___flmul
  3421 ;; This function is called by:
  3422 ;;		_sprintf
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426     0C9D                     _scale:	
  3427                           ;psect for function _scale
  3428                           
  3429                           
  3430                           ;incstack = 0
  3431                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3432                           ;scale@scl stored from wreg
  3433     0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3434     0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3435     0C9F  00D4               	movwf	scale@scl
  3436     0CA0                     l2892:
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3439     0CA0  1FD4               	btfss	scale@scl,7
  3440     0CA1  2CA3               	goto	u4341
  3441     0CA2  2CA4               	goto	u4340
  3442     0CA3                     u4341:
  3443     0CA3  2E53               	goto	l2914
  3444     0CA4                     u4340:
  3445     0CA4                     l2894:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3448     0CA4  09D4               	comf	scale@scl,f
  3449     0CA5  0AD4               	incf	scale@scl,f
  3450     0CA6                     l2896:
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3453     0CA6  0854               	movf	scale@scl,w
  3454     0CA7  3A80               	xorlw	128
  3455     0CA8  3E12               	addlw	-238
  3456     0CA9  1C03               	skipc
  3457     0CAA  2CAC               	goto	u4351
  3458     0CAB  2CAD               	goto	u4350
  3459     0CAC                     u4351:
  3460     0CAC  2D97               	goto	l2904
  3461     0CAD                     u4350:
  3462     0CAD                     l2898:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3465     0CAD  300A               	movlw	10
  3466     0CAE  00A0               	movwf	___awdiv@divisor
  3467     0CAF  3000               	movlw	0
  3468     0CB0  00A1               	movwf	___awdiv@divisor+1
  3469     0CB1  0854               	movf	scale@scl,w
  3470     0CB2  00F4               	movwf	___awmod@dividend
  3471     0CB3  01F5               	clrf	___awmod@dividend+1
  3472     0CB4  1BF4               	btfsc	___awmod@dividend,7
  3473     0CB5  03F5               	decf	___awmod@dividend+1,f
  3474     0CB6  3064               	movlw	100
  3475     0CB7  00F2               	movwf	___awmod@divisor
  3476     0CB8  3000               	movlw	0
  3477     0CB9  00F3               	movwf	___awmod@divisor+1
  3478     0CBA  160A  158A  255D  120A  158A  	fcall	___awmod
  3479     0CBF  0873               	movf	?___awmod+1,w
  3480     0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3481     0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3482     0CC2  00A3               	movwf	___awdiv@dividend+1
  3483     0CC3  0872               	movf	?___awmod,w
  3484     0CC4  00A2               	movwf	___awdiv@dividend
  3485     0CC5  160A  158A  267B  120A  158A  	fcall	___awdiv
  3486     0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3487     0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3488     0CCC  0820               	movf	?___awdiv,w
  3489     0CCD  00C6               	movwf	??_scale
  3490     0CCE  3001               	movlw	1
  3491     0CCF                     u4365:
  3492     0CCF  1003               	clrc
  3493     0CD0  0DC6               	rlf	??_scale,f
  3494     0CD1  3EFF               	addlw	-1
  3495     0CD2  1D03               	skipz
  3496     0CD3  2CCF               	goto	u4365
  3497     0CD4  1003               	clrc
  3498     0CD5  0D46               	rlf	??_scale,w
  3499     0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3500     0CD7  0084               	movwf	4
  3501     0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  3502     0CDD  00C7               	movwf	??_scale+1
  3503     0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  3504     0CE3  00C8               	movwf	??_scale+2
  3505     0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  3506     0CE9  00C9               	movwf	??_scale+3
  3507     0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  3508     0CEF  00CA               	movwf	??_scale+4
  3509     0CF0  084A               	movf	??_scale+4,w
  3510     0CF1  00AB               	movwf	___flmul@b+3
  3511     0CF2  0849               	movf	??_scale+3,w
  3512     0CF3  00AA               	movwf	___flmul@b+2
  3513     0CF4  0848               	movf	??_scale+2,w
  3514     0CF5  00A9               	movwf	___flmul@b+1
  3515     0CF6  0847               	movf	??_scale+1,w
  3516     0CF7  00A8               	movwf	___flmul@b
  3517     0CF8  3064               	movlw	100
  3518     0CF9  00A0               	movwf	___awdiv@divisor
  3519     0CFA  3000               	movlw	0
  3520     0CFB  00A1               	movwf	___awdiv@divisor+1
  3521     0CFC  0854               	movf	scale@scl,w
  3522     0CFD  00A2               	movwf	___awdiv@dividend
  3523     0CFE  01A3               	clrf	___awdiv@dividend+1
  3524     0CFF  1BA2               	btfsc	___awdiv@dividend,7
  3525     0D00  03A3               	decf	___awdiv@dividend+1,f
  3526     0D01  160A  158A  267B  120A  158A  	fcall	___awdiv
  3527     0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3528     0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3529     0D08  0820               	movf	?___awdiv,w
  3530     0D09  00CB               	movwf	??_scale+5
  3531     0D0A  3001               	movlw	1
  3532     0D0B                     u4375:
  3533     0D0B  1003               	clrc
  3534     0D0C  0DCB               	rlf	??_scale+5,f
  3535     0D0D  3EFF               	addlw	-1
  3536     0D0E  1D03               	skipz
  3537     0D0F  2D0B               	goto	u4375
  3538     0D10  1003               	clrc
  3539     0D11  0D4B               	rlf	??_scale+5,w
  3540     0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3541     0D13  0084               	movwf	4
  3542     0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  3543     0D19  00CC               	movwf	??_scale+6
  3544     0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3545     0D1F  00CD               	movwf	??_scale+7
  3546     0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  3547     0D25  00CE               	movwf	??_scale+8
  3548     0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  3549     0D2B  00CF               	movwf	??_scale+9
  3550     0D2C  084F               	movf	??_scale+9,w
  3551     0D2D  00AF               	movwf	___flmul@a+3
  3552     0D2E  084E               	movf	??_scale+8,w
  3553     0D2F  00AE               	movwf	___flmul@a+2
  3554     0D30  084D               	movf	??_scale+7,w
  3555     0D31  00AD               	movwf	___flmul@a+1
  3556     0D32  084C               	movf	??_scale+6,w
  3557     0D33  00AC               	movwf	___flmul@a
  3558     0D34  120A  158A  2158  120A  158A  	fcall	___flmul
  3559     0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3560     0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3561     0D3B  082B               	movf	?___flmul+3,w
  3562     0D3C  00D3               	movwf	_scale$1153+3
  3563     0D3D  082A               	movf	?___flmul+2,w
  3564     0D3E  00D2               	movwf	_scale$1153+2
  3565     0D3F  0829               	movf	?___flmul+1,w
  3566     0D40  00D1               	movwf	_scale$1153+1
  3567     0D41  0828               	movf	?___flmul,w
  3568     0D42  00D0               	movwf	_scale$1153
  3569                           
  3570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3571     0D43  300A               	movlw	10
  3572     0D44  00F2               	movwf	___awmod@divisor
  3573     0D45  3000               	movlw	0
  3574     0D46  00F3               	movwf	___awmod@divisor+1
  3575     0D47  0854               	movf	scale@scl,w
  3576     0D48  00F4               	movwf	___awmod@dividend
  3577     0D49  01F5               	clrf	___awmod@dividend+1
  3578     0D4A  1BF4               	btfsc	___awmod@dividend,7
  3579     0D4B  03F5               	decf	___awmod@dividend+1,f
  3580     0D4C  160A  158A  255D  120A  158A  	fcall	___awmod
  3581     0D51  0872               	movf	?___awmod,w
  3582     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3583     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3584     0D54  00C6               	movwf	??_scale
  3585     0D55  3001               	movlw	1
  3586     0D56                     u4385:
  3587     0D56  1003               	clrc
  3588     0D57  0DC6               	rlf	??_scale,f
  3589     0D58  3EFF               	addlw	-1
  3590     0D59  1D03               	skipz
  3591     0D5A  2D56               	goto	u4385
  3592     0D5B  1003               	clrc
  3593     0D5C  0D46               	rlf	??_scale,w
  3594     0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3595     0D5E  0084               	movwf	4
  3596     0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  3597     0D64  00C7               	movwf	??_scale+1
  3598     0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  3599     0D6A  00C8               	movwf	??_scale+2
  3600     0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3601     0D70  00C9               	movwf	??_scale+3
  3602     0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  3603     0D76  00CA               	movwf	??_scale+4
  3604     0D77  084A               	movf	??_scale+4,w
  3605     0D78  00AB               	movwf	___flmul@b+3
  3606     0D79  0849               	movf	??_scale+3,w
  3607     0D7A  00AA               	movwf	___flmul@b+2
  3608     0D7B  0848               	movf	??_scale+2,w
  3609     0D7C  00A9               	movwf	___flmul@b+1
  3610     0D7D  0847               	movf	??_scale+1,w
  3611     0D7E  00A8               	movwf	___flmul@b
  3612     0D7F  0853               	movf	_scale$1153+3,w
  3613     0D80  00AF               	movwf	___flmul@a+3
  3614     0D81  0852               	movf	_scale$1153+2,w
  3615     0D82  00AE               	movwf	___flmul@a+2
  3616     0D83  0851               	movf	_scale$1153+1,w
  3617     0D84  00AD               	movwf	___flmul@a+1
  3618     0D85  0850               	movf	_scale$1153,w
  3619     0D86  00AC               	movwf	___flmul@a
  3620     0D87  120A  158A  2158  120A  158A  	fcall	___flmul
  3621     0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3622     0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3623     0D8E  082B               	movf	?___flmul+3,w
  3624     0D8F  00C5               	movwf	?_scale+3
  3625     0D90  082A               	movf	?___flmul+2,w
  3626     0D91  00C4               	movwf	?_scale+2
  3627     0D92  0829               	movf	?___flmul+1,w
  3628     0D93  00C3               	movwf	?_scale+1
  3629     0D94  0828               	movf	?___flmul,w
  3630     0D95  00C2               	movwf	?_scale
  3631     0D96  2FFF               	goto	l273
  3632     0D97                     l2904:
  3633     0D97  0854               	movf	scale@scl,w
  3634     0D98  3A80               	xorlw	128
  3635     0D99  3E75               	addlw	-139
  3636     0D9A  1C03               	skipc
  3637     0D9B  2D9D               	goto	u4391
  3638     0D9C  2D9E               	goto	u4390
  3639     0D9D                     u4391:
  3640     0D9D  2E26               	goto	l2910
  3641     0D9E                     u4390:
  3642     0D9E                     l2906:
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3645     0D9E  300A               	movlw	10
  3646     0D9F  00F2               	movwf	___awmod@divisor
  3647     0DA0  3000               	movlw	0
  3648     0DA1  00F3               	movwf	___awmod@divisor+1
  3649     0DA2  0854               	movf	scale@scl,w
  3650     0DA3  00F4               	movwf	___awmod@dividend
  3651     0DA4  01F5               	clrf	___awmod@dividend+1
  3652     0DA5  1BF4               	btfsc	___awmod@dividend,7
  3653     0DA6  03F5               	decf	___awmod@dividend+1,f
  3654     0DA7  160A  158A  255D  120A  158A  	fcall	___awmod
  3655     0DAC  0872               	movf	?___awmod,w
  3656     0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3657     0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3658     0DAF  00C6               	movwf	??_scale
  3659     0DB0  3001               	movlw	1
  3660     0DB1                     u4405:
  3661     0DB1  1003               	clrc
  3662     0DB2  0DC6               	rlf	??_scale,f
  3663     0DB3  3EFF               	addlw	-1
  3664     0DB4  1D03               	skipz
  3665     0DB5  2DB1               	goto	u4405
  3666     0DB6  1003               	clrc
  3667     0DB7  0D46               	rlf	??_scale,w
  3668     0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3669     0DB9  0084               	movwf	4
  3670     0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  3671     0DBF  00C7               	movwf	??_scale+1
  3672     0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  3673     0DC5  00C8               	movwf	??_scale+2
  3674     0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  3675     0DCB  00C9               	movwf	??_scale+3
  3676     0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  3677     0DD1  00CA               	movwf	??_scale+4
  3678     0DD2  084A               	movf	??_scale+4,w
  3679     0DD3  00AB               	movwf	___flmul@b+3
  3680     0DD4  0849               	movf	??_scale+3,w
  3681     0DD5  00AA               	movwf	___flmul@b+2
  3682     0DD6  0848               	movf	??_scale+2,w
  3683     0DD7  00A9               	movwf	___flmul@b+1
  3684     0DD8  0847               	movf	??_scale+1,w
  3685     0DD9  00A8               	movwf	___flmul@b
  3686     0DDA  300A               	movlw	10
  3687     0DDB  00A0               	movwf	___awdiv@divisor
  3688     0DDC  3000               	movlw	0
  3689     0DDD  00A1               	movwf	___awdiv@divisor+1
  3690     0DDE  0854               	movf	scale@scl,w
  3691     0DDF  00A2               	movwf	___awdiv@dividend
  3692     0DE0  01A3               	clrf	___awdiv@dividend+1
  3693     0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3694     0DE2  03A3               	decf	___awdiv@dividend+1,f
  3695     0DE3  160A  158A  267B  120A  158A  	fcall	___awdiv
  3696     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3697     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3698     0DEA  0820               	movf	?___awdiv,w
  3699     0DEB  00CB               	movwf	??_scale+5
  3700     0DEC  3001               	movlw	1
  3701     0DED                     u4415:
  3702     0DED  1003               	clrc
  3703     0DEE  0DCB               	rlf	??_scale+5,f
  3704     0DEF  3EFF               	addlw	-1
  3705     0DF0  1D03               	skipz
  3706     0DF1  2DED               	goto	u4415
  3707     0DF2  1003               	clrc
  3708     0DF3  0D4B               	rlf	??_scale+5,w
  3709     0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3710     0DF5  0084               	movwf	4
  3711     0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  3712     0DFB  00CC               	movwf	??_scale+6
  3713     0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  3714     0E01  00CD               	movwf	??_scale+7
  3715     0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  3716     0E07  00CE               	movwf	??_scale+8
  3717     0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  3718     0E0D  00CF               	movwf	??_scale+9
  3719     0E0E  084F               	movf	??_scale+9,w
  3720     0E0F  00AF               	movwf	___flmul@a+3
  3721     0E10  084E               	movf	??_scale+8,w
  3722     0E11  00AE               	movwf	___flmul@a+2
  3723     0E12  084D               	movf	??_scale+7,w
  3724     0E13  00AD               	movwf	___flmul@a+1
  3725     0E14  084C               	movf	??_scale+6,w
  3726     0E15  00AC               	movwf	___flmul@a
  3727     0E16  120A  158A  2158  120A  158A  	fcall	___flmul
  3728     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3729     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3730     0E1D  082B               	movf	?___flmul+3,w
  3731     0E1E  00C5               	movwf	?_scale+3
  3732     0E1F  082A               	movf	?___flmul+2,w
  3733     0E20  00C4               	movwf	?_scale+2
  3734     0E21  0829               	movf	?___flmul+1,w
  3735     0E22  00C3               	movwf	?_scale+1
  3736     0E23  0828               	movf	?___flmul,w
  3737     0E24  00C2               	movwf	?_scale
  3738     0E25  2FFF               	goto	l273
  3739     0E26                     l2910:
  3740                           
  3741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3742     0E26  0854               	movf	scale@scl,w
  3743     0E27  00C6               	movwf	??_scale
  3744     0E28  3001               	movlw	1
  3745     0E29                     u4425:
  3746     0E29  1003               	clrc
  3747     0E2A  0DC6               	rlf	??_scale,f
  3748     0E2B  3EFF               	addlw	-1
  3749     0E2C  1D03               	skipz
  3750     0E2D  2E29               	goto	u4425
  3751     0E2E  1003               	clrc
  3752     0E2F  0D46               	rlf	??_scale,w
  3753     0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3754     0E31  0084               	movwf	4
  3755     0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  3756     0E37  00C7               	movwf	??_scale+1
  3757     0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  3758     0E3D  00C8               	movwf	??_scale+2
  3759     0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  3760     0E43  00C9               	movwf	??_scale+3
  3761     0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  3762     0E49  00CA               	movwf	??_scale+4
  3763     0E4A  084A               	movf	??_scale+4,w
  3764     0E4B  00C5               	movwf	?_scale+3
  3765     0E4C  0849               	movf	??_scale+3,w
  3766     0E4D  00C4               	movwf	?_scale+2
  3767     0E4E  0848               	movf	??_scale+2,w
  3768     0E4F  00C3               	movwf	?_scale+1
  3769     0E50  0847               	movf	??_scale+1,w
  3770     0E51  00C2               	movwf	?_scale
  3771     0E52  2FFF               	goto	l273
  3772     0E53                     l2914:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3775     0E53  0854               	movf	scale@scl,w
  3776     0E54  3A80               	xorlw	128
  3777     0E55  3E12               	addlw	-238
  3778     0E56  1C03               	skipc
  3779     0E57  2E59               	goto	u4431
  3780     0E58  2E5A               	goto	u4430
  3781     0E59                     u4431:
  3782     0E59  2F44               	goto	l2922
  3783     0E5A                     u4430:
  3784     0E5A                     l2916:
  3785                           
  3786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3787     0E5A  300A               	movlw	10
  3788     0E5B  00A0               	movwf	___awdiv@divisor
  3789     0E5C  3000               	movlw	0
  3790     0E5D  00A1               	movwf	___awdiv@divisor+1
  3791     0E5E  0854               	movf	scale@scl,w
  3792     0E5F  00F4               	movwf	___awmod@dividend
  3793     0E60  01F5               	clrf	___awmod@dividend+1
  3794     0E61  1BF4               	btfsc	___awmod@dividend,7
  3795     0E62  03F5               	decf	___awmod@dividend+1,f
  3796     0E63  3064               	movlw	100
  3797     0E64  00F2               	movwf	___awmod@divisor
  3798     0E65  3000               	movlw	0
  3799     0E66  00F3               	movwf	___awmod@divisor+1
  3800     0E67  160A  158A  255D  120A  158A  	fcall	___awmod
  3801     0E6C  0873               	movf	?___awmod+1,w
  3802     0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3803     0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3804     0E6F  00A3               	movwf	___awdiv@dividend+1
  3805     0E70  0872               	movf	?___awmod,w
  3806     0E71  00A2               	movwf	___awdiv@dividend
  3807     0E72  160A  158A  267B  120A  158A  	fcall	___awdiv
  3808     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3809     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3810     0E79  0820               	movf	?___awdiv,w
  3811     0E7A  00C6               	movwf	??_scale
  3812     0E7B  3001               	movlw	1
  3813     0E7C                     u4445:
  3814     0E7C  1003               	clrc
  3815     0E7D  0DC6               	rlf	??_scale,f
  3816     0E7E  3EFF               	addlw	-1
  3817     0E7F  1D03               	skipz
  3818     0E80  2E7C               	goto	u4445
  3819     0E81  1003               	clrc
  3820     0E82  0D46               	rlf	??_scale,w
  3821     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3822     0E84  0084               	movwf	4
  3823     0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3824     0E8A  00C7               	movwf	??_scale+1
  3825     0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3826     0E90  00C8               	movwf	??_scale+2
  3827     0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3828     0E96  00C9               	movwf	??_scale+3
  3829     0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3830     0E9C  00CA               	movwf	??_scale+4
  3831     0E9D  084A               	movf	??_scale+4,w
  3832     0E9E  00AB               	movwf	___flmul@b+3
  3833     0E9F  0849               	movf	??_scale+3,w
  3834     0EA0  00AA               	movwf	___flmul@b+2
  3835     0EA1  0848               	movf	??_scale+2,w
  3836     0EA2  00A9               	movwf	___flmul@b+1
  3837     0EA3  0847               	movf	??_scale+1,w
  3838     0EA4  00A8               	movwf	___flmul@b
  3839     0EA5  3064               	movlw	100
  3840     0EA6  00A0               	movwf	___awdiv@divisor
  3841     0EA7  3000               	movlw	0
  3842     0EA8  00A1               	movwf	___awdiv@divisor+1
  3843     0EA9  0854               	movf	scale@scl,w
  3844     0EAA  00A2               	movwf	___awdiv@dividend
  3845     0EAB  01A3               	clrf	___awdiv@dividend+1
  3846     0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3847     0EAD  03A3               	decf	___awdiv@dividend+1,f
  3848     0EAE  160A  158A  267B  120A  158A  	fcall	___awdiv
  3849     0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3850     0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3851     0EB5  0820               	movf	?___awdiv,w
  3852     0EB6  00CB               	movwf	??_scale+5
  3853     0EB7  3001               	movlw	1
  3854     0EB8                     u4455:
  3855     0EB8  1003               	clrc
  3856     0EB9  0DCB               	rlf	??_scale+5,f
  3857     0EBA  3EFF               	addlw	-1
  3858     0EBB  1D03               	skipz
  3859     0EBC  2EB8               	goto	u4455
  3860     0EBD  1003               	clrc
  3861     0EBE  0D4B               	rlf	??_scale+5,w
  3862     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3863     0EC0  0084               	movwf	4
  3864     0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3865     0EC6  00CC               	movwf	??_scale+6
  3866     0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3867     0ECC  00CD               	movwf	??_scale+7
  3868     0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3869     0ED2  00CE               	movwf	??_scale+8
  3870     0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3871     0ED8  00CF               	movwf	??_scale+9
  3872     0ED9  084F               	movf	??_scale+9,w
  3873     0EDA  00AF               	movwf	___flmul@a+3
  3874     0EDB  084E               	movf	??_scale+8,w
  3875     0EDC  00AE               	movwf	___flmul@a+2
  3876     0EDD  084D               	movf	??_scale+7,w
  3877     0EDE  00AD               	movwf	___flmul@a+1
  3878     0EDF  084C               	movf	??_scale+6,w
  3879     0EE0  00AC               	movwf	___flmul@a
  3880     0EE1  120A  158A  2158  120A  158A  	fcall	___flmul
  3881     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3882     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3883     0EE8  082B               	movf	?___flmul+3,w
  3884     0EE9  00D3               	movwf	_scale$1153+3
  3885     0EEA  082A               	movf	?___flmul+2,w
  3886     0EEB  00D2               	movwf	_scale$1153+2
  3887     0EEC  0829               	movf	?___flmul+1,w
  3888     0EED  00D1               	movwf	_scale$1153+1
  3889     0EEE  0828               	movf	?___flmul,w
  3890     0EEF  00D0               	movwf	_scale$1153
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3893     0EF0  300A               	movlw	10
  3894     0EF1  00F2               	movwf	___awmod@divisor
  3895     0EF2  3000               	movlw	0
  3896     0EF3  00F3               	movwf	___awmod@divisor+1
  3897     0EF4  0854               	movf	scale@scl,w
  3898     0EF5  00F4               	movwf	___awmod@dividend
  3899     0EF6  01F5               	clrf	___awmod@dividend+1
  3900     0EF7  1BF4               	btfsc	___awmod@dividend,7
  3901     0EF8  03F5               	decf	___awmod@dividend+1,f
  3902     0EF9  160A  158A  255D  120A  158A  	fcall	___awmod
  3903     0EFE  0872               	movf	?___awmod,w
  3904     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3905     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3906     0F01  00C6               	movwf	??_scale
  3907     0F02  3001               	movlw	1
  3908     0F03                     u4465:
  3909     0F03  1003               	clrc
  3910     0F04  0DC6               	rlf	??_scale,f
  3911     0F05  3EFF               	addlw	-1
  3912     0F06  1D03               	skipz
  3913     0F07  2F03               	goto	u4465
  3914     0F08  1003               	clrc
  3915     0F09  0D46               	rlf	??_scale,w
  3916     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3917     0F0B  0084               	movwf	4
  3918     0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3919     0F11  00C7               	movwf	??_scale+1
  3920     0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  3921     0F17  00C8               	movwf	??_scale+2
  3922     0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  3923     0F1D  00C9               	movwf	??_scale+3
  3924     0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  3925     0F23  00CA               	movwf	??_scale+4
  3926     0F24  084A               	movf	??_scale+4,w
  3927     0F25  00AB               	movwf	___flmul@b+3
  3928     0F26  0849               	movf	??_scale+3,w
  3929     0F27  00AA               	movwf	___flmul@b+2
  3930     0F28  0848               	movf	??_scale+2,w
  3931     0F29  00A9               	movwf	___flmul@b+1
  3932     0F2A  0847               	movf	??_scale+1,w
  3933     0F2B  00A8               	movwf	___flmul@b
  3934     0F2C  0853               	movf	_scale$1153+3,w
  3935     0F2D  00AF               	movwf	___flmul@a+3
  3936     0F2E  0852               	movf	_scale$1153+2,w
  3937     0F2F  00AE               	movwf	___flmul@a+2
  3938     0F30  0851               	movf	_scale$1153+1,w
  3939     0F31  00AD               	movwf	___flmul@a+1
  3940     0F32  0850               	movf	_scale$1153,w
  3941     0F33  00AC               	movwf	___flmul@a
  3942     0F34  120A  158A  2158  120A  158A  	fcall	___flmul
  3943     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3944     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3945     0F3B  082B               	movf	?___flmul+3,w
  3946     0F3C  00C5               	movwf	?_scale+3
  3947     0F3D  082A               	movf	?___flmul+2,w
  3948     0F3E  00C4               	movwf	?_scale+2
  3949     0F3F  0829               	movf	?___flmul+1,w
  3950     0F40  00C3               	movwf	?_scale+1
  3951     0F41  0828               	movf	?___flmul,w
  3952     0F42  00C2               	movwf	?_scale
  3953     0F43  2FFF               	goto	l273
  3954     0F44                     l2922:
  3955     0F44  0854               	movf	scale@scl,w
  3956     0F45  3A80               	xorlw	128
  3957     0F46  3E75               	addlw	-139
  3958     0F47  1C03               	skipc
  3959     0F48  2F4A               	goto	u4471
  3960     0F49  2F4B               	goto	u4470
  3961     0F4A                     u4471:
  3962     0F4A  2FD3               	goto	l2928
  3963     0F4B                     u4470:
  3964     0F4B                     l2924:
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3967     0F4B  300A               	movlw	10
  3968     0F4C  00F2               	movwf	___awmod@divisor
  3969     0F4D  3000               	movlw	0
  3970     0F4E  00F3               	movwf	___awmod@divisor+1
  3971     0F4F  0854               	movf	scale@scl,w
  3972     0F50  00F4               	movwf	___awmod@dividend
  3973     0F51  01F5               	clrf	___awmod@dividend+1
  3974     0F52  1BF4               	btfsc	___awmod@dividend,7
  3975     0F53  03F5               	decf	___awmod@dividend+1,f
  3976     0F54  160A  158A  255D  120A  158A  	fcall	___awmod
  3977     0F59  0872               	movf	?___awmod,w
  3978     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3979     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3980     0F5C  00C6               	movwf	??_scale
  3981     0F5D  3001               	movlw	1
  3982     0F5E                     u4485:
  3983     0F5E  1003               	clrc
  3984     0F5F  0DC6               	rlf	??_scale,f
  3985     0F60  3EFF               	addlw	-1
  3986     0F61  1D03               	skipz
  3987     0F62  2F5E               	goto	u4485
  3988     0F63  1003               	clrc
  3989     0F64  0D46               	rlf	??_scale,w
  3990     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3991     0F66  0084               	movwf	4
  3992     0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  3993     0F6C  00C7               	movwf	??_scale+1
  3994     0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3995     0F72  00C8               	movwf	??_scale+2
  3996     0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  3997     0F78  00C9               	movwf	??_scale+3
  3998     0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  3999     0F7E  00CA               	movwf	??_scale+4
  4000     0F7F  084A               	movf	??_scale+4,w
  4001     0F80  00AB               	movwf	___flmul@b+3
  4002     0F81  0849               	movf	??_scale+3,w
  4003     0F82  00AA               	movwf	___flmul@b+2
  4004     0F83  0848               	movf	??_scale+2,w
  4005     0F84  00A9               	movwf	___flmul@b+1
  4006     0F85  0847               	movf	??_scale+1,w
  4007     0F86  00A8               	movwf	___flmul@b
  4008     0F87  300A               	movlw	10
  4009     0F88  00A0               	movwf	___awdiv@divisor
  4010     0F89  3000               	movlw	0
  4011     0F8A  00A1               	movwf	___awdiv@divisor+1
  4012     0F8B  0854               	movf	scale@scl,w
  4013     0F8C  00A2               	movwf	___awdiv@dividend
  4014     0F8D  01A3               	clrf	___awdiv@dividend+1
  4015     0F8E  1BA2               	btfsc	___awdiv@dividend,7
  4016     0F8F  03A3               	decf	___awdiv@dividend+1,f
  4017     0F90  160A  158A  267B  120A  158A  	fcall	___awdiv
  4018     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4019     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4020     0F97  0820               	movf	?___awdiv,w
  4021     0F98  00CB               	movwf	??_scale+5
  4022     0F99  3001               	movlw	1
  4023     0F9A                     u4495:
  4024     0F9A  1003               	clrc
  4025     0F9B  0DCB               	rlf	??_scale+5,f
  4026     0F9C  3EFF               	addlw	-1
  4027     0F9D  1D03               	skipz
  4028     0F9E  2F9A               	goto	u4495
  4029     0F9F  1003               	clrc
  4030     0FA0  0D4B               	rlf	??_scale+5,w
  4031     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4032     0FA2  0084               	movwf	4
  4033     0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4034     0FA8  00CC               	movwf	??_scale+6
  4035     0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4036     0FAE  00CD               	movwf	??_scale+7
  4037     0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4038     0FB4  00CE               	movwf	??_scale+8
  4039     0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4040     0FBA  00CF               	movwf	??_scale+9
  4041     0FBB  084F               	movf	??_scale+9,w
  4042     0FBC  00AF               	movwf	___flmul@a+3
  4043     0FBD  084E               	movf	??_scale+8,w
  4044     0FBE  00AE               	movwf	___flmul@a+2
  4045     0FBF  084D               	movf	??_scale+7,w
  4046     0FC0  00AD               	movwf	___flmul@a+1
  4047     0FC1  084C               	movf	??_scale+6,w
  4048     0FC2  00AC               	movwf	___flmul@a
  4049     0FC3  120A  158A  2158  120A  158A  	fcall	___flmul
  4050     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4051     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4052     0FCA  082B               	movf	?___flmul+3,w
  4053     0FCB  00C5               	movwf	?_scale+3
  4054     0FCC  082A               	movf	?___flmul+2,w
  4055     0FCD  00C4               	movwf	?_scale+2
  4056     0FCE  0829               	movf	?___flmul+1,w
  4057     0FCF  00C3               	movwf	?_scale+1
  4058     0FD0  0828               	movf	?___flmul,w
  4059     0FD1  00C2               	movwf	?_scale
  4060     0FD2  2FFF               	goto	l273
  4061     0FD3                     l2928:
  4062                           
  4063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4064     0FD3  0854               	movf	scale@scl,w
  4065     0FD4  00C6               	movwf	??_scale
  4066     0FD5  3001               	movlw	1
  4067     0FD6                     u4505:
  4068     0FD6  1003               	clrc
  4069     0FD7  0DC6               	rlf	??_scale,f
  4070     0FD8  3EFF               	addlw	-1
  4071     0FD9  1D03               	skipz
  4072     0FDA  2FD6               	goto	u4505
  4073     0FDB  1003               	clrc
  4074     0FDC  0D46               	rlf	??_scale,w
  4075     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4076     0FDE  0084               	movwf	4
  4077     0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4078     0FE4  00C7               	movwf	??_scale+1
  4079     0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4080     0FEA  00C8               	movwf	??_scale+2
  4081     0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4082     0FF0  00C9               	movwf	??_scale+3
  4083     0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4084     0FF6  00CA               	movwf	??_scale+4
  4085     0FF7  084A               	movf	??_scale+4,w
  4086     0FF8  00C5               	movwf	?_scale+3
  4087     0FF9  0849               	movf	??_scale+3,w
  4088     0FFA  00C4               	movwf	?_scale+2
  4089     0FFB  0848               	movf	??_scale+2,w
  4090     0FFC  00C3               	movwf	?_scale+1
  4091     0FFD  0847               	movf	??_scale+1,w
  4092     0FFE  00C2               	movwf	?_scale
  4093     0FFF                     l273:
  4094     0FFF  0008               	return
  4095     1000                     __end_of_scale:
  4096                           
  4097                           	psect	text3
  4098     1D5D                     __ptext3:	
  4099 ;; *************** function ___awmod *****************
  4100 ;; Defined at:
  4101 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  divisor         2    2[COMMON] int 
  4104 ;;  dividend        2    4[COMMON] int 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  sign            1    8[COMMON] unsigned char 
  4107 ;;  counter         1    7[COMMON] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  2    2[COMMON] int 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         4       0       0       0       0
  4118 ;;      Locals:         2       0       0       0       0
  4119 ;;      Temps:          1       0       0       0       0
  4120 ;;      Totals:         7       0       0       0       0
  4121 ;;Total ram usage:        7 bytes
  4122 ;; Hardware stack levels used: 1
  4123 ;; Hardware stack levels required when called: 1
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_scale
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131     1D5D                     ___awmod:	
  4132                           ;psect for function ___awmod
  4133                           
  4134     1D5D                     l2416:	
  4135                           ;incstack = 0
  4136                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4137                           
  4138     1D5D  01F8               	clrf	___awmod@sign
  4139     1D5E                     l2418:
  4140     1D5E  1FF5               	btfss	___awmod@dividend+1,7
  4141     1D5F  2D61               	goto	u3201
  4142     1D60  2D62               	goto	u3200
  4143     1D61                     u3201:
  4144     1D61  2D69               	goto	l2424
  4145     1D62                     u3200:
  4146     1D62                     l2420:
  4147     1D62  09F4               	comf	___awmod@dividend,f
  4148     1D63  09F5               	comf	___awmod@dividend+1,f
  4149     1D64  0AF4               	incf	___awmod@dividend,f
  4150     1D65  1903               	skipnz
  4151     1D66  0AF5               	incf	___awmod@dividend+1,f
  4152     1D67                     l2422:
  4153     1D67  01F8               	clrf	___awmod@sign
  4154     1D68  0AF8               	incf	___awmod@sign,f
  4155     1D69                     l2424:
  4156     1D69  1FF3               	btfss	___awmod@divisor+1,7
  4157     1D6A  2D6C               	goto	u3211
  4158     1D6B  2D6D               	goto	u3210
  4159     1D6C                     u3211:
  4160     1D6C  2D72               	goto	l2428
  4161     1D6D                     u3210:
  4162     1D6D                     l2426:
  4163     1D6D  09F2               	comf	___awmod@divisor,f
  4164     1D6E  09F3               	comf	___awmod@divisor+1,f
  4165     1D6F  0AF2               	incf	___awmod@divisor,f
  4166     1D70  1903               	skipnz
  4167     1D71  0AF3               	incf	___awmod@divisor+1,f
  4168     1D72                     l2428:
  4169     1D72  0872               	movf	___awmod@divisor,w
  4170     1D73  0473               	iorwf	___awmod@divisor+1,w
  4171     1D74  1903               	btfsc	3,2
  4172     1D75  2D77               	goto	u3221
  4173     1D76  2D78               	goto	u3220
  4174     1D77                     u3221:
  4175     1D77  2DA7               	goto	l2446
  4176     1D78                     u3220:
  4177     1D78                     l2430:
  4178     1D78  01F7               	clrf	___awmod@counter
  4179     1D79  0AF7               	incf	___awmod@counter,f
  4180     1D7A  2D86               	goto	l2436
  4181     1D7B                     l2432:
  4182     1D7B  3001               	movlw	1
  4183     1D7C                     u3235:
  4184     1D7C  1003               	clrc
  4185     1D7D  0DF2               	rlf	___awmod@divisor,f
  4186     1D7E  0DF3               	rlf	___awmod@divisor+1,f
  4187     1D7F  3EFF               	addlw	-1
  4188     1D80  1D03               	skipz
  4189     1D81  2D7C               	goto	u3235
  4190     1D82                     l2434:
  4191     1D82  3001               	movlw	1
  4192     1D83  00F6               	movwf	??___awmod
  4193     1D84  0876               	movf	??___awmod,w
  4194     1D85  07F7               	addwf	___awmod@counter,f
  4195     1D86                     l2436:
  4196     1D86  1FF3               	btfss	___awmod@divisor+1,7
  4197     1D87  2D89               	goto	u3241
  4198     1D88  2D8A               	goto	u3240
  4199     1D89                     u3241:
  4200     1D89  2D7B               	goto	l2432
  4201     1D8A                     u3240:
  4202     1D8A                     l2438:
  4203     1D8A  0873               	movf	___awmod@divisor+1,w
  4204     1D8B  0275               	subwf	___awmod@dividend+1,w
  4205     1D8C  1D03               	skipz
  4206     1D8D  2D90               	goto	u3255
  4207     1D8E  0872               	movf	___awmod@divisor,w
  4208     1D8F  0274               	subwf	___awmod@dividend,w
  4209     1D90                     u3255:
  4210     1D90  1C03               	skipc
  4211     1D91  2D93               	goto	u3251
  4212     1D92  2D94               	goto	u3250
  4213     1D93                     u3251:
  4214     1D93  2D9A               	goto	l2442
  4215     1D94                     u3250:
  4216     1D94                     l2440:
  4217     1D94  0872               	movf	___awmod@divisor,w
  4218     1D95  02F4               	subwf	___awmod@dividend,f
  4219     1D96  0873               	movf	___awmod@divisor+1,w
  4220     1D97  1C03               	skipc
  4221     1D98  03F5               	decf	___awmod@dividend+1,f
  4222     1D99  02F5               	subwf	___awmod@dividend+1,f
  4223     1D9A                     l2442:
  4224     1D9A  3001               	movlw	1
  4225     1D9B                     u3265:
  4226     1D9B  1003               	clrc
  4227     1D9C  0CF3               	rrf	___awmod@divisor+1,f
  4228     1D9D  0CF2               	rrf	___awmod@divisor,f
  4229     1D9E  3EFF               	addlw	-1
  4230     1D9F  1D03               	skipz
  4231     1DA0  2D9B               	goto	u3265
  4232     1DA1                     l2444:
  4233     1DA1  3001               	movlw	1
  4234     1DA2  02F7               	subwf	___awmod@counter,f
  4235     1DA3  1D03               	btfss	3,2
  4236     1DA4  2DA6               	goto	u3271
  4237     1DA5  2DA7               	goto	u3270
  4238     1DA6                     u3271:
  4239     1DA6  2D8A               	goto	l2438
  4240     1DA7                     u3270:
  4241     1DA7                     l2446:
  4242     1DA7  0878               	movf	___awmod@sign,w
  4243     1DA8  1903               	btfsc	3,2
  4244     1DA9  2DAB               	goto	u3281
  4245     1DAA  2DAC               	goto	u3280
  4246     1DAB                     u3281:
  4247     1DAB  2DB1               	goto	l2450
  4248     1DAC                     u3280:
  4249     1DAC                     l2448:
  4250     1DAC  09F4               	comf	___awmod@dividend,f
  4251     1DAD  09F5               	comf	___awmod@dividend+1,f
  4252     1DAE  0AF4               	incf	___awmod@dividend,f
  4253     1DAF  1903               	skipnz
  4254     1DB0  0AF5               	incf	___awmod@dividend+1,f
  4255     1DB1                     l2450:
  4256     1DB1  0875               	movf	___awmod@dividend+1,w
  4257     1DB2  00F3               	movwf	?___awmod+1
  4258     1DB3  0874               	movf	___awmod@dividend,w
  4259     1DB4  00F2               	movwf	?___awmod
  4260     1DB5                     l509:
  4261     1DB5  0008               	return
  4262     1DB6                     __end_of___awmod:
  4263                           
  4264                           	psect	text4
  4265     1E7B                     __ptext4:	
  4266 ;; *************** function ___awdiv *****************
  4267 ;; Defined at:
  4268 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  divisor         2    0[BANK0 ] int 
  4271 ;;  dividend        2    2[BANK0 ] int 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  quotient        2    6[BANK0 ] int 
  4274 ;;  sign            1    5[BANK0 ] unsigned char 
  4275 ;;  counter         1    4[BANK0 ] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  2    0[BANK0 ] int 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4285 ;;      Params:         0       4       0       0       0
  4286 ;;      Locals:         0       4       0       0       0
  4287 ;;      Temps:          1       0       0       0       0
  4288 ;;      Totals:         1       8       0       0       0
  4289 ;;Total ram usage:        9 bytes
  4290 ;; Hardware stack levels used: 1
  4291 ;; Hardware stack levels required when called: 1
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_scale
  4296 ;;		_sprintf
  4297 ;;		_adc_mv
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301     1E7B                     ___awdiv:	
  4302                           ;psect for function ___awdiv
  4303                           
  4304     1E7B                     l2372:	
  4305                           ;incstack = 0
  4306                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4307                           
  4308     1E7B  1283               	bcf	3,5	;RP0=0, select bank0
  4309     1E7C  1303               	bcf	3,6	;RP1=0, select bank0
  4310     1E7D  01A5               	clrf	___awdiv@sign
  4311     1E7E                     l2374:
  4312     1E7E  1FA1               	btfss	___awdiv@divisor+1,7
  4313     1E7F  2E81               	goto	u3101
  4314     1E80  2E82               	goto	u3100
  4315     1E81                     u3101:
  4316     1E81  2E89               	goto	l2380
  4317     1E82                     u3100:
  4318     1E82                     l2376:
  4319     1E82  09A0               	comf	___awdiv@divisor,f
  4320     1E83  09A1               	comf	___awdiv@divisor+1,f
  4321     1E84  0AA0               	incf	___awdiv@divisor,f
  4322     1E85  1903               	skipnz
  4323     1E86  0AA1               	incf	___awdiv@divisor+1,f
  4324     1E87                     l2378:
  4325     1E87  01A5               	clrf	___awdiv@sign
  4326     1E88  0AA5               	incf	___awdiv@sign,f
  4327     1E89                     l2380:
  4328     1E89  1FA3               	btfss	___awdiv@dividend+1,7
  4329     1E8A  2E8C               	goto	u3111
  4330     1E8B  2E8D               	goto	u3110
  4331     1E8C                     u3111:
  4332     1E8C  2E96               	goto	l2386
  4333     1E8D                     u3110:
  4334     1E8D                     l2382:
  4335     1E8D  09A2               	comf	___awdiv@dividend,f
  4336     1E8E  09A3               	comf	___awdiv@dividend+1,f
  4337     1E8F  0AA2               	incf	___awdiv@dividend,f
  4338     1E90  1903               	skipnz
  4339     1E91  0AA3               	incf	___awdiv@dividend+1,f
  4340     1E92                     l2384:
  4341     1E92  3001               	movlw	1
  4342     1E93  00F9               	movwf	??___awdiv
  4343     1E94  0879               	movf	??___awdiv,w
  4344     1E95  06A5               	xorwf	___awdiv@sign,f
  4345     1E96                     l2386:
  4346     1E96  01A6               	clrf	___awdiv@quotient
  4347     1E97  01A7               	clrf	___awdiv@quotient+1
  4348     1E98                     l2388:
  4349     1E98  0820               	movf	___awdiv@divisor,w
  4350     1E99  0421               	iorwf	___awdiv@divisor+1,w
  4351     1E9A  1903               	btfsc	3,2
  4352     1E9B  2E9D               	goto	u3121
  4353     1E9C  2E9E               	goto	u3120
  4354     1E9D                     u3121:
  4355     1E9D  2ED5               	goto	l2408
  4356     1E9E                     u3120:
  4357     1E9E                     l2390:
  4358     1E9E  01A4               	clrf	___awdiv@counter
  4359     1E9F  0AA4               	incf	___awdiv@counter,f
  4360     1EA0  2EAC               	goto	l2396
  4361     1EA1                     l2392:
  4362     1EA1  3001               	movlw	1
  4363     1EA2                     u3135:
  4364     1EA2  1003               	clrc
  4365     1EA3  0DA0               	rlf	___awdiv@divisor,f
  4366     1EA4  0DA1               	rlf	___awdiv@divisor+1,f
  4367     1EA5  3EFF               	addlw	-1
  4368     1EA6  1D03               	skipz
  4369     1EA7  2EA2               	goto	u3135
  4370     1EA8                     l2394:
  4371     1EA8  3001               	movlw	1
  4372     1EA9  00F9               	movwf	??___awdiv
  4373     1EAA  0879               	movf	??___awdiv,w
  4374     1EAB  07A4               	addwf	___awdiv@counter,f
  4375     1EAC                     l2396:
  4376     1EAC  1FA1               	btfss	___awdiv@divisor+1,7
  4377     1EAD  2EAF               	goto	u3141
  4378     1EAE  2EB0               	goto	u3140
  4379     1EAF                     u3141:
  4380     1EAF  2EA1               	goto	l2392
  4381     1EB0                     u3140:
  4382     1EB0                     l2398:
  4383     1EB0  3001               	movlw	1
  4384     1EB1                     u3155:
  4385     1EB1  1003               	clrc
  4386     1EB2  0DA6               	rlf	___awdiv@quotient,f
  4387     1EB3  0DA7               	rlf	___awdiv@quotient+1,f
  4388     1EB4  3EFF               	addlw	-1
  4389     1EB5  1D03               	skipz
  4390     1EB6  2EB1               	goto	u3155
  4391     1EB7  0821               	movf	___awdiv@divisor+1,w
  4392     1EB8  0223               	subwf	___awdiv@dividend+1,w
  4393     1EB9  1D03               	skipz
  4394     1EBA  2EBD               	goto	u3165
  4395     1EBB  0820               	movf	___awdiv@divisor,w
  4396     1EBC  0222               	subwf	___awdiv@dividend,w
  4397     1EBD                     u3165:
  4398     1EBD  1C03               	skipc
  4399     1EBE  2EC0               	goto	u3161
  4400     1EBF  2EC1               	goto	u3160
  4401     1EC0                     u3161:
  4402     1EC0  2EC8               	goto	l2404
  4403     1EC1                     u3160:
  4404     1EC1                     l2400:
  4405     1EC1  0820               	movf	___awdiv@divisor,w
  4406     1EC2  02A2               	subwf	___awdiv@dividend,f
  4407     1EC3  0821               	movf	___awdiv@divisor+1,w
  4408     1EC4  1C03               	skipc
  4409     1EC5  03A3               	decf	___awdiv@dividend+1,f
  4410     1EC6  02A3               	subwf	___awdiv@dividend+1,f
  4411     1EC7                     l2402:
  4412     1EC7  1426               	bsf	___awdiv@quotient,0
  4413     1EC8                     l2404:
  4414     1EC8  3001               	movlw	1
  4415     1EC9                     u3175:
  4416     1EC9  1003               	clrc
  4417     1ECA  0CA1               	rrf	___awdiv@divisor+1,f
  4418     1ECB  0CA0               	rrf	___awdiv@divisor,f
  4419     1ECC  3EFF               	addlw	-1
  4420     1ECD  1D03               	skipz
  4421     1ECE  2EC9               	goto	u3175
  4422     1ECF                     l2406:
  4423     1ECF  3001               	movlw	1
  4424     1ED0  02A4               	subwf	___awdiv@counter,f
  4425     1ED1  1D03               	btfss	3,2
  4426     1ED2  2ED4               	goto	u3181
  4427     1ED3  2ED5               	goto	u3180
  4428     1ED4                     u3181:
  4429     1ED4  2EB0               	goto	l2398
  4430     1ED5                     u3180:
  4431     1ED5                     l2408:
  4432     1ED5  0825               	movf	___awdiv@sign,w
  4433     1ED6  1903               	btfsc	3,2
  4434     1ED7  2ED9               	goto	u3191
  4435     1ED8  2EDA               	goto	u3190
  4436     1ED9                     u3191:
  4437     1ED9  2EDF               	goto	l2412
  4438     1EDA                     u3190:
  4439     1EDA                     l2410:
  4440     1EDA  09A6               	comf	___awdiv@quotient,f
  4441     1EDB  09A7               	comf	___awdiv@quotient+1,f
  4442     1EDC  0AA6               	incf	___awdiv@quotient,f
  4443     1EDD  1903               	skipnz
  4444     1EDE  0AA7               	incf	___awdiv@quotient+1,f
  4445     1EDF                     l2412:
  4446     1EDF  0827               	movf	___awdiv@quotient+1,w
  4447     1EE0  00A1               	movwf	?___awdiv+1
  4448     1EE1  0826               	movf	___awdiv@quotient,w
  4449     1EE2  00A0               	movwf	?___awdiv
  4450     1EE3                     l496:
  4451     1EE3  0008               	return
  4452     1EE4                     __end_of___awdiv:
  4453                           
  4454                           	psect	text5
  4455     1A89                     __ptext5:	
  4456 ;; *************** function _isdigit *****************
  4457 ;; Defined at:
  4458 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  c               1    wreg     unsigned char 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  c               1    3[COMMON] unsigned char 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;		None               void
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4472 ;;      Params:         0       0       0       0       0
  4473 ;;      Locals:         2       0       0       0       0
  4474 ;;      Temps:          0       0       0       0       0
  4475 ;;      Totals:         2       0       0       0       0
  4476 ;;Total ram usage:        2 bytes
  4477 ;; Hardware stack levels used: 1
  4478 ;; Hardware stack levels required when called: 1
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_sprintf
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486     1A89                     _isdigit:	
  4487                           ;psect for function _isdigit
  4488                           
  4489                           
  4490                           ;incstack = 0
  4491                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4492                           ;isdigit@c stored from wreg
  4493     1A89  00F3               	movwf	isdigit@c
  4494     1A8A                     l2932:
  4495     1A8A  01F2               	clrf	_isdigit$963
  4496     1A8B                     l2934:
  4497     1A8B  303A               	movlw	58
  4498     1A8C  0273               	subwf	isdigit@c,w
  4499     1A8D  1803               	skipnc
  4500     1A8E  2A90               	goto	u4511
  4501     1A8F  2A91               	goto	u4510
  4502     1A90                     u4511:
  4503     1A90  2A99               	goto	l2940
  4504     1A91                     u4510:
  4505     1A91                     l2936:
  4506     1A91  3030               	movlw	48
  4507     1A92  0273               	subwf	isdigit@c,w
  4508     1A93  1C03               	skipc
  4509     1A94  2A96               	goto	u4521
  4510     1A95  2A97               	goto	u4520
  4511     1A96                     u4521:
  4512     1A96  2A99               	goto	l2940
  4513     1A97                     u4520:
  4514     1A97                     l2938:
  4515     1A97  01F2               	clrf	_isdigit$963
  4516     1A98  0AF2               	incf	_isdigit$963,f
  4517     1A99                     l2940:
  4518     1A99  0C72               	rrf	_isdigit$963,w
  4519     1A9A                     l830:
  4520     1A9A  0008               	return
  4521     1A9B                     __end_of_isdigit:
  4522                           
  4523                           	psect	text6
  4524     139D                     __ptext6:	
  4525 ;; *************** function _fround *****************
  4526 ;; Defined at:
  4527 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  prec            1    wreg     unsigned char 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  prec            1   53[BANK0 ] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  4   34[BANK0 ] unsigned char 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4541 ;;      Params:         0       4       0       0       0
  4542 ;;      Locals:         0       9       0       0       0
  4543 ;;      Temps:          0       7       0       0       0
  4544 ;;      Totals:         0      20       0       0       0
  4545 ;;Total ram usage:       20 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 3
  4548 ;; This function calls:
  4549 ;;		___flmul
  4550 ;;		___lwdiv
  4551 ;;		___lwmod
  4552 ;; This function is called by:
  4553 ;;		_sprintf
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557     139D                     _fround:	
  4558                           ;psect for function _fround
  4559                           
  4560                           
  4561                           ;incstack = 0
  4562                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4563                           ;fround@prec stored from wreg
  4564     139D  1283               	bcf	3,5	;RP0=0, select bank0
  4565     139E  1303               	bcf	3,6	;RP1=0, select bank0
  4566     139F  00D5               	movwf	fround@prec
  4567     13A0                     l2874:
  4568                           
  4569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4570     13A0  306E               	movlw	110
  4571     13A1  0255               	subwf	fround@prec,w
  4572     13A2  1C03               	skipc
  4573     13A3  2BA5               	goto	u4261
  4574     13A4  2BA6               	goto	u4260
  4575     13A5                     u4261:
  4576     13A5  2CB3               	goto	l2882
  4577     13A6                     u4260:
  4578     13A6                     l2876:
  4579                           
  4580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4581     13A6  303F               	movlw	63
  4582     13A7  00AB               	movwf	___flmul@b+3
  4583     13A8  3000               	movlw	0
  4584     13A9  00AA               	movwf	___flmul@b+2
  4585     13AA  3000               	movlw	0
  4586     13AB  00A9               	movwf	___flmul@b+1
  4587     13AC  3000               	movlw	0
  4588     13AD  00A8               	movwf	___flmul@b
  4589     13AE  3064               	movlw	100
  4590     13AF  00F8               	movwf	___lwdiv@divisor
  4591     13B0  3000               	movlw	0
  4592     13B1  00F9               	movwf	___lwdiv@divisor+1
  4593     13B2  0855               	movf	fround@prec,w
  4594     13B3  00C6               	movwf	??_fround
  4595     13B4  01C7               	clrf	??_fround+1
  4596     13B5  0846               	movf	??_fround,w
  4597     13B6  00FA               	movwf	___lwdiv@dividend
  4598     13B7  0847               	movf	??_fround+1,w
  4599     13B8  00FB               	movwf	___lwdiv@dividend+1
  4600     13B9  160A  158A  2423  160A  118A  	fcall	___lwdiv
  4601     13BE  0878               	movf	?___lwdiv,w
  4602     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4603     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4604     13C1  00C8               	movwf	??_fround+2
  4605     13C2  3001               	movlw	1
  4606     13C3                     u4275:
  4607     13C3  1003               	clrc
  4608     13C4  0DC8               	rlf	??_fround+2,f
  4609     13C5  3EFF               	addlw	-1
  4610     13C6  1D03               	skipz
  4611     13C7  2BC3               	goto	u4275
  4612     13C8  1003               	clrc
  4613     13C9  0D48               	rlf	??_fround+2,w
  4614     13CA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4615     13CB  0084               	movwf	4
  4616     13CC  160A  118A  200A  160A  118A  	fcall	stringdir
  4617     13D1  00C9               	movwf	??_fround+3
  4618     13D2  160A  118A  200A  160A  118A  	fcall	stringdir
  4619     13D7  00CA               	movwf	??_fround+4
  4620     13D8  160A  118A  200A  160A  118A  	fcall	stringdir
  4621     13DD  00CB               	movwf	??_fround+5
  4622     13DE  160A  118A  200A  160A  118A  	fcall	stringdir
  4623     13E3  00CC               	movwf	??_fround+6
  4624     13E4  084C               	movf	??_fround+6,w
  4625     13E5  00AF               	movwf	___flmul@a+3
  4626     13E6  084B               	movf	??_fround+5,w
  4627     13E7  00AE               	movwf	___flmul@a+2
  4628     13E8  084A               	movf	??_fround+4,w
  4629     13E9  00AD               	movwf	___flmul@a+1
  4630     13EA  0849               	movf	??_fround+3,w
  4631     13EB  00AC               	movwf	___flmul@a
  4632     13EC  120A  158A  2158  160A  118A  	fcall	___flmul
  4633     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  4634     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  4635     13F3  082B               	movf	?___flmul+3,w
  4636     13F4  00D4               	movwf	_fround$1151+3
  4637     13F5  082A               	movf	?___flmul+2,w
  4638     13F6  00D3               	movwf	_fround$1151+2
  4639     13F7  0829               	movf	?___flmul+1,w
  4640     13F8  00D2               	movwf	_fround$1151+1
  4641     13F9  0828               	movf	?___flmul,w
  4642     13FA  00D1               	movwf	_fround$1151
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4645     13FB  300A               	movlw	10
  4646     13FC  00F8               	movwf	___lwdiv@divisor
  4647     13FD  3000               	movlw	0
  4648     13FE  00F9               	movwf	___lwdiv@divisor+1
  4649     13FF  0855               	movf	fround@prec,w
  4650     1400  00C6               	movwf	??_fround
  4651     1401  01C7               	clrf	??_fround+1
  4652     1402  0846               	movf	??_fround,w
  4653     1403  00F4               	movwf	___lwmod@dividend
  4654     1404  0847               	movf	??_fround+1,w
  4655     1405  00F5               	movwf	___lwmod@dividend+1
  4656     1406  3064               	movlw	100
  4657     1407  00F2               	movwf	___lwmod@divisor
  4658     1408  3000               	movlw	0
  4659     1409  00F3               	movwf	___lwmod@divisor+1
  4660     140A  160A  158A  235D  160A  118A  	fcall	___lwmod
  4661     140F  0873               	movf	?___lwmod+1,w
  4662     1410  00FB               	movwf	___lwdiv@dividend+1
  4663     1411  0872               	movf	?___lwmod,w
  4664     1412  00FA               	movwf	___lwdiv@dividend
  4665     1413  160A  158A  2423  160A  118A  	fcall	___lwdiv
  4666     1418  0878               	movf	?___lwdiv,w
  4667     1419  1283               	bcf	3,5	;RP0=0, select bank0
  4668     141A  1303               	bcf	3,6	;RP1=0, select bank0
  4669     141B  00C8               	movwf	??_fround+2
  4670     141C  3001               	movlw	1
  4671     141D                     u4285:
  4672     141D  1003               	clrc
  4673     141E  0DC8               	rlf	??_fround+2,f
  4674     141F  3EFF               	addlw	-1
  4675     1420  1D03               	skipz
  4676     1421  2C1D               	goto	u4285
  4677     1422  1003               	clrc
  4678     1423  0D48               	rlf	??_fround+2,w
  4679     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4680     1425  0084               	movwf	4
  4681     1426  160A  118A  200A  160A  118A  	fcall	stringdir
  4682     142B  00C9               	movwf	??_fround+3
  4683     142C  160A  118A  200A  160A  118A  	fcall	stringdir
  4684     1431  00CA               	movwf	??_fround+4
  4685     1432  160A  118A  200A  160A  118A  	fcall	stringdir
  4686     1437  00CB               	movwf	??_fround+5
  4687     1438  160A  118A  200A  160A  118A  	fcall	stringdir
  4688     143D  00CC               	movwf	??_fround+6
  4689     143E  084C               	movf	??_fround+6,w
  4690     143F  00AB               	movwf	___flmul@b+3
  4691     1440  084B               	movf	??_fround+5,w
  4692     1441  00AA               	movwf	___flmul@b+2
  4693     1442  084A               	movf	??_fround+4,w
  4694     1443  00A9               	movwf	___flmul@b+1
  4695     1444  0849               	movf	??_fround+3,w
  4696     1445  00A8               	movwf	___flmul@b
  4697     1446  0854               	movf	_fround$1151+3,w
  4698     1447  00AF               	movwf	___flmul@a+3
  4699     1448  0853               	movf	_fround$1151+2,w
  4700     1449  00AE               	movwf	___flmul@a+2
  4701     144A  0852               	movf	_fround$1151+1,w
  4702     144B  00AD               	movwf	___flmul@a+1
  4703     144C  0851               	movf	_fround$1151,w
  4704     144D  00AC               	movwf	___flmul@a
  4705     144E  120A  158A  2158  160A  118A  	fcall	___flmul
  4706     1453  1283               	bcf	3,5	;RP0=0, select bank0
  4707     1454  1303               	bcf	3,6	;RP1=0, select bank0
  4708     1455  082B               	movf	?___flmul+3,w
  4709     1456  00D0               	movwf	_fround$1152+3
  4710     1457  082A               	movf	?___flmul+2,w
  4711     1458  00CF               	movwf	_fround$1152+2
  4712     1459  0829               	movf	?___flmul+1,w
  4713     145A  00CE               	movwf	_fround$1152+1
  4714     145B  0828               	movf	?___flmul,w
  4715     145C  00CD               	movwf	_fround$1152
  4716                           
  4717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4718     145D  300A               	movlw	10
  4719     145E  00F2               	movwf	___lwmod@divisor
  4720     145F  3000               	movlw	0
  4721     1460  00F3               	movwf	___lwmod@divisor+1
  4722     1461  0855               	movf	fround@prec,w
  4723     1462  00C6               	movwf	??_fround
  4724     1463  01C7               	clrf	??_fround+1
  4725     1464  0846               	movf	??_fround,w
  4726     1465  00F4               	movwf	___lwmod@dividend
  4727     1466  0847               	movf	??_fround+1,w
  4728     1467  00F5               	movwf	___lwmod@dividend+1
  4729     1468  160A  158A  235D  160A  118A  	fcall	___lwmod
  4730     146D  0872               	movf	?___lwmod,w
  4731     146E  1283               	bcf	3,5	;RP0=0, select bank0
  4732     146F  1303               	bcf	3,6	;RP1=0, select bank0
  4733     1470  00C8               	movwf	??_fround+2
  4734     1471  3001               	movlw	1
  4735     1472                     u4295:
  4736     1472  1003               	clrc
  4737     1473  0DC8               	rlf	??_fround+2,f
  4738     1474  3EFF               	addlw	-1
  4739     1475  1D03               	skipz
  4740     1476  2C72               	goto	u4295
  4741     1477  1003               	clrc
  4742     1478  0D48               	rlf	??_fround+2,w
  4743     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4744     147A  0084               	movwf	4
  4745     147B  160A  118A  200A  160A  118A  	fcall	stringdir
  4746     1480  00C9               	movwf	??_fround+3
  4747     1481  160A  118A  200A  160A  118A  	fcall	stringdir
  4748     1486  00CA               	movwf	??_fround+4
  4749     1487  160A  118A  200A  160A  118A  	fcall	stringdir
  4750     148C  00CB               	movwf	??_fround+5
  4751     148D  160A  118A  200A  160A  118A  	fcall	stringdir
  4752     1492  00CC               	movwf	??_fround+6
  4753     1493  084C               	movf	??_fround+6,w
  4754     1494  00AB               	movwf	___flmul@b+3
  4755     1495  084B               	movf	??_fround+5,w
  4756     1496  00AA               	movwf	___flmul@b+2
  4757     1497  084A               	movf	??_fround+4,w
  4758     1498  00A9               	movwf	___flmul@b+1
  4759     1499  0849               	movf	??_fround+3,w
  4760     149A  00A8               	movwf	___flmul@b
  4761     149B  0850               	movf	_fround$1152+3,w
  4762     149C  00AF               	movwf	___flmul@a+3
  4763     149D  084F               	movf	_fround$1152+2,w
  4764     149E  00AE               	movwf	___flmul@a+2
  4765     149F  084E               	movf	_fround$1152+1,w
  4766     14A0  00AD               	movwf	___flmul@a+1
  4767     14A1  084D               	movf	_fround$1152,w
  4768     14A2  00AC               	movwf	___flmul@a
  4769     14A3  120A  158A  2158  160A  118A  	fcall	___flmul
  4770     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  4771     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  4772     14AA  082B               	movf	?___flmul+3,w
  4773     14AB  00C5               	movwf	?_fround+3
  4774     14AC  082A               	movf	?___flmul+2,w
  4775     14AD  00C4               	movwf	?_fround+2
  4776     14AE  0829               	movf	?___flmul+1,w
  4777     14AF  00C3               	movwf	?_fround+1
  4778     14B0  0828               	movf	?___flmul,w
  4779     14B1  00C2               	movwf	?_fround
  4780     14B2  2DA7               	goto	l266
  4781     14B3                     l2882:
  4782     14B3  300B               	movlw	11
  4783     14B4  0255               	subwf	fround@prec,w
  4784     14B5  1C03               	skipc
  4785     14B6  2CB8               	goto	u4301
  4786     14B7  2CB9               	goto	u4300
  4787     14B8                     u4301:
  4788     14B8  2D64               	goto	l2888
  4789     14B9                     u4300:
  4790     14B9                     l2884:
  4791                           
  4792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4793     14B9  303F               	movlw	63
  4794     14BA  00AB               	movwf	___flmul@b+3
  4795     14BB  3000               	movlw	0
  4796     14BC  00AA               	movwf	___flmul@b+2
  4797     14BD  3000               	movlw	0
  4798     14BE  00A9               	movwf	___flmul@b+1
  4799     14BF  3000               	movlw	0
  4800     14C0  00A8               	movwf	___flmul@b
  4801     14C1  300A               	movlw	10
  4802     14C2  00F8               	movwf	___lwdiv@divisor
  4803     14C3  3000               	movlw	0
  4804     14C4  00F9               	movwf	___lwdiv@divisor+1
  4805     14C5  0855               	movf	fround@prec,w
  4806     14C6  00C6               	movwf	??_fround
  4807     14C7  01C7               	clrf	??_fround+1
  4808     14C8  0846               	movf	??_fround,w
  4809     14C9  00FA               	movwf	___lwdiv@dividend
  4810     14CA  0847               	movf	??_fround+1,w
  4811     14CB  00FB               	movwf	___lwdiv@dividend+1
  4812     14CC  160A  158A  2423  160A  118A  	fcall	___lwdiv
  4813     14D1  0878               	movf	?___lwdiv,w
  4814     14D2  1283               	bcf	3,5	;RP0=0, select bank0
  4815     14D3  1303               	bcf	3,6	;RP1=0, select bank0
  4816     14D4  00C8               	movwf	??_fround+2
  4817     14D5  3001               	movlw	1
  4818     14D6                     u4315:
  4819     14D6  1003               	clrc
  4820     14D7  0DC8               	rlf	??_fround+2,f
  4821     14D8  3EFF               	addlw	-1
  4822     14D9  1D03               	skipz
  4823     14DA  2CD6               	goto	u4315
  4824     14DB  1003               	clrc
  4825     14DC  0D48               	rlf	??_fround+2,w
  4826     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4827     14DE  0084               	movwf	4
  4828     14DF  160A  118A  200A  160A  118A  	fcall	stringdir
  4829     14E4  00C9               	movwf	??_fround+3
  4830     14E5  160A  118A  200A  160A  118A  	fcall	stringdir
  4831     14EA  00CA               	movwf	??_fround+4
  4832     14EB  160A  118A  200A  160A  118A  	fcall	stringdir
  4833     14F0  00CB               	movwf	??_fround+5
  4834     14F1  160A  118A  200A  160A  118A  	fcall	stringdir
  4835     14F6  00CC               	movwf	??_fround+6
  4836     14F7  084C               	movf	??_fround+6,w
  4837     14F8  00AF               	movwf	___flmul@a+3
  4838     14F9  084B               	movf	??_fround+5,w
  4839     14FA  00AE               	movwf	___flmul@a+2
  4840     14FB  084A               	movf	??_fround+4,w
  4841     14FC  00AD               	movwf	___flmul@a+1
  4842     14FD  0849               	movf	??_fround+3,w
  4843     14FE  00AC               	movwf	___flmul@a
  4844     14FF  120A  158A  2158  160A  118A  	fcall	___flmul
  4845     1504  1283               	bcf	3,5	;RP0=0, select bank0
  4846     1505  1303               	bcf	3,6	;RP1=0, select bank0
  4847     1506  082B               	movf	?___flmul+3,w
  4848     1507  00D4               	movwf	_fround$1151+3
  4849     1508  082A               	movf	?___flmul+2,w
  4850     1509  00D3               	movwf	_fround$1151+2
  4851     150A  0829               	movf	?___flmul+1,w
  4852     150B  00D2               	movwf	_fround$1151+1
  4853     150C  0828               	movf	?___flmul,w
  4854     150D  00D1               	movwf	_fround$1151
  4855                           
  4856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4857     150E  300A               	movlw	10
  4858     150F  00F2               	movwf	___lwmod@divisor
  4859     1510  3000               	movlw	0
  4860     1511  00F3               	movwf	___lwmod@divisor+1
  4861     1512  0855               	movf	fround@prec,w
  4862     1513  00C6               	movwf	??_fround
  4863     1514  01C7               	clrf	??_fround+1
  4864     1515  0846               	movf	??_fround,w
  4865     1516  00F4               	movwf	___lwmod@dividend
  4866     1517  0847               	movf	??_fround+1,w
  4867     1518  00F5               	movwf	___lwmod@dividend+1
  4868     1519  160A  158A  235D  160A  118A  	fcall	___lwmod
  4869     151E  0872               	movf	?___lwmod,w
  4870     151F  1283               	bcf	3,5	;RP0=0, select bank0
  4871     1520  1303               	bcf	3,6	;RP1=0, select bank0
  4872     1521  00C8               	movwf	??_fround+2
  4873     1522  3001               	movlw	1
  4874     1523                     u4325:
  4875     1523  1003               	clrc
  4876     1524  0DC8               	rlf	??_fround+2,f
  4877     1525  3EFF               	addlw	-1
  4878     1526  1D03               	skipz
  4879     1527  2D23               	goto	u4325
  4880     1528  1003               	clrc
  4881     1529  0D48               	rlf	??_fround+2,w
  4882     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4883     152B  0084               	movwf	4
  4884     152C  160A  118A  200A  160A  118A  	fcall	stringdir
  4885     1531  00C9               	movwf	??_fround+3
  4886     1532  160A  118A  200A  160A  118A  	fcall	stringdir
  4887     1537  00CA               	movwf	??_fround+4
  4888     1538  160A  118A  200A  160A  118A  	fcall	stringdir
  4889     153D  00CB               	movwf	??_fround+5
  4890     153E  160A  118A  200A  160A  118A  	fcall	stringdir
  4891     1543  00CC               	movwf	??_fround+6
  4892     1544  084C               	movf	??_fround+6,w
  4893     1545  00AB               	movwf	___flmul@b+3
  4894     1546  084B               	movf	??_fround+5,w
  4895     1547  00AA               	movwf	___flmul@b+2
  4896     1548  084A               	movf	??_fround+4,w
  4897     1549  00A9               	movwf	___flmul@b+1
  4898     154A  0849               	movf	??_fround+3,w
  4899     154B  00A8               	movwf	___flmul@b
  4900     154C  0854               	movf	_fround$1151+3,w
  4901     154D  00AF               	movwf	___flmul@a+3
  4902     154E  0853               	movf	_fround$1151+2,w
  4903     154F  00AE               	movwf	___flmul@a+2
  4904     1550  0852               	movf	_fround$1151+1,w
  4905     1551  00AD               	movwf	___flmul@a+1
  4906     1552  0851               	movf	_fround$1151,w
  4907     1553  00AC               	movwf	___flmul@a
  4908     1554  120A  158A  2158  160A  118A  	fcall	___flmul
  4909     1559  1283               	bcf	3,5	;RP0=0, select bank0
  4910     155A  1303               	bcf	3,6	;RP1=0, select bank0
  4911     155B  082B               	movf	?___flmul+3,w
  4912     155C  00C5               	movwf	?_fround+3
  4913     155D  082A               	movf	?___flmul+2,w
  4914     155E  00C4               	movwf	?_fround+2
  4915     155F  0829               	movf	?___flmul+1,w
  4916     1560  00C3               	movwf	?_fround+1
  4917     1561  0828               	movf	?___flmul,w
  4918     1562  00C2               	movwf	?_fround
  4919     1563  2DA7               	goto	l266
  4920     1564                     l2888:
  4921                           
  4922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4923     1564  303F               	movlw	63
  4924     1565  00AB               	movwf	___flmul@b+3
  4925     1566  3000               	movlw	0
  4926     1567  00AA               	movwf	___flmul@b+2
  4927     1568  3000               	movlw	0
  4928     1569  00A9               	movwf	___flmul@b+1
  4929     156A  3000               	movlw	0
  4930     156B  00A8               	movwf	___flmul@b
  4931     156C  0855               	movf	fround@prec,w
  4932     156D  00C6               	movwf	??_fround
  4933     156E  3001               	movlw	1
  4934     156F                     u4335:
  4935     156F  1003               	clrc
  4936     1570  0DC6               	rlf	??_fround,f
  4937     1571  3EFF               	addlw	-1
  4938     1572  1D03               	skipz
  4939     1573  2D6F               	goto	u4335
  4940     1574  1003               	clrc
  4941     1575  0D46               	rlf	??_fround,w
  4942     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4943     1577  0084               	movwf	4
  4944     1578  160A  118A  200A  160A  118A  	fcall	stringdir
  4945     157D  00C7               	movwf	??_fround+1
  4946     157E  160A  118A  200A  160A  118A  	fcall	stringdir
  4947     1583  00C8               	movwf	??_fround+2
  4948     1584  160A  118A  200A  160A  118A  	fcall	stringdir
  4949     1589  00C9               	movwf	??_fround+3
  4950     158A  160A  118A  200A  160A  118A  	fcall	stringdir
  4951     158F  00CA               	movwf	??_fround+4
  4952     1590  084A               	movf	??_fround+4,w
  4953     1591  00AF               	movwf	___flmul@a+3
  4954     1592  0849               	movf	??_fround+3,w
  4955     1593  00AE               	movwf	___flmul@a+2
  4956     1594  0848               	movf	??_fround+2,w
  4957     1595  00AD               	movwf	___flmul@a+1
  4958     1596  0847               	movf	??_fround+1,w
  4959     1597  00AC               	movwf	___flmul@a
  4960     1598  120A  158A  2158  160A  118A  	fcall	___flmul
  4961     159D  1283               	bcf	3,5	;RP0=0, select bank0
  4962     159E  1303               	bcf	3,6	;RP1=0, select bank0
  4963     159F  082B               	movf	?___flmul+3,w
  4964     15A0  00C5               	movwf	?_fround+3
  4965     15A1  082A               	movf	?___flmul+2,w
  4966     15A2  00C4               	movwf	?_fround+2
  4967     15A3  0829               	movf	?___flmul+1,w
  4968     15A4  00C3               	movwf	?_fround+1
  4969     15A5  0828               	movf	?___flmul,w
  4970     15A6  00C2               	movwf	?_fround
  4971     15A7                     l266:
  4972     15A7  0008               	return
  4973     15A8                     __end_of_fround:
  4974                           
  4975                           	psect	text7
  4976     1B5D                     __ptext7:	
  4977 ;; *************** function ___lwmod *****************
  4978 ;; Defined at:
  4979 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  divisor         2    2[COMMON] unsigned int 
  4982 ;;  dividend        2    4[COMMON] unsigned int 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;  counter         1    7[COMMON] unsigned char 
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  2    2[COMMON] unsigned int 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4994 ;;      Params:         4       0       0       0       0
  4995 ;;      Locals:         1       0       0       0       0
  4996 ;;      Temps:          1       0       0       0       0
  4997 ;;      Totals:         6       0       0       0       0
  4998 ;;Total ram usage:        6 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; Hardware stack levels required when called: 1
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_fround
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008     1B5D                     ___lwmod:	
  5009                           ;psect for function ___lwmod
  5010                           
  5011     1B5D                     l2480:	
  5012                           ;incstack = 0
  5013                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5014                           
  5015     1B5D  0872               	movf	___lwmod@divisor,w
  5016     1B5E  0473               	iorwf	___lwmod@divisor+1,w
  5017     1B5F  1903               	btfsc	3,2
  5018     1B60  2B62               	goto	u3361
  5019     1B61  2B63               	goto	u3360
  5020     1B62                     u3361:
  5021     1B62  2B92               	goto	l2498
  5022     1B63                     u3360:
  5023     1B63                     l2482:
  5024     1B63  01F7               	clrf	___lwmod@counter
  5025     1B64  0AF7               	incf	___lwmod@counter,f
  5026     1B65  2B71               	goto	l2488
  5027     1B66                     l2484:
  5028     1B66  3001               	movlw	1
  5029     1B67                     u3375:
  5030     1B67  1003               	clrc
  5031     1B68  0DF2               	rlf	___lwmod@divisor,f
  5032     1B69  0DF3               	rlf	___lwmod@divisor+1,f
  5033     1B6A  3EFF               	addlw	-1
  5034     1B6B  1D03               	skipz
  5035     1B6C  2B67               	goto	u3375
  5036     1B6D                     l2486:
  5037     1B6D  3001               	movlw	1
  5038     1B6E  00F6               	movwf	??___lwmod
  5039     1B6F  0876               	movf	??___lwmod,w
  5040     1B70  07F7               	addwf	___lwmod@counter,f
  5041     1B71                     l2488:
  5042     1B71  1FF3               	btfss	___lwmod@divisor+1,7
  5043     1B72  2B74               	goto	u3381
  5044     1B73  2B75               	goto	u3380
  5045     1B74                     u3381:
  5046     1B74  2B66               	goto	l2484
  5047     1B75                     u3380:
  5048     1B75                     l2490:
  5049     1B75  0873               	movf	___lwmod@divisor+1,w
  5050     1B76  0275               	subwf	___lwmod@dividend+1,w
  5051     1B77  1D03               	skipz
  5052     1B78  2B7B               	goto	u3395
  5053     1B79  0872               	movf	___lwmod@divisor,w
  5054     1B7A  0274               	subwf	___lwmod@dividend,w
  5055     1B7B                     u3395:
  5056     1B7B  1C03               	skipc
  5057     1B7C  2B7E               	goto	u3391
  5058     1B7D  2B7F               	goto	u3390
  5059     1B7E                     u3391:
  5060     1B7E  2B85               	goto	l2494
  5061     1B7F                     u3390:
  5062     1B7F                     l2492:
  5063     1B7F  0872               	movf	___lwmod@divisor,w
  5064     1B80  02F4               	subwf	___lwmod@dividend,f
  5065     1B81  0873               	movf	___lwmod@divisor+1,w
  5066     1B82  1C03               	skipc
  5067     1B83  03F5               	decf	___lwmod@dividend+1,f
  5068     1B84  02F5               	subwf	___lwmod@dividend+1,f
  5069     1B85                     l2494:
  5070     1B85  3001               	movlw	1
  5071     1B86                     u3405:
  5072     1B86  1003               	clrc
  5073     1B87  0CF3               	rrf	___lwmod@divisor+1,f
  5074     1B88  0CF2               	rrf	___lwmod@divisor,f
  5075     1B89  3EFF               	addlw	-1
  5076     1B8A  1D03               	skipz
  5077     1B8B  2B86               	goto	u3405
  5078     1B8C                     l2496:
  5079     1B8C  3001               	movlw	1
  5080     1B8D  02F7               	subwf	___lwmod@counter,f
  5081     1B8E  1D03               	btfss	3,2
  5082     1B8F  2B91               	goto	u3411
  5083     1B90  2B92               	goto	u3410
  5084     1B91                     u3411:
  5085     1B91  2B75               	goto	l2490
  5086     1B92                     u3410:
  5087     1B92                     l2498:
  5088     1B92  0875               	movf	___lwmod@dividend+1,w
  5089     1B93  00F3               	movwf	?___lwmod+1
  5090     1B94  0874               	movf	___lwmod@dividend,w
  5091     1B95  00F2               	movwf	?___lwmod
  5092     1B96                     l659:
  5093     1B96  0008               	return
  5094     1B97                     __end_of___lwmod:
  5095                           
  5096                           	psect	text8
  5097     1C23                     __ptext8:	
  5098 ;; *************** function ___lwdiv *****************
  5099 ;; Defined at:
  5100 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  divisor         2    8[COMMON] unsigned int 
  5103 ;;  dividend        2   10[COMMON] unsigned int 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;  quotient        2    1[BANK0 ] unsigned int 
  5106 ;;  counter         1    3[BANK0 ] unsigned char 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  2    8[COMMON] unsigned int 
  5109 ;; Registers used:
  5110 ;;		wreg, status,2, status,0
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5116 ;;      Params:         4       0       0       0       0
  5117 ;;      Locals:         0       3       0       0       0
  5118 ;;      Temps:          0       1       0       0       0
  5119 ;;      Totals:         4       4       0       0       0
  5120 ;;Total ram usage:        8 bytes
  5121 ;; Hardware stack levels used: 1
  5122 ;; Hardware stack levels required when called: 1
  5123 ;; This function calls:
  5124 ;;		Nothing
  5125 ;; This function is called by:
  5126 ;;		_fround
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130     1C23                     ___lwdiv:	
  5131                           ;psect for function ___lwdiv
  5132                           
  5133     1C23                     l2454:	
  5134                           ;incstack = 0
  5135                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5136                           
  5137     1C23  1283               	bcf	3,5	;RP0=0, select bank0
  5138     1C24  1303               	bcf	3,6	;RP1=0, select bank0
  5139     1C25  01A1               	clrf	___lwdiv@quotient
  5140     1C26  01A2               	clrf	___lwdiv@quotient+1
  5141     1C27                     l2456:
  5142     1C27  0878               	movf	___lwdiv@divisor,w
  5143     1C28  0479               	iorwf	___lwdiv@divisor+1,w
  5144     1C29  1903               	btfsc	3,2
  5145     1C2A  2C2C               	goto	u3291
  5146     1C2B  2C2D               	goto	u3290
  5147     1C2C                     u3291:
  5148     1C2C  2C64               	goto	l2476
  5149     1C2D                     u3290:
  5150     1C2D                     l2458:
  5151     1C2D  01A3               	clrf	___lwdiv@counter
  5152     1C2E  0AA3               	incf	___lwdiv@counter,f
  5153     1C2F  2C3B               	goto	l2464
  5154     1C30                     l2460:
  5155     1C30  3001               	movlw	1
  5156     1C31                     u3305:
  5157     1C31  1003               	clrc
  5158     1C32  0DF8               	rlf	___lwdiv@divisor,f
  5159     1C33  0DF9               	rlf	___lwdiv@divisor+1,f
  5160     1C34  3EFF               	addlw	-1
  5161     1C35  1D03               	skipz
  5162     1C36  2C31               	goto	u3305
  5163     1C37                     l2462:
  5164     1C37  3001               	movlw	1
  5165     1C38  00A0               	movwf	??___lwdiv
  5166     1C39  0820               	movf	??___lwdiv,w
  5167     1C3A  07A3               	addwf	___lwdiv@counter,f
  5168     1C3B                     l2464:
  5169     1C3B  1FF9               	btfss	___lwdiv@divisor+1,7
  5170     1C3C  2C3E               	goto	u3311
  5171     1C3D  2C3F               	goto	u3310
  5172     1C3E                     u3311:
  5173     1C3E  2C30               	goto	l2460
  5174     1C3F                     u3310:
  5175     1C3F                     l2466:
  5176     1C3F  3001               	movlw	1
  5177     1C40                     u3325:
  5178     1C40  1003               	clrc
  5179     1C41  0DA1               	rlf	___lwdiv@quotient,f
  5180     1C42  0DA2               	rlf	___lwdiv@quotient+1,f
  5181     1C43  3EFF               	addlw	-1
  5182     1C44  1D03               	skipz
  5183     1C45  2C40               	goto	u3325
  5184     1C46  0879               	movf	___lwdiv@divisor+1,w
  5185     1C47  027B               	subwf	___lwdiv@dividend+1,w
  5186     1C48  1D03               	skipz
  5187     1C49  2C4C               	goto	u3335
  5188     1C4A  0878               	movf	___lwdiv@divisor,w
  5189     1C4B  027A               	subwf	___lwdiv@dividend,w
  5190     1C4C                     u3335:
  5191     1C4C  1C03               	skipc
  5192     1C4D  2C4F               	goto	u3331
  5193     1C4E  2C50               	goto	u3330
  5194     1C4F                     u3331:
  5195     1C4F  2C57               	goto	l2472
  5196     1C50                     u3330:
  5197     1C50                     l2468:
  5198     1C50  0878               	movf	___lwdiv@divisor,w
  5199     1C51  02FA               	subwf	___lwdiv@dividend,f
  5200     1C52  0879               	movf	___lwdiv@divisor+1,w
  5201     1C53  1C03               	skipc
  5202     1C54  03FB               	decf	___lwdiv@dividend+1,f
  5203     1C55  02FB               	subwf	___lwdiv@dividend+1,f
  5204     1C56                     l2470:
  5205     1C56  1421               	bsf	___lwdiv@quotient,0
  5206     1C57                     l2472:
  5207     1C57  3001               	movlw	1
  5208     1C58                     u3345:
  5209     1C58  1003               	clrc
  5210     1C59  0CF9               	rrf	___lwdiv@divisor+1,f
  5211     1C5A  0CF8               	rrf	___lwdiv@divisor,f
  5212     1C5B  3EFF               	addlw	-1
  5213     1C5C  1D03               	skipz
  5214     1C5D  2C58               	goto	u3345
  5215     1C5E                     l2474:
  5216     1C5E  3001               	movlw	1
  5217     1C5F  02A3               	subwf	___lwdiv@counter,f
  5218     1C60  1D03               	btfss	3,2
  5219     1C61  2C63               	goto	u3351
  5220     1C62  2C64               	goto	u3350
  5221     1C63                     u3351:
  5222     1C63  2C3F               	goto	l2466
  5223     1C64                     u3350:
  5224     1C64                     l2476:
  5225     1C64  0822               	movf	___lwdiv@quotient+1,w
  5226     1C65  00F9               	movwf	?___lwdiv+1
  5227     1C66  0821               	movf	___lwdiv@quotient,w
  5228     1C67  00F8               	movwf	?___lwdiv
  5229     1C68                     l649:
  5230     1C68  0008               	return
  5231     1C69                     __end_of___lwdiv:
  5232                           
  5233                           	psect	text9
  5234     1113                     __ptext9:	
  5235 ;; *************** function __tdiv_to_l_ *****************
  5236 ;; Defined at:
  5237 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  f1              4    2[COMMON] float 
  5240 ;;  f2              4    6[COMMON] float 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  quot            4    3[BANK0 ] unsigned long 
  5243 ;;  exp1            1    8[BANK0 ] unsigned char 
  5244 ;;  cntr            1    7[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  4    2[COMMON] unsigned long 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5254 ;;      Params:         8       0       0       0       0
  5255 ;;      Locals:         0       6       0       0       0
  5256 ;;      Temps:          0       3       0       0       0
  5257 ;;      Totals:         8       9       0       0       0
  5258 ;;Total ram usage:       17 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 1
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_sprintf
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268     1113                     __tdiv_to_l_:	
  5269                           ;psect for function __tdiv_to_l_
  5270                           
  5271     1113                     l2944:	
  5272                           ;incstack = 0
  5273                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5274                           
  5275     1113  0872               	movf	__tdiv_to_l_@f1,w
  5276     1114  1283               	bcf	3,5	;RP0=0, select bank0
  5277     1115  1303               	bcf	3,6	;RP1=0, select bank0
  5278     1116  00A0               	movwf	??__tdiv_to_l_
  5279     1117  0873               	movf	__tdiv_to_l_@f1+1,w
  5280     1118  00A1               	movwf	??__tdiv_to_l_+1
  5281     1119  0874               	movf	__tdiv_to_l_@f1+2,w
  5282     111A  00A2               	movwf	??__tdiv_to_l_+2
  5283     111B  1003               	clrc
  5284     111C  0D21               	rlf	??__tdiv_to_l_+1,w
  5285     111D  0D22               	rlf	??__tdiv_to_l_+2,w
  5286     111E  00A8               	movwf	__tdiv_to_l_@exp1
  5287     111F  0828               	movf	__tdiv_to_l_@exp1,w
  5288     1120  1D03               	btfss	3,2
  5289     1121  2923               	goto	u4531
  5290     1122  2924               	goto	u4530
  5291     1123                     u4531:
  5292     1123  292D               	goto	l2950
  5293     1124                     u4530:
  5294     1124                     l2946:
  5295     1124  3000               	movlw	0
  5296     1125  00F5               	movwf	?__tdiv_to_l_+3
  5297     1126  3000               	movlw	0
  5298     1127  00F4               	movwf	?__tdiv_to_l_+2
  5299     1128  3000               	movlw	0
  5300     1129  00F3               	movwf	?__tdiv_to_l_+1
  5301     112A  3000               	movlw	0
  5302     112B  00F2               	movwf	?__tdiv_to_l_
  5303     112C  29C9               	goto	l560
  5304     112D                     l2950:
  5305     112D  0876               	movf	__tdiv_to_l_@f2,w
  5306     112E  00A0               	movwf	??__tdiv_to_l_
  5307     112F  0877               	movf	__tdiv_to_l_@f2+1,w
  5308     1130  00A1               	movwf	??__tdiv_to_l_+1
  5309     1131  0878               	movf	__tdiv_to_l_@f2+2,w
  5310     1132  00A2               	movwf	??__tdiv_to_l_+2
  5311     1133  1003               	clrc
  5312     1134  0D21               	rlf	??__tdiv_to_l_+1,w
  5313     1135  0D22               	rlf	??__tdiv_to_l_+2,w
  5314     1136  00A7               	movwf	__tdiv_to_l_@cntr
  5315     1137  0827               	movf	__tdiv_to_l_@cntr,w
  5316     1138  1D03               	btfss	3,2
  5317     1139  293B               	goto	u4541
  5318     113A  293C               	goto	u4540
  5319     113B                     u4541:
  5320     113B  293D               	goto	l561
  5321     113C                     u4540:
  5322     113C  2924               	goto	l2946
  5323     113D                     l561:
  5324     113D  17F3               	bsf	__tdiv_to_l_@f1+1,7
  5325     113E                     l2956:
  5326     113E  30FF               	movlw	255
  5327     113F  05F2               	andwf	__tdiv_to_l_@f1,f
  5328     1140  30FF               	movlw	255
  5329     1141  05F3               	andwf	__tdiv_to_l_@f1+1,f
  5330     1142  3000               	movlw	0
  5331     1143  05F4               	andwf	__tdiv_to_l_@f1+2,f
  5332     1144                     l2958:
  5333     1144  17F7               	bsf	__tdiv_to_l_@f2+1,7
  5334     1145  30FF               	movlw	255
  5335     1146  05F6               	andwf	__tdiv_to_l_@f2,f
  5336     1147  30FF               	movlw	255
  5337     1148  05F7               	andwf	__tdiv_to_l_@f2+1,f
  5338     1149  3000               	movlw	0
  5339     114A  05F8               	andwf	__tdiv_to_l_@f2+2,f
  5340     114B  3000               	movlw	0
  5341     114C  00A6               	movwf	__tdiv_to_l_@quot+3
  5342     114D  3000               	movlw	0
  5343     114E  00A5               	movwf	__tdiv_to_l_@quot+2
  5344     114F  3000               	movlw	0
  5345     1150  00A4               	movwf	__tdiv_to_l_@quot+1
  5346     1151  3000               	movlw	0
  5347     1152  00A3               	movwf	__tdiv_to_l_@quot
  5348     1153                     l2960:
  5349     1153  307F               	movlw	127
  5350     1154  02A8               	subwf	__tdiv_to_l_@exp1,f
  5351     1155                     l2962:
  5352     1155  3098               	movlw	152
  5353     1156  0727               	addwf	__tdiv_to_l_@cntr,w
  5354     1157  00A0               	movwf	??__tdiv_to_l_
  5355     1158  0820               	movf	??__tdiv_to_l_,w
  5356     1159  02A8               	subwf	__tdiv_to_l_@exp1,f
  5357     115A  3018               	movlw	24
  5358     115B  00A7               	movwf	__tdiv_to_l_@cntr
  5359     115C                     l2964:
  5360     115C  3001               	movlw	1
  5361     115D  00A0               	movwf	??__tdiv_to_l_
  5362     115E                     u4555:
  5363     115E  1003               	clrc
  5364     115F  0DA3               	rlf	__tdiv_to_l_@quot,f
  5365     1160  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5366     1161  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5367     1162  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5368     1163  0BA0               	decfsz	??__tdiv_to_l_,f
  5369     1164  295E               	goto	u4555
  5370     1165                     l2966:
  5371     1165  0878               	movf	__tdiv_to_l_@f2+2,w
  5372     1166  0274               	subwf	__tdiv_to_l_@f1+2,w
  5373     1167  1D03               	skipz
  5374     1168  296F               	goto	u4565
  5375     1169  0877               	movf	__tdiv_to_l_@f2+1,w
  5376     116A  0273               	subwf	__tdiv_to_l_@f1+1,w
  5377     116B  1D03               	skipz
  5378     116C  296F               	goto	u4565
  5379     116D  0876               	movf	__tdiv_to_l_@f2,w
  5380     116E  0272               	subwf	__tdiv_to_l_@f1,w
  5381     116F                     u4565:
  5382     116F  1C03               	skipc
  5383     1170  2972               	goto	u4561
  5384     1171  2973               	goto	u4560
  5385     1172                     u4561:
  5386     1172  297E               	goto	l2972
  5387     1173                     u4560:
  5388     1173                     l2968:
  5389     1173  0876               	movf	__tdiv_to_l_@f2,w
  5390     1174  02F2               	subwf	__tdiv_to_l_@f1,f
  5391     1175  0877               	movf	__tdiv_to_l_@f2+1,w
  5392     1176  1C03               	skipc
  5393     1177  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5394     1178  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5395     1179  0878               	movf	__tdiv_to_l_@f2+2,w
  5396     117A  1C03               	skipc
  5397     117B  0A78               	incf	__tdiv_to_l_@f2+2,w
  5398     117C  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5399     117D                     l2970:
  5400     117D  1423               	bsf	__tdiv_to_l_@quot,0
  5401     117E                     l2972:
  5402     117E  3001               	movlw	1
  5403     117F                     u4575:
  5404     117F  1003               	clrc
  5405     1180  0DF2               	rlf	__tdiv_to_l_@f1,f
  5406     1181  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5407     1182  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5408     1183  3EFF               	addlw	-1
  5409     1184  1D03               	skipz
  5410     1185  297F               	goto	u4575
  5411     1186                     l2974:
  5412     1186  3001               	movlw	1
  5413     1187  02A7               	subwf	__tdiv_to_l_@cntr,f
  5414     1188  1D03               	btfss	3,2
  5415     1189  298B               	goto	u4581
  5416     118A  298C               	goto	u4580
  5417     118B                     u4581:
  5418     118B  295C               	goto	l2964
  5419     118C                     u4580:
  5420     118C                     l564:
  5421     118C  1FA8               	btfss	__tdiv_to_l_@exp1,7
  5422     118D  298F               	goto	u4591
  5423     118E  2990               	goto	u4590
  5424     118F                     u4591:
  5425     118F  29AA               	goto	l2984
  5426     1190                     u4590:
  5427     1190                     l2976:
  5428     1190  0828               	movf	__tdiv_to_l_@exp1,w
  5429     1191  3A80               	xorlw	128
  5430     1192  3E97               	addlw	151
  5431     1193  1803               	skipnc
  5432     1194  2996               	goto	u4601
  5433     1195  2997               	goto	u4600
  5434     1196                     u4601:
  5435     1196  2998               	goto	l2982
  5436     1197                     u4600:
  5437     1197  2924               	goto	l2946
  5438     1198                     l2982:
  5439     1198  3001               	movlw	1
  5440     1199                     u4615:
  5441     1199  1003               	clrc
  5442     119A  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  5443     119B  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  5444     119C  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  5445     119D  0CA3               	rrf	__tdiv_to_l_@quot,f
  5446     119E  3EFF               	addlw	-1
  5447     119F  1D03               	skipz
  5448     11A0  2999               	goto	u4615
  5449     11A1  3001               	movlw	1
  5450     11A2  00A0               	movwf	??__tdiv_to_l_
  5451     11A3  0820               	movf	??__tdiv_to_l_,w
  5452     11A4  07A8               	addwf	__tdiv_to_l_@exp1,f
  5453     11A5  1D03               	btfss	3,2
  5454     11A6  29A8               	goto	u4621
  5455     11A7  29A9               	goto	u4620
  5456     11A8                     u4621:
  5457     11A8  2998               	goto	l2982
  5458     11A9                     u4620:
  5459     11A9  29C1               	goto	l2992
  5460     11AA                     l2984:
  5461     11AA  3018               	movlw	24
  5462     11AB  0228               	subwf	__tdiv_to_l_@exp1,w
  5463     11AC  1C03               	skipc
  5464     11AD  29AF               	goto	u4631
  5465     11AE  29B0               	goto	u4630
  5466     11AF                     u4631:
  5467     11AF  29BC               	goto	l571
  5468     11B0                     u4630:
  5469     11B0  2924               	goto	l2946
  5470     11B1                     l2990:
  5471     11B1  3001               	movlw	1
  5472     11B2  00A0               	movwf	??__tdiv_to_l_
  5473     11B3                     u4645:
  5474     11B3  1003               	clrc
  5475     11B4  0DA3               	rlf	__tdiv_to_l_@quot,f
  5476     11B5  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5477     11B6  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5478     11B7  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5479     11B8  0BA0               	decfsz	??__tdiv_to_l_,f
  5480     11B9  29B3               	goto	u4645
  5481     11BA  3001               	movlw	1
  5482     11BB  02A8               	subwf	__tdiv_to_l_@exp1,f
  5483     11BC                     l571:
  5484     11BC  0828               	movf	__tdiv_to_l_@exp1,w
  5485     11BD  1D03               	btfss	3,2
  5486     11BE  29C0               	goto	u4651
  5487     11BF  29C1               	goto	u4650
  5488     11C0                     u4651:
  5489     11C0  29B1               	goto	l2990
  5490     11C1                     u4650:
  5491     11C1                     l2992:
  5492     11C1  0826               	movf	__tdiv_to_l_@quot+3,w
  5493     11C2  00F5               	movwf	?__tdiv_to_l_+3
  5494     11C3  0825               	movf	__tdiv_to_l_@quot+2,w
  5495     11C4  00F4               	movwf	?__tdiv_to_l_+2
  5496     11C5  0824               	movf	__tdiv_to_l_@quot+1,w
  5497     11C6  00F3               	movwf	?__tdiv_to_l_+1
  5498     11C7  0823               	movf	__tdiv_to_l_@quot,w
  5499     11C8  00F2               	movwf	?__tdiv_to_l_
  5500     11C9                     l560:
  5501     11C9  0008               	return
  5502     11CA                     __end_of__tdiv_to_l_:
  5503                           
  5504                           	psect	text10
  5505     08A0                     __ptext10:	
  5506 ;; *************** function __div_to_l_ *****************
  5507 ;; Defined at:
  5508 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  f1              4    2[COMMON] unsigned long 
  5511 ;;  f2              4    6[COMMON] unsigned long 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  quot            4    0[BANK0 ] unsigned long 
  5514 ;;  exp1            1    5[BANK0 ] unsigned char 
  5515 ;;  cntr            1    4[BANK0 ] unsigned char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  4    2[COMMON] unsigned long 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5525 ;;      Params:         8       0       0       0       0
  5526 ;;      Locals:         0       6       0       0       0
  5527 ;;      Temps:          1       0       0       0       0
  5528 ;;      Totals:         9       6       0       0       0
  5529 ;;Total ram usage:       15 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_sprintf
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539     08A0                     __div_to_l_:	
  5540                           ;psect for function __div_to_l_
  5541                           
  5542     08A0                     l2996:	
  5543                           ;incstack = 0
  5544                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5545                           
  5546     08A0  1003               	clrc
  5547     08A1  0D74               	rlf	__div_to_l_@f1+2,w
  5548     08A2  0D75               	rlf	__div_to_l_@f1+3,w
  5549     08A3  1283               	bcf	3,5	;RP0=0, select bank0
  5550     08A4  1303               	bcf	3,6	;RP1=0, select bank0
  5551     08A5  00A5               	movwf	__div_to_l_@exp1
  5552     08A6  0825               	movf	__div_to_l_@exp1,w
  5553     08A7  1D03               	btfss	3,2
  5554     08A8  28AA               	goto	u4661
  5555     08A9  28AB               	goto	u4660
  5556     08AA                     u4661:
  5557     08AA  28B4               	goto	l3002
  5558     08AB                     u4660:
  5559     08AB                     l2998:
  5560     08AB  3000               	movlw	0
  5561     08AC  00F5               	movwf	?__div_to_l_+3
  5562     08AD  3000               	movlw	0
  5563     08AE  00F4               	movwf	?__div_to_l_+2
  5564     08AF  3000               	movlw	0
  5565     08B0  00F3               	movwf	?__div_to_l_+1
  5566     08B1  3000               	movlw	0
  5567     08B2  00F2               	movwf	?__div_to_l_
  5568     08B3  2957               	goto	l513
  5569     08B4                     l3002:
  5570     08B4  1003               	clrc
  5571     08B5  0D78               	rlf	__div_to_l_@f2+2,w
  5572     08B6  0D79               	rlf	__div_to_l_@f2+3,w
  5573     08B7  00A4               	movwf	__div_to_l_@cntr
  5574     08B8  0824               	movf	__div_to_l_@cntr,w
  5575     08B9  1D03               	btfss	3,2
  5576     08BA  28BC               	goto	u4671
  5577     08BB  28BD               	goto	u4670
  5578     08BC                     u4671:
  5579     08BC  28BE               	goto	l514
  5580     08BD                     u4670:
  5581     08BD  28AB               	goto	l2998
  5582     08BE                     l514:
  5583     08BE  17F4               	bsf	__div_to_l_@f1+2,7
  5584     08BF                     l3008:
  5585     08BF  30FF               	movlw	255
  5586     08C0  05F2               	andwf	__div_to_l_@f1,f
  5587     08C1  30FF               	movlw	255
  5588     08C2  05F3               	andwf	__div_to_l_@f1+1,f
  5589     08C3  30FF               	movlw	255
  5590     08C4  05F4               	andwf	__div_to_l_@f1+2,f
  5591     08C5  3000               	movlw	0
  5592     08C6  05F5               	andwf	__div_to_l_@f1+3,f
  5593     08C7                     l3010:
  5594     08C7  17F8               	bsf	__div_to_l_@f2+2,7
  5595     08C8  30FF               	movlw	255
  5596     08C9  05F6               	andwf	__div_to_l_@f2,f
  5597     08CA  30FF               	movlw	255
  5598     08CB  05F7               	andwf	__div_to_l_@f2+1,f
  5599     08CC  30FF               	movlw	255
  5600     08CD  05F8               	andwf	__div_to_l_@f2+2,f
  5601     08CE  3000               	movlw	0
  5602     08CF  05F9               	andwf	__div_to_l_@f2+3,f
  5603     08D0  3000               	movlw	0
  5604     08D1  00A3               	movwf	__div_to_l_@quot+3
  5605     08D2  3000               	movlw	0
  5606     08D3  00A2               	movwf	__div_to_l_@quot+2
  5607     08D4  3000               	movlw	0
  5608     08D5  00A1               	movwf	__div_to_l_@quot+1
  5609     08D6  3000               	movlw	0
  5610     08D7  00A0               	movwf	__div_to_l_@quot
  5611     08D8                     l3012:
  5612     08D8  307F               	movlw	127
  5613     08D9  02A5               	subwf	__div_to_l_@exp1,f
  5614     08DA                     l3014:
  5615     08DA  30A0               	movlw	160
  5616     08DB  0724               	addwf	__div_to_l_@cntr,w
  5617     08DC  00FA               	movwf	??__div_to_l_
  5618     08DD  087A               	movf	??__div_to_l_,w
  5619     08DE  02A5               	subwf	__div_to_l_@exp1,f
  5620     08DF  3020               	movlw	32
  5621     08E0  00A4               	movwf	__div_to_l_@cntr
  5622     08E1                     l3016:
  5623     08E1  3001               	movlw	1
  5624     08E2  00FA               	movwf	??__div_to_l_
  5625     08E3                     u4685:
  5626     08E3  1003               	clrc
  5627     08E4  0DA0               	rlf	__div_to_l_@quot,f
  5628     08E5  0DA1               	rlf	__div_to_l_@quot+1,f
  5629     08E6  0DA2               	rlf	__div_to_l_@quot+2,f
  5630     08E7  0DA3               	rlf	__div_to_l_@quot+3,f
  5631     08E8  0BFA               	decfsz	??__div_to_l_,f
  5632     08E9  28E3               	goto	u4685
  5633     08EA                     l3018:
  5634     08EA  0879               	movf	__div_to_l_@f2+3,w
  5635     08EB  0275               	subwf	__div_to_l_@f1+3,w
  5636     08EC  1D03               	skipz
  5637     08ED  28F8               	goto	u4695
  5638     08EE  0878               	movf	__div_to_l_@f2+2,w
  5639     08EF  0274               	subwf	__div_to_l_@f1+2,w
  5640     08F0  1D03               	skipz
  5641     08F1  28F8               	goto	u4695
  5642     08F2  0877               	movf	__div_to_l_@f2+1,w
  5643     08F3  0273               	subwf	__div_to_l_@f1+1,w
  5644     08F4  1D03               	skipz
  5645     08F5  28F8               	goto	u4695
  5646     08F6  0876               	movf	__div_to_l_@f2,w
  5647     08F7  0272               	subwf	__div_to_l_@f1,w
  5648     08F8                     u4695:
  5649     08F8  1C03               	skipc
  5650     08F9  28FB               	goto	u4691
  5651     08FA  28FC               	goto	u4690
  5652     08FB                     u4691:
  5653     08FB  290B               	goto	l3024
  5654     08FC                     u4690:
  5655     08FC                     l3020:
  5656     08FC  0876               	movf	__div_to_l_@f2,w
  5657     08FD  02F2               	subwf	__div_to_l_@f1,f
  5658     08FE  0877               	movf	__div_to_l_@f2+1,w
  5659     08FF  1C03               	skipc
  5660     0900  0F77               	incfsz	__div_to_l_@f2+1,w
  5661     0901  02F3               	subwf	__div_to_l_@f1+1,f
  5662     0902  0878               	movf	__div_to_l_@f2+2,w
  5663     0903  1C03               	skipc
  5664     0904  0F78               	incfsz	__div_to_l_@f2+2,w
  5665     0905  02F4               	subwf	__div_to_l_@f1+2,f
  5666     0906  0879               	movf	__div_to_l_@f2+3,w
  5667     0907  1C03               	skipc
  5668     0908  0F79               	incfsz	__div_to_l_@f2+3,w
  5669     0909  02F5               	subwf	__div_to_l_@f1+3,f
  5670     090A                     l3022:
  5671     090A  1420               	bsf	__div_to_l_@quot,0
  5672     090B                     l3024:
  5673     090B  3001               	movlw	1
  5674     090C  00FA               	movwf	??__div_to_l_
  5675     090D                     u4705:
  5676     090D  1003               	clrc
  5677     090E  0DF2               	rlf	__div_to_l_@f1,f
  5678     090F  0DF3               	rlf	__div_to_l_@f1+1,f
  5679     0910  0DF4               	rlf	__div_to_l_@f1+2,f
  5680     0911  0DF5               	rlf	__div_to_l_@f1+3,f
  5681     0912  0BFA               	decfsz	??__div_to_l_,f
  5682     0913  290D               	goto	u4705
  5683     0914                     l3026:
  5684     0914  3001               	movlw	1
  5685     0915  02A4               	subwf	__div_to_l_@cntr,f
  5686     0916  1D03               	btfss	3,2
  5687     0917  2919               	goto	u4711
  5688     0918  291A               	goto	u4710
  5689     0919                     u4711:
  5690     0919  28E1               	goto	l3016
  5691     091A                     u4710:
  5692     091A                     l517:
  5693     091A  1FA5               	btfss	__div_to_l_@exp1,7
  5694     091B  291D               	goto	u4721
  5695     091C  291E               	goto	u4720
  5696     091D                     u4721:
  5697     091D  2938               	goto	l3036
  5698     091E                     u4720:
  5699     091E                     l3028:
  5700     091E  0825               	movf	__div_to_l_@exp1,w
  5701     091F  3A80               	xorlw	128
  5702     0920  3E9F               	addlw	159
  5703     0921  1803               	skipnc
  5704     0922  2924               	goto	u4731
  5705     0923  2925               	goto	u4730
  5706     0924                     u4731:
  5707     0924  2926               	goto	l3034
  5708     0925                     u4730:
  5709     0925  28AB               	goto	l2998
  5710     0926                     l3034:
  5711     0926  3001               	movlw	1
  5712     0927                     u4745:
  5713     0927  1003               	clrc
  5714     0928  0CA3               	rrf	__div_to_l_@quot+3,f
  5715     0929  0CA2               	rrf	__div_to_l_@quot+2,f
  5716     092A  0CA1               	rrf	__div_to_l_@quot+1,f
  5717     092B  0CA0               	rrf	__div_to_l_@quot,f
  5718     092C  3EFF               	addlw	-1
  5719     092D  1D03               	skipz
  5720     092E  2927               	goto	u4745
  5721     092F  3001               	movlw	1
  5722     0930  00FA               	movwf	??__div_to_l_
  5723     0931  087A               	movf	??__div_to_l_,w
  5724     0932  07A5               	addwf	__div_to_l_@exp1,f
  5725     0933  1D03               	btfss	3,2
  5726     0934  2936               	goto	u4751
  5727     0935  2937               	goto	u4750
  5728     0936                     u4751:
  5729     0936  2926               	goto	l3034
  5730     0937                     u4750:
  5731     0937  294F               	goto	l3044
  5732     0938                     l3036:
  5733     0938  3020               	movlw	32
  5734     0939  0225               	subwf	__div_to_l_@exp1,w
  5735     093A  1C03               	skipc
  5736     093B  293D               	goto	u4761
  5737     093C  293E               	goto	u4760
  5738     093D                     u4761:
  5739     093D  294A               	goto	l524
  5740     093E                     u4760:
  5741     093E  28AB               	goto	l2998
  5742     093F                     l3042:
  5743     093F  3001               	movlw	1
  5744     0940  00FA               	movwf	??__div_to_l_
  5745     0941                     u4775:
  5746     0941  1003               	clrc
  5747     0942  0DA0               	rlf	__div_to_l_@quot,f
  5748     0943  0DA1               	rlf	__div_to_l_@quot+1,f
  5749     0944  0DA2               	rlf	__div_to_l_@quot+2,f
  5750     0945  0DA3               	rlf	__div_to_l_@quot+3,f
  5751     0946  0BFA               	decfsz	??__div_to_l_,f
  5752     0947  2941               	goto	u4775
  5753     0948  3001               	movlw	1
  5754     0949  02A5               	subwf	__div_to_l_@exp1,f
  5755     094A                     l524:
  5756     094A  0825               	movf	__div_to_l_@exp1,w
  5757     094B  1D03               	btfss	3,2
  5758     094C  294E               	goto	u4781
  5759     094D  294F               	goto	u4780
  5760     094E                     u4781:
  5761     094E  293F               	goto	l3042
  5762     094F                     u4780:
  5763     094F                     l3044:
  5764     094F  0823               	movf	__div_to_l_@quot+3,w
  5765     0950  00F5               	movwf	?__div_to_l_+3
  5766     0951  0822               	movf	__div_to_l_@quot+2,w
  5767     0952  00F4               	movwf	?__div_to_l_+2
  5768     0953  0821               	movf	__div_to_l_@quot+1,w
  5769     0954  00F3               	movwf	?__div_to_l_+1
  5770     0955  0820               	movf	__div_to_l_@quot,w
  5771     0956  00F2               	movwf	?__div_to_l_
  5772     0957                     l513:
  5773     0957  0008               	return
  5774     0958                     __end_of__div_to_l_:
  5775                           
  5776                           	psect	text11
  5777     07DA                     __ptext11:	
  5778 ;; *************** function ___wmul *****************
  5779 ;; Defined at:
  5780 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  multiplier      2    2[COMMON] unsigned int 
  5783 ;;  multiplicand    2    4[COMMON] unsigned int 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  product         2    6[COMMON] unsigned int 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  2    2[COMMON] unsigned int 
  5788 ;; Registers used:
  5789 ;;		wreg, status,2, status,0
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5795 ;;      Params:         4       0       0       0       0
  5796 ;;      Locals:         2       0       0       0       0
  5797 ;;      Temps:          0       0       0       0       0
  5798 ;;      Totals:         6       0       0       0       0
  5799 ;;Total ram usage:        6 bytes
  5800 ;; Hardware stack levels used: 1
  5801 ;; Hardware stack levels required when called: 1
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		_sprintf
  5806 ;;		_adc_mv
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810     07DA                     ___wmul:	
  5811                           ;psect for function ___wmul
  5812                           
  5813     07DA                     l3048:	
  5814                           ;incstack = 0
  5815                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5816                           
  5817     07DA  01F6               	clrf	___wmul@product
  5818     07DB  01F7               	clrf	___wmul@product+1
  5819     07DC                     l3050:
  5820     07DC  1C72               	btfss	___wmul@multiplier,0
  5821     07DD  2FDF               	goto	u4791
  5822     07DE  2FE0               	goto	u4790
  5823     07DF                     u4791:
  5824     07DF  2FE6               	goto	l343
  5825     07E0                     u4790:
  5826     07E0                     l3052:
  5827     07E0  0874               	movf	___wmul@multiplicand,w
  5828     07E1  07F6               	addwf	___wmul@product,f
  5829     07E2  1803               	skipnc
  5830     07E3  0AF7               	incf	___wmul@product+1,f
  5831     07E4  0875               	movf	___wmul@multiplicand+1,w
  5832     07E5  07F7               	addwf	___wmul@product+1,f
  5833     07E6                     l343:
  5834     07E6  3001               	movlw	1
  5835     07E7                     u4805:
  5836     07E7  1003               	clrc
  5837     07E8  0DF4               	rlf	___wmul@multiplicand,f
  5838     07E9  0DF5               	rlf	___wmul@multiplicand+1,f
  5839     07EA  3EFF               	addlw	-1
  5840     07EB  1D03               	skipz
  5841     07EC  2FE7               	goto	u4805
  5842     07ED                     l3054:
  5843     07ED  3001               	movlw	1
  5844     07EE                     u4815:
  5845     07EE  1003               	clrc
  5846     07EF  0CF3               	rrf	___wmul@multiplier+1,f
  5847     07F0  0CF2               	rrf	___wmul@multiplier,f
  5848     07F1  3EFF               	addlw	-1
  5849     07F2  1D03               	skipz
  5850     07F3  2FEE               	goto	u4815
  5851     07F4                     l3056:
  5852     07F4  0872               	movf	___wmul@multiplier,w
  5853     07F5  0473               	iorwf	___wmul@multiplier+1,w
  5854     07F6  1D03               	btfss	3,2
  5855     07F7  2FF9               	goto	u4821
  5856     07F8  2FFA               	goto	u4820
  5857     07F9                     u4821:
  5858     07F9  2FDC               	goto	l3050
  5859     07FA                     u4820:
  5860     07FA                     l3058:
  5861     07FA  0877               	movf	___wmul@product+1,w
  5862     07FB  00F3               	movwf	?___wmul+1
  5863     07FC  0876               	movf	___wmul@product,w
  5864     07FD  00F2               	movwf	?___wmul
  5865     07FE                     l345:
  5866     07FE  0008               	return
  5867     07FF                     __end_of___wmul:
  5868                           
  5869                           	psect	text12
  5870     1D09                     __ptext12:	
  5871 ;; *************** function ___llmod *****************
  5872 ;; Defined at:
  5873 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  divisor         4    2[COMMON] unsigned long 
  5876 ;;  dividend        4    6[COMMON] unsigned long 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  counter         1   11[COMMON] unsigned char 
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  4    2[COMMON] unsigned long 
  5881 ;; Registers used:
  5882 ;;		wreg, status,2, status,0
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5888 ;;      Params:         8       0       0       0       0
  5889 ;;      Locals:         1       0       0       0       0
  5890 ;;      Temps:          1       0       0       0       0
  5891 ;;      Totals:        10       0       0       0       0
  5892 ;;Total ram usage:       10 bytes
  5893 ;; Hardware stack levels used: 1
  5894 ;; Hardware stack levels required when called: 1
  5895 ;; This function calls:
  5896 ;;		Nothing
  5897 ;; This function is called by:
  5898 ;;		_sprintf
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902     1D09                     ___llmod:	
  5903                           ;psect for function ___llmod
  5904                           
  5905     1D09                     l3162:	
  5906                           ;incstack = 0
  5907                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5908                           
  5909     1D09  0875               	movf	___llmod@divisor+3,w
  5910     1D0A  0474               	iorwf	___llmod@divisor+2,w
  5911     1D0B  0473               	iorwf	___llmod@divisor+1,w
  5912     1D0C  0472               	iorwf	___llmod@divisor,w
  5913     1D0D  1903               	skipnz
  5914     1D0E  2D10               	goto	u5111
  5915     1D0F  2D11               	goto	u5110
  5916     1D10                     u5111:
  5917     1D10  2D54               	goto	l3178
  5918     1D11                     u5110:
  5919     1D11                     l3164:
  5920     1D11  01FB               	clrf	___llmod@counter
  5921     1D12  0AFB               	incf	___llmod@counter,f
  5922     1D13  2D21               	goto	l3168
  5923     1D14                     l3166:
  5924     1D14  3001               	movlw	1
  5925     1D15  00FA               	movwf	??___llmod
  5926     1D16                     u5125:
  5927     1D16  1003               	clrc
  5928     1D17  0DF2               	rlf	___llmod@divisor,f
  5929     1D18  0DF3               	rlf	___llmod@divisor+1,f
  5930     1D19  0DF4               	rlf	___llmod@divisor+2,f
  5931     1D1A  0DF5               	rlf	___llmod@divisor+3,f
  5932     1D1B  0BFA               	decfsz	??___llmod,f
  5933     1D1C  2D16               	goto	u5125
  5934     1D1D  3001               	movlw	1
  5935     1D1E  00FA               	movwf	??___llmod
  5936     1D1F  087A               	movf	??___llmod,w
  5937     1D20  07FB               	addwf	___llmod@counter,f
  5938     1D21                     l3168:
  5939     1D21  1FF5               	btfss	___llmod@divisor+3,7
  5940     1D22  2D24               	goto	u5131
  5941     1D23  2D25               	goto	u5130
  5942     1D24                     u5131:
  5943     1D24  2D14               	goto	l3166
  5944     1D25                     u5130:
  5945     1D25                     l3170:
  5946     1D25  0875               	movf	___llmod@divisor+3,w
  5947     1D26  0279               	subwf	___llmod@dividend+3,w
  5948     1D27  1D03               	skipz
  5949     1D28  2D33               	goto	u5145
  5950     1D29  0874               	movf	___llmod@divisor+2,w
  5951     1D2A  0278               	subwf	___llmod@dividend+2,w
  5952     1D2B  1D03               	skipz
  5953     1D2C  2D33               	goto	u5145
  5954     1D2D  0873               	movf	___llmod@divisor+1,w
  5955     1D2E  0277               	subwf	___llmod@dividend+1,w
  5956     1D2F  1D03               	skipz
  5957     1D30  2D33               	goto	u5145
  5958     1D31  0872               	movf	___llmod@divisor,w
  5959     1D32  0276               	subwf	___llmod@dividend,w
  5960     1D33                     u5145:
  5961     1D33  1C03               	skipc
  5962     1D34  2D36               	goto	u5141
  5963     1D35  2D37               	goto	u5140
  5964     1D36                     u5141:
  5965     1D36  2D45               	goto	l3174
  5966     1D37                     u5140:
  5967     1D37                     l3172:
  5968     1D37  0872               	movf	___llmod@divisor,w
  5969     1D38  02F6               	subwf	___llmod@dividend,f
  5970     1D39  0873               	movf	___llmod@divisor+1,w
  5971     1D3A  1C03               	skipc
  5972     1D3B  0F73               	incfsz	___llmod@divisor+1,w
  5973     1D3C  02F7               	subwf	___llmod@dividend+1,f
  5974     1D3D  0874               	movf	___llmod@divisor+2,w
  5975     1D3E  1C03               	skipc
  5976     1D3F  0F74               	incfsz	___llmod@divisor+2,w
  5977     1D40  02F8               	subwf	___llmod@dividend+2,f
  5978     1D41  0875               	movf	___llmod@divisor+3,w
  5979     1D42  1C03               	skipc
  5980     1D43  0F75               	incfsz	___llmod@divisor+3,w
  5981     1D44  02F9               	subwf	___llmod@dividend+3,f
  5982     1D45                     l3174:
  5983     1D45  3001               	movlw	1
  5984     1D46                     u5155:
  5985     1D46  1003               	clrc
  5986     1D47  0CF5               	rrf	___llmod@divisor+3,f
  5987     1D48  0CF4               	rrf	___llmod@divisor+2,f
  5988     1D49  0CF3               	rrf	___llmod@divisor+1,f
  5989     1D4A  0CF2               	rrf	___llmod@divisor,f
  5990     1D4B  3EFF               	addlw	-1
  5991     1D4C  1D03               	skipz
  5992     1D4D  2D46               	goto	u5155
  5993     1D4E                     l3176:
  5994     1D4E  3001               	movlw	1
  5995     1D4F  02FB               	subwf	___llmod@counter,f
  5996     1D50  1D03               	btfss	3,2
  5997     1D51  2D53               	goto	u5161
  5998     1D52  2D54               	goto	u5160
  5999     1D53                     u5161:
  6000     1D53  2D25               	goto	l3170
  6001     1D54                     u5160:
  6002     1D54                     l3178:
  6003     1D54  0879               	movf	___llmod@dividend+3,w
  6004     1D55  00F5               	movwf	?___llmod+3
  6005     1D56  0878               	movf	___llmod@dividend+2,w
  6006     1D57  00F4               	movwf	?___llmod+2
  6007     1D58  0877               	movf	___llmod@dividend+1,w
  6008     1D59  00F3               	movwf	?___llmod+1
  6009     1D5A  0876               	movf	___llmod@dividend,w
  6010     1D5B  00F2               	movwf	?___llmod
  6011     1D5C                     l599:
  6012     1D5C  0008               	return
  6013     1D5D                     __end_of___llmod:
  6014                           
  6015                           	psect	text13
  6016     1E13                     __ptext13:	
  6017 ;; *************** function ___lldiv *****************
  6018 ;; Defined at:
  6019 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  divisor         4    2[COMMON] unsigned long 
  6022 ;;  dividend        4    6[COMMON] unsigned long 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;  quotient        4    0[BANK0 ] unsigned long 
  6025 ;;  counter         1    4[BANK0 ] unsigned char 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  4    2[COMMON] unsigned long 
  6028 ;; Registers used:
  6029 ;;		wreg, status,2, status,0
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6035 ;;      Params:         8       0       0       0       0
  6036 ;;      Locals:         0       5       0       0       0
  6037 ;;      Temps:          1       0       0       0       0
  6038 ;;      Totals:         9       5       0       0       0
  6039 ;;Total ram usage:       14 bytes
  6040 ;; Hardware stack levels used: 1
  6041 ;; Hardware stack levels required when called: 1
  6042 ;; This function calls:
  6043 ;;		Nothing
  6044 ;; This function is called by:
  6045 ;;		_sprintf
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049     1E13                     ___lldiv:	
  6050                           ;psect for function ___lldiv
  6051                           
  6052     1E13                     l3062:	
  6053                           ;incstack = 0
  6054                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6055                           
  6056     1E13  3000               	movlw	0
  6057     1E14  1283               	bcf	3,5	;RP0=0, select bank0
  6058     1E15  1303               	bcf	3,6	;RP1=0, select bank0
  6059     1E16  00A3               	movwf	___lldiv@quotient+3
  6060     1E17  3000               	movlw	0
  6061     1E18  00A2               	movwf	___lldiv@quotient+2
  6062     1E19  3000               	movlw	0
  6063     1E1A  00A1               	movwf	___lldiv@quotient+1
  6064     1E1B  3000               	movlw	0
  6065     1E1C  00A0               	movwf	___lldiv@quotient
  6066     1E1D  0875               	movf	___lldiv@divisor+3,w
  6067     1E1E  0474               	iorwf	___lldiv@divisor+2,w
  6068     1E1F  0473               	iorwf	___lldiv@divisor+1,w
  6069     1E20  0472               	iorwf	___lldiv@divisor,w
  6070     1E21  1903               	skipnz
  6071     1E22  2E24               	goto	u4831
  6072     1E23  2E25               	goto	u4830
  6073     1E24                     u4831:
  6074     1E24  2E72               	goto	l3082
  6075     1E25                     u4830:
  6076     1E25                     l3064:
  6077     1E25  01A4               	clrf	___lldiv@counter
  6078     1E26  0AA4               	incf	___lldiv@counter,f
  6079     1E27  2E35               	goto	l3068
  6080     1E28                     l3066:
  6081     1E28  3001               	movlw	1
  6082     1E29  00FA               	movwf	??___lldiv
  6083     1E2A                     u4845:
  6084     1E2A  1003               	clrc
  6085     1E2B  0DF2               	rlf	___lldiv@divisor,f
  6086     1E2C  0DF3               	rlf	___lldiv@divisor+1,f
  6087     1E2D  0DF4               	rlf	___lldiv@divisor+2,f
  6088     1E2E  0DF5               	rlf	___lldiv@divisor+3,f
  6089     1E2F  0BFA               	decfsz	??___lldiv,f
  6090     1E30  2E2A               	goto	u4845
  6091     1E31  3001               	movlw	1
  6092     1E32  00FA               	movwf	??___lldiv
  6093     1E33  087A               	movf	??___lldiv,w
  6094     1E34  07A4               	addwf	___lldiv@counter,f
  6095     1E35                     l3068:
  6096     1E35  1FF5               	btfss	___lldiv@divisor+3,7
  6097     1E36  2E38               	goto	u4851
  6098     1E37  2E39               	goto	u4850
  6099     1E38                     u4851:
  6100     1E38  2E28               	goto	l3066
  6101     1E39                     u4850:
  6102     1E39                     l3070:
  6103     1E39  3001               	movlw	1
  6104     1E3A  00FA               	movwf	??___lldiv
  6105     1E3B                     u4865:
  6106     1E3B  1003               	clrc
  6107     1E3C  0DA0               	rlf	___lldiv@quotient,f
  6108     1E3D  0DA1               	rlf	___lldiv@quotient+1,f
  6109     1E3E  0DA2               	rlf	___lldiv@quotient+2,f
  6110     1E3F  0DA3               	rlf	___lldiv@quotient+3,f
  6111     1E40  0BFA               	decfsz	??___lldiv,f
  6112     1E41  2E3B               	goto	u4865
  6113     1E42                     l3072:
  6114     1E42  0875               	movf	___lldiv@divisor+3,w
  6115     1E43  0279               	subwf	___lldiv@dividend+3,w
  6116     1E44  1D03               	skipz
  6117     1E45  2E50               	goto	u4875
  6118     1E46  0874               	movf	___lldiv@divisor+2,w
  6119     1E47  0278               	subwf	___lldiv@dividend+2,w
  6120     1E48  1D03               	skipz
  6121     1E49  2E50               	goto	u4875
  6122     1E4A  0873               	movf	___lldiv@divisor+1,w
  6123     1E4B  0277               	subwf	___lldiv@dividend+1,w
  6124     1E4C  1D03               	skipz
  6125     1E4D  2E50               	goto	u4875
  6126     1E4E  0872               	movf	___lldiv@divisor,w
  6127     1E4F  0276               	subwf	___lldiv@dividend,w
  6128     1E50                     u4875:
  6129     1E50  1C03               	skipc
  6130     1E51  2E53               	goto	u4871
  6131     1E52  2E54               	goto	u4870
  6132     1E53                     u4871:
  6133     1E53  2E63               	goto	l3078
  6134     1E54                     u4870:
  6135     1E54                     l3074:
  6136     1E54  0872               	movf	___lldiv@divisor,w
  6137     1E55  02F6               	subwf	___lldiv@dividend,f
  6138     1E56  0873               	movf	___lldiv@divisor+1,w
  6139     1E57  1C03               	skipc
  6140     1E58  0F73               	incfsz	___lldiv@divisor+1,w
  6141     1E59  02F7               	subwf	___lldiv@dividend+1,f
  6142     1E5A  0874               	movf	___lldiv@divisor+2,w
  6143     1E5B  1C03               	skipc
  6144     1E5C  0F74               	incfsz	___lldiv@divisor+2,w
  6145     1E5D  02F8               	subwf	___lldiv@dividend+2,f
  6146     1E5E  0875               	movf	___lldiv@divisor+3,w
  6147     1E5F  1C03               	skipc
  6148     1E60  0F75               	incfsz	___lldiv@divisor+3,w
  6149     1E61  02F9               	subwf	___lldiv@dividend+3,f
  6150     1E62                     l3076:
  6151     1E62  1420               	bsf	___lldiv@quotient,0
  6152     1E63                     l3078:
  6153     1E63  3001               	movlw	1
  6154     1E64                     u4885:
  6155     1E64  1003               	clrc
  6156     1E65  0CF5               	rrf	___lldiv@divisor+3,f
  6157     1E66  0CF4               	rrf	___lldiv@divisor+2,f
  6158     1E67  0CF3               	rrf	___lldiv@divisor+1,f
  6159     1E68  0CF2               	rrf	___lldiv@divisor,f
  6160     1E69  3EFF               	addlw	-1
  6161     1E6A  1D03               	skipz
  6162     1E6B  2E64               	goto	u4885
  6163     1E6C                     l3080:
  6164     1E6C  3001               	movlw	1
  6165     1E6D  02A4               	subwf	___lldiv@counter,f
  6166     1E6E  1D03               	btfss	3,2
  6167     1E6F  2E71               	goto	u4891
  6168     1E70  2E72               	goto	u4890
  6169     1E71                     u4891:
  6170     1E71  2E39               	goto	l3070
  6171     1E72                     u4890:
  6172     1E72                     l3082:
  6173     1E72  0823               	movf	___lldiv@quotient+3,w
  6174     1E73  00F5               	movwf	?___lldiv+3
  6175     1E74  0822               	movf	___lldiv@quotient+2,w
  6176     1E75  00F4               	movwf	?___lldiv+2
  6177     1E76  0821               	movf	___lldiv@quotient+1,w
  6178     1E77  00F3               	movwf	?___lldiv+1
  6179     1E78  0820               	movf	___lldiv@quotient,w
  6180     1E79  00F2               	movwf	?___lldiv
  6181     1E7A                     l379:
  6182     1E7A  0008               	return
  6183     1E7B                     __end_of___lldiv:
  6184                           
  6185                           	psect	text14
  6186     1EE4                     __ptext14:	
  6187 ;; *************** function ___fltol *****************
  6188 ;; Defined at:
  6189 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  f1              4   53[BANK0 ] unsigned long 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;  exp1            1   62[BANK0 ] unsigned char 
  6194 ;;  sign1           1   61[BANK0 ] unsigned char 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  4   53[BANK0 ] long 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6204 ;;      Params:         0       4       0       0       0
  6205 ;;      Locals:         0       2       0       0       0
  6206 ;;      Temps:          0       4       0       0       0
  6207 ;;      Totals:         0      10       0       0       0
  6208 ;;Total ram usage:       10 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 1
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_sprintf
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218     1EE4                     ___fltol:	
  6219                           ;psect for function ___fltol
  6220                           
  6221     1EE4                     l3126:	
  6222                           ;incstack = 0
  6223                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6224                           
  6225     1EE4  1003               	clrc
  6226     1EE5  1283               	bcf	3,5	;RP0=0, select bank0
  6227     1EE6  1303               	bcf	3,6	;RP1=0, select bank0
  6228     1EE7  0D57               	rlf	___fltol@f1+2,w
  6229     1EE8  0D58               	rlf	___fltol@f1+3,w
  6230     1EE9  00DE               	movwf	___fltol@exp1
  6231     1EEA  085E               	movf	___fltol@exp1,w
  6232     1EEB  1D03               	btfss	3,2
  6233     1EEC  2EEE               	goto	u5011
  6234     1EED  2EEF               	goto	u5010
  6235     1EEE                     u5011:
  6236     1EEE  2EF8               	goto	l3132
  6237     1EEF                     u5010:
  6238     1EEF                     l3128:
  6239     1EEF  3000               	movlw	0
  6240     1EF0  00D8               	movwf	?___fltol+3
  6241     1EF1  3000               	movlw	0
  6242     1EF2  00D7               	movwf	?___fltol+2
  6243     1EF3  3000               	movlw	0
  6244     1EF4  00D6               	movwf	?___fltol+1
  6245     1EF5  3000               	movlw	0
  6246     1EF6  00D5               	movwf	?___fltol
  6247     1EF7  2F5B               	goto	l546
  6248     1EF8                     l3132:
  6249     1EF8  0855               	movf	___fltol@f1,w
  6250     1EF9  00D9               	movwf	??___fltol
  6251     1EFA  0856               	movf	___fltol@f1+1,w
  6252     1EFB  00DA               	movwf	??___fltol+1
  6253     1EFC  0857               	movf	___fltol@f1+2,w
  6254     1EFD  00DB               	movwf	??___fltol+2
  6255     1EFE  0858               	movf	___fltol@f1+3,w
  6256     1EFF  00DC               	movwf	??___fltol+3
  6257     1F00  301F               	movlw	31
  6258     1F01                     u5025:
  6259     1F01  1003               	clrc
  6260     1F02  0CDC               	rrf	??___fltol+3,f
  6261     1F03  0CDB               	rrf	??___fltol+2,f
  6262     1F04  0CDA               	rrf	??___fltol+1,f
  6263     1F05  0CD9               	rrf	??___fltol,f
  6264     1F06                     u5020:
  6265     1F06  3EFF               	addlw	-1
  6266     1F07  1D03               	skipz
  6267     1F08  2F01               	goto	u5025
  6268     1F09  0859               	movf	??___fltol,w
  6269     1F0A  00DD               	movwf	___fltol@sign1
  6270     1F0B                     l3134:
  6271     1F0B  17D7               	bsf	___fltol@f1+2,7
  6272     1F0C                     l3136:
  6273     1F0C  30FF               	movlw	255
  6274     1F0D  05D5               	andwf	___fltol@f1,f
  6275     1F0E  30FF               	movlw	255
  6276     1F0F  05D6               	andwf	___fltol@f1+1,f
  6277     1F10  30FF               	movlw	255
  6278     1F11  05D7               	andwf	___fltol@f1+2,f
  6279     1F12  3000               	movlw	0
  6280     1F13  05D8               	andwf	___fltol@f1+3,f
  6281     1F14                     l3138:
  6282     1F14  3096               	movlw	150
  6283     1F15  02DE               	subwf	___fltol@exp1,f
  6284     1F16                     l3140:
  6285     1F16  1FDE               	btfss	___fltol@exp1,7
  6286     1F17  2F19               	goto	u5031
  6287     1F18  2F1A               	goto	u5030
  6288     1F19                     u5031:
  6289     1F19  2F34               	goto	l3150
  6290     1F1A                     u5030:
  6291     1F1A                     l3142:
  6292     1F1A  085E               	movf	___fltol@exp1,w
  6293     1F1B  3A80               	xorlw	128
  6294     1F1C  3E97               	addlw	151
  6295     1F1D  1803               	skipnc
  6296     1F1E  2F20               	goto	u5041
  6297     1F1F  2F21               	goto	u5040
  6298     1F20                     u5041:
  6299     1F20  2F22               	goto	l3148
  6300     1F21                     u5040:
  6301     1F21  2EEF               	goto	l3128
  6302     1F22                     l3148:
  6303     1F22  3001               	movlw	1
  6304     1F23                     u5055:
  6305     1F23  1003               	clrc
  6306     1F24  0CD8               	rrf	___fltol@f1+3,f
  6307     1F25  0CD7               	rrf	___fltol@f1+2,f
  6308     1F26  0CD6               	rrf	___fltol@f1+1,f
  6309     1F27  0CD5               	rrf	___fltol@f1,f
  6310     1F28  3EFF               	addlw	-1
  6311     1F29  1D03               	skipz
  6312     1F2A  2F23               	goto	u5055
  6313     1F2B  3001               	movlw	1
  6314     1F2C  00D9               	movwf	??___fltol
  6315     1F2D  0859               	movf	??___fltol,w
  6316     1F2E  07DE               	addwf	___fltol@exp1,f
  6317     1F2F  1D03               	btfss	3,2
  6318     1F30  2F32               	goto	u5061
  6319     1F31  2F33               	goto	u5060
  6320     1F32                     u5061:
  6321     1F32  2F22               	goto	l3148
  6322     1F33                     u5060:
  6323     1F33  2F4B               	goto	l3158
  6324     1F34                     l3150:
  6325     1F34  3020               	movlw	32
  6326     1F35  025E               	subwf	___fltol@exp1,w
  6327     1F36  1C03               	skipc
  6328     1F37  2F39               	goto	u5071
  6329     1F38  2F3A               	goto	u5070
  6330     1F39                     u5071:
  6331     1F39  2F46               	goto	l553
  6332     1F3A                     u5070:
  6333     1F3A  2EEF               	goto	l3128
  6334     1F3B                     l3156:
  6335     1F3B  3001               	movlw	1
  6336     1F3C  00D9               	movwf	??___fltol
  6337     1F3D                     u5085:
  6338     1F3D  1003               	clrc
  6339     1F3E  0DD5               	rlf	___fltol@f1,f
  6340     1F3F  0DD6               	rlf	___fltol@f1+1,f
  6341     1F40  0DD7               	rlf	___fltol@f1+2,f
  6342     1F41  0DD8               	rlf	___fltol@f1+3,f
  6343     1F42  0BD9               	decfsz	??___fltol,f
  6344     1F43  2F3D               	goto	u5085
  6345     1F44  3001               	movlw	1
  6346     1F45  02DE               	subwf	___fltol@exp1,f
  6347     1F46                     l553:
  6348     1F46  085E               	movf	___fltol@exp1,w
  6349     1F47  1D03               	btfss	3,2
  6350     1F48  2F4A               	goto	u5091
  6351     1F49  2F4B               	goto	u5090
  6352     1F4A                     u5091:
  6353     1F4A  2F3B               	goto	l3156
  6354     1F4B                     u5090:
  6355     1F4B                     l3158:
  6356     1F4B  085D               	movf	___fltol@sign1,w
  6357     1F4C  1903               	btfsc	3,2
  6358     1F4D  2F4F               	goto	u5101
  6359     1F4E  2F50               	goto	u5100
  6360     1F4F                     u5101:
  6361     1F4F  2F5B               	goto	l556
  6362     1F50                     u5100:
  6363     1F50                     l3160:
  6364     1F50  09D5               	comf	___fltol@f1,f
  6365     1F51  09D6               	comf	___fltol@f1+1,f
  6366     1F52  09D7               	comf	___fltol@f1+2,f
  6367     1F53  09D8               	comf	___fltol@f1+3,f
  6368     1F54  0AD5               	incf	___fltol@f1,f
  6369     1F55  1903               	skipnz
  6370     1F56  0AD6               	incf	___fltol@f1+1,f
  6371     1F57  1903               	skipnz
  6372     1F58  0AD7               	incf	___fltol@f1+2,f
  6373     1F59  1903               	skipnz
  6374     1F5A  0AD8               	incf	___fltol@f1+3,f
  6375     1F5B                     l556:
  6376     1F5B                     l546:
  6377     1F5B  0008               	return
  6378     1F5C                     __end_of___fltol:
  6379                           
  6380                           	psect	text15
  6381     1CB9                     __ptext15:	
  6382 ;; *************** function ___flsub *****************
  6383 ;; Defined at:
  6384 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  a               4    0[BANK1 ] long 
  6387 ;;  b               4    4[BANK1 ] long 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  4    0[BANK1 ] long 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6399 ;;      Params:         0       0       8       0       0
  6400 ;;      Locals:         0       0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0
  6402 ;;      Totals:         0       0       8       0       0
  6403 ;;Total ram usage:        8 bytes
  6404 ;; Hardware stack levels used: 1
  6405 ;; Hardware stack levels required when called: 2
  6406 ;; This function calls:
  6407 ;;		___fladd
  6408 ;; This function is called by:
  6409 ;;		_sprintf
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413     1CB9                     ___flsub:	
  6414                           ;psect for function ___flsub
  6415                           
  6416     1CB9                     l3182:	
  6417                           ;incstack = 0
  6418                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6419                           
  6420     1CB9  3080               	movlw	128
  6421     1CBA  1683               	bsf	3,5	;RP0=1, select bank1
  6422     1CBB  1303               	bcf	3,6	;RP1=0, select bank1
  6423     1CBC  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6424     1CBD                     l3184:
  6425     1CBD  0827               	movf	(___flsub@b+3)^(0+128),w
  6426     1CBE  1283               	bcf	3,5	;RP0=0, select bank0
  6427     1CBF  1303               	bcf	3,6	;RP1=0, select bank0
  6428     1CC0  00D9               	movwf	___fladd@b+3
  6429     1CC1  1683               	bsf	3,5	;RP0=1, select bank1
  6430     1CC2  1303               	bcf	3,6	;RP1=0, select bank1
  6431     1CC3  0826               	movf	(___flsub@b+2)^(0+128),w
  6432     1CC4  1283               	bcf	3,5	;RP0=0, select bank0
  6433     1CC5  1303               	bcf	3,6	;RP1=0, select bank0
  6434     1CC6  00D8               	movwf	___fladd@b+2
  6435     1CC7  1683               	bsf	3,5	;RP0=1, select bank1
  6436     1CC8  1303               	bcf	3,6	;RP1=0, select bank1
  6437     1CC9  0825               	movf	(___flsub@b+1)^(0+128),w
  6438     1CCA  1283               	bcf	3,5	;RP0=0, select bank0
  6439     1CCB  1303               	bcf	3,6	;RP1=0, select bank0
  6440     1CCC  00D7               	movwf	___fladd@b+1
  6441     1CCD  1683               	bsf	3,5	;RP0=1, select bank1
  6442     1CCE  1303               	bcf	3,6	;RP1=0, select bank1
  6443     1CCF  0824               	movf	___flsub@b^(0+128),w
  6444     1CD0  1283               	bcf	3,5	;RP0=0, select bank0
  6445     1CD1  1303               	bcf	3,6	;RP1=0, select bank0
  6446     1CD2  00D6               	movwf	___fladd@b
  6447     1CD3  1683               	bsf	3,5	;RP0=1, select bank1
  6448     1CD4  1303               	bcf	3,6	;RP1=0, select bank1
  6449     1CD5  0823               	movf	(___flsub@a+3)^(0+128),w
  6450     1CD6  1283               	bcf	3,5	;RP0=0, select bank0
  6451     1CD7  1303               	bcf	3,6	;RP1=0, select bank0
  6452     1CD8  00DD               	movwf	___fladd@a+3
  6453     1CD9  1683               	bsf	3,5	;RP0=1, select bank1
  6454     1CDA  1303               	bcf	3,6	;RP1=0, select bank1
  6455     1CDB  0822               	movf	(___flsub@a+2)^(0+128),w
  6456     1CDC  1283               	bcf	3,5	;RP0=0, select bank0
  6457     1CDD  1303               	bcf	3,6	;RP1=0, select bank0
  6458     1CDE  00DC               	movwf	___fladd@a+2
  6459     1CDF  1683               	bsf	3,5	;RP0=1, select bank1
  6460     1CE0  1303               	bcf	3,6	;RP1=0, select bank1
  6461     1CE1  0821               	movf	(___flsub@a+1)^(0+128),w
  6462     1CE2  1283               	bcf	3,5	;RP0=0, select bank0
  6463     1CE3  1303               	bcf	3,6	;RP1=0, select bank0
  6464     1CE4  00DB               	movwf	___fladd@a+1
  6465     1CE5  1683               	bsf	3,5	;RP0=1, select bank1
  6466     1CE6  1303               	bcf	3,6	;RP1=0, select bank1
  6467     1CE7  0820               	movf	___flsub@a^(0+128),w
  6468     1CE8  1283               	bcf	3,5	;RP0=0, select bank0
  6469     1CE9  1303               	bcf	3,6	;RP1=0, select bank0
  6470     1CEA  00DA               	movwf	___fladd@a
  6471     1CEB  160A  118A  25A8  160A  158A  	fcall	___fladd
  6472     1CF0  1283               	bcf	3,5	;RP0=0, select bank0
  6473     1CF1  1303               	bcf	3,6	;RP1=0, select bank0
  6474     1CF2  0859               	movf	?___fladd+3,w
  6475     1CF3  1683               	bsf	3,5	;RP0=1, select bank1
  6476     1CF4  1303               	bcf	3,6	;RP1=0, select bank1
  6477     1CF5  00A3               	movwf	(?___flsub+3)^(0+128)
  6478     1CF6  1283               	bcf	3,5	;RP0=0, select bank0
  6479     1CF7  1303               	bcf	3,6	;RP1=0, select bank0
  6480     1CF8  0858               	movf	?___fladd+2,w
  6481     1CF9  1683               	bsf	3,5	;RP0=1, select bank1
  6482     1CFA  1303               	bcf	3,6	;RP1=0, select bank1
  6483     1CFB  00A2               	movwf	(?___flsub+2)^(0+128)
  6484     1CFC  1283               	bcf	3,5	;RP0=0, select bank0
  6485     1CFD  1303               	bcf	3,6	;RP1=0, select bank0
  6486     1CFE  0857               	movf	?___fladd+1,w
  6487     1CFF  1683               	bsf	3,5	;RP0=1, select bank1
  6488     1D00  1303               	bcf	3,6	;RP1=0, select bank1
  6489     1D01  00A1               	movwf	(?___flsub+1)^(0+128)
  6490     1D02  1283               	bcf	3,5	;RP0=0, select bank0
  6491     1D03  1303               	bcf	3,6	;RP1=0, select bank0
  6492     1D04  0856               	movf	?___fladd,w
  6493     1D05  1683               	bsf	3,5	;RP0=1, select bank1
  6494     1D06  1303               	bcf	3,6	;RP1=0, select bank1
  6495     1D07  00A0               	movwf	?___flsub^(0+128)
  6496     1D08                     l716:
  6497     1D08  0008               	return
  6498     1D09                     __end_of___flsub:
  6499                           
  6500                           	psect	text16
  6501     15A8                     __ptext16:	
  6502 ;; *************** function ___fladd *****************
  6503 ;; Defined at:
  6504 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  b               4   54[BANK0 ] long 
  6507 ;;  a               4   58[BANK0 ] long 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  grs             1   73[BANK0 ] unsigned char 
  6510 ;;  bexp            1   72[BANK0 ] unsigned char 
  6511 ;;  aexp            1   71[BANK0 ] unsigned char 
  6512 ;;  signs           1   70[BANK0 ] unsigned char 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  4   54[BANK0 ] unsigned char 
  6515 ;; Registers used:
  6516 ;;		wreg, status,2, status,0, btemp+1
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6522 ;;      Params:         0       8       0       0       0
  6523 ;;      Locals:         0       4       0       0       0
  6524 ;;      Temps:          0       8       0       0       0
  6525 ;;      Totals:         0      20       0       0       0
  6526 ;;Total ram usage:       20 bytes
  6527 ;; Hardware stack levels used: 1
  6528 ;; Hardware stack levels required when called: 1
  6529 ;; This function calls:
  6530 ;;		Nothing
  6531 ;; This function is called by:
  6532 ;;		_sprintf
  6533 ;;		___flsub
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537     15A8                     ___fladd:	
  6538                           ;psect for function ___fladd
  6539                           
  6540     15A8                     l2502:	
  6541                           ;incstack = 0
  6542                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6543                           
  6544     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  6545     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  6546     15AA  0859               	movf	___fladd@b+3,w
  6547     15AB  3980               	andlw	128
  6548     15AC  00E6               	movwf	___fladd@signs
  6549     15AD                     l2504:
  6550     15AD  0859               	movf	___fladd@b+3,w
  6551     15AE  00DE               	movwf	??___fladd
  6552     15AF  075E               	addwf	??___fladd,w
  6553     15B0  00E8               	movwf	___fladd@bexp
  6554     15B1                     l2506:
  6555     15B1  1FD8               	btfss	___fladd@b+2,7
  6556     15B2  2DB4               	goto	u3421
  6557     15B3  2DB5               	goto	u3420
  6558     15B4                     u3421:
  6559     15B4  2DB6               	goto	l2510
  6560     15B5                     u3420:
  6561     15B5                     l2508:
  6562     15B5  1468               	bsf	___fladd@bexp,0
  6563     15B6                     l2510:
  6564     15B6  0868               	movf	___fladd@bexp,w
  6565     15B7  1903               	btfsc	3,2
  6566     15B8  2DBA               	goto	u3431
  6567     15B9  2DBB               	goto	u3430
  6568     15BA                     u3431:
  6569     15BA  2DCB               	goto	l2520
  6570     15BB                     u3430:
  6571     15BB                     l2512:
  6572     15BB  0A68               	incf	___fladd@bexp,w
  6573     15BC  1D03               	btfss	3,2
  6574     15BD  2DBF               	goto	u3441
  6575     15BE  2DC0               	goto	u3440
  6576     15BF                     u3441:
  6577     15BF  2DC8               	goto	l2516
  6578     15C0                     u3440:
  6579     15C0                     l2514:
  6580     15C0  3000               	movlw	0
  6581     15C1  00D9               	movwf	___fladd@b+3
  6582     15C2  3000               	movlw	0
  6583     15C3  00D8               	movwf	___fladd@b+2
  6584     15C4  3000               	movlw	0
  6585     15C5  00D7               	movwf	___fladd@b+1
  6586     15C6  3000               	movlw	0
  6587     15C7  00D6               	movwf	___fladd@b
  6588     15C8                     l2516:
  6589     15C8  17D8               	bsf	___fladd@b+2,7
  6590     15C9                     l2518:
  6591     15C9  01D9               	clrf	___fladd@b+3
  6592     15CA  2DD3               	goto	l2522
  6593     15CB                     l2520:
  6594     15CB  3000               	movlw	0
  6595     15CC  00D9               	movwf	___fladd@b+3
  6596     15CD  3000               	movlw	0
  6597     15CE  00D8               	movwf	___fladd@b+2
  6598     15CF  3000               	movlw	0
  6599     15D0  00D7               	movwf	___fladd@b+1
  6600     15D1  3000               	movlw	0
  6601     15D2  00D6               	movwf	___fladd@b
  6602     15D3                     l2522:
  6603     15D3  085D               	movf	___fladd@a+3,w
  6604     15D4  3980               	andlw	128
  6605     15D5  00E7               	movwf	___fladd@aexp
  6606     15D6                     l2524:
  6607     15D6  0867               	movf	___fladd@aexp,w
  6608     15D7  0666               	xorwf	___fladd@signs,w
  6609     15D8  1903               	skipnz
  6610     15D9  2DDB               	goto	u3451
  6611     15DA  2DDC               	goto	u3450
  6612     15DB                     u3451:
  6613     15DB  2DDD               	goto	l2528
  6614     15DC                     u3450:
  6615     15DC                     l2526:
  6616     15DC  1766               	bsf	___fladd@signs,6
  6617     15DD                     l2528:
  6618     15DD  085D               	movf	___fladd@a+3,w
  6619     15DE  00DE               	movwf	??___fladd
  6620     15DF  075E               	addwf	??___fladd,w
  6621     15E0  00E7               	movwf	___fladd@aexp
  6622     15E1                     l2530:
  6623     15E1  1FDC               	btfss	___fladd@a+2,7
  6624     15E2  2DE4               	goto	u3461
  6625     15E3  2DE5               	goto	u3460
  6626     15E4                     u3461:
  6627     15E4  2DE6               	goto	l2534
  6628     15E5                     u3460:
  6629     15E5                     l2532:
  6630     15E5  1467               	bsf	___fladd@aexp,0
  6631     15E6                     l2534:
  6632     15E6  0867               	movf	___fladd@aexp,w
  6633     15E7  1903               	btfsc	3,2
  6634     15E8  2DEA               	goto	u3471
  6635     15E9  2DEB               	goto	u3470
  6636     15EA                     u3471:
  6637     15EA  2DFB               	goto	l2544
  6638     15EB                     u3470:
  6639     15EB                     l2536:
  6640     15EB  0A67               	incf	___fladd@aexp,w
  6641     15EC  1D03               	btfss	3,2
  6642     15ED  2DEF               	goto	u3481
  6643     15EE  2DF0               	goto	u3480
  6644     15EF                     u3481:
  6645     15EF  2DF8               	goto	l2540
  6646     15F0                     u3480:
  6647     15F0                     l2538:
  6648     15F0  3000               	movlw	0
  6649     15F1  00DD               	movwf	___fladd@a+3
  6650     15F2  3000               	movlw	0
  6651     15F3  00DC               	movwf	___fladd@a+2
  6652     15F4  3000               	movlw	0
  6653     15F5  00DB               	movwf	___fladd@a+1
  6654     15F6  3000               	movlw	0
  6655     15F7  00DA               	movwf	___fladd@a
  6656     15F8                     l2540:
  6657     15F8  17DC               	bsf	___fladd@a+2,7
  6658     15F9                     l2542:
  6659     15F9  01DD               	clrf	___fladd@a+3
  6660     15FA  2E03               	goto	l670
  6661     15FB                     l2544:
  6662     15FB  3000               	movlw	0
  6663     15FC  00DD               	movwf	___fladd@a+3
  6664     15FD  3000               	movlw	0
  6665     15FE  00DC               	movwf	___fladd@a+2
  6666     15FF  3000               	movlw	0
  6667     1600  00DB               	movwf	___fladd@a+1
  6668     1601  3000               	movlw	0
  6669     1602  00DA               	movwf	___fladd@a
  6670     1603                     l670:
  6671     1603  0868               	movf	___fladd@bexp,w
  6672     1604  0267               	subwf	___fladd@aexp,w
  6673     1605  1803               	skipnc
  6674     1606  2E08               	goto	u3491
  6675     1607  2E09               	goto	u3490
  6676     1608                     u3491:
  6677     1608  2E2F               	goto	l2580
  6678     1609                     u3490:
  6679     1609                     l2546:
  6680     1609  1F66               	btfss	___fladd@signs,6
  6681     160A  2E0C               	goto	u3501
  6682     160B  2E0D               	goto	u3500
  6683     160C                     u3501:
  6684     160C  2E11               	goto	l2550
  6685     160D                     u3500:
  6686     160D                     l2548:
  6687     160D  3080               	movlw	128
  6688     160E  00DE               	movwf	??___fladd
  6689     160F  085E               	movf	??___fladd,w
  6690     1610  06E6               	xorwf	___fladd@signs,f
  6691     1611                     l2550:
  6692     1611  0868               	movf	___fladd@bexp,w
  6693     1612  00E9               	movwf	___fladd@grs
  6694     1613                     l2552:
  6695     1613  0867               	movf	___fladd@aexp,w
  6696     1614  00E8               	movwf	___fladd@bexp
  6697     1615                     l2554:
  6698     1615  0869               	movf	___fladd@grs,w
  6699     1616  00E7               	movwf	___fladd@aexp
  6700     1617                     l2556:
  6701     1617  0856               	movf	___fladd@b,w
  6702     1618  00E9               	movwf	___fladd@grs
  6703     1619                     l2558:
  6704     1619  085A               	movf	___fladd@a,w
  6705     161A  00D6               	movwf	___fladd@b
  6706     161B                     l2560:
  6707     161B  0869               	movf	___fladd@grs,w
  6708     161C  00DA               	movwf	___fladd@a
  6709     161D                     l2562:
  6710     161D  0857               	movf	___fladd@b+1,w
  6711     161E  00E9               	movwf	___fladd@grs
  6712     161F                     l2564:
  6713     161F  085B               	movf	___fladd@a+1,w
  6714     1620  00D7               	movwf	___fladd@b+1
  6715     1621                     l2566:
  6716     1621  0869               	movf	___fladd@grs,w
  6717     1622  00DB               	movwf	___fladd@a+1
  6718     1623                     l2568:
  6719     1623  0858               	movf	___fladd@b+2,w
  6720     1624  00E9               	movwf	___fladd@grs
  6721     1625                     l2570:
  6722     1625  085C               	movf	___fladd@a+2,w
  6723     1626  00D8               	movwf	___fladd@b+2
  6724     1627                     l2572:
  6725     1627  0869               	movf	___fladd@grs,w
  6726     1628  00DC               	movwf	___fladd@a+2
  6727     1629                     l2574:
  6728     1629  0859               	movf	___fladd@b+3,w
  6729     162A  00E9               	movwf	___fladd@grs
  6730     162B                     l2576:
  6731     162B  085D               	movf	___fladd@a+3,w
  6732     162C  00D9               	movwf	___fladd@b+3
  6733     162D                     l2578:
  6734     162D  0869               	movf	___fladd@grs,w
  6735     162E  00DD               	movwf	___fladd@a+3
  6736     162F                     l2580:
  6737     162F  01E9               	clrf	___fladd@grs
  6738     1630                     l2582:
  6739     1630  0867               	movf	___fladd@aexp,w
  6740     1631  00DE               	movwf	??___fladd
  6741     1632  01DF               	clrf	??___fladd+1
  6742     1633  085F               	movf	??___fladd+1,w
  6743     1634  00E1               	movwf	??___fladd+3
  6744     1635  0868               	movf	___fladd@bexp,w
  6745     1636  025E               	subwf	??___fladd,w
  6746     1637  00E0               	movwf	??___fladd+2
  6747     1638  1C03               	skipc
  6748     1639  03E1               	decf	??___fladd+3,f
  6749     163A  0861               	movf	??___fladd+3,w
  6750     163B  3A80               	xorlw	128
  6751     163C  00FF               	movwf	btemp+1
  6752     163D  3080               	movlw	128
  6753     163E  027F               	subwf	btemp+1,w
  6754     163F  1D03               	skipz
  6755     1640  2E43               	goto	u3515
  6756     1641  301A               	movlw	26
  6757     1642  0260               	subwf	??___fladd+2,w
  6758     1643                     u3515:
  6759     1643  1C03               	skipc
  6760     1644  2E46               	goto	u3511
  6761     1645  2E47               	goto	u3510
  6762     1646                     u3511:
  6763     1646  2E7E               	goto	l2598
  6764     1647                     u3510:
  6765     1647                     l2584:
  6766     1647  1283               	bcf	3,5	;RP0=0, select bank0
  6767     1648  1303               	bcf	3,6	;RP1=0, select bank0
  6768     1649  0859               	movf	___fladd@b+3,w
  6769     164A  0458               	iorwf	___fladd@b+2,w
  6770     164B  0457               	iorwf	___fladd@b+1,w
  6771     164C  0456               	iorwf	___fladd@b,w
  6772     164D  1D03               	skipz
  6773     164E  2E50               	goto	u3521
  6774     164F  2E52               	goto	u3520
  6775     1650                     u3521:
  6776     1650  3001               	movlw	1
  6777     1651  2E53               	goto	u3530
  6778     1652                     u3520:
  6779     1652  3000               	movlw	0
  6780     1653                     u3530:
  6781     1653  00E9               	movwf	___fladd@grs
  6782     1654  3000               	movlw	0
  6783     1655  00D9               	movwf	___fladd@b+3
  6784     1656  3000               	movlw	0
  6785     1657  00D8               	movwf	___fladd@b+2
  6786     1658  3000               	movlw	0
  6787     1659  00D7               	movwf	___fladd@b+1
  6788     165A  3000               	movlw	0
  6789     165B  00D6               	movwf	___fladd@b
  6790     165C  0867               	movf	___fladd@aexp,w
  6791     165D  00E8               	movwf	___fladd@bexp
  6792     165E  2E86               	goto	l674
  6793     165F                     l676:
  6794     165F  1C69               	btfss	___fladd@grs,0
  6795     1660  2E62               	goto	u3541
  6796     1661  2E63               	goto	u3540
  6797     1662                     u3541:
  6798     1662  2E6A               	goto	l2588
  6799     1663                     u3540:
  6800     1663                     l2586:
  6801     1663  0869               	movf	___fladd@grs,w
  6802     1664  00DE               	movwf	??___fladd
  6803     1665  1003               	clrc
  6804     1666  0C5E               	rrf	??___fladd,w
  6805     1667  3801               	iorlw	1
  6806     1668  00E9               	movwf	___fladd@grs
  6807     1669  2E6C               	goto	l2590
  6808     166A                     l2588:
  6809     166A  1003               	clrc
  6810     166B  0CE9               	rrf	___fladd@grs,f
  6811     166C                     l2590:
  6812     166C  1C56               	btfss	___fladd@b,0
  6813     166D  2E6F               	goto	u3551
  6814     166E  2E70               	goto	u3550
  6815     166F                     u3551:
  6816     166F  2E71               	goto	l2594
  6817     1670                     u3550:
  6818     1670                     l2592:
  6819     1670  17E9               	bsf	___fladd@grs,7
  6820     1671                     l2594:
  6821     1671  3001               	movlw	1
  6822     1672  00DE               	movwf	??___fladd
  6823     1673                     u3565:
  6824     1673  0D59               	rlf	___fladd@b+3,w
  6825     1674  0CD9               	rrf	___fladd@b+3,f
  6826     1675  0CD8               	rrf	___fladd@b+2,f
  6827     1676  0CD7               	rrf	___fladd@b+1,f
  6828     1677  0CD6               	rrf	___fladd@b,f
  6829     1678  0BDE               	decfsz	??___fladd& (0+127),f
  6830     1679  2E73               	goto	u3565
  6831     167A                     l2596:
  6832     167A  3001               	movlw	1
  6833     167B  00DE               	movwf	??___fladd
  6834     167C  085E               	movf	??___fladd,w
  6835     167D  07E8               	addwf	___fladd@bexp,f
  6836     167E                     l2598:
  6837     167E  1283               	bcf	3,5	;RP0=0, select bank0
  6838     167F  1303               	bcf	3,6	;RP1=0, select bank0
  6839     1680  0867               	movf	___fladd@aexp,w
  6840     1681  0268               	subwf	___fladd@bexp,w
  6841     1682  1C03               	skipc
  6842     1683  2E85               	goto	u3571
  6843     1684  2E86               	goto	u3570
  6844     1685                     u3571:
  6845     1685  2E5F               	goto	l676
  6846     1686                     u3570:
  6847     1686                     l674:
  6848     1686  1B66               	btfsc	___fladd@signs,6
  6849     1687  2E89               	goto	u3581
  6850     1688  2E8A               	goto	u3580
  6851     1689                     u3581:
  6852     1689  2ED3               	goto	l2624
  6853     168A                     u3580:
  6854     168A                     l2600:
  6855     168A  0868               	movf	___fladd@bexp,w
  6856     168B  1D03               	btfss	3,2
  6857     168C  2E8E               	goto	u3591
  6858     168D  2E8F               	goto	u3590
  6859     168E                     u3591:
  6860     168E  2E98               	goto	l2606
  6861     168F                     u3590:
  6862     168F                     l2602:
  6863     168F  3000               	movlw	0
  6864     1690  00D9               	movwf	?___fladd+3
  6865     1691  3000               	movlw	0
  6866     1692  00D8               	movwf	?___fladd+2
  6867     1693  3000               	movlw	0
  6868     1694  00D7               	movwf	?___fladd+1
  6869     1695  3000               	movlw	0
  6870     1696  00D6               	movwf	?___fladd
  6871     1697  2FFF               	goto	l683
  6872     1698                     l2606:
  6873     1698  085A               	movf	___fladd@a,w
  6874     1699  07D6               	addwf	___fladd@b,f
  6875     169A  085B               	movf	___fladd@a+1,w
  6876     169B  1103               	clrz
  6877     169C  1803               	skipnc
  6878     169D  3E01               	addlw	1
  6879     169E  1903               	skipnz
  6880     169F  2EA1               	goto	u3601
  6881     16A0  07D7               	addwf	___fladd@b+1,f
  6882     16A1                     u3601:
  6883     16A1  085C               	movf	___fladd@a+2,w
  6884     16A2  1103               	clrz
  6885     16A3  1803               	skipnc
  6886     16A4  3E01               	addlw	1
  6887     16A5  1903               	skipnz
  6888     16A6  2EA8               	goto	u3602
  6889     16A7  07D8               	addwf	___fladd@b+2,f
  6890     16A8                     u3602:
  6891     16A8  085D               	movf	___fladd@a+3,w
  6892     16A9  1103               	clrz
  6893     16AA  1803               	skipnc
  6894     16AB  3E01               	addlw	1
  6895     16AC  1903               	skipnz
  6896     16AD  2EAF               	goto	u3603
  6897     16AE  07D9               	addwf	___fladd@b+3,f
  6898     16AF                     u3603:
  6899     16AF                     l2608:
  6900     16AF  1C59               	btfss	___fladd@b+3,0
  6901     16B0  2EB2               	goto	u3611
  6902     16B1  2EB3               	goto	u3610
  6903     16B2                     u3611:
  6904     16B2  2F87               	goto	l2658
  6905     16B3                     u3610:
  6906     16B3                     l2610:
  6907     16B3  1C69               	btfss	___fladd@grs,0
  6908     16B4  2EB6               	goto	u3621
  6909     16B5  2EB7               	goto	u3620
  6910     16B6                     u3621:
  6911     16B6  2EBE               	goto	l2614
  6912     16B7                     u3620:
  6913     16B7                     l2612:
  6914     16B7  0869               	movf	___fladd@grs,w
  6915     16B8  00DE               	movwf	??___fladd
  6916     16B9  1003               	clrc
  6917     16BA  0C5E               	rrf	??___fladd,w
  6918     16BB  3801               	iorlw	1
  6919     16BC  00E9               	movwf	___fladd@grs
  6920     16BD  2EC0               	goto	l2616
  6921     16BE                     l2614:
  6922     16BE  1003               	clrc
  6923     16BF  0CE9               	rrf	___fladd@grs,f
  6924     16C0                     l2616:
  6925     16C0  1C56               	btfss	___fladd@b,0
  6926     16C1  2EC3               	goto	u3631
  6927     16C2  2EC4               	goto	u3630
  6928     16C3                     u3631:
  6929     16C3  2EC5               	goto	l2620
  6930     16C4                     u3630:
  6931     16C4                     l2618:
  6932     16C4  17E9               	bsf	___fladd@grs,7
  6933     16C5                     l2620:
  6934     16C5  3001               	movlw	1
  6935     16C6  00DE               	movwf	??___fladd
  6936     16C7                     u3645:
  6937     16C7  0D59               	rlf	___fladd@b+3,w
  6938     16C8  0CD9               	rrf	___fladd@b+3,f
  6939     16C9  0CD8               	rrf	___fladd@b+2,f
  6940     16CA  0CD7               	rrf	___fladd@b+1,f
  6941     16CB  0CD6               	rrf	___fladd@b,f
  6942     16CC  0BDE               	decfsz	??___fladd& (0+127),f
  6943     16CD  2EC7               	goto	u3645
  6944     16CE                     l2622:
  6945     16CE  3001               	movlw	1
  6946     16CF  00DE               	movwf	??___fladd
  6947     16D0  085E               	movf	??___fladd,w
  6948     16D1  07E8               	addwf	___fladd@bexp,f
  6949     16D2  2F87               	goto	l2658
  6950     16D3                     l2624:
  6951     16D3  0859               	movf	___fladd@b+3,w
  6952     16D4  3A80               	xorlw	128
  6953     16D5  00FF               	movwf	btemp+1
  6954     16D6  085D               	movf	___fladd@a+3,w
  6955     16D7  3A80               	xorlw	128
  6956     16D8  027F               	subwf	btemp+1,w
  6957     16D9  1D03               	skipz
  6958     16DA  2EE5               	goto	u3653
  6959     16DB  085C               	movf	___fladd@a+2,w
  6960     16DC  0258               	subwf	___fladd@b+2,w
  6961     16DD  1D03               	skipz
  6962     16DE  2EE5               	goto	u3653
  6963     16DF  085B               	movf	___fladd@a+1,w
  6964     16E0  0257               	subwf	___fladd@b+1,w
  6965     16E1  1D03               	skipz
  6966     16E2  2EE5               	goto	u3653
  6967     16E3  085A               	movf	___fladd@a,w
  6968     16E4  0256               	subwf	___fladd@b,w
  6969     16E5                     u3653:
  6970     16E5  1803               	skipnc
  6971     16E6  2EE8               	goto	u3651
  6972     16E7  2EE9               	goto	u3650
  6973     16E8                     u3651:
  6974     16E8  2F41               	goto	l2634
  6975     16E9                     u3650:
  6976     16E9                     l2626:
  6977     16E9  30FF               	movlw	255
  6978     16EA  00DE               	movwf	??___fladd
  6979     16EB  30FF               	movlw	255
  6980     16EC  00DF               	movwf	??___fladd+1
  6981     16ED  30FF               	movlw	255
  6982     16EE  00E0               	movwf	??___fladd+2
  6983     16EF  30FF               	movlw	255
  6984     16F0  00E1               	movwf	??___fladd+3
  6985     16F1  085A               	movf	___fladd@a,w
  6986     16F2  00E2               	movwf	??___fladd+4
  6987     16F3  085B               	movf	___fladd@a+1,w
  6988     16F4  00E3               	movwf	??___fladd+5
  6989     16F5  085C               	movf	___fladd@a+2,w
  6990     16F6  00E4               	movwf	??___fladd+6
  6991     16F7  085D               	movf	___fladd@a+3,w
  6992     16F8  00E5               	movwf	??___fladd+7
  6993     16F9  0856               	movf	___fladd@b,w
  6994     16FA  02E2               	subwf	??___fladd+4,f
  6995     16FB  0857               	movf	___fladd@b+1,w
  6996     16FC  1C03               	skipc
  6997     16FD  0F57               	incfsz	___fladd@b+1,w
  6998     16FE  2F00               	goto	u3661
  6999     16FF  2F01               	goto	u3662
  7000     1700                     u3661:
  7001     1700  02E3               	subwf	??___fladd+5,f
  7002     1701                     u3662:
  7003     1701  0858               	movf	___fladd@b+2,w
  7004     1702  1C03               	skipc
  7005     1703  0F58               	incfsz	___fladd@b+2,w
  7006     1704  2F06               	goto	u3663
  7007     1705  2F07               	goto	u3664
  7008     1706                     u3663:
  7009     1706  02E4               	subwf	??___fladd+6,f
  7010     1707                     u3664:
  7011     1707  0859               	movf	___fladd@b+3,w
  7012     1708  1C03               	skipc
  7013     1709  0F59               	incfsz	___fladd@b+3,w
  7014     170A  2F0C               	goto	u3665
  7015     170B  2F0D               	goto	u3666
  7016     170C                     u3665:
  7017     170C  02E5               	subwf	??___fladd+7,f
  7018     170D                     u3666:
  7019     170D  0862               	movf	??___fladd+4,w
  7020     170E  07DE               	addwf	??___fladd,f
  7021     170F  0863               	movf	??___fladd+5,w
  7022     1710  1803               	skipnc
  7023     1711  0F63               	incfsz	??___fladd+5,w
  7024     1712  2F14               	goto	u3670
  7025     1713  2F15               	goto	u3671
  7026     1714                     u3670:
  7027     1714  07DF               	addwf	??___fladd+1,f
  7028     1715                     u3671:
  7029     1715  0864               	movf	??___fladd+6,w
  7030     1716  1803               	skipnc
  7031     1717  0F64               	incfsz	??___fladd+6,w
  7032     1718  2F1A               	goto	u3672
  7033     1719  2F1B               	goto	u3673
  7034     171A                     u3672:
  7035     171A  07E0               	addwf	??___fladd+2,f
  7036     171B                     u3673:
  7037     171B  0865               	movf	??___fladd+7,w
  7038     171C  1803               	skipnc
  7039     171D  0A65               	incf	??___fladd+7,w
  7040     171E  07E1               	addwf	??___fladd+3,f
  7041     171F  0861               	movf	??___fladd+3,w
  7042     1720  00D9               	movwf	___fladd@b+3
  7043     1721  0860               	movf	??___fladd+2,w
  7044     1722  00D8               	movwf	___fladd@b+2
  7045     1723  085F               	movf	??___fladd+1,w
  7046     1724  00D7               	movwf	___fladd@b+1
  7047     1725  085E               	movf	??___fladd,w
  7048     1726  00D6               	movwf	___fladd@b
  7049     1727                     l2628:
  7050     1727  3080               	movlw	128
  7051     1728  00DE               	movwf	??___fladd
  7052     1729  085E               	movf	??___fladd,w
  7053     172A  06E6               	xorwf	___fladd@signs,f
  7054     172B  09E9               	comf	___fladd@grs,f
  7055     172C  0AE9               	incf	___fladd@grs,f
  7056     172D                     l2630:
  7057     172D  0869               	movf	___fladd@grs,w
  7058     172E  1D03               	btfss	3,2
  7059     172F  2F31               	goto	u3681
  7060     1730  2F32               	goto	u3680
  7061     1731                     u3681:
  7062     1731  2F4F               	goto	l691
  7063     1732                     u3680:
  7064     1732                     l2632:
  7065     1732  3001               	movlw	1
  7066     1733  07D6               	addwf	___fladd@b,f
  7067     1734  3000               	movlw	0
  7068     1735  1803               	skipnc
  7069     1736  3001               	movlw	1
  7070     1737  07D7               	addwf	___fladd@b+1,f
  7071     1738  3000               	movlw	0
  7072     1739  1803               	skipnc
  7073     173A  3001               	movlw	1
  7074     173B  07D8               	addwf	___fladd@b+2,f
  7075     173C  3000               	movlw	0
  7076     173D  1803               	skipnc
  7077     173E  3001               	movlw	1
  7078     173F  07D9               	addwf	___fladd@b+3,f
  7079     1740  2F4F               	goto	l691
  7080     1741                     l2634:
  7081     1741  085A               	movf	___fladd@a,w
  7082     1742  02D6               	subwf	___fladd@b,f
  7083     1743  085B               	movf	___fladd@a+1,w
  7084     1744  1C03               	skipc
  7085     1745  0F5B               	incfsz	___fladd@a+1,w
  7086     1746  02D7               	subwf	___fladd@b+1,f
  7087     1747  085C               	movf	___fladd@a+2,w
  7088     1748  1C03               	skipc
  7089     1749  0F5C               	incfsz	___fladd@a+2,w
  7090     174A  02D8               	subwf	___fladd@b+2,f
  7091     174B  085D               	movf	___fladd@a+3,w
  7092     174C  1C03               	skipc
  7093     174D  0F5D               	incfsz	___fladd@a+3,w
  7094     174E  02D9               	subwf	___fladd@b+3,f
  7095     174F                     l691:
  7096     174F  0859               	movf	___fladd@b+3,w
  7097     1750  0458               	iorwf	___fladd@b+2,w
  7098     1751  0457               	iorwf	___fladd@b+1,w
  7099     1752  0456               	iorwf	___fladd@b,w
  7100     1753  1D03               	skipz
  7101     1754  2F56               	goto	u3691
  7102     1755  2F57               	goto	u3690
  7103     1756                     u3691:
  7104     1756  2F83               	goto	l2656
  7105     1757                     u3690:
  7106     1757                     l2636:
  7107     1757  0869               	movf	___fladd@grs,w
  7108     1758  1D03               	btfss	3,2
  7109     1759  2F5B               	goto	u3701
  7110     175A  2F5C               	goto	u3700
  7111     175B                     u3701:
  7112     175B  2F83               	goto	l2656
  7113     175C                     u3700:
  7114     175C                     l2638:
  7115     175C  3000               	movlw	0
  7116     175D  00D9               	movwf	?___fladd+3
  7117     175E  3000               	movlw	0
  7118     175F  00D8               	movwf	?___fladd+2
  7119     1760  3000               	movlw	0
  7120     1761  00D7               	movwf	?___fladd+1
  7121     1762  3000               	movlw	0
  7122     1763  00D6               	movwf	?___fladd
  7123     1764  2FFF               	goto	l683
  7124     1765                     l2642:
  7125     1765  3001               	movlw	1
  7126     1766  00DE               	movwf	??___fladd
  7127     1767                     u3715:
  7128     1767  1003               	clrc
  7129     1768  0DD6               	rlf	___fladd@b,f
  7130     1769  0DD7               	rlf	___fladd@b+1,f
  7131     176A  0DD8               	rlf	___fladd@b+2,f
  7132     176B  0DD9               	rlf	___fladd@b+3,f
  7133     176C  0BDE               	decfsz	??___fladd,f
  7134     176D  2F67               	goto	u3715
  7135     176E                     l2644:
  7136     176E  1FE9               	btfss	___fladd@grs,7
  7137     176F  2F71               	goto	u3721
  7138     1770  2F72               	goto	u3720
  7139     1771                     u3721:
  7140     1771  2F73               	goto	l695
  7141     1772                     u3720:
  7142     1772                     l2646:
  7143     1772  1456               	bsf	___fladd@b,0
  7144     1773                     l695:
  7145     1773  1C69               	btfss	___fladd@grs,0
  7146     1774  2F76               	goto	u3731
  7147     1775  2F77               	goto	u3730
  7148     1776                     u3731:
  7149     1776  2F7A               	goto	l2650
  7150     1777                     u3730:
  7151     1777                     l2648:
  7152     1777  1403               	setc
  7153     1778  0DE9               	rlf	___fladd@grs,f
  7154     1779  2F7C               	goto	l2652
  7155     177A                     l2650:
  7156     177A  1003               	clrc
  7157     177B  0DE9               	rlf	___fladd@grs,f
  7158     177C                     l2652:
  7159     177C  0868               	movf	___fladd@bexp,w
  7160     177D  1903               	btfsc	3,2
  7161     177E  2F80               	goto	u3741
  7162     177F  2F81               	goto	u3740
  7163     1780                     u3741:
  7164     1780  2F83               	goto	l2656
  7165     1781                     u3740:
  7166     1781                     l2654:
  7167     1781  3001               	movlw	1
  7168     1782  02E8               	subwf	___fladd@bexp,f
  7169     1783                     l2656:
  7170     1783  1FD8               	btfss	___fladd@b+2,7
  7171     1784  2F86               	goto	u3751
  7172     1785  2F87               	goto	u3750
  7173     1786                     u3751:
  7174     1786  2F65               	goto	l2642
  7175     1787                     u3750:
  7176     1787                     l2658:
  7177     1787  01E7               	clrf	___fladd@aexp
  7178     1788                     l2660:
  7179     1788  1FE9               	btfss	___fladd@grs,7
  7180     1789  2F8B               	goto	u3761
  7181     178A  2F8C               	goto	u3760
  7182     178B                     u3761:
  7183     178B  2F9A               	goto	l2668
  7184     178C                     u3760:
  7185     178C                     l2662:
  7186     178C  0869               	movf	___fladd@grs,w
  7187     178D  397F               	andlw	127
  7188     178E  1903               	btfsc	3,2
  7189     178F  2F91               	goto	u3771
  7190     1790  2F92               	goto	u3770
  7191     1791                     u3771:
  7192     1791  2F95               	goto	l701
  7193     1792                     u3770:
  7194     1792                     l2664:
  7195     1792  01E7               	clrf	___fladd@aexp
  7196     1793  0AE7               	incf	___fladd@aexp,f
  7197     1794  2F9A               	goto	l2668
  7198     1795                     l701:
  7199     1795  1C56               	btfss	___fladd@b,0
  7200     1796  2F98               	goto	u3781
  7201     1797  2F99               	goto	u3780
  7202     1798                     u3781:
  7203     1798  2F9A               	goto	l2668
  7204     1799                     u3780:
  7205     1799  2F92               	goto	l2664
  7206     179A                     l2668:
  7207     179A  0867               	movf	___fladd@aexp,w
  7208     179B  1903               	btfsc	3,2
  7209     179C  2F9E               	goto	u3791
  7210     179D  2F9F               	goto	u3790
  7211     179E                     u3791:
  7212     179E  2FD3               	goto	l704
  7213     179F                     u3790:
  7214     179F                     l2670:
  7215     179F  3001               	movlw	1
  7216     17A0  07D6               	addwf	___fladd@b,f
  7217     17A1  3000               	movlw	0
  7218     17A2  1803               	skipnc
  7219     17A3  3001               	movlw	1
  7220     17A4  07D7               	addwf	___fladd@b+1,f
  7221     17A5  3000               	movlw	0
  7222     17A6  1803               	skipnc
  7223     17A7  3001               	movlw	1
  7224     17A8  07D8               	addwf	___fladd@b+2,f
  7225     17A9  3000               	movlw	0
  7226     17AA  1803               	skipnc
  7227     17AB  3001               	movlw	1
  7228     17AC  07D9               	addwf	___fladd@b+3,f
  7229     17AD                     l2672:
  7230     17AD  1C59               	btfss	___fladd@b+3,0
  7231     17AE  2FB0               	goto	u3801
  7232     17AF  2FB1               	goto	u3800
  7233     17B0                     u3801:
  7234     17B0  2FD3               	goto	l704
  7235     17B1                     u3800:
  7236     17B1                     l2674:
  7237     17B1  0856               	movf	___fladd@b,w
  7238     17B2  00DE               	movwf	??___fladd
  7239     17B3  0857               	movf	___fladd@b+1,w
  7240     17B4  00DF               	movwf	??___fladd+1
  7241     17B5  0858               	movf	___fladd@b+2,w
  7242     17B6  00E0               	movwf	??___fladd+2
  7243     17B7  0859               	movf	___fladd@b+3,w
  7244     17B8  00E1               	movwf	??___fladd+3
  7245     17B9  3001               	movlw	1
  7246     17BA  00E2               	movwf	??___fladd+4
  7247     17BB                     u3815:
  7248     17BB  0D61               	rlf	??___fladd+3,w
  7249     17BC  0CE1               	rrf	??___fladd+3,f
  7250     17BD  0CE0               	rrf	??___fladd+2,f
  7251     17BE  0CDF               	rrf	??___fladd+1,f
  7252     17BF  0CDE               	rrf	??___fladd,f
  7253     17C0                     u3810:
  7254     17C0  0BE2               	decfsz	??___fladd+4,f
  7255     17C1  2FBB               	goto	u3815
  7256     17C2  0861               	movf	??___fladd+3,w
  7257     17C3  00D9               	movwf	___fladd@b+3
  7258     17C4  0860               	movf	??___fladd+2,w
  7259     17C5  00D8               	movwf	___fladd@b+2
  7260     17C6  085F               	movf	??___fladd+1,w
  7261     17C7  00D7               	movwf	___fladd@b+1
  7262     17C8  085E               	movf	??___fladd,w
  7263     17C9  00D6               	movwf	___fladd@b
  7264     17CA  0A68               	incf	___fladd@bexp,w
  7265     17CB  1903               	btfsc	3,2
  7266     17CC  2FCE               	goto	u3821
  7267     17CD  2FCF               	goto	u3820
  7268     17CE                     u3821:
  7269     17CE  2FD3               	goto	l704
  7270     17CF                     u3820:
  7271     17CF                     l2676:
  7272     17CF  3001               	movlw	1
  7273     17D0  00DE               	movwf	??___fladd
  7274     17D1  085E               	movf	??___fladd,w
  7275     17D2  07E8               	addwf	___fladd@bexp,f
  7276     17D3                     l704:
  7277     17D3  0A68               	incf	___fladd@bexp,w
  7278     17D4  1903               	btfsc	3,2
  7279     17D5  2FD7               	goto	u3831
  7280     17D6  2FD8               	goto	u3830
  7281     17D7                     u3831:
  7282     17D7  2FDD               	goto	l2680
  7283     17D8                     u3830:
  7284     17D8                     l2678:
  7285     17D8  0868               	movf	___fladd@bexp,w
  7286     17D9  1D03               	btfss	3,2
  7287     17DA  2FDC               	goto	u3841
  7288     17DB  2FDD               	goto	u3840
  7289     17DC                     u3841:
  7290     17DC  2FEB               	goto	l2686
  7291     17DD                     u3840:
  7292     17DD                     l2680:
  7293     17DD  3000               	movlw	0
  7294     17DE  00D9               	movwf	___fladd@b+3
  7295     17DF  3000               	movlw	0
  7296     17E0  00D8               	movwf	___fladd@b+2
  7297     17E1  3000               	movlw	0
  7298     17E2  00D7               	movwf	___fladd@b+1
  7299     17E3  3000               	movlw	0
  7300     17E4  00D6               	movwf	___fladd@b
  7301     17E5                     l2682:
  7302     17E5  0868               	movf	___fladd@bexp,w
  7303     17E6  1D03               	btfss	3,2
  7304     17E7  2FE9               	goto	u3851
  7305     17E8  2FEA               	goto	u3850
  7306     17E9                     u3851:
  7307     17E9  2FEB               	goto	l2686
  7308     17EA                     u3850:
  7309     17EA                     l2684:
  7310     17EA  01E6               	clrf	___fladd@signs
  7311     17EB                     l2686:
  7312     17EB  1C68               	btfss	___fladd@bexp,0
  7313     17EC  2FEE               	goto	u3861
  7314     17ED  2FEF               	goto	u3860
  7315     17EE                     u3861:
  7316     17EE  2FF1               	goto	l2690
  7317     17EF                     u3860:
  7318     17EF                     l2688:
  7319     17EF  17D8               	bsf	___fladd@b+2,7
  7320     17F0  2FF5               	goto	l712
  7321     17F1                     l2690:
  7322     17F1  307F               	movlw	127
  7323     17F2  00DE               	movwf	??___fladd
  7324     17F3  085E               	movf	??___fladd,w
  7325     17F4  05D8               	andwf	___fladd@b+2,f
  7326     17F5                     l712:
  7327     17F5  0868               	movf	___fladd@bexp,w
  7328     17F6  00DE               	movwf	??___fladd
  7329     17F7  1003               	clrc
  7330     17F8  0C5E               	rrf	??___fladd,w
  7331     17F9  00D9               	movwf	___fladd@b+3
  7332     17FA                     l2692:
  7333     17FA  1FE6               	btfss	___fladd@signs,7
  7334     17FB  2FFD               	goto	u3871
  7335     17FC  2FFE               	goto	u3870
  7336     17FD                     u3871:
  7337     17FD  2FFF               	goto	l713
  7338     17FE                     u3870:
  7339     17FE                     l2694:
  7340     17FE  17D9               	bsf	___fladd@b+3,7
  7341     17FF                     l713:
  7342     17FF                     l683:
  7343     17FF  0008               	return
  7344     1800                     __end_of___fladd:
  7345                           
  7346                           	psect	text17
  7347     0800                     __ptext17:	
  7348 ;; *************** function ___flneg *****************
  7349 ;; Defined at:
  7350 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;  f1              4    2[COMMON] unsigned char 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  4    2[COMMON] unsigned char 
  7357 ;; Registers used:
  7358 ;;		wreg
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7364 ;;      Params:         4       0       0       0       0
  7365 ;;      Locals:         0       0       0       0       0
  7366 ;;      Temps:          0       0       0       0       0
  7367 ;;      Totals:         4       0       0       0       0
  7368 ;;Total ram usage:        4 bytes
  7369 ;; Hardware stack levels used: 1
  7370 ;; Hardware stack levels required when called: 1
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_sprintf
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378     0800                     ___flneg:	
  7379                           ;psect for function ___flneg
  7380                           
  7381     0800                     l3118:	
  7382                           ;incstack = 0
  7383                           ; Regs used in ___flneg: [wreg]
  7384                           
  7385     0800  0875               	movf	___flneg@f1+3,w
  7386     0801  0474               	iorwf	___flneg@f1+2,w
  7387     0802  0473               	iorwf	___flneg@f1+1,w
  7388     0803  0472               	iorwf	___flneg@f1,w
  7389     0804  1903               	skipnz
  7390     0805  2807               	goto	u5001
  7391     0806  2808               	goto	u5000
  7392     0807                     u5001:
  7393     0807  280A               	goto	l3122
  7394     0808                     u5000:
  7395     0808                     l3120:
  7396     0808  3080               	movlw	128
  7397     0809  06F5               	xorwf	___flneg@f1+3,f
  7398     080A                     l3122:
  7399     080A                     l542:
  7400     080A  0008               	return
  7401     080B                     __end_of___flneg:
  7402                           
  7403                           	psect	text18
  7404     1F5C                     __ptext18:	
  7405 ;; *************** function ___flge *****************
  7406 ;; Defined at:
  7407 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  ff1             4    2[COMMON] unsigned char 
  7410 ;;  ff2             4    6[COMMON] unsigned char 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;		None
  7413 ;; Return value:  Size  Location     Type
  7414 ;;		None               void
  7415 ;; Registers used:
  7416 ;;		wreg, status,2, status,0
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7422 ;;      Params:         8       0       0       0       0
  7423 ;;      Locals:         0       0       0       0       0
  7424 ;;      Temps:          0       4       0       0       0
  7425 ;;      Totals:         8       4       0       0       0
  7426 ;;Total ram usage:       12 bytes
  7427 ;; Hardware stack levels used: 1
  7428 ;; Hardware stack levels required when called: 1
  7429 ;; This function calls:
  7430 ;;		Nothing
  7431 ;; This function is called by:
  7432 ;;		_sprintf
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436     1F5C                     ___flge:	
  7437                           ;psect for function ___flge
  7438                           
  7439     1F5C                     l3098:	
  7440                           ;incstack = 0
  7441                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7442                           
  7443     1F5C  3000               	movlw	0
  7444     1F5D  0572               	andwf	___flge@ff1,w
  7445     1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  7446     1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  7447     1F60  00A0               	movwf	??___flge
  7448     1F61  3000               	movlw	0
  7449     1F62  0573               	andwf	___flge@ff1+1,w
  7450     1F63  00A1               	movwf	??___flge+1
  7451     1F64  3080               	movlw	128
  7452     1F65  0574               	andwf	___flge@ff1+2,w
  7453     1F66  00A2               	movwf	??___flge+2
  7454     1F67  307F               	movlw	127
  7455     1F68  0575               	andwf	___flge@ff1+3,w
  7456     1F69  00A3               	movwf	??___flge+3
  7457     1F6A  0823               	movf	??___flge+3,w
  7458     1F6B  0422               	iorwf	??___flge+2,w
  7459     1F6C  0421               	iorwf	??___flge+1,w
  7460     1F6D  0420               	iorwf	??___flge,w
  7461     1F6E  1D03               	skipz
  7462     1F6F  2F71               	goto	u4931
  7463     1F70  2F72               	goto	u4930
  7464     1F71                     u4931:
  7465     1F71  2F7A               	goto	l534
  7466     1F72                     u4930:
  7467     1F72                     l3100:
  7468     1F72  3000               	movlw	0
  7469     1F73  00F5               	movwf	___flge@ff1+3
  7470     1F74  3000               	movlw	0
  7471     1F75  00F4               	movwf	___flge@ff1+2
  7472     1F76  3000               	movlw	0
  7473     1F77  00F3               	movwf	___flge@ff1+1
  7474     1F78  3000               	movlw	0
  7475     1F79  00F2               	movwf	___flge@ff1
  7476     1F7A                     l534:
  7477     1F7A  3000               	movlw	0
  7478     1F7B  0576               	andwf	___flge@ff2,w
  7479     1F7C  00A0               	movwf	??___flge
  7480     1F7D  3000               	movlw	0
  7481     1F7E  0577               	andwf	___flge@ff2+1,w
  7482     1F7F  00A1               	movwf	??___flge+1
  7483     1F80  3080               	movlw	128
  7484     1F81  0578               	andwf	___flge@ff2+2,w
  7485     1F82  00A2               	movwf	??___flge+2
  7486     1F83  307F               	movlw	127
  7487     1F84  0579               	andwf	___flge@ff2+3,w
  7488     1F85  00A3               	movwf	??___flge+3
  7489     1F86  0823               	movf	??___flge+3,w
  7490     1F87  0422               	iorwf	??___flge+2,w
  7491     1F88  0421               	iorwf	??___flge+1,w
  7492     1F89  0420               	iorwf	??___flge,w
  7493     1F8A  1D03               	skipz
  7494     1F8B  2F8D               	goto	u4941
  7495     1F8C  2F8E               	goto	u4940
  7496     1F8D                     u4941:
  7497     1F8D  2F96               	goto	l3104
  7498     1F8E                     u4940:
  7499     1F8E                     l3102:
  7500     1F8E  3000               	movlw	0
  7501     1F8F  00F9               	movwf	___flge@ff2+3
  7502     1F90  3000               	movlw	0
  7503     1F91  00F8               	movwf	___flge@ff2+2
  7504     1F92  3000               	movlw	0
  7505     1F93  00F7               	movwf	___flge@ff2+1
  7506     1F94  3000               	movlw	0
  7507     1F95  00F6               	movwf	___flge@ff2
  7508     1F96                     l3104:
  7509     1F96  1FF5               	btfss	___flge@ff1+3,7
  7510     1F97  2F99               	goto	u4951
  7511     1F98  2F9A               	goto	u4950
  7512     1F99                     u4951:
  7513     1F99  2FBE               	goto	l3108
  7514     1F9A                     u4950:
  7515     1F9A                     l3106:
  7516     1F9A  3000               	movlw	0
  7517     1F9B  00A0               	movwf	??___flge
  7518     1F9C  3000               	movlw	0
  7519     1F9D  00A1               	movwf	??___flge+1
  7520     1F9E  3000               	movlw	0
  7521     1F9F  00A2               	movwf	??___flge+2
  7522     1FA0  3080               	movlw	128
  7523     1FA1  00A3               	movwf	??___flge+3
  7524     1FA2  0872               	movf	___flge@ff1,w
  7525     1FA3  02A0               	subwf	??___flge,f
  7526     1FA4  0873               	movf	___flge@ff1+1,w
  7527     1FA5  1C03               	skipc
  7528     1FA6  0F73               	incfsz	___flge@ff1+1,w
  7529     1FA7  2FA9               	goto	u4961
  7530     1FA8  2FAA               	goto	u4962
  7531     1FA9                     u4961:
  7532     1FA9  02A1               	subwf	??___flge+1,f
  7533     1FAA                     u4962:
  7534     1FAA  0874               	movf	___flge@ff1+2,w
  7535     1FAB  1C03               	skipc
  7536     1FAC  0F74               	incfsz	___flge@ff1+2,w
  7537     1FAD  2FAF               	goto	u4963
  7538     1FAE  2FB0               	goto	u4964
  7539     1FAF                     u4963:
  7540     1FAF  02A2               	subwf	??___flge+2,f
  7541     1FB0                     u4964:
  7542     1FB0  0875               	movf	___flge@ff1+3,w
  7543     1FB1  1C03               	skipc
  7544     1FB2  0F75               	incfsz	___flge@ff1+3,w
  7545     1FB3  2FB5               	goto	u4965
  7546     1FB4  2FB6               	goto	u4966
  7547     1FB5                     u4965:
  7548     1FB5  02A3               	subwf	??___flge+3,f
  7549     1FB6                     u4966:
  7550     1FB6  0823               	movf	??___flge+3,w
  7551     1FB7  00F5               	movwf	___flge@ff1+3
  7552     1FB8  0822               	movf	??___flge+2,w
  7553     1FB9  00F4               	movwf	___flge@ff1+2
  7554     1FBA  0821               	movf	??___flge+1,w
  7555     1FBB  00F3               	movwf	___flge@ff1+1
  7556     1FBC  0820               	movf	??___flge,w
  7557     1FBD  00F2               	movwf	___flge@ff1
  7558     1FBE                     l3108:
  7559     1FBE  1FF9               	btfss	___flge@ff2+3,7
  7560     1FBF  2FC1               	goto	u4971
  7561     1FC0  2FC2               	goto	u4970
  7562     1FC1                     u4971:
  7563     1FC1  2FE6               	goto	l537
  7564     1FC2                     u4970:
  7565     1FC2                     l3110:
  7566     1FC2  3000               	movlw	0
  7567     1FC3  00A0               	movwf	??___flge
  7568     1FC4  3000               	movlw	0
  7569     1FC5  00A1               	movwf	??___flge+1
  7570     1FC6  3000               	movlw	0
  7571     1FC7  00A2               	movwf	??___flge+2
  7572     1FC8  3080               	movlw	128
  7573     1FC9  00A3               	movwf	??___flge+3
  7574     1FCA  0876               	movf	___flge@ff2,w
  7575     1FCB  02A0               	subwf	??___flge,f
  7576     1FCC  0877               	movf	___flge@ff2+1,w
  7577     1FCD  1C03               	skipc
  7578     1FCE  0F77               	incfsz	___flge@ff2+1,w
  7579     1FCF  2FD1               	goto	u4981
  7580     1FD0  2FD2               	goto	u4982
  7581     1FD1                     u4981:
  7582     1FD1  02A1               	subwf	??___flge+1,f
  7583     1FD2                     u4982:
  7584     1FD2  0878               	movf	___flge@ff2+2,w
  7585     1FD3  1C03               	skipc
  7586     1FD4  0F78               	incfsz	___flge@ff2+2,w
  7587     1FD5  2FD7               	goto	u4983
  7588     1FD6  2FD8               	goto	u4984
  7589     1FD7                     u4983:
  7590     1FD7  02A2               	subwf	??___flge+2,f
  7591     1FD8                     u4984:
  7592     1FD8  0879               	movf	___flge@ff2+3,w
  7593     1FD9  1C03               	skipc
  7594     1FDA  0F79               	incfsz	___flge@ff2+3,w
  7595     1FDB  2FDD               	goto	u4985
  7596     1FDC  2FDE               	goto	u4986
  7597     1FDD                     u4985:
  7598     1FDD  02A3               	subwf	??___flge+3,f
  7599     1FDE                     u4986:
  7600     1FDE  0823               	movf	??___flge+3,w
  7601     1FDF  00F9               	movwf	___flge@ff2+3
  7602     1FE0  0822               	movf	??___flge+2,w
  7603     1FE1  00F8               	movwf	___flge@ff2+2
  7604     1FE2  0821               	movf	??___flge+1,w
  7605     1FE3  00F7               	movwf	___flge@ff2+1
  7606     1FE4  0820               	movf	??___flge,w
  7607     1FE5  00F6               	movwf	___flge@ff2
  7608     1FE6                     l537:
  7609     1FE6  3080               	movlw	128
  7610     1FE7  06F5               	xorwf	___flge@ff1+3,f
  7611     1FE8  3080               	movlw	128
  7612     1FE9  06F9               	xorwf	___flge@ff2+3,f
  7613     1FEA  0879               	movf	___flge@ff2+3,w
  7614     1FEB  0275               	subwf	___flge@ff1+3,w
  7615     1FEC  1D03               	skipz
  7616     1FED  2FF8               	goto	u4995
  7617     1FEE  0878               	movf	___flge@ff2+2,w
  7618     1FEF  0274               	subwf	___flge@ff1+2,w
  7619     1FF0  1D03               	skipz
  7620     1FF1  2FF8               	goto	u4995
  7621     1FF2  0877               	movf	___flge@ff2+1,w
  7622     1FF3  0273               	subwf	___flge@ff1+1,w
  7623     1FF4  1D03               	skipz
  7624     1FF5  2FF8               	goto	u4995
  7625     1FF6  0876               	movf	___flge@ff2,w
  7626     1FF7  0272               	subwf	___flge@ff1,w
  7627     1FF8                     u4995:
  7628     1FF8  1803               	skipnc
  7629     1FF9  2FFB               	goto	u4991
  7630     1FFA  2FFC               	goto	u4990
  7631     1FFB                     u4991:
  7632     1FFB  2FFE               	goto	l3114
  7633     1FFC                     u4990:
  7634     1FFC                     l3112:
  7635     1FFC  1003               	clrc
  7636     1FFD  2FFF               	goto	l538
  7637     1FFE                     l3114:
  7638     1FFE  1403               	setc
  7639     1FFF                     l538:
  7640     1FFF  0008               	return
  7641     2000                     __end_of___flge:
  7642                           
  7643                           	psect	text19
  7644     1C69                     __ptext19:	
  7645 ;; *************** function ___fleq *****************
  7646 ;; Defined at:
  7647 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;  ff1             4    2[COMMON] unsigned char 
  7650 ;;  ff2             4    6[COMMON] unsigned char 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;		None
  7653 ;; Return value:  Size  Location     Type
  7654 ;;		None               void
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7662 ;;      Params:         8       0       0       0       0
  7663 ;;      Locals:         0       0       0       0       0
  7664 ;;      Temps:          0       4       0       0       0
  7665 ;;      Totals:         8       4       0       0       0
  7666 ;;Total ram usage:       12 bytes
  7667 ;; Hardware stack levels used: 1
  7668 ;; Hardware stack levels required when called: 1
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_sprintf
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676     1C69                     ___fleq:	
  7677                           ;psect for function ___fleq
  7678                           
  7679     1C69                     l3086:	
  7680                           ;incstack = 0
  7681                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7682                           
  7683     1C69  3000               	movlw	0
  7684     1C6A  0572               	andwf	___fleq@ff1,w
  7685     1C6B  1283               	bcf	3,5	;RP0=0, select bank0
  7686     1C6C  1303               	bcf	3,6	;RP1=0, select bank0
  7687     1C6D  00A0               	movwf	??___fleq
  7688     1C6E  3000               	movlw	0
  7689     1C6F  0573               	andwf	___fleq@ff1+1,w
  7690     1C70  00A1               	movwf	??___fleq+1
  7691     1C71  3080               	movlw	128
  7692     1C72  0574               	andwf	___fleq@ff1+2,w
  7693     1C73  00A2               	movwf	??___fleq+2
  7694     1C74  307F               	movlw	127
  7695     1C75  0575               	andwf	___fleq@ff1+3,w
  7696     1C76  00A3               	movwf	??___fleq+3
  7697     1C77  0823               	movf	??___fleq+3,w
  7698     1C78  0422               	iorwf	??___fleq+2,w
  7699     1C79  0421               	iorwf	??___fleq+1,w
  7700     1C7A  0420               	iorwf	??___fleq,w
  7701     1C7B  1D03               	skipz
  7702     1C7C  2C7E               	goto	u4901
  7703     1C7D  2C7F               	goto	u4900
  7704     1C7E                     u4901:
  7705     1C7E  2C87               	goto	l529
  7706     1C7F                     u4900:
  7707     1C7F                     l3088:
  7708     1C7F  3000               	movlw	0
  7709     1C80  00F5               	movwf	___fleq@ff1+3
  7710     1C81  3000               	movlw	0
  7711     1C82  00F4               	movwf	___fleq@ff1+2
  7712     1C83  3000               	movlw	0
  7713     1C84  00F3               	movwf	___fleq@ff1+1
  7714     1C85  3000               	movlw	0
  7715     1C86  00F2               	movwf	___fleq@ff1
  7716     1C87                     l529:
  7717     1C87  3000               	movlw	0
  7718     1C88  0576               	andwf	___fleq@ff2,w
  7719     1C89  00A0               	movwf	??___fleq
  7720     1C8A  3000               	movlw	0
  7721     1C8B  0577               	andwf	___fleq@ff2+1,w
  7722     1C8C  00A1               	movwf	??___fleq+1
  7723     1C8D  3080               	movlw	128
  7724     1C8E  0578               	andwf	___fleq@ff2+2,w
  7725     1C8F  00A2               	movwf	??___fleq+2
  7726     1C90  307F               	movlw	127
  7727     1C91  0579               	andwf	___fleq@ff2+3,w
  7728     1C92  00A3               	movwf	??___fleq+3
  7729     1C93  0823               	movf	??___fleq+3,w
  7730     1C94  0422               	iorwf	??___fleq+2,w
  7731     1C95  0421               	iorwf	??___fleq+1,w
  7732     1C96  0420               	iorwf	??___fleq,w
  7733     1C97  1D03               	skipz
  7734     1C98  2C9A               	goto	u4911
  7735     1C99  2C9B               	goto	u4910
  7736     1C9A                     u4911:
  7737     1C9A  2CA3               	goto	l530
  7738     1C9B                     u4910:
  7739     1C9B                     l3090:
  7740     1C9B  3000               	movlw	0
  7741     1C9C  00F9               	movwf	___fleq@ff2+3
  7742     1C9D  3000               	movlw	0
  7743     1C9E  00F8               	movwf	___fleq@ff2+2
  7744     1C9F  3000               	movlw	0
  7745     1CA0  00F7               	movwf	___fleq@ff2+1
  7746     1CA1  3000               	movlw	0
  7747     1CA2  00F6               	movwf	___fleq@ff2
  7748     1CA3                     l530:
  7749     1CA3  0879               	movf	___fleq@ff2+3,w
  7750     1CA4  0675               	xorwf	___fleq@ff1+3,w
  7751     1CA5  1D03               	skipz
  7752     1CA6  2CB1               	goto	u4925
  7753     1CA7  0878               	movf	___fleq@ff2+2,w
  7754     1CA8  0674               	xorwf	___fleq@ff1+2,w
  7755     1CA9  1D03               	skipz
  7756     1CAA  2CB1               	goto	u4925
  7757     1CAB  0877               	movf	___fleq@ff2+1,w
  7758     1CAC  0673               	xorwf	___fleq@ff1+1,w
  7759     1CAD  1D03               	skipz
  7760     1CAE  2CB1               	goto	u4925
  7761     1CAF  0876               	movf	___fleq@ff2,w
  7762     1CB0  0672               	xorwf	___fleq@ff1,w
  7763     1CB1                     u4925:
  7764     1CB1  1903               	skipnz
  7765     1CB2  2CB4               	goto	u4921
  7766     1CB3  2CB5               	goto	u4920
  7767     1CB4                     u4921:
  7768     1CB4  2CB7               	goto	l3094
  7769     1CB5                     u4920:
  7770     1CB5                     l3092:
  7771     1CB5  1003               	clrc
  7772     1CB6  2CB8               	goto	l531
  7773     1CB7                     l3094:
  7774     1CB7  1403               	setc
  7775     1CB8                     l531:
  7776     1CB8  0008               	return
  7777     1CB9                     __end_of___fleq:
  7778                           
  7779                           	psect	text20
  7780     10B2                     __ptext20:	
  7781 ;; *************** function _adc_volt *****************
  7782 ;; Defined at:
  7783 ;;		line 125 in file "adc.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  channel         1    wreg     unsigned char 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  channel         1   72[BANK0 ] unsigned char 
  7788 ;;  final           4   66[BANK0 ] float 
  7789 ;;  out             2   70[BANK0 ] int 
  7790 ;; Return value:  Size  Location     Type
  7791 ;;                  4   60[BANK0 ] float 
  7792 ;; Registers used:
  7793 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7794 ;; Tracked objects:
  7795 ;;		On entry : 0/0
  7796 ;;		On exit  : 0/0
  7797 ;;		Unchanged: 0/0
  7798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7799 ;;      Params:         0       4       0       0       0
  7800 ;;      Locals:         0       7       0       0       0
  7801 ;;      Temps:          0       2       0       0       0
  7802 ;;      Totals:         0      13       0       0       0
  7803 ;;Total ram usage:       13 bytes
  7804 ;; Hardware stack levels used: 1
  7805 ;; Hardware stack levels required when called: 3
  7806 ;; This function calls:
  7807 ;;		___fldiv
  7808 ;;		___flmul
  7809 ;;		___xxtofl
  7810 ;;		_adc_RO
  7811 ;; This function is called by:
  7812 ;;		_main
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816     10B2                     _adc_volt:	
  7817                           ;psect for function _adc_volt
  7818                           
  7819                           
  7820                           ;incstack = 0
  7821                           ; Regs used in _adc_volt: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7822                           ;adc_volt@channel stored from wreg
  7823     10B2  1283               	bcf	3,5	;RP0=0, select bank0
  7824     10B3  1303               	bcf	3,6	;RP1=0, select bank0
  7825     10B4  00E8               	movwf	adc_volt@channel
  7826     10B5                     l3440:
  7827                           
  7828                           ;adc.c: 126:     int out;;adc.c: 127:     float final;;adc.c: 128:     out = (int)adc_RO
      +                          (channel);
  7829     10B5  0868               	movf	adc_volt@channel,w
  7830     10B6  160A  158A  2277  160A  118A  	fcall	_adc_RO
  7831     10BB  1283               	bcf	3,5	;RP0=0, select bank0
  7832     10BC  1303               	bcf	3,6	;RP1=0, select bank0
  7833     10BD  00E0               	movwf	??_adc_volt
  7834     10BE  01E1               	clrf	??_adc_volt+1
  7835     10BF  0860               	movf	??_adc_volt,w
  7836     10C0  00E6               	movwf	adc_volt@out
  7837     10C1  0861               	movf	??_adc_volt+1,w
  7838     10C2  00E7               	movwf	adc_volt@out+1
  7839     10C3                     l3442:
  7840                           
  7841                           ;adc.c: 129:     final = (float)out * 5 / 256;
  7842     10C3  3043               	movlw	67
  7843     10C4  00C5               	movwf	___fldiv@a+3
  7844     10C5  3080               	movlw	128
  7845     10C6  00C4               	movwf	___fldiv@a+2
  7846     10C7  3000               	movlw	0
  7847     10C8  00C3               	movwf	___fldiv@a+1
  7848     10C9  3000               	movlw	0
  7849     10CA  00C2               	movwf	___fldiv@a
  7850     10CB  3040               	movlw	64
  7851     10CC  00AB               	movwf	___flmul@b+3
  7852     10CD  30A0               	movlw	160
  7853     10CE  00AA               	movwf	___flmul@b+2
  7854     10CF  3000               	movlw	0
  7855     10D0  00A9               	movwf	___flmul@b+1
  7856     10D1  3000               	movlw	0
  7857     10D2  00A8               	movwf	___flmul@b
  7858     10D3  0866               	movf	adc_volt@out,w
  7859     10D4  00F2               	movwf	___xxtofl@val
  7860     10D5  0867               	movf	adc_volt@out+1,w
  7861     10D6  00F3               	movwf	___xxtofl@val+1
  7862     10D7  3000               	movlw	0
  7863     10D8  1BF3               	btfsc	___xxtofl@val+1,7
  7864     10D9  30FF               	movlw	255
  7865     10DA  00F4               	movwf	___xxtofl@val+2
  7866     10DB  00F5               	movwf	___xxtofl@val+3
  7867     10DC  3001               	movlw	1
  7868     10DD  120A  118A  2720  160A  118A  	fcall	___xxtofl
  7869     10E2  0875               	movf	?___xxtofl+3,w
  7870     10E3  1283               	bcf	3,5	;RP0=0, select bank0
  7871     10E4  1303               	bcf	3,6	;RP1=0, select bank0
  7872     10E5  00AF               	movwf	___flmul@a+3
  7873     10E6  0874               	movf	?___xxtofl+2,w
  7874     10E7  00AE               	movwf	___flmul@a+2
  7875     10E8  0873               	movf	?___xxtofl+1,w
  7876     10E9  00AD               	movwf	___flmul@a+1
  7877     10EA  0872               	movf	?___xxtofl,w
  7878     10EB  00AC               	movwf	___flmul@a
  7879     10EC  120A  158A  2158  160A  118A  	fcall	___flmul
  7880     10F1  1283               	bcf	3,5	;RP0=0, select bank0
  7881     10F2  1303               	bcf	3,6	;RP1=0, select bank0
  7882     10F3  082B               	movf	?___flmul+3,w
  7883     10F4  00C9               	movwf	___fldiv@b+3
  7884     10F5  082A               	movf	?___flmul+2,w
  7885     10F6  00C8               	movwf	___fldiv@b+2
  7886     10F7  0829               	movf	?___flmul+1,w
  7887     10F8  00C7               	movwf	___fldiv@b+1
  7888     10F9  0828               	movf	?___flmul,w
  7889     10FA  00C6               	movwf	___fldiv@b
  7890     10FB  160A  118A  21CA  160A  118A  	fcall	___fldiv
  7891     1100  1283               	bcf	3,5	;RP0=0, select bank0
  7892     1101  1303               	bcf	3,6	;RP1=0, select bank0
  7893     1102  0845               	movf	?___fldiv+3,w
  7894     1103  00E5               	movwf	adc_volt@final+3
  7895     1104  0844               	movf	?___fldiv+2,w
  7896     1105  00E4               	movwf	adc_volt@final+2
  7897     1106  0843               	movf	?___fldiv+1,w
  7898     1107  00E3               	movwf	adc_volt@final+1
  7899     1108  0842               	movf	?___fldiv,w
  7900     1109  00E2               	movwf	adc_volt@final
  7901     110A                     l3444:
  7902                           
  7903                           ;adc.c: 130:     return final;
  7904     110A  0865               	movf	adc_volt@final+3,w
  7905     110B  00DF               	movwf	?_adc_volt+3
  7906     110C  0864               	movf	adc_volt@final+2,w
  7907     110D  00DE               	movwf	?_adc_volt+2
  7908     110E  0863               	movf	adc_volt@final+1,w
  7909     110F  00DD               	movwf	?_adc_volt+1
  7910     1110  0862               	movf	adc_volt@final,w
  7911     1111  00DC               	movwf	?_adc_volt
  7912     1112                     l106:
  7913     1112  0008               	return
  7914     1113                     __end_of_adc_volt:
  7915                           
  7916                           	psect	text21
  7917     1A77                     __ptext21:	
  7918 ;; *************** function _adc_RO *****************
  7919 ;; Defined at:
  7920 ;;		line 119 in file "adc.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  channel         1    wreg     unsigned char 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  channel         1    5[COMMON] unsigned char 
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      unsigned char 
  7927 ;; Registers used:
  7928 ;;		wreg, status,2, status,0, pclath, cstack
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7934 ;;      Params:         0       0       0       0       0
  7935 ;;      Locals:         1       0       0       0       0
  7936 ;;      Temps:          1       0       0       0       0
  7937 ;;      Totals:         2       0       0       0       0
  7938 ;;Total ram usage:        2 bytes
  7939 ;; Hardware stack levels used: 1
  7940 ;; Hardware stack levels required when called: 2
  7941 ;; This function calls:
  7942 ;;		_adc_output
  7943 ;;		_adc_read
  7944 ;; This function is called by:
  7945 ;;		_main
  7946 ;;		_adc_volt
  7947 ;;		_adc_mv
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951     1A77                     _adc_RO:	
  7952                           ;psect for function _adc_RO
  7953                           
  7954                           
  7955                           ;incstack = 0
  7956                           ; Regs used in _adc_RO: [wreg+status,2+status,0+pclath+cstack]
  7957                           ;adc_RO@channel stored from wreg
  7958     1A77  00F5               	movwf	adc_RO@channel
  7959     1A78                     l2836:
  7960                           
  7961                           ;adc.c: 120:     adc_read(channel);
  7962     1A78  0875               	movf	adc_RO@channel,w
  7963     1A79  160A  158A  2269  160A  158A  	fcall	_adc_read
  7964     1A7E                     l2838:
  7965                           
  7966                           ;adc.c: 121:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  7967     1A7E  3010               	movlw	16
  7968     1A7F  00F4               	movwf	??_adc_RO
  7969     1A80                     u6057:
  7970     1A80  0BF4               	decfsz	??_adc_RO,f
  7971     1A81  2A80               	goto	u6057
  7972     1A82  0000               	nop
  7973     1A83                     l2840:
  7974                           
  7975                           ;adc.c: 122:     return adc_output();
  7976     1A83  160A  158A  2253  160A  158A  	fcall	_adc_output
  7977     1A88                     l103:
  7978     1A88  0008               	return
  7979     1A89                     __end_of_adc_RO:
  7980                           
  7981                           	psect	text22
  7982     1A69                     __ptext22:	
  7983 ;; *************** function _adc_read *****************
  7984 ;; Defined at:
  7985 ;;		line 105 in file "adc.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  channel         1    wreg     unsigned char 
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;  channel         1    3[COMMON] unsigned char 
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  1    wreg      void 
  7992 ;; Registers used:
  7993 ;;		wreg, status,2, status,0
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7999 ;;      Params:         0       0       0       0       0
  8000 ;;      Locals:         1       0       0       0       0
  8001 ;;      Temps:          1       0       0       0       0
  8002 ;;      Totals:         2       0       0       0       0
  8003 ;;Total ram usage:        2 bytes
  8004 ;; Hardware stack levels used: 1
  8005 ;; Hardware stack levels required when called: 1
  8006 ;; This function calls:
  8007 ;;		Nothing
  8008 ;; This function is called by:
  8009 ;;		_adc_RO
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013     1A69                     _adc_read:	
  8014                           ;psect for function _adc_read
  8015                           
  8016                           
  8017                           ;incstack = 0
  8018                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  8019                           ;adc_read@channel stored from wreg
  8020     1A69  00F3               	movwf	adc_read@channel
  8021     1A6A                     l2350:
  8022                           
  8023                           ;adc.c: 106:     ADCON0bits.CHS = channel;
  8024     1A6A  0873               	movf	adc_read@channel,w
  8025     1A6B  00F2               	movwf	??_adc_read
  8026     1A6C  0DF2               	rlf	??_adc_read,f
  8027     1A6D  0DF2               	rlf	??_adc_read,f
  8028     1A6E  1283               	bcf	3,5	;RP0=0, select bank0
  8029     1A6F  1303               	bcf	3,6	;RP1=0, select bank0
  8030     1A70  081F               	movf	31,w	;volatile
  8031     1A71  0672               	xorwf	??_adc_read,w
  8032     1A72  39C3               	andlw	-61
  8033     1A73  0672               	xorwf	??_adc_read,w
  8034     1A74  009F               	movwf	31	;volatile
  8035     1A75                     l2352:
  8036                           
  8037                           ;adc.c: 107:     ADCON0bits.GO = 1;
  8038     1A75  149F               	bsf	31,1	;volatile
  8039     1A76                     l96:
  8040     1A76  0008               	return
  8041     1A77                     __end_of_adc_read:
  8042                           
  8043                           	psect	text23
  8044     1A53                     __ptext23:	
  8045 ;; *************** function _adc_output *****************
  8046 ;; Defined at:
  8047 ;;		line 112 in file "adc.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;		None
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;		None
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  1    wreg      unsigned char 
  8054 ;; Registers used:
  8055 ;;		wreg
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8061 ;;      Params:         0       0       0       0       0
  8062 ;;      Locals:         0       0       0       0       0
  8063 ;;      Temps:          0       0       0       0       0
  8064 ;;      Totals:         0       0       0       0       0
  8065 ;;Total ram usage:        0 bytes
  8066 ;; Hardware stack levels used: 1
  8067 ;; Hardware stack levels required when called: 1
  8068 ;; This function calls:
  8069 ;;		Nothing
  8070 ;; This function is called by:
  8071 ;;		_adc_RO
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075     1A53                     _adc_output:	
  8076                           ;psect for function _adc_output
  8077                           
  8078     1A53                     l2354:	
  8079                           ;incstack = 0
  8080                           ; Regs used in _adc_output: [wreg]
  8081                           
  8082                           
  8083                           ;adc.c: 113:     if (PIR1bits.ADIF == 1) {
  8084     1A53  1283               	bcf	3,5	;RP0=0, select bank0
  8085     1A54  1303               	bcf	3,6	;RP1=0, select bank0
  8086     1A55  1F0C               	btfss	12,6	;volatile
  8087     1A56  2A58               	goto	u3051
  8088     1A57  2A59               	goto	u3050
  8089     1A58                     u3051:
  8090     1A58  2A5A               	goto	l2358
  8091     1A59                     u3050:
  8092     1A59                     l2356:
  8093                           
  8094                           ;adc.c: 114:         PIR1bits.ADIF = 0;
  8095     1A59  130C               	bcf	12,6	;volatile
  8096     1A5A                     l2358:
  8097                           
  8098                           ;adc.c: 116:     return ADRESH;
  8099     1A5A  081E               	movf	30,w	;volatile
  8100     1A5B                     l100:
  8101     1A5B  0008               	return
  8102     1A5C                     __end_of_adc_output:
  8103                           
  8104                           	psect	text24
  8105     0720                     __ptext24:	
  8106 ;; *************** function ___xxtofl *****************
  8107 ;; Defined at:
  8108 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  sign            1    wreg     unsigned char 
  8111 ;;  val             4    2[COMMON] long 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  sign            1    0[BANK0 ] unsigned char 
  8114 ;;  arg             4    2[BANK0 ] unsigned long 
  8115 ;;  exp             1    1[BANK0 ] unsigned char 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  4    2[COMMON] unsigned char 
  8118 ;; Registers used:
  8119 ;;		wreg, status,2, status,0
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8125 ;;      Params:         4       0       0       0       0
  8126 ;;      Locals:         0       6       0       0       0
  8127 ;;      Temps:          4       0       0       0       0
  8128 ;;      Totals:         8       6       0       0       0
  8129 ;;Total ram usage:       14 bytes
  8130 ;; Hardware stack levels used: 1
  8131 ;; Hardware stack levels required when called: 1
  8132 ;; This function calls:
  8133 ;;		Nothing
  8134 ;; This function is called by:
  8135 ;;		_adc_volt
  8136 ;;		_sprintf
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140     0720                     ___xxtofl:	
  8141                           ;psect for function ___xxtofl
  8142                           
  8143                           
  8144                           ;incstack = 0
  8145                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8146                           ;___xxtofl@sign stored from wreg
  8147     0720  1283               	bcf	3,5	;RP0=0, select bank0
  8148     0721  1303               	bcf	3,6	;RP1=0, select bank0
  8149     0722  00A0               	movwf	___xxtofl@sign
  8150     0723                     l3330:
  8151     0723  0820               	movf	___xxtofl@sign,w
  8152     0724  1903               	btfsc	3,2
  8153     0725  2F27               	goto	u5461
  8154     0726  2F28               	goto	u5460
  8155     0727                     u5461:
  8156     0727  2F3C               	goto	l3336
  8157     0728                     u5460:
  8158     0728                     l3332:
  8159     0728  1FF5               	btfss	___xxtofl@val+3,7
  8160     0729  2F2B               	goto	u5471
  8161     072A  2F2C               	goto	u5470
  8162     072B                     u5471:
  8163     072B  2F3C               	goto	l3336
  8164     072C                     u5470:
  8165     072C                     l3334:
  8166     072C  0972               	comf	___xxtofl@val,w
  8167     072D  00A2               	movwf	___xxtofl@arg
  8168     072E  0973               	comf	___xxtofl@val+1,w
  8169     072F  00A3               	movwf	___xxtofl@arg+1
  8170     0730  0974               	comf	___xxtofl@val+2,w
  8171     0731  00A4               	movwf	___xxtofl@arg+2
  8172     0732  0975               	comf	___xxtofl@val+3,w
  8173     0733  00A5               	movwf	___xxtofl@arg+3
  8174     0734  0AA2               	incf	___xxtofl@arg,f
  8175     0735  1903               	skipnz
  8176     0736  0AA3               	incf	___xxtofl@arg+1,f
  8177     0737  1903               	skipnz
  8178     0738  0AA4               	incf	___xxtofl@arg+2,f
  8179     0739  1903               	skipnz
  8180     073A  0AA5               	incf	___xxtofl@arg+3,f
  8181     073B  2F44               	goto	l810
  8182     073C                     l3336:
  8183     073C  0875               	movf	___xxtofl@val+3,w
  8184     073D  00A5               	movwf	___xxtofl@arg+3
  8185     073E  0874               	movf	___xxtofl@val+2,w
  8186     073F  00A4               	movwf	___xxtofl@arg+2
  8187     0740  0873               	movf	___xxtofl@val+1,w
  8188     0741  00A3               	movwf	___xxtofl@arg+1
  8189     0742  0872               	movf	___xxtofl@val,w
  8190     0743  00A2               	movwf	___xxtofl@arg
  8191     0744                     l810:
  8192     0744  0875               	movf	___xxtofl@val+3,w
  8193     0745  0474               	iorwf	___xxtofl@val+2,w
  8194     0746  0473               	iorwf	___xxtofl@val+1,w
  8195     0747  0472               	iorwf	___xxtofl@val,w
  8196     0748  1D03               	skipz
  8197     0749  2F4B               	goto	u5481
  8198     074A  2F4C               	goto	u5480
  8199     074B                     u5481:
  8200     074B  2F55               	goto	l3342
  8201     074C                     u5480:
  8202     074C                     l3338:
  8203     074C  3000               	movlw	0
  8204     074D  00F5               	movwf	?___xxtofl+3
  8205     074E  3000               	movlw	0
  8206     074F  00F4               	movwf	?___xxtofl+2
  8207     0750  3000               	movlw	0
  8208     0751  00F3               	movwf	?___xxtofl+1
  8209     0752  3000               	movlw	0
  8210     0753  00F2               	movwf	?___xxtofl
  8211     0754  2FD9               	goto	l812
  8212     0755                     l3342:
  8213     0755  3096               	movlw	150
  8214     0756  00A1               	movwf	___xxtofl@exp
  8215     0757  2F65               	goto	l3346
  8216     0758                     l3344:
  8217     0758  3001               	movlw	1
  8218     0759  00F6               	movwf	??___xxtofl
  8219     075A  0876               	movf	??___xxtofl,w
  8220     075B  07A1               	addwf	___xxtofl@exp,f
  8221     075C  3001               	movlw	1
  8222     075D                     u5495:
  8223     075D  1003               	clrc
  8224     075E  0CA5               	rrf	___xxtofl@arg+3,f
  8225     075F  0CA4               	rrf	___xxtofl@arg+2,f
  8226     0760  0CA3               	rrf	___xxtofl@arg+1,f
  8227     0761  0CA2               	rrf	___xxtofl@arg,f
  8228     0762  3EFF               	addlw	-1
  8229     0763  1D03               	skipz
  8230     0764  2F5D               	goto	u5495
  8231     0765                     l3346:
  8232     0765  30FE               	movlw	254
  8233     0766  0525               	andwf	___xxtofl@arg+3,w
  8234     0767  1D03               	btfss	3,2
  8235     0768  2F6A               	goto	u5501
  8236     0769  2F6B               	goto	u5500
  8237     076A                     u5501:
  8238     076A  2F58               	goto	l3344
  8239     076B                     u5500:
  8240     076B  2F87               	goto	l816
  8241     076C                     l3348:
  8242     076C  3001               	movlw	1
  8243     076D  00F6               	movwf	??___xxtofl
  8244     076E  0876               	movf	??___xxtofl,w
  8245     076F  07A1               	addwf	___xxtofl@exp,f
  8246     0770                     l3350:
  8247     0770  3001               	movlw	1
  8248     0771  07A2               	addwf	___xxtofl@arg,f
  8249     0772  3000               	movlw	0
  8250     0773  1803               	skipnc
  8251     0774  3001               	movlw	1
  8252     0775  07A3               	addwf	___xxtofl@arg+1,f
  8253     0776  3000               	movlw	0
  8254     0777  1803               	skipnc
  8255     0778  3001               	movlw	1
  8256     0779  07A4               	addwf	___xxtofl@arg+2,f
  8257     077A  3000               	movlw	0
  8258     077B  1803               	skipnc
  8259     077C  3001               	movlw	1
  8260     077D  07A5               	addwf	___xxtofl@arg+3,f
  8261     077E                     l3352:
  8262     077E  3001               	movlw	1
  8263     077F                     u5515:
  8264     077F  1003               	clrc
  8265     0780  0CA5               	rrf	___xxtofl@arg+3,f
  8266     0781  0CA4               	rrf	___xxtofl@arg+2,f
  8267     0782  0CA3               	rrf	___xxtofl@arg+1,f
  8268     0783  0CA2               	rrf	___xxtofl@arg,f
  8269     0784  3EFF               	addlw	-1
  8270     0785  1D03               	skipz
  8271     0786  2F7F               	goto	u5515
  8272     0787                     l816:
  8273     0787  30FF               	movlw	255
  8274     0788  0525               	andwf	___xxtofl@arg+3,w
  8275     0789  1D03               	btfss	3,2
  8276     078A  2F8C               	goto	u5521
  8277     078B  2F8D               	goto	u5520
  8278     078C                     u5521:
  8279     078C  2F6C               	goto	l3348
  8280     078D                     u5520:
  8281     078D  2F99               	goto	l3356
  8282     078E                     l3354:
  8283     078E  3001               	movlw	1
  8284     078F  02A1               	subwf	___xxtofl@exp,f
  8285     0790  3001               	movlw	1
  8286     0791  00F6               	movwf	??___xxtofl
  8287     0792                     u5535:
  8288     0792  1003               	clrc
  8289     0793  0DA2               	rlf	___xxtofl@arg,f
  8290     0794  0DA3               	rlf	___xxtofl@arg+1,f
  8291     0795  0DA4               	rlf	___xxtofl@arg+2,f
  8292     0796  0DA5               	rlf	___xxtofl@arg+3,f
  8293     0797  0BF6               	decfsz	??___xxtofl,f
  8294     0798  2F92               	goto	u5535
  8295     0799                     l3356:
  8296     0799  1BA4               	btfsc	___xxtofl@arg+2,7
  8297     079A  2F9C               	goto	u5541
  8298     079B  2F9D               	goto	u5540
  8299     079C                     u5541:
  8300     079C  2FA3               	goto	l823
  8301     079D                     u5540:
  8302     079D                     l3358:
  8303     079D  3002               	movlw	2
  8304     079E  0221               	subwf	___xxtofl@exp,w
  8305     079F  1803               	skipnc
  8306     07A0  2FA2               	goto	u5551
  8307     07A1  2FA3               	goto	u5550
  8308     07A2                     u5551:
  8309     07A2  2F8E               	goto	l3354
  8310     07A3                     u5550:
  8311     07A3                     l823:
  8312     07A3  1821               	btfsc	___xxtofl@exp,0
  8313     07A4  2FA6               	goto	u5561
  8314     07A5  2FA7               	goto	u5560
  8315     07A6                     u5561:
  8316     07A6  2FAF               	goto	l824
  8317     07A7                     u5560:
  8318     07A7                     l3360:
  8319     07A7  30FF               	movlw	255
  8320     07A8  05A2               	andwf	___xxtofl@arg,f
  8321     07A9  30FF               	movlw	255
  8322     07AA  05A3               	andwf	___xxtofl@arg+1,f
  8323     07AB  307F               	movlw	127
  8324     07AC  05A4               	andwf	___xxtofl@arg+2,f
  8325     07AD  30FF               	movlw	255
  8326     07AE  05A5               	andwf	___xxtofl@arg+3,f
  8327     07AF                     l824:
  8328     07AF  1003               	clrc
  8329     07B0  0CA1               	rrf	___xxtofl@exp,f
  8330     07B1                     l3362:
  8331     07B1  0821               	movf	___xxtofl@exp,w
  8332     07B2  00F6               	movwf	??___xxtofl
  8333     07B3  01F7               	clrf	??___xxtofl+1
  8334     07B4  01F8               	clrf	??___xxtofl+2
  8335     07B5  01F9               	clrf	??___xxtofl+3
  8336     07B6  3018               	movlw	24
  8337     07B7                     u5575:
  8338     07B7  1003               	clrc
  8339     07B8  0DF6               	rlf	??___xxtofl,f
  8340     07B9  0DF7               	rlf	??___xxtofl+1,f
  8341     07BA  0DF8               	rlf	??___xxtofl+2,f
  8342     07BB  0DF9               	rlf	??___xxtofl+3,f
  8343     07BC                     u5570:
  8344     07BC  3EFF               	addlw	-1
  8345     07BD  1D03               	skipz
  8346     07BE  2FB7               	goto	u5575
  8347     07BF  0876               	movf	??___xxtofl,w
  8348     07C0  04A2               	iorwf	___xxtofl@arg,f
  8349     07C1  0877               	movf	??___xxtofl+1,w
  8350     07C2  04A3               	iorwf	___xxtofl@arg+1,f
  8351     07C3  0878               	movf	??___xxtofl+2,w
  8352     07C4  04A4               	iorwf	___xxtofl@arg+2,f
  8353     07C5  0879               	movf	??___xxtofl+3,w
  8354     07C6  04A5               	iorwf	___xxtofl@arg+3,f
  8355     07C7                     l3364:
  8356     07C7  0820               	movf	___xxtofl@sign,w
  8357     07C8  1903               	btfsc	3,2
  8358     07C9  2FCB               	goto	u5581
  8359     07CA  2FCC               	goto	u5580
  8360     07CB                     u5581:
  8361     07CB  2FD1               	goto	l3370
  8362     07CC                     u5580:
  8363     07CC                     l3366:
  8364     07CC  1FF5               	btfss	___xxtofl@val+3,7
  8365     07CD  2FCF               	goto	u5591
  8366     07CE  2FD0               	goto	u5590
  8367     07CF                     u5591:
  8368     07CF  2FD1               	goto	l3370
  8369     07D0                     u5590:
  8370     07D0                     l3368:
  8371     07D0  17A5               	bsf	___xxtofl@arg+3,7
  8372     07D1                     l3370:
  8373     07D1  0825               	movf	___xxtofl@arg+3,w
  8374     07D2  00F5               	movwf	?___xxtofl+3
  8375     07D3  0824               	movf	___xxtofl@arg+2,w
  8376     07D4  00F4               	movwf	?___xxtofl+2
  8377     07D5  0823               	movf	___xxtofl@arg+1,w
  8378     07D6  00F3               	movwf	?___xxtofl+1
  8379     07D7  0822               	movf	___xxtofl@arg,w
  8380     07D8  00F2               	movwf	?___xxtofl
  8381     07D9                     l812:
  8382     07D9  0008               	return
  8383     07DA                     __end_of___xxtofl:
  8384                           
  8385                           	psect	text25
  8386     0958                     __ptext25:	
  8387 ;; *************** function ___flmul *****************
  8388 ;; Defined at:
  8389 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  b               4    8[BANK0 ] unsigned char 
  8392 ;;  a               4   12[BANK0 ] unsigned char 
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  prod            4   28[BANK0 ] struct .
  8395 ;;  grs             4   22[BANK0 ] unsigned long 
  8396 ;;  temp            2   32[BANK0 ] struct .
  8397 ;;  bexp            1   27[BANK0 ] unsigned char 
  8398 ;;  aexp            1   26[BANK0 ] unsigned char 
  8399 ;;  sign            1   21[BANK0 ] unsigned char 
  8400 ;; Return value:  Size  Location     Type
  8401 ;;                  4    8[BANK0 ] unsigned char 
  8402 ;; Registers used:
  8403 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8404 ;; Tracked objects:
  8405 ;;		On entry : 0/0
  8406 ;;		On exit  : 0/0
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8409 ;;      Params:         0       8       0       0       0
  8410 ;;      Locals:         0      13       0       0       0
  8411 ;;      Temps:          0       5       0       0       0
  8412 ;;      Totals:         0      26       0       0       0
  8413 ;;Total ram usage:       26 bytes
  8414 ;; Hardware stack levels used: 1
  8415 ;; Hardware stack levels required when called: 2
  8416 ;; This function calls:
  8417 ;;		__Umul8_16
  8418 ;; This function is called by:
  8419 ;;		_adc_volt
  8420 ;;		_fround
  8421 ;;		_scale
  8422 ;;		_sprintf
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426     0958                     ___flmul:	
  8427                           ;psect for function ___flmul
  8428                           
  8429     0958                     l2696:	
  8430                           ;incstack = 0
  8431                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8432                           
  8433     0958  1283               	bcf	3,5	;RP0=0, select bank0
  8434     0959  1303               	bcf	3,6	;RP1=0, select bank0
  8435     095A  082B               	movf	___flmul@b+3,w
  8436     095B  3980               	andlw	128
  8437     095C  00B5               	movwf	___flmul@sign
  8438     095D                     l2698:
  8439     095D  082B               	movf	___flmul@b+3,w
  8440     095E  00B0               	movwf	??___flmul
  8441     095F  0730               	addwf	??___flmul,w
  8442     0960  00BB               	movwf	___flmul@bexp
  8443     0961                     l2700:
  8444     0961  1FAA               	btfss	___flmul@b+2,7
  8445     0962  2964               	goto	u3881
  8446     0963  2965               	goto	u3880
  8447     0964                     u3881:
  8448     0964  2966               	goto	l2704
  8449     0965                     u3880:
  8450     0965                     l2702:
  8451     0965  143B               	bsf	___flmul@bexp,0
  8452     0966                     l2704:
  8453     0966  083B               	movf	___flmul@bexp,w
  8454     0967  1903               	btfsc	3,2
  8455     0968  296A               	goto	u3891
  8456     0969  296B               	goto	u3890
  8457     096A                     u3891:
  8458     096A  297A               	goto	l2712
  8459     096B                     u3890:
  8460     096B                     l2706:
  8461     096B  0A3B               	incf	___flmul@bexp,w
  8462     096C  1D03               	btfss	3,2
  8463     096D  296F               	goto	u3901
  8464     096E  2970               	goto	u3900
  8465     096F                     u3901:
  8466     096F  2978               	goto	l2710
  8467     0970                     u3900:
  8468     0970                     l2708:
  8469     0970  3000               	movlw	0
  8470     0971  00AB               	movwf	___flmul@b+3
  8471     0972  3000               	movlw	0
  8472     0973  00AA               	movwf	___flmul@b+2
  8473     0974  3000               	movlw	0
  8474     0975  00A9               	movwf	___flmul@b+1
  8475     0976  3000               	movlw	0
  8476     0977  00A8               	movwf	___flmul@b
  8477     0978                     l2710:
  8478     0978  17AA               	bsf	___flmul@b+2,7
  8479     0979  2982               	goto	l2714
  8480     097A                     l2712:
  8481     097A  3000               	movlw	0
  8482     097B  00AB               	movwf	___flmul@b+3
  8483     097C  3000               	movlw	0
  8484     097D  00AA               	movwf	___flmul@b+2
  8485     097E  3000               	movlw	0
  8486     097F  00A9               	movwf	___flmul@b+1
  8487     0980  3000               	movlw	0
  8488     0981  00A8               	movwf	___flmul@b
  8489     0982                     l2714:
  8490     0982  082F               	movf	___flmul@a+3,w
  8491     0983  3980               	andlw	128
  8492     0984  00B0               	movwf	??___flmul
  8493     0985  0830               	movf	??___flmul,w
  8494     0986  06B5               	xorwf	___flmul@sign,f
  8495     0987                     l2716:
  8496     0987  082F               	movf	___flmul@a+3,w
  8497     0988  00B0               	movwf	??___flmul
  8498     0989  0730               	addwf	??___flmul,w
  8499     098A  00BA               	movwf	___flmul@aexp
  8500     098B                     l2718:
  8501     098B  1FAE               	btfss	___flmul@a+2,7
  8502     098C  298E               	goto	u3911
  8503     098D  298F               	goto	u3910
  8504     098E                     u3911:
  8505     098E  2990               	goto	l2722
  8506     098F                     u3910:
  8507     098F                     l2720:
  8508     098F  143A               	bsf	___flmul@aexp,0
  8509     0990                     l2722:
  8510     0990  083A               	movf	___flmul@aexp,w
  8511     0991  1903               	btfsc	3,2
  8512     0992  2994               	goto	u3921
  8513     0993  2995               	goto	u3920
  8514     0994                     u3921:
  8515     0994  29A4               	goto	l2730
  8516     0995                     u3920:
  8517     0995                     l2724:
  8518     0995  0A3A               	incf	___flmul@aexp,w
  8519     0996  1D03               	btfss	3,2
  8520     0997  2999               	goto	u3931
  8521     0998  299A               	goto	u3930
  8522     0999                     u3931:
  8523     0999  29A2               	goto	l2728
  8524     099A                     u3930:
  8525     099A                     l2726:
  8526     099A  3000               	movlw	0
  8527     099B  00AF               	movwf	___flmul@a+3
  8528     099C  3000               	movlw	0
  8529     099D  00AE               	movwf	___flmul@a+2
  8530     099E  3000               	movlw	0
  8531     099F  00AD               	movwf	___flmul@a+1
  8532     09A0  3000               	movlw	0
  8533     09A1  00AC               	movwf	___flmul@a
  8534     09A2                     l2728:
  8535     09A2  17AE               	bsf	___flmul@a+2,7
  8536     09A3  29AC               	goto	l2732
  8537     09A4                     l2730:
  8538     09A4  3000               	movlw	0
  8539     09A5  00AF               	movwf	___flmul@a+3
  8540     09A6  3000               	movlw	0
  8541     09A7  00AE               	movwf	___flmul@a+2
  8542     09A8  3000               	movlw	0
  8543     09A9  00AD               	movwf	___flmul@a+1
  8544     09AA  3000               	movlw	0
  8545     09AB  00AC               	movwf	___flmul@a
  8546     09AC                     l2732:
  8547     09AC  083A               	movf	___flmul@aexp,w
  8548     09AD  1903               	btfsc	3,2
  8549     09AE  29B0               	goto	u3941
  8550     09AF  29B1               	goto	u3940
  8551     09B0                     u3941:
  8552     09B0  29B6               	goto	l2736
  8553     09B1                     u3940:
  8554     09B1                     l2734:
  8555     09B1  083B               	movf	___flmul@bexp,w
  8556     09B2  1D03               	btfss	3,2
  8557     09B3  29B5               	goto	u3951
  8558     09B4  29B6               	goto	u3950
  8559     09B5                     u3951:
  8560     09B5  29BF               	goto	l2740
  8561     09B6                     u3950:
  8562     09B6                     l2736:
  8563     09B6  3000               	movlw	0
  8564     09B7  00AB               	movwf	?___flmul+3
  8565     09B8  3000               	movlw	0
  8566     09B9  00AA               	movwf	?___flmul+2
  8567     09BA  3000               	movlw	0
  8568     09BB  00A9               	movwf	?___flmul+1
  8569     09BC  3000               	movlw	0
  8570     09BD  00A8               	movwf	?___flmul
  8571     09BE  2C9C               	goto	l766
  8572     09BF                     l2740:
  8573     09BF  0828               	movf	___flmul@b,w
  8574     09C0  00F2               	movwf	__Umul8_16@multiplicand
  8575     09C1  082E               	movf	___flmul@a+2,w
  8576     09C2  160A  158A  22D7  120A  158A  	fcall	__Umul8_16
  8577     09C7  0873               	movf	?__Umul8_16+1,w
  8578     09C8  1283               	bcf	3,5	;RP0=0, select bank0
  8579     09C9  1303               	bcf	3,6	;RP1=0, select bank0
  8580     09CA  00C1               	movwf	___flmul@temp+1
  8581     09CB  0872               	movf	?__Umul8_16,w
  8582     09CC  00C0               	movwf	___flmul@temp
  8583     09CD                     l2742:
  8584     09CD  0840               	movf	___flmul@temp,w
  8585     09CE  00B0               	movwf	??___flmul
  8586     09CF  01B1               	clrf	??___flmul+1
  8587     09D0  01B2               	clrf	??___flmul+2
  8588     09D1  01B3               	clrf	??___flmul+3
  8589     09D2  0833               	movf	??___flmul+3,w
  8590     09D3  00B9               	movwf	___flmul@grs+3
  8591     09D4  0832               	movf	??___flmul+2,w
  8592     09D5  00B8               	movwf	___flmul@grs+2
  8593     09D6  0831               	movf	??___flmul+1,w
  8594     09D7  00B7               	movwf	___flmul@grs+1
  8595     09D8  0830               	movf	??___flmul,w
  8596     09D9  00B6               	movwf	___flmul@grs
  8597     09DA                     l2744:
  8598     09DA  0841               	movf	___flmul@temp+1,w
  8599     09DB  00B0               	movwf	??___flmul
  8600     09DC  01B1               	clrf	??___flmul+1
  8601     09DD  01B2               	clrf	??___flmul+2
  8602     09DE  01B3               	clrf	??___flmul+3
  8603     09DF  0833               	movf	??___flmul+3,w
  8604     09E0  00BF               	movwf	___flmul@prod+3
  8605     09E1  0832               	movf	??___flmul+2,w
  8606     09E2  00BE               	movwf	___flmul@prod+2
  8607     09E3  0831               	movf	??___flmul+1,w
  8608     09E4  00BD               	movwf	___flmul@prod+1
  8609     09E5  0830               	movf	??___flmul,w
  8610     09E6  00BC               	movwf	___flmul@prod
  8611     09E7  0829               	movf	___flmul@b+1,w
  8612     09E8  00F2               	movwf	__Umul8_16@multiplicand
  8613     09E9  082D               	movf	___flmul@a+1,w
  8614     09EA  160A  158A  22D7  120A  158A  	fcall	__Umul8_16
  8615     09EF  0873               	movf	?__Umul8_16+1,w
  8616     09F0  1283               	bcf	3,5	;RP0=0, select bank0
  8617     09F1  1303               	bcf	3,6	;RP1=0, select bank0
  8618     09F2  00C1               	movwf	___flmul@temp+1
  8619     09F3  0872               	movf	?__Umul8_16,w
  8620     09F4  00C0               	movwf	___flmul@temp
  8621     09F5                     l2746:
  8622     09F5  0840               	movf	___flmul@temp,w
  8623     09F6  00B0               	movwf	??___flmul
  8624     09F7  01B1               	clrf	??___flmul+1
  8625     09F8  01B2               	clrf	??___flmul+2
  8626     09F9  01B3               	clrf	??___flmul+3
  8627     09FA  0830               	movf	??___flmul,w
  8628     09FB  07B6               	addwf	___flmul@grs,f
  8629     09FC  0831               	movf	??___flmul+1,w
  8630     09FD  1103               	clrz
  8631     09FE  1803               	skipnc
  8632     09FF  3E01               	addlw	1
  8633     0A00  1903               	skipnz
  8634     0A01  2A03               	goto	u3961
  8635     0A02  07B7               	addwf	___flmul@grs+1,f
  8636     0A03                     u3961:
  8637     0A03  0832               	movf	??___flmul+2,w
  8638     0A04  1103               	clrz
  8639     0A05  1803               	skipnc
  8640     0A06  3E01               	addlw	1
  8641     0A07  1903               	skipnz
  8642     0A08  2A0A               	goto	u3962
  8643     0A09  07B8               	addwf	___flmul@grs+2,f
  8644     0A0A                     u3962:
  8645     0A0A  0833               	movf	??___flmul+3,w
  8646     0A0B  1103               	clrz
  8647     0A0C  1803               	skipnc
  8648     0A0D  3E01               	addlw	1
  8649     0A0E  1903               	skipnz
  8650     0A0F  2A11               	goto	u3963
  8651     0A10  07B9               	addwf	___flmul@grs+3,f
  8652     0A11                     u3963:
  8653     0A11                     l2748:
  8654     0A11  0841               	movf	___flmul@temp+1,w
  8655     0A12  00B0               	movwf	??___flmul
  8656     0A13  01B1               	clrf	??___flmul+1
  8657     0A14  01B2               	clrf	??___flmul+2
  8658     0A15  01B3               	clrf	??___flmul+3
  8659     0A16  0830               	movf	??___flmul,w
  8660     0A17  07BC               	addwf	___flmul@prod,f
  8661     0A18  0831               	movf	??___flmul+1,w
  8662     0A19  1103               	clrz
  8663     0A1A  1803               	skipnc
  8664     0A1B  3E01               	addlw	1
  8665     0A1C  1903               	skipnz
  8666     0A1D  2A1F               	goto	u3971
  8667     0A1E  07BD               	addwf	___flmul@prod+1,f
  8668     0A1F                     u3971:
  8669     0A1F  0832               	movf	??___flmul+2,w
  8670     0A20  1103               	clrz
  8671     0A21  1803               	skipnc
  8672     0A22  3E01               	addlw	1
  8673     0A23  1903               	skipnz
  8674     0A24  2A26               	goto	u3972
  8675     0A25  07BE               	addwf	___flmul@prod+2,f
  8676     0A26                     u3972:
  8677     0A26  0833               	movf	??___flmul+3,w
  8678     0A27  1103               	clrz
  8679     0A28  1803               	skipnc
  8680     0A29  3E01               	addlw	1
  8681     0A2A  1903               	skipnz
  8682     0A2B  2A2D               	goto	u3973
  8683     0A2C  07BF               	addwf	___flmul@prod+3,f
  8684     0A2D                     u3973:
  8685     0A2D  082A               	movf	___flmul@b+2,w
  8686     0A2E  00F2               	movwf	__Umul8_16@multiplicand
  8687     0A2F  082C               	movf	___flmul@a,w
  8688     0A30  160A  158A  22D7  120A  158A  	fcall	__Umul8_16
  8689     0A35  0873               	movf	?__Umul8_16+1,w
  8690     0A36  1283               	bcf	3,5	;RP0=0, select bank0
  8691     0A37  1303               	bcf	3,6	;RP1=0, select bank0
  8692     0A38  00C1               	movwf	___flmul@temp+1
  8693     0A39  0872               	movf	?__Umul8_16,w
  8694     0A3A  00C0               	movwf	___flmul@temp
  8695     0A3B                     l2750:
  8696     0A3B  0840               	movf	___flmul@temp,w
  8697     0A3C  00B0               	movwf	??___flmul
  8698     0A3D  01B1               	clrf	??___flmul+1
  8699     0A3E  01B2               	clrf	??___flmul+2
  8700     0A3F  01B3               	clrf	??___flmul+3
  8701     0A40  0830               	movf	??___flmul,w
  8702     0A41  07B6               	addwf	___flmul@grs,f
  8703     0A42  0831               	movf	??___flmul+1,w
  8704     0A43  1103               	clrz
  8705     0A44  1803               	skipnc
  8706     0A45  3E01               	addlw	1
  8707     0A46  1903               	skipnz
  8708     0A47  2A49               	goto	u3981
  8709     0A48  07B7               	addwf	___flmul@grs+1,f
  8710     0A49                     u3981:
  8711     0A49  0832               	movf	??___flmul+2,w
  8712     0A4A  1103               	clrz
  8713     0A4B  1803               	skipnc
  8714     0A4C  3E01               	addlw	1
  8715     0A4D  1903               	skipnz
  8716     0A4E  2A50               	goto	u3982
  8717     0A4F  07B8               	addwf	___flmul@grs+2,f
  8718     0A50                     u3982:
  8719     0A50  0833               	movf	??___flmul+3,w
  8720     0A51  1103               	clrz
  8721     0A52  1803               	skipnc
  8722     0A53  3E01               	addlw	1
  8723     0A54  1903               	skipnz
  8724     0A55  2A57               	goto	u3983
  8725     0A56  07B9               	addwf	___flmul@grs+3,f
  8726     0A57                     u3983:
  8727     0A57                     l2752:
  8728     0A57  0841               	movf	___flmul@temp+1,w
  8729     0A58  00B0               	movwf	??___flmul
  8730     0A59  01B1               	clrf	??___flmul+1
  8731     0A5A  01B2               	clrf	??___flmul+2
  8732     0A5B  01B3               	clrf	??___flmul+3
  8733     0A5C  0830               	movf	??___flmul,w
  8734     0A5D  07BC               	addwf	___flmul@prod,f
  8735     0A5E  0831               	movf	??___flmul+1,w
  8736     0A5F  1103               	clrz
  8737     0A60  1803               	skipnc
  8738     0A61  3E01               	addlw	1
  8739     0A62  1903               	skipnz
  8740     0A63  2A65               	goto	u3991
  8741     0A64  07BD               	addwf	___flmul@prod+1,f
  8742     0A65                     u3991:
  8743     0A65  0832               	movf	??___flmul+2,w
  8744     0A66  1103               	clrz
  8745     0A67  1803               	skipnc
  8746     0A68  3E01               	addlw	1
  8747     0A69  1903               	skipnz
  8748     0A6A  2A6C               	goto	u3992
  8749     0A6B  07BE               	addwf	___flmul@prod+2,f
  8750     0A6C                     u3992:
  8751     0A6C  0833               	movf	??___flmul+3,w
  8752     0A6D  1103               	clrz
  8753     0A6E  1803               	skipnc
  8754     0A6F  3E01               	addlw	1
  8755     0A70  1903               	skipnz
  8756     0A71  2A73               	goto	u3993
  8757     0A72  07BF               	addwf	___flmul@prod+3,f
  8758     0A73                     u3993:
  8759     0A73                     l2754:
  8760     0A73  3008               	movlw	8
  8761     0A74  00B0               	movwf	??___flmul
  8762     0A75                     u4005:
  8763     0A75  1003               	clrc
  8764     0A76  0DB6               	rlf	___flmul@grs,f
  8765     0A77  0DB7               	rlf	___flmul@grs+1,f
  8766     0A78  0DB8               	rlf	___flmul@grs+2,f
  8767     0A79  0DB9               	rlf	___flmul@grs+3,f
  8768     0A7A  0BB0               	decfsz	??___flmul,f
  8769     0A7B  2A75               	goto	u4005
  8770     0A7C                     l2756:
  8771     0A7C  0829               	movf	___flmul@b+1,w
  8772     0A7D  00F2               	movwf	__Umul8_16@multiplicand
  8773     0A7E  082C               	movf	___flmul@a,w
  8774     0A7F  160A  158A  22D7  120A  158A  	fcall	__Umul8_16
  8775     0A84  0873               	movf	?__Umul8_16+1,w
  8776     0A85  1283               	bcf	3,5	;RP0=0, select bank0
  8777     0A86  1303               	bcf	3,6	;RP1=0, select bank0
  8778     0A87  00C1               	movwf	___flmul@temp+1
  8779     0A88  0872               	movf	?__Umul8_16,w
  8780     0A89  00C0               	movwf	___flmul@temp
  8781     0A8A                     l2758:
  8782     0A8A  0840               	movf	___flmul@temp,w
  8783     0A8B  00B0               	movwf	??___flmul
  8784     0A8C  0841               	movf	___flmul@temp+1,w
  8785     0A8D  00B1               	movwf	??___flmul+1
  8786     0A8E  01B2               	clrf	??___flmul+2
  8787     0A8F  01B3               	clrf	??___flmul+3
  8788     0A90  0830               	movf	??___flmul,w
  8789     0A91  07B6               	addwf	___flmul@grs,f
  8790     0A92  0831               	movf	??___flmul+1,w
  8791     0A93  1103               	clrz
  8792     0A94  1803               	skipnc
  8793     0A95  3E01               	addlw	1
  8794     0A96  1903               	skipnz
  8795     0A97  2A99               	goto	u4011
  8796     0A98  07B7               	addwf	___flmul@grs+1,f
  8797     0A99                     u4011:
  8798     0A99  0832               	movf	??___flmul+2,w
  8799     0A9A  1103               	clrz
  8800     0A9B  1803               	skipnc
  8801     0A9C  3E01               	addlw	1
  8802     0A9D  1903               	skipnz
  8803     0A9E  2AA0               	goto	u4012
  8804     0A9F  07B8               	addwf	___flmul@grs+2,f
  8805     0AA0                     u4012:
  8806     0AA0  0833               	movf	??___flmul+3,w
  8807     0AA1  1103               	clrz
  8808     0AA2  1803               	skipnc
  8809     0AA3  3E01               	addlw	1
  8810     0AA4  1903               	skipnz
  8811     0AA5  2AA7               	goto	u4013
  8812     0AA6  07B9               	addwf	___flmul@grs+3,f
  8813     0AA7                     u4013:
  8814     0AA7                     l2760:
  8815     0AA7  0828               	movf	___flmul@b,w
  8816     0AA8  00F2               	movwf	__Umul8_16@multiplicand
  8817     0AA9  082D               	movf	___flmul@a+1,w
  8818     0AAA  160A  158A  22D7  120A  158A  	fcall	__Umul8_16
  8819     0AAF  0873               	movf	?__Umul8_16+1,w
  8820     0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  8821     0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  8822     0AB2  00C1               	movwf	___flmul@temp+1
  8823     0AB3  0872               	movf	?__Umul8_16,w
  8824     0AB4  00C0               	movwf	___flmul@temp
  8825     0AB5                     l2762:
  8826     0AB5  0840               	movf	___flmul@temp,w
  8827     0AB6  00B0               	movwf	??___flmul
  8828     0AB7  0841               	movf	___flmul@temp+1,w
  8829     0AB8  00B1               	movwf	??___flmul+1
  8830     0AB9  01B2               	clrf	??___flmul+2
  8831     0ABA  01B3               	clrf	??___flmul+3
  8832     0ABB  0830               	movf	??___flmul,w
  8833     0ABC  07B6               	addwf	___flmul@grs,f
  8834     0ABD  0831               	movf	??___flmul+1,w
  8835     0ABE  1103               	clrz
  8836     0ABF  1803               	skipnc
  8837     0AC0  3E01               	addlw	1
  8838     0AC1  1903               	skipnz
  8839     0AC2  2AC4               	goto	u4021
  8840     0AC3  07B7               	addwf	___flmul@grs+1,f
  8841     0AC4                     u4021:
  8842     0AC4  0832               	movf	??___flmul+2,w
  8843     0AC5  1103               	clrz
  8844     0AC6  1803               	skipnc
  8845     0AC7  3E01               	addlw	1
  8846     0AC8  1903               	skipnz
  8847     0AC9  2ACB               	goto	u4022
  8848     0ACA  07B8               	addwf	___flmul@grs+2,f
  8849     0ACB                     u4022:
  8850     0ACB  0833               	movf	??___flmul+3,w
  8851     0ACC  1103               	clrz
  8852     0ACD  1803               	skipnc
  8853     0ACE  3E01               	addlw	1
  8854     0ACF  1903               	skipnz
  8855     0AD0  2AD2               	goto	u4023
  8856     0AD1  07B9               	addwf	___flmul@grs+3,f
  8857     0AD2                     u4023:
  8858     0AD2                     l2764:
  8859     0AD2  3008               	movlw	8
  8860     0AD3  00B0               	movwf	??___flmul
  8861     0AD4                     u4035:
  8862     0AD4  1003               	clrc
  8863     0AD5  0DB6               	rlf	___flmul@grs,f
  8864     0AD6  0DB7               	rlf	___flmul@grs+1,f
  8865     0AD7  0DB8               	rlf	___flmul@grs+2,f
  8866     0AD8  0DB9               	rlf	___flmul@grs+3,f
  8867     0AD9  0BB0               	decfsz	??___flmul,f
  8868     0ADA  2AD4               	goto	u4035
  8869     0ADB  0828               	movf	___flmul@b,w
  8870     0ADC  00F2               	movwf	__Umul8_16@multiplicand
  8871     0ADD  082C               	movf	___flmul@a,w
  8872     0ADE  160A  158A  22D7  120A  158A  	fcall	__Umul8_16
  8873     0AE3  0873               	movf	?__Umul8_16+1,w
  8874     0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  8875     0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  8876     0AE6  00C1               	movwf	___flmul@temp+1
  8877     0AE7  0872               	movf	?__Umul8_16,w
  8878     0AE8  00C0               	movwf	___flmul@temp
  8879     0AE9                     l2766:
  8880     0AE9  0840               	movf	___flmul@temp,w
  8881     0AEA  00B0               	movwf	??___flmul
  8882     0AEB  0841               	movf	___flmul@temp+1,w
  8883     0AEC  00B1               	movwf	??___flmul+1
  8884     0AED  01B2               	clrf	??___flmul+2
  8885     0AEE  01B3               	clrf	??___flmul+3
  8886     0AEF  0830               	movf	??___flmul,w
  8887     0AF0  07B6               	addwf	___flmul@grs,f
  8888     0AF1  0831               	movf	??___flmul+1,w
  8889     0AF2  1103               	clrz
  8890     0AF3  1803               	skipnc
  8891     0AF4  3E01               	addlw	1
  8892     0AF5  1903               	skipnz
  8893     0AF6  2AF8               	goto	u4041
  8894     0AF7  07B7               	addwf	___flmul@grs+1,f
  8895     0AF8                     u4041:
  8896     0AF8  0832               	movf	??___flmul+2,w
  8897     0AF9  1103               	clrz
  8898     0AFA  1803               	skipnc
  8899     0AFB  3E01               	addlw	1
  8900     0AFC  1903               	skipnz
  8901     0AFD  2AFF               	goto	u4042
  8902     0AFE  07B8               	addwf	___flmul@grs+2,f
  8903     0AFF                     u4042:
  8904     0AFF  0833               	movf	??___flmul+3,w
  8905     0B00  1103               	clrz
  8906     0B01  1803               	skipnc
  8907     0B02  3E01               	addlw	1
  8908     0B03  1903               	skipnz
  8909     0B04  2B06               	goto	u4043
  8910     0B05  07B9               	addwf	___flmul@grs+3,f
  8911     0B06                     u4043:
  8912     0B06                     l2768:
  8913     0B06  0829               	movf	___flmul@b+1,w
  8914     0B07  00F2               	movwf	__Umul8_16@multiplicand
  8915     0B08  082E               	movf	___flmul@a+2,w
  8916     0B09  160A  158A  22D7  120A  158A  	fcall	__Umul8_16
  8917     0B0E  0873               	movf	?__Umul8_16+1,w
  8918     0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  8919     0B10  1303               	bcf	3,6	;RP1=0, select bank0
  8920     0B11  00C1               	movwf	___flmul@temp+1
  8921     0B12  0872               	movf	?__Umul8_16,w
  8922     0B13  00C0               	movwf	___flmul@temp
  8923     0B14  0840               	movf	___flmul@temp,w
  8924     0B15  00B0               	movwf	??___flmul
  8925     0B16  0841               	movf	___flmul@temp+1,w
  8926     0B17  00B1               	movwf	??___flmul+1
  8927     0B18  01B2               	clrf	??___flmul+2
  8928     0B19  01B3               	clrf	??___flmul+3
  8929     0B1A  0830               	movf	??___flmul,w
  8930     0B1B  07BC               	addwf	___flmul@prod,f
  8931     0B1C  0831               	movf	??___flmul+1,w
  8932     0B1D  1103               	clrz
  8933     0B1E  1803               	skipnc
  8934     0B1F  3E01               	addlw	1
  8935     0B20  1903               	skipnz
  8936     0B21  2B23               	goto	u4051
  8937     0B22  07BD               	addwf	___flmul@prod+1,f
  8938     0B23                     u4051:
  8939     0B23  0832               	movf	??___flmul+2,w
  8940     0B24  1103               	clrz
  8941     0B25  1803               	skipnc
  8942     0B26  3E01               	addlw	1
  8943     0B27  1903               	skipnz
  8944     0B28  2B2A               	goto	u4052
  8945     0B29  07BE               	addwf	___flmul@prod+2,f
  8946     0B2A                     u4052:
  8947     0B2A  0833               	movf	??___flmul+3,w
  8948     0B2B  1103               	clrz
  8949     0B2C  1803               	skipnc
  8950     0B2D  3E01               	addlw	1
  8951     0B2E  1903               	skipnz
  8952     0B2F  2B31               	goto	u4053
  8953     0B30  07BF               	addwf	___flmul@prod+3,f
  8954     0B31                     u4053:
  8955     0B31                     l2770:
  8956     0B31  082A               	movf	___flmul@b+2,w
  8957     0B32  00F2               	movwf	__Umul8_16@multiplicand
  8958     0B33  082D               	movf	___flmul@a+1,w
  8959     0B34  160A  158A  22D7  120A  158A  	fcall	__Umul8_16
  8960     0B39  0873               	movf	?__Umul8_16+1,w
  8961     0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  8962     0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  8963     0B3C  00C1               	movwf	___flmul@temp+1
  8964     0B3D  0872               	movf	?__Umul8_16,w
  8965     0B3E  00C0               	movwf	___flmul@temp
  8966     0B3F                     l2772:
  8967     0B3F  0840               	movf	___flmul@temp,w
  8968     0B40  00B0               	movwf	??___flmul
  8969     0B41  0841               	movf	___flmul@temp+1,w
  8970     0B42  00B1               	movwf	??___flmul+1
  8971     0B43  01B2               	clrf	??___flmul+2
  8972     0B44  01B3               	clrf	??___flmul+3
  8973     0B45  0830               	movf	??___flmul,w
  8974     0B46  07BC               	addwf	___flmul@prod,f
  8975     0B47  0831               	movf	??___flmul+1,w
  8976     0B48  1103               	clrz
  8977     0B49  1803               	skipnc
  8978     0B4A  3E01               	addlw	1
  8979     0B4B  1903               	skipnz
  8980     0B4C  2B4E               	goto	u4061
  8981     0B4D  07BD               	addwf	___flmul@prod+1,f
  8982     0B4E                     u4061:
  8983     0B4E  0832               	movf	??___flmul+2,w
  8984     0B4F  1103               	clrz
  8985     0B50  1803               	skipnc
  8986     0B51  3E01               	addlw	1
  8987     0B52  1903               	skipnz
  8988     0B53  2B55               	goto	u4062
  8989     0B54  07BE               	addwf	___flmul@prod+2,f
  8990     0B55                     u4062:
  8991     0B55  0833               	movf	??___flmul+3,w
  8992     0B56  1103               	clrz
  8993     0B57  1803               	skipnc
  8994     0B58  3E01               	addlw	1
  8995     0B59  1903               	skipnz
  8996     0B5A  2B5C               	goto	u4063
  8997     0B5B  07BF               	addwf	___flmul@prod+3,f
  8998     0B5C                     u4063:
  8999     0B5C  082A               	movf	___flmul@b+2,w
  9000     0B5D  00F2               	movwf	__Umul8_16@multiplicand
  9001     0B5E  082E               	movf	___flmul@a+2,w
  9002     0B5F  160A  158A  22D7  120A  158A  	fcall	__Umul8_16
  9003     0B64  0873               	movf	?__Umul8_16+1,w
  9004     0B65  1283               	bcf	3,5	;RP0=0, select bank0
  9005     0B66  1303               	bcf	3,6	;RP1=0, select bank0
  9006     0B67  00C1               	movwf	___flmul@temp+1
  9007     0B68  0872               	movf	?__Umul8_16,w
  9008     0B69  00C0               	movwf	___flmul@temp
  9009     0B6A                     l2774:
  9010     0B6A  0840               	movf	___flmul@temp,w
  9011     0B6B  00B0               	movwf	??___flmul
  9012     0B6C  0841               	movf	___flmul@temp+1,w
  9013     0B6D  00B1               	movwf	??___flmul+1
  9014     0B6E  01B2               	clrf	??___flmul+2
  9015     0B6F  01B3               	clrf	??___flmul+3
  9016     0B70  3008               	movlw	8
  9017     0B71                     u4075:
  9018     0B71  1003               	clrc
  9019     0B72  0DB0               	rlf	??___flmul,f
  9020     0B73  0DB1               	rlf	??___flmul+1,f
  9021     0B74  0DB2               	rlf	??___flmul+2,f
  9022     0B75  0DB3               	rlf	??___flmul+3,f
  9023     0B76                     u4070:
  9024     0B76  3EFF               	addlw	-1
  9025     0B77  1D03               	skipz
  9026     0B78  2B71               	goto	u4075
  9027     0B79  0830               	movf	??___flmul,w
  9028     0B7A  07BC               	addwf	___flmul@prod,f
  9029     0B7B  0831               	movf	??___flmul+1,w
  9030     0B7C  1103               	clrz
  9031     0B7D  1803               	skipnc
  9032     0B7E  3E01               	addlw	1
  9033     0B7F  1903               	skipnz
  9034     0B80  2B82               	goto	u4081
  9035     0B81  07BD               	addwf	___flmul@prod+1,f
  9036     0B82                     u4081:
  9037     0B82  0832               	movf	??___flmul+2,w
  9038     0B83  1103               	clrz
  9039     0B84  1803               	skipnc
  9040     0B85  3E01               	addlw	1
  9041     0B86  1903               	skipnz
  9042     0B87  2B89               	goto	u4082
  9043     0B88  07BE               	addwf	___flmul@prod+2,f
  9044     0B89                     u4082:
  9045     0B89  0833               	movf	??___flmul+3,w
  9046     0B8A  1103               	clrz
  9047     0B8B  1803               	skipnc
  9048     0B8C  3E01               	addlw	1
  9049     0B8D  1903               	skipnz
  9050     0B8E  2B90               	goto	u4083
  9051     0B8F  07BF               	addwf	___flmul@prod+3,f
  9052     0B90                     u4083:
  9053     0B90                     l2776:
  9054     0B90  0836               	movf	___flmul@grs,w
  9055     0B91  00B0               	movwf	??___flmul
  9056     0B92  0837               	movf	___flmul@grs+1,w
  9057     0B93  00B1               	movwf	??___flmul+1
  9058     0B94  0838               	movf	___flmul@grs+2,w
  9059     0B95  00B2               	movwf	??___flmul+2
  9060     0B96  0839               	movf	___flmul@grs+3,w
  9061     0B97  00B3               	movwf	??___flmul+3
  9062     0B98  3018               	movlw	24
  9063     0B99                     u4095:
  9064     0B99  1003               	clrc
  9065     0B9A  0CB3               	rrf	??___flmul+3,f
  9066     0B9B  0CB2               	rrf	??___flmul+2,f
  9067     0B9C  0CB1               	rrf	??___flmul+1,f
  9068     0B9D  0CB0               	rrf	??___flmul,f
  9069     0B9E                     u4090:
  9070     0B9E  3EFF               	addlw	-1
  9071     0B9F  1D03               	skipz
  9072     0BA0  2B99               	goto	u4095
  9073     0BA1  0830               	movf	??___flmul,w
  9074     0BA2  07BC               	addwf	___flmul@prod,f
  9075     0BA3  0831               	movf	??___flmul+1,w
  9076     0BA4  1103               	clrz
  9077     0BA5  1803               	skipnc
  9078     0BA6  3E01               	addlw	1
  9079     0BA7  1903               	skipnz
  9080     0BA8  2BAA               	goto	u4101
  9081     0BA9  07BD               	addwf	___flmul@prod+1,f
  9082     0BAA                     u4101:
  9083     0BAA  0832               	movf	??___flmul+2,w
  9084     0BAB  1103               	clrz
  9085     0BAC  1803               	skipnc
  9086     0BAD  3E01               	addlw	1
  9087     0BAE  1903               	skipnz
  9088     0BAF  2BB1               	goto	u4102
  9089     0BB0  07BE               	addwf	___flmul@prod+2,f
  9090     0BB1                     u4102:
  9091     0BB1  0833               	movf	??___flmul+3,w
  9092     0BB2  1103               	clrz
  9093     0BB3  1803               	skipnc
  9094     0BB4  3E01               	addlw	1
  9095     0BB5  1903               	skipnz
  9096     0BB6  2BB8               	goto	u4103
  9097     0BB7  07BF               	addwf	___flmul@prod+3,f
  9098     0BB8                     u4103:
  9099     0BB8                     l2778:
  9100     0BB8  3008               	movlw	8
  9101     0BB9  00B0               	movwf	??___flmul
  9102     0BBA                     u4115:
  9103     0BBA  1003               	clrc
  9104     0BBB  0DB6               	rlf	___flmul@grs,f
  9105     0BBC  0DB7               	rlf	___flmul@grs+1,f
  9106     0BBD  0DB8               	rlf	___flmul@grs+2,f
  9107     0BBE  0DB9               	rlf	___flmul@grs+3,f
  9108     0BBF  0BB0               	decfsz	??___flmul,f
  9109     0BC0  2BBA               	goto	u4115
  9110     0BC1                     l2780:
  9111     0BC1  083B               	movf	___flmul@bexp,w
  9112     0BC2  073A               	addwf	___flmul@aexp,w
  9113     0BC3  00B0               	movwf	??___flmul
  9114     0BC4  01B1               	clrf	??___flmul+1
  9115     0BC5  0DB1               	rlf	??___flmul+1,f
  9116     0BC6  0830               	movf	??___flmul,w
  9117     0BC7  3E82               	addlw	130
  9118     0BC8  00C0               	movwf	___flmul@temp
  9119     0BC9  0831               	movf	??___flmul+1,w
  9120     0BCA  1803               	skipnc
  9121     0BCB  3E01               	addlw	1
  9122     0BCC  3EFF               	addlw	255
  9123     0BCD  00C1               	movwf	___flmul@temp+1
  9124     0BCE  2BEC               	goto	l2792
  9125     0BCF                     l2782:
  9126     0BCF  3001               	movlw	1
  9127     0BD0  00B0               	movwf	??___flmul
  9128     0BD1                     u4125:
  9129     0BD1  1003               	clrc
  9130     0BD2  0DBC               	rlf	___flmul@prod,f
  9131     0BD3  0DBD               	rlf	___flmul@prod+1,f
  9132     0BD4  0DBE               	rlf	___flmul@prod+2,f
  9133     0BD5  0DBF               	rlf	___flmul@prod+3,f
  9134     0BD6  0BB0               	decfsz	??___flmul,f
  9135     0BD7  2BD1               	goto	u4125
  9136     0BD8                     l2784:
  9137     0BD8  1FB9               	btfss	___flmul@grs+3,7
  9138     0BD9  2BDB               	goto	u4131
  9139     0BDA  2BDC               	goto	u4130
  9140     0BDB                     u4131:
  9141     0BDB  2BDD               	goto	l2788
  9142     0BDC                     u4130:
  9143     0BDC                     l2786:
  9144     0BDC  143C               	bsf	___flmul@prod,0
  9145     0BDD                     l2788:
  9146     0BDD  3001               	movlw	1
  9147     0BDE  00B0               	movwf	??___flmul
  9148     0BDF                     u4145:
  9149     0BDF  1003               	clrc
  9150     0BE0  0DB6               	rlf	___flmul@grs,f
  9151     0BE1  0DB7               	rlf	___flmul@grs+1,f
  9152     0BE2  0DB8               	rlf	___flmul@grs+2,f
  9153     0BE3  0DB9               	rlf	___flmul@grs+3,f
  9154     0BE4  0BB0               	decfsz	??___flmul,f
  9155     0BE5  2BDF               	goto	u4145
  9156     0BE6                     l2790:
  9157     0BE6  30FF               	movlw	255
  9158     0BE7  07C0               	addwf	___flmul@temp,f
  9159     0BE8  1803               	skipnc
  9160     0BE9  0AC1               	incf	___flmul@temp+1,f
  9161     0BEA  30FF               	movlw	255
  9162     0BEB  07C1               	addwf	___flmul@temp+1,f
  9163     0BEC                     l2792:
  9164     0BEC  1FBE               	btfss	___flmul@prod+2,7
  9165     0BED  2BEF               	goto	u4151
  9166     0BEE  2BF0               	goto	u4150
  9167     0BEF                     u4151:
  9168     0BEF  2BCF               	goto	l2782
  9169     0BF0                     u4150:
  9170     0BF0                     l2794:
  9171     0BF0  01BA               	clrf	___flmul@aexp
  9172     0BF1                     l2796:
  9173     0BF1  1FB9               	btfss	___flmul@grs+3,7
  9174     0BF2  2BF4               	goto	u4161
  9175     0BF3  2BF5               	goto	u4160
  9176     0BF4                     u4161:
  9177     0BF4  2C11               	goto	l2804
  9178     0BF5                     u4160:
  9179     0BF5                     l2798:
  9180     0BF5  30FF               	movlw	255
  9181     0BF6  0536               	andwf	___flmul@grs,w
  9182     0BF7  00B0               	movwf	??___flmul
  9183     0BF8  30FF               	movlw	255
  9184     0BF9  0537               	andwf	___flmul@grs+1,w
  9185     0BFA  00B1               	movwf	??___flmul+1
  9186     0BFB  30FF               	movlw	255
  9187     0BFC  0538               	andwf	___flmul@grs+2,w
  9188     0BFD  00B2               	movwf	??___flmul+2
  9189     0BFE  307F               	movlw	127
  9190     0BFF  0539               	andwf	___flmul@grs+3,w
  9191     0C00  00B3               	movwf	??___flmul+3
  9192     0C01  0833               	movf	??___flmul+3,w
  9193     0C02  0432               	iorwf	??___flmul+2,w
  9194     0C03  0431               	iorwf	??___flmul+1,w
  9195     0C04  0430               	iorwf	??___flmul,w
  9196     0C05  1903               	skipnz
  9197     0C06  2C08               	goto	u4171
  9198     0C07  2C09               	goto	u4170
  9199     0C08                     u4171:
  9200     0C08  2C0C               	goto	l772
  9201     0C09                     u4170:
  9202     0C09                     l2800:
  9203     0C09  01BA               	clrf	___flmul@aexp
  9204     0C0A  0ABA               	incf	___flmul@aexp,f
  9205     0C0B  2C11               	goto	l2804
  9206     0C0C                     l772:
  9207     0C0C  1C3C               	btfss	___flmul@prod,0
  9208     0C0D  2C0F               	goto	u4181
  9209     0C0E  2C10               	goto	u4180
  9210     0C0F                     u4181:
  9211     0C0F  2C11               	goto	l2804
  9212     0C10                     u4180:
  9213     0C10  2C09               	goto	l2800
  9214     0C11                     l2804:
  9215     0C11  083A               	movf	___flmul@aexp,w
  9216     0C12  1903               	btfsc	3,2
  9217     0C13  2C15               	goto	u4191
  9218     0C14  2C16               	goto	u4190
  9219     0C15                     u4191:
  9220     0C15  2C47               	goto	l2814
  9221     0C16                     u4190:
  9222     0C16                     l2806:
  9223     0C16  3001               	movlw	1
  9224     0C17  07BC               	addwf	___flmul@prod,f
  9225     0C18  3000               	movlw	0
  9226     0C19  1803               	skipnc
  9227     0C1A  3001               	movlw	1
  9228     0C1B  07BD               	addwf	___flmul@prod+1,f
  9229     0C1C  3000               	movlw	0
  9230     0C1D  1803               	skipnc
  9231     0C1E  3001               	movlw	1
  9232     0C1F  07BE               	addwf	___flmul@prod+2,f
  9233     0C20  3000               	movlw	0
  9234     0C21  1803               	skipnc
  9235     0C22  3001               	movlw	1
  9236     0C23  07BF               	addwf	___flmul@prod+3,f
  9237     0C24                     l2808:
  9238     0C24  1C3F               	btfss	___flmul@prod+3,0
  9239     0C25  2C27               	goto	u4201
  9240     0C26  2C28               	goto	u4200
  9241     0C27                     u4201:
  9242     0C27  2C47               	goto	l2814
  9243     0C28                     u4200:
  9244     0C28                     l2810:
  9245     0C28  083C               	movf	___flmul@prod,w
  9246     0C29  00B0               	movwf	??___flmul
  9247     0C2A  083D               	movf	___flmul@prod+1,w
  9248     0C2B  00B1               	movwf	??___flmul+1
  9249     0C2C  083E               	movf	___flmul@prod+2,w
  9250     0C2D  00B2               	movwf	??___flmul+2
  9251     0C2E  083F               	movf	___flmul@prod+3,w
  9252     0C2F  00B3               	movwf	??___flmul+3
  9253     0C30  3001               	movlw	1
  9254     0C31  00B4               	movwf	??___flmul+4
  9255     0C32                     u4215:
  9256     0C32  0D33               	rlf	??___flmul+3,w
  9257     0C33  0CB3               	rrf	??___flmul+3,f
  9258     0C34  0CB2               	rrf	??___flmul+2,f
  9259     0C35  0CB1               	rrf	??___flmul+1,f
  9260     0C36  0CB0               	rrf	??___flmul,f
  9261     0C37                     u4210:
  9262     0C37  0BB4               	decfsz	??___flmul+4,f
  9263     0C38  2C32               	goto	u4215
  9264     0C39  0833               	movf	??___flmul+3,w
  9265     0C3A  00BF               	movwf	___flmul@prod+3
  9266     0C3B  0832               	movf	??___flmul+2,w
  9267     0C3C  00BE               	movwf	___flmul@prod+2
  9268     0C3D  0831               	movf	??___flmul+1,w
  9269     0C3E  00BD               	movwf	___flmul@prod+1
  9270     0C3F  0830               	movf	??___flmul,w
  9271     0C40  00BC               	movwf	___flmul@prod
  9272     0C41                     l2812:
  9273     0C41  3001               	movlw	1
  9274     0C42  07C0               	addwf	___flmul@temp,f
  9275     0C43  1803               	skipnc
  9276     0C44  0AC1               	incf	___flmul@temp+1,f
  9277     0C45  3000               	movlw	0
  9278     0C46  07C1               	addwf	___flmul@temp+1,f
  9279     0C47                     l2814:
  9280     0C47  0841               	movf	___flmul@temp+1,w
  9281     0C48  3A80               	xorlw	128
  9282     0C49  00FF               	movwf	btemp+1
  9283     0C4A  3080               	movlw	128
  9284     0C4B  027F               	subwf	btemp+1,w
  9285     0C4C  1D03               	skipz
  9286     0C4D  2C50               	goto	u4225
  9287     0C4E  30FF               	movlw	255
  9288     0C4F  0240               	subwf	___flmul@temp,w
  9289     0C50                     u4225:
  9290     0C50  1C03               	skipc
  9291     0C51  2C53               	goto	u4221
  9292     0C52  2C54               	goto	u4220
  9293     0C53                     u4221:
  9294     0C53  2C5F               	goto	l2818
  9295     0C54                     u4220:
  9296     0C54                     l2816:
  9297     0C54  307F               	movlw	127
  9298     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  9299     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  9300     0C57  00BF               	movwf	___flmul@prod+3
  9301     0C58  3080               	movlw	128
  9302     0C59  00BE               	movwf	___flmul@prod+2
  9303     0C5A  3000               	movlw	0
  9304     0C5B  00BD               	movwf	___flmul@prod+1
  9305     0C5C  3000               	movlw	0
  9306     0C5D  00BC               	movwf	___flmul@prod
  9307     0C5E  2C90               	goto	l778
  9308     0C5F                     l2818:
  9309     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  9310     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  9311     0C61  0841               	movf	___flmul@temp+1,w
  9312     0C62  3A80               	xorlw	128
  9313     0C63  00FF               	movwf	btemp+1
  9314     0C64  3080               	movlw	128
  9315     0C65  027F               	subwf	btemp+1,w
  9316     0C66  1D03               	skipz
  9317     0C67  2C6A               	goto	u4235
  9318     0C68  3001               	movlw	1
  9319     0C69  0240               	subwf	___flmul@temp,w
  9320     0C6A                     u4235:
  9321     0C6A  1803               	skipnc
  9322     0C6B  2C6D               	goto	u4231
  9323     0C6C  2C6E               	goto	u4230
  9324     0C6D                     u4231:
  9325     0C6D  2C7A               	goto	l2824
  9326     0C6E                     u4230:
  9327     0C6E                     l2820:
  9328     0C6E  3000               	movlw	0
  9329     0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  9330     0C70  1303               	bcf	3,6	;RP1=0, select bank0
  9331     0C71  00BF               	movwf	___flmul@prod+3
  9332     0C72  3000               	movlw	0
  9333     0C73  00BE               	movwf	___flmul@prod+2
  9334     0C74  3000               	movlw	0
  9335     0C75  00BD               	movwf	___flmul@prod+1
  9336     0C76  3000               	movlw	0
  9337     0C77  00BC               	movwf	___flmul@prod
  9338     0C78                     l2822:
  9339     0C78  01B5               	clrf	___flmul@sign
  9340     0C79  2C90               	goto	l778
  9341     0C7A                     l2824:
  9342     0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  9343     0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  9344     0C7C  0840               	movf	___flmul@temp,w
  9345     0C7D  00BB               	movwf	___flmul@bexp
  9346     0C7E  30FF               	movlw	255
  9347     0C7F  05BC               	andwf	___flmul@prod,f
  9348     0C80  30FF               	movlw	255
  9349     0C81  05BD               	andwf	___flmul@prod+1,f
  9350     0C82  307F               	movlw	127
  9351     0C83  05BE               	andwf	___flmul@prod+2,f
  9352     0C84  3000               	movlw	0
  9353     0C85  05BF               	andwf	___flmul@prod+3,f
  9354     0C86                     l2826:
  9355     0C86  1C3B               	btfss	___flmul@bexp,0
  9356     0C87  2C89               	goto	u4241
  9357     0C88  2C8A               	goto	u4240
  9358     0C89                     u4241:
  9359     0C89  2C8B               	goto	l2830
  9360     0C8A                     u4240:
  9361     0C8A                     l2828:
  9362     0C8A  17BE               	bsf	___flmul@prod+2,7
  9363     0C8B                     l2830:
  9364     0C8B  083B               	movf	___flmul@bexp,w
  9365     0C8C  00B0               	movwf	??___flmul
  9366     0C8D  1003               	clrc
  9367     0C8E  0C30               	rrf	??___flmul,w
  9368     0C8F  00BF               	movwf	___flmul@prod+3
  9369     0C90                     l778:
  9370     0C90  0835               	movf	___flmul@sign,w
  9371     0C91  00B0               	movwf	??___flmul
  9372     0C92  0830               	movf	??___flmul,w
  9373     0C93  04BF               	iorwf	___flmul@prod+3,f
  9374     0C94                     l2832:
  9375     0C94  083F               	movf	___flmul@prod+3,w
  9376     0C95  00AB               	movwf	?___flmul+3
  9377     0C96  083E               	movf	___flmul@prod+2,w
  9378     0C97  00AA               	movwf	?___flmul+2
  9379     0C98  083D               	movf	___flmul@prod+1,w
  9380     0C99  00A9               	movwf	?___flmul+1
  9381     0C9A  083C               	movf	___flmul@prod,w
  9382     0C9B  00A8               	movwf	?___flmul
  9383     0C9C                     l766:
  9384     0C9C  0008               	return
  9385     0C9D                     __end_of___flmul:
  9386                           
  9387                           	psect	text26
  9388     1AD7                     __ptext26:	
  9389 ;; *************** function __Umul8_16 *****************
  9390 ;; Defined at:
  9391 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;  multiplier      1    wreg     unsigned char 
  9394 ;;  multiplicand    1    2[COMMON] unsigned char 
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;  multiplier      1   10[COMMON] unsigned char 
  9397 ;;  word_mpld       2    8[COMMON] unsigned int 
  9398 ;;  product         2    6[COMMON] unsigned int 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  2    2[COMMON] unsigned int 
  9401 ;; Registers used:
  9402 ;;		wreg, status,2, status,0
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9408 ;;      Params:         2       0       0       0       0
  9409 ;;      Locals:         5       0       0       0       0
  9410 ;;      Temps:          2       0       0       0       0
  9411 ;;      Totals:         9       0       0       0       0
  9412 ;;Total ram usage:        9 bytes
  9413 ;; Hardware stack levels used: 1
  9414 ;; Hardware stack levels required when called: 1
  9415 ;; This function calls:
  9416 ;;		Nothing
  9417 ;; This function is called by:
  9418 ;;		___flmul
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422     1AD7                     __Umul8_16:	
  9423                           ;psect for function __Umul8_16
  9424                           
  9425                           
  9426                           ;incstack = 0
  9427                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9428                           ;__Umul8_16@multiplier stored from wreg
  9429     1AD7  00FA               	movwf	__Umul8_16@multiplier
  9430     1AD8                     l2336:
  9431     1AD8  01F6               	clrf	__Umul8_16@product
  9432     1AD9  01F7               	clrf	__Umul8_16@product+1
  9433     1ADA                     l2338:
  9434     1ADA  0872               	movf	__Umul8_16@multiplicand,w
  9435     1ADB  00F4               	movwf	??__Umul8_16
  9436     1ADC  01F5               	clrf	??__Umul8_16+1
  9437     1ADD  0874               	movf	??__Umul8_16,w
  9438     1ADE  00F8               	movwf	__Umul8_16@word_mpld
  9439     1ADF  0875               	movf	??__Umul8_16+1,w
  9440     1AE0  00F9               	movwf	__Umul8_16@word_mpld+1
  9441     1AE1                     l2340:
  9442     1AE1  1C7A               	btfss	__Umul8_16@multiplier,0
  9443     1AE2  2AE4               	goto	u3021
  9444     1AE3  2AE5               	goto	u3020
  9445     1AE4                     u3021:
  9446     1AE4  2AEB               	goto	l785
  9447     1AE5                     u3020:
  9448     1AE5                     l2342:
  9449     1AE5  0878               	movf	__Umul8_16@word_mpld,w
  9450     1AE6  07F6               	addwf	__Umul8_16@product,f
  9451     1AE7  1803               	skipnc
  9452     1AE8  0AF7               	incf	__Umul8_16@product+1,f
  9453     1AE9  0879               	movf	__Umul8_16@word_mpld+1,w
  9454     1AEA  07F7               	addwf	__Umul8_16@product+1,f
  9455     1AEB                     l785:
  9456     1AEB  3001               	movlw	1
  9457     1AEC                     u3035:
  9458     1AEC  1003               	clrc
  9459     1AED  0DF8               	rlf	__Umul8_16@word_mpld,f
  9460     1AEE  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  9461     1AEF  3EFF               	addlw	-1
  9462     1AF0  1D03               	skipz
  9463     1AF1  2AEC               	goto	u3035
  9464     1AF2  1003               	clrc
  9465     1AF3  0CFA               	rrf	__Umul8_16@multiplier,f
  9466     1AF4                     l2344:
  9467     1AF4  087A               	movf	__Umul8_16@multiplier,w
  9468     1AF5  1D03               	btfss	3,2
  9469     1AF6  2AF8               	goto	u3041
  9470     1AF7  2AF9               	goto	u3040
  9471     1AF8                     u3041:
  9472     1AF8  2AE1               	goto	l2340
  9473     1AF9                     u3040:
  9474     1AF9                     l2346:
  9475     1AF9  0877               	movf	__Umul8_16@product+1,w
  9476     1AFA  00F3               	movwf	?__Umul8_16+1
  9477     1AFB  0876               	movf	__Umul8_16@product,w
  9478     1AFC  00F2               	movwf	?__Umul8_16
  9479     1AFD                     l787:
  9480     1AFD  0008               	return
  9481     1AFE                     __end_of__Umul8_16:
  9482                           
  9483                           	psect	text27
  9484     11CA                     __ptext27:	
  9485 ;; *************** function ___fldiv *****************
  9486 ;; Defined at:
  9487 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;  a               4   34[BANK0 ] unsigned int 
  9490 ;;  b               4   38[BANK0 ] unsigned int 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;  grs             4   54[BANK0 ] unsigned long 
  9493 ;;  rem             4   47[BANK0 ] unsigned long 
  9494 ;;  new_exp         2   52[BANK0 ] int 
  9495 ;;  aexp            1   59[BANK0 ] unsigned char 
  9496 ;;  bexp            1   58[BANK0 ] unsigned char 
  9497 ;;  sign            1   51[BANK0 ] unsigned char 
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  4   34[BANK0 ] unsigned char 
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0, btemp+1
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9507 ;;      Params:         0       8       0       0       0
  9508 ;;      Locals:         0      13       0       0       0
  9509 ;;      Temps:          0       5       0       0       0
  9510 ;;      Totals:         0      26       0       0       0
  9511 ;;Total ram usage:       26 bytes
  9512 ;; Hardware stack levels used: 1
  9513 ;; Hardware stack levels required when called: 1
  9514 ;; This function calls:
  9515 ;;		Nothing
  9516 ;; This function is called by:
  9517 ;;		_adc_volt
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521     11CA                     ___fldiv:	
  9522                           ;psect for function ___fldiv
  9523                           
  9524     11CA                     l3188:	
  9525                           ;incstack = 0
  9526                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9527                           
  9528     11CA  1283               	bcf	3,5	;RP0=0, select bank0
  9529     11CB  1303               	bcf	3,6	;RP1=0, select bank0
  9530     11CC  0849               	movf	___fldiv@b+3,w
  9531     11CD  3980               	andlw	128
  9532     11CE  00D3               	movwf	___fldiv@sign
  9533     11CF                     l3190:
  9534     11CF  0849               	movf	___fldiv@b+3,w
  9535     11D0  00CA               	movwf	??___fldiv
  9536     11D1  074A               	addwf	??___fldiv,w
  9537     11D2  00DA               	movwf	___fldiv@bexp
  9538     11D3                     l3192:
  9539     11D3  1FC8               	btfss	___fldiv@b+2,7
  9540     11D4  29D6               	goto	u5171
  9541     11D5  29D7               	goto	u5170
  9542     11D6                     u5171:
  9543     11D6  29D8               	goto	l3196
  9544     11D7                     u5170:
  9545     11D7                     l3194:
  9546     11D7  145A               	bsf	___fldiv@bexp,0
  9547     11D8                     l3196:
  9548     11D8  085A               	movf	___fldiv@bexp,w
  9549     11D9  1903               	btfsc	3,2
  9550     11DA  29DC               	goto	u5181
  9551     11DB  29DD               	goto	u5180
  9552     11DC                     u5181:
  9553     11DC  29ED               	goto	l3206
  9554     11DD                     u5180:
  9555     11DD                     l3198:
  9556     11DD  0A5A               	incf	___fldiv@bexp,w
  9557     11DE  1D03               	btfss	3,2
  9558     11DF  29E1               	goto	u5191
  9559     11E0  29E2               	goto	u5190
  9560     11E1                     u5191:
  9561     11E1  29EA               	goto	l3202
  9562     11E2                     u5190:
  9563     11E2                     l3200:
  9564     11E2  3000               	movlw	0
  9565     11E3  00C9               	movwf	___fldiv@b+3
  9566     11E4  3000               	movlw	0
  9567     11E5  00C8               	movwf	___fldiv@b+2
  9568     11E6  3000               	movlw	0
  9569     11E7  00C7               	movwf	___fldiv@b+1
  9570     11E8  3000               	movlw	0
  9571     11E9  00C6               	movwf	___fldiv@b
  9572     11EA                     l3202:
  9573     11EA  17C8               	bsf	___fldiv@b+2,7
  9574     11EB                     l3204:
  9575     11EB  01C9               	clrf	___fldiv@b+3
  9576     11EC  29F5               	goto	l3208
  9577     11ED                     l3206:
  9578     11ED  3000               	movlw	0
  9579     11EE  00C9               	movwf	___fldiv@b+3
  9580     11EF  3000               	movlw	0
  9581     11F0  00C8               	movwf	___fldiv@b+2
  9582     11F1  3000               	movlw	0
  9583     11F2  00C7               	movwf	___fldiv@b+1
  9584     11F3  3000               	movlw	0
  9585     11F4  00C6               	movwf	___fldiv@b
  9586     11F5                     l3208:
  9587     11F5  0845               	movf	___fldiv@a+3,w
  9588     11F6  3980               	andlw	128
  9589     11F7  00CA               	movwf	??___fldiv
  9590     11F8  084A               	movf	??___fldiv,w
  9591     11F9  06D3               	xorwf	___fldiv@sign,f
  9592     11FA                     l3210:
  9593     11FA  0845               	movf	___fldiv@a+3,w
  9594     11FB  00CA               	movwf	??___fldiv
  9595     11FC  074A               	addwf	??___fldiv,w
  9596     11FD  00DB               	movwf	___fldiv@aexp
  9597     11FE                     l3212:
  9598     11FE  1FC4               	btfss	___fldiv@a+2,7
  9599     11FF  2A01               	goto	u5201
  9600     1200  2A02               	goto	u5200
  9601     1201                     u5201:
  9602     1201  2A03               	goto	l3216
  9603     1202                     u5200:
  9604     1202                     l3214:
  9605     1202  145B               	bsf	___fldiv@aexp,0
  9606     1203                     l3216:
  9607     1203  085B               	movf	___fldiv@aexp,w
  9608     1204  1903               	btfsc	3,2
  9609     1205  2A07               	goto	u5211
  9610     1206  2A08               	goto	u5210
  9611     1207                     u5211:
  9612     1207  2A18               	goto	l3226
  9613     1208                     u5210:
  9614     1208                     l3218:
  9615     1208  0A5B               	incf	___fldiv@aexp,w
  9616     1209  1D03               	btfss	3,2
  9617     120A  2A0C               	goto	u5221
  9618     120B  2A0D               	goto	u5220
  9619     120C                     u5221:
  9620     120C  2A15               	goto	l3222
  9621     120D                     u5220:
  9622     120D                     l3220:
  9623     120D  3000               	movlw	0
  9624     120E  00C5               	movwf	___fldiv@a+3
  9625     120F  3000               	movlw	0
  9626     1210  00C4               	movwf	___fldiv@a+2
  9627     1211  3000               	movlw	0
  9628     1212  00C3               	movwf	___fldiv@a+1
  9629     1213  3000               	movlw	0
  9630     1214  00C2               	movwf	___fldiv@a
  9631     1215                     l3222:
  9632     1215  17C4               	bsf	___fldiv@a+2,7
  9633     1216                     l3224:
  9634     1216  01C5               	clrf	___fldiv@a+3
  9635     1217  2A20               	goto	l726
  9636     1218                     l3226:
  9637     1218  3000               	movlw	0
  9638     1219  00C5               	movwf	___fldiv@a+3
  9639     121A  3000               	movlw	0
  9640     121B  00C4               	movwf	___fldiv@a+2
  9641     121C  3000               	movlw	0
  9642     121D  00C3               	movwf	___fldiv@a+1
  9643     121E  3000               	movlw	0
  9644     121F  00C2               	movwf	___fldiv@a
  9645     1220                     l726:
  9646     1220  0845               	movf	___fldiv@a+3,w
  9647     1221  0444               	iorwf	___fldiv@a+2,w
  9648     1222  0443               	iorwf	___fldiv@a+1,w
  9649     1223  0442               	iorwf	___fldiv@a,w
  9650     1224  1D03               	skipz
  9651     1225  2A27               	goto	u5231
  9652     1226  2A28               	goto	u5230
  9653     1227                     u5231:
  9654     1227  2A41               	goto	l3236
  9655     1228                     u5230:
  9656     1228                     l3228:
  9657     1228  3000               	movlw	0
  9658     1229  00C9               	movwf	___fldiv@b+3
  9659     122A  3000               	movlw	0
  9660     122B  00C8               	movwf	___fldiv@b+2
  9661     122C  3000               	movlw	0
  9662     122D  00C7               	movwf	___fldiv@b+1
  9663     122E  3000               	movlw	0
  9664     122F  00C6               	movwf	___fldiv@b
  9665     1230  3080               	movlw	128
  9666     1231  04C8               	iorwf	___fldiv@b+2,f
  9667     1232  307F               	movlw	127
  9668     1233  04C9               	iorwf	___fldiv@b+3,f
  9669     1234                     l3230:
  9670     1234  0853               	movf	___fldiv@sign,w
  9671     1235  00CA               	movwf	??___fldiv
  9672     1236  084A               	movf	??___fldiv,w
  9673     1237  04C9               	iorwf	___fldiv@b+3,f
  9674     1238                     l3232:
  9675     1238  0849               	movf	___fldiv@b+3,w
  9676     1239  00C5               	movwf	?___fldiv+3
  9677     123A  0848               	movf	___fldiv@b+2,w
  9678     123B  00C4               	movwf	?___fldiv+2
  9679     123C  0847               	movf	___fldiv@b+1,w
  9680     123D  00C3               	movwf	?___fldiv+1
  9681     123E  0846               	movf	___fldiv@b,w
  9682     123F  00C2               	movwf	?___fldiv
  9683     1240  2B9C               	goto	l728
  9684     1241                     l3236:
  9685     1241  085A               	movf	___fldiv@bexp,w
  9686     1242  1D03               	btfss	3,2
  9687     1243  2A45               	goto	u5241
  9688     1244  2A46               	goto	u5240
  9689     1245                     u5241:
  9690     1245  2A4F               	goto	l3242
  9691     1246                     u5240:
  9692     1246                     l3238:
  9693     1246  3000               	movlw	0
  9694     1247  00C5               	movwf	?___fldiv+3
  9695     1248  3000               	movlw	0
  9696     1249  00C4               	movwf	?___fldiv+2
  9697     124A  3000               	movlw	0
  9698     124B  00C3               	movwf	?___fldiv+1
  9699     124C  3000               	movlw	0
  9700     124D  00C2               	movwf	?___fldiv
  9701     124E  2B9C               	goto	l728
  9702     124F                     l3242:
  9703     124F  085A               	movf	___fldiv@bexp,w
  9704     1250  00CA               	movwf	??___fldiv
  9705     1251  01CB               	clrf	??___fldiv+1
  9706     1252  084B               	movf	??___fldiv+1,w
  9707     1253  00CD               	movwf	??___fldiv+3
  9708     1254  085B               	movf	___fldiv@aexp,w
  9709     1255  024A               	subwf	??___fldiv,w
  9710     1256  00CC               	movwf	??___fldiv+2
  9711     1257  1C03               	skipc
  9712     1258  03CD               	decf	??___fldiv+3,f
  9713     1259  084C               	movf	??___fldiv+2,w
  9714     125A  3E7F               	addlw	127
  9715     125B  00D4               	movwf	___fldiv@new_exp
  9716     125C  084D               	movf	??___fldiv+3,w
  9717     125D  1803               	skipnc
  9718     125E  3E01               	addlw	1
  9719     125F  3E00               	addlw	0
  9720     1260  00D5               	movwf	___fldiv@new_exp+1
  9721     1261                     l3244:
  9722     1261  0849               	movf	___fldiv@b+3,w
  9723     1262  00D2               	movwf	___fldiv@rem+3
  9724     1263  0848               	movf	___fldiv@b+2,w
  9725     1264  00D1               	movwf	___fldiv@rem+2
  9726     1265  0847               	movf	___fldiv@b+1,w
  9727     1266  00D0               	movwf	___fldiv@rem+1
  9728     1267  0846               	movf	___fldiv@b,w
  9729     1268  00CF               	movwf	___fldiv@rem
  9730     1269                     l3246:
  9731     1269  3000               	movlw	0
  9732     126A  00C9               	movwf	___fldiv@b+3
  9733     126B  3000               	movlw	0
  9734     126C  00C8               	movwf	___fldiv@b+2
  9735     126D  3000               	movlw	0
  9736     126E  00C7               	movwf	___fldiv@b+1
  9737     126F  3000               	movlw	0
  9738     1270  00C6               	movwf	___fldiv@b
  9739     1271                     l3248:
  9740     1271  3000               	movlw	0
  9741     1272  00D9               	movwf	___fldiv@grs+3
  9742     1273  3000               	movlw	0
  9743     1274  00D8               	movwf	___fldiv@grs+2
  9744     1275  3000               	movlw	0
  9745     1276  00D7               	movwf	___fldiv@grs+1
  9746     1277  3000               	movlw	0
  9747     1278  00D6               	movwf	___fldiv@grs
  9748     1279                     l3250:
  9749     1279  01DB               	clrf	___fldiv@aexp
  9750     127A  2AC5               	goto	l3270
  9751     127B                     l3252:
  9752     127B  085B               	movf	___fldiv@aexp,w
  9753     127C  1903               	btfsc	3,2
  9754     127D  2A7F               	goto	u5251
  9755     127E  2A80               	goto	u5250
  9756     127F                     u5251:
  9757     127F  2AA0               	goto	l3262
  9758     1280                     u5250:
  9759     1280                     l3254:
  9760     1280  3001               	movlw	1
  9761     1281  00CA               	movwf	??___fldiv
  9762     1282                     u5265:
  9763     1282  1003               	clrc
  9764     1283  0DCF               	rlf	___fldiv@rem,f
  9765     1284  0DD0               	rlf	___fldiv@rem+1,f
  9766     1285  0DD1               	rlf	___fldiv@rem+2,f
  9767     1286  0DD2               	rlf	___fldiv@rem+3,f
  9768     1287  0BCA               	decfsz	??___fldiv,f
  9769     1288  2A82               	goto	u5265
  9770     1289  3001               	movlw	1
  9771     128A  00CA               	movwf	??___fldiv
  9772     128B                     u5275:
  9773     128B  1003               	clrc
  9774     128C  0DC6               	rlf	___fldiv@b,f
  9775     128D  0DC7               	rlf	___fldiv@b+1,f
  9776     128E  0DC8               	rlf	___fldiv@b+2,f
  9777     128F  0DC9               	rlf	___fldiv@b+3,f
  9778     1290  0BCA               	decfsz	??___fldiv,f
  9779     1291  2A8B               	goto	u5275
  9780     1292                     l3256:
  9781     1292  1FD9               	btfss	___fldiv@grs+3,7
  9782     1293  2A95               	goto	u5281
  9783     1294  2A96               	goto	u5280
  9784     1295                     u5281:
  9785     1295  2A97               	goto	l3260
  9786     1296                     u5280:
  9787     1296                     l3258:
  9788     1296  1446               	bsf	___fldiv@b,0
  9789     1297                     l3260:
  9790     1297  3001               	movlw	1
  9791     1298  00CA               	movwf	??___fldiv
  9792     1299                     u5295:
  9793     1299  1003               	clrc
  9794     129A  0DD6               	rlf	___fldiv@grs,f
  9795     129B  0DD7               	rlf	___fldiv@grs+1,f
  9796     129C  0DD8               	rlf	___fldiv@grs+2,f
  9797     129D  0DD9               	rlf	___fldiv@grs+3,f
  9798     129E  0BCA               	decfsz	??___fldiv,f
  9799     129F  2A99               	goto	u5295
  9800     12A0                     l3262:
  9801     12A0  0845               	movf	___fldiv@a+3,w
  9802     12A1  0252               	subwf	___fldiv@rem+3,w
  9803     12A2  1D03               	skipz
  9804     12A3  2AAE               	goto	u5305
  9805     12A4  0844               	movf	___fldiv@a+2,w
  9806     12A5  0251               	subwf	___fldiv@rem+2,w
  9807     12A6  1D03               	skipz
  9808     12A7  2AAE               	goto	u5305
  9809     12A8  0843               	movf	___fldiv@a+1,w
  9810     12A9  0250               	subwf	___fldiv@rem+1,w
  9811     12AA  1D03               	skipz
  9812     12AB  2AAE               	goto	u5305
  9813     12AC  0842               	movf	___fldiv@a,w
  9814     12AD  024F               	subwf	___fldiv@rem,w
  9815     12AE                     u5305:
  9816     12AE  1C03               	skipc
  9817     12AF  2AB1               	goto	u5301
  9818     12B0  2AB2               	goto	u5300
  9819     12B1                     u5301:
  9820     12B1  2AC1               	goto	l3268
  9821     12B2                     u5300:
  9822     12B2                     l3264:
  9823     12B2  1759               	bsf	___fldiv@grs+3,6
  9824     12B3                     l3266:
  9825     12B3  0842               	movf	___fldiv@a,w
  9826     12B4  02CF               	subwf	___fldiv@rem,f
  9827     12B5  0843               	movf	___fldiv@a+1,w
  9828     12B6  1C03               	skipc
  9829     12B7  0F43               	incfsz	___fldiv@a+1,w
  9830     12B8  02D0               	subwf	___fldiv@rem+1,f
  9831     12B9  0844               	movf	___fldiv@a+2,w
  9832     12BA  1C03               	skipc
  9833     12BB  0F44               	incfsz	___fldiv@a+2,w
  9834     12BC  02D1               	subwf	___fldiv@rem+2,f
  9835     12BD  0845               	movf	___fldiv@a+3,w
  9836     12BE  1C03               	skipc
  9837     12BF  0F45               	incfsz	___fldiv@a+3,w
  9838     12C0  02D2               	subwf	___fldiv@rem+3,f
  9839     12C1                     l3268:
  9840     12C1  3001               	movlw	1
  9841     12C2  00CA               	movwf	??___fldiv
  9842     12C3  084A               	movf	??___fldiv,w
  9843     12C4  07DB               	addwf	___fldiv@aexp,f
  9844     12C5                     l3270:
  9845     12C5  301A               	movlw	26
  9846     12C6  025B               	subwf	___fldiv@aexp,w
  9847     12C7  1C03               	skipc
  9848     12C8  2ACA               	goto	u5311
  9849     12C9  2ACB               	goto	u5310
  9850     12CA                     u5311:
  9851     12CA  2A7B               	goto	l3252
  9852     12CB                     u5310:
  9853     12CB                     l3272:
  9854     12CB  0852               	movf	___fldiv@rem+3,w
  9855     12CC  0451               	iorwf	___fldiv@rem+2,w
  9856     12CD  0450               	iorwf	___fldiv@rem+1,w
  9857     12CE  044F               	iorwf	___fldiv@rem,w
  9858     12CF  1903               	skipnz
  9859     12D0  2AD2               	goto	u5321
  9860     12D1  2AD3               	goto	u5320
  9861     12D2                     u5321:
  9862     12D2  2AF2               	goto	l3286
  9863     12D3                     u5320:
  9864     12D3                     l3274:
  9865     12D3  1456               	bsf	___fldiv@grs,0
  9866     12D4  2AF2               	goto	l3286
  9867     12D5                     l3276:
  9868     12D5  3001               	movlw	1
  9869     12D6  00CA               	movwf	??___fldiv
  9870     12D7                     u5335:
  9871     12D7  1003               	clrc
  9872     12D8  0DC6               	rlf	___fldiv@b,f
  9873     12D9  0DC7               	rlf	___fldiv@b+1,f
  9874     12DA  0DC8               	rlf	___fldiv@b+2,f
  9875     12DB  0DC9               	rlf	___fldiv@b+3,f
  9876     12DC  0BCA               	decfsz	??___fldiv,f
  9877     12DD  2AD7               	goto	u5335
  9878     12DE                     l3278:
  9879     12DE  1FD9               	btfss	___fldiv@grs+3,7
  9880     12DF  2AE1               	goto	u5341
  9881     12E0  2AE2               	goto	u5340
  9882     12E1                     u5341:
  9883     12E1  2AE3               	goto	l3282
  9884     12E2                     u5340:
  9885     12E2                     l3280:
  9886     12E2  1446               	bsf	___fldiv@b,0
  9887     12E3                     l3282:
  9888     12E3  3001               	movlw	1
  9889     12E4  00CA               	movwf	??___fldiv
  9890     12E5                     u5355:
  9891     12E5  1003               	clrc
  9892     12E6  0DD6               	rlf	___fldiv@grs,f
  9893     12E7  0DD7               	rlf	___fldiv@grs+1,f
  9894     12E8  0DD8               	rlf	___fldiv@grs+2,f
  9895     12E9  0DD9               	rlf	___fldiv@grs+3,f
  9896     12EA  0BCA               	decfsz	??___fldiv,f
  9897     12EB  2AE5               	goto	u5355
  9898     12EC                     l3284:
  9899     12EC  30FF               	movlw	255
  9900     12ED  07D4               	addwf	___fldiv@new_exp,f
  9901     12EE  1803               	skipnc
  9902     12EF  0AD5               	incf	___fldiv@new_exp+1,f
  9903     12F0  30FF               	movlw	255
  9904     12F1  07D5               	addwf	___fldiv@new_exp+1,f
  9905     12F2                     l3286:
  9906     12F2  1FC8               	btfss	___fldiv@b+2,7
  9907     12F3  2AF5               	goto	u5361
  9908     12F4  2AF6               	goto	u5360
  9909     12F5                     u5361:
  9910     12F5  2AD5               	goto	l3276
  9911     12F6                     u5360:
  9912     12F6                     l3288:
  9913     12F6  01DB               	clrf	___fldiv@aexp
  9914     12F7                     l3290:
  9915     12F7  1FD9               	btfss	___fldiv@grs+3,7
  9916     12F8  2AFA               	goto	u5371
  9917     12F9  2AFB               	goto	u5370
  9918     12FA                     u5371:
  9919     12FA  2B17               	goto	l3298
  9920     12FB                     u5370:
  9921     12FB                     l3292:
  9922     12FB  30FF               	movlw	255
  9923     12FC  0556               	andwf	___fldiv@grs,w
  9924     12FD  00CA               	movwf	??___fldiv
  9925     12FE  30FF               	movlw	255
  9926     12FF  0557               	andwf	___fldiv@grs+1,w
  9927     1300  00CB               	movwf	??___fldiv+1
  9928     1301  30FF               	movlw	255
  9929     1302  0558               	andwf	___fldiv@grs+2,w
  9930     1303  00CC               	movwf	??___fldiv+2
  9931     1304  307F               	movlw	127
  9932     1305  0559               	andwf	___fldiv@grs+3,w
  9933     1306  00CD               	movwf	??___fldiv+3
  9934     1307  084D               	movf	??___fldiv+3,w
  9935     1308  044C               	iorwf	??___fldiv+2,w
  9936     1309  044B               	iorwf	??___fldiv+1,w
  9937     130A  044A               	iorwf	??___fldiv,w
  9938     130B  1903               	skipnz
  9939     130C  2B0E               	goto	u5381
  9940     130D  2B0F               	goto	u5380
  9941     130E                     u5381:
  9942     130E  2B12               	goto	l742
  9943     130F                     u5380:
  9944     130F                     l3294:
  9945     130F  01DB               	clrf	___fldiv@aexp
  9946     1310  0ADB               	incf	___fldiv@aexp,f
  9947     1311  2B17               	goto	l3298
  9948     1312                     l742:
  9949     1312  1C46               	btfss	___fldiv@b,0
  9950     1313  2B15               	goto	u5391
  9951     1314  2B16               	goto	u5390
  9952     1315                     u5391:
  9953     1315  2B17               	goto	l3298
  9954     1316                     u5390:
  9955     1316  2B0F               	goto	l3294
  9956     1317                     l3298:
  9957     1317  085B               	movf	___fldiv@aexp,w
  9958     1318  1903               	btfsc	3,2
  9959     1319  2B1B               	goto	u5401
  9960     131A  2B1C               	goto	u5400
  9961     131B                     u5401:
  9962     131B  2B4D               	goto	l3308
  9963     131C                     u5400:
  9964     131C                     l3300:
  9965     131C  3001               	movlw	1
  9966     131D  07C6               	addwf	___fldiv@b,f
  9967     131E  3000               	movlw	0
  9968     131F  1803               	skipnc
  9969     1320  3001               	movlw	1
  9970     1321  07C7               	addwf	___fldiv@b+1,f
  9971     1322  3000               	movlw	0
  9972     1323  1803               	skipnc
  9973     1324  3001               	movlw	1
  9974     1325  07C8               	addwf	___fldiv@b+2,f
  9975     1326  3000               	movlw	0
  9976     1327  1803               	skipnc
  9977     1328  3001               	movlw	1
  9978     1329  07C9               	addwf	___fldiv@b+3,f
  9979     132A                     l3302:
  9980     132A  1C49               	btfss	___fldiv@b+3,0
  9981     132B  2B2D               	goto	u5411
  9982     132C  2B2E               	goto	u5410
  9983     132D                     u5411:
  9984     132D  2B4D               	goto	l3308
  9985     132E                     u5410:
  9986     132E                     l3304:
  9987     132E  0846               	movf	___fldiv@b,w
  9988     132F  00CA               	movwf	??___fldiv
  9989     1330  0847               	movf	___fldiv@b+1,w
  9990     1331  00CB               	movwf	??___fldiv+1
  9991     1332  0848               	movf	___fldiv@b+2,w
  9992     1333  00CC               	movwf	??___fldiv+2
  9993     1334  0849               	movf	___fldiv@b+3,w
  9994     1335  00CD               	movwf	??___fldiv+3
  9995     1336  3001               	movlw	1
  9996     1337  00CE               	movwf	??___fldiv+4
  9997     1338                     u5425:
  9998     1338  0D4D               	rlf	??___fldiv+3,w
  9999     1339  0CCD               	rrf	??___fldiv+3,f
 10000     133A  0CCC               	rrf	??___fldiv+2,f
 10001     133B  0CCB               	rrf	??___fldiv+1,f
 10002     133C  0CCA               	rrf	??___fldiv,f
 10003     133D                     u5420:
 10004     133D  0BCE               	decfsz	??___fldiv+4,f
 10005     133E  2B38               	goto	u5425
 10006     133F  084D               	movf	??___fldiv+3,w
 10007     1340  00C9               	movwf	___fldiv@b+3
 10008     1341  084C               	movf	??___fldiv+2,w
 10009     1342  00C8               	movwf	___fldiv@b+2
 10010     1343  084B               	movf	??___fldiv+1,w
 10011     1344  00C7               	movwf	___fldiv@b+1
 10012     1345  084A               	movf	??___fldiv,w
 10013     1346  00C6               	movwf	___fldiv@b
 10014     1347                     l3306:
 10015     1347  3001               	movlw	1
 10016     1348  07D4               	addwf	___fldiv@new_exp,f
 10017     1349  1803               	skipnc
 10018     134A  0AD5               	incf	___fldiv@new_exp+1,f
 10019     134B  3000               	movlw	0
 10020     134C  07D5               	addwf	___fldiv@new_exp+1,f
 10021     134D                     l3308:
 10022     134D  0855               	movf	___fldiv@new_exp+1,w
 10023     134E  3A80               	xorlw	128
 10024     134F  00FF               	movwf	btemp+1
 10025     1350  3080               	movlw	128
 10026     1351  027F               	subwf	btemp+1,w
 10027     1352  1D03               	skipz
 10028     1353  2B56               	goto	u5435
 10029     1354  30FF               	movlw	255
 10030     1355  0254               	subwf	___fldiv@new_exp,w
 10031     1356                     u5435:
 10032     1356  1C03               	skipc
 10033     1357  2B59               	goto	u5431
 10034     1358  2B5A               	goto	u5430
 10035     1359                     u5431:
 10036     1359  2B68               	goto	l3312
 10037     135A                     u5430:
 10038     135A                     l3310:
 10039     135A  30FF               	movlw	255
 10040     135B  1283               	bcf	3,5	;RP0=0, select bank0
 10041     135C  1303               	bcf	3,6	;RP1=0, select bank0
 10042     135D  00D4               	movwf	___fldiv@new_exp
 10043     135E  3000               	movlw	0
 10044     135F  00D5               	movwf	___fldiv@new_exp+1
 10045     1360  3000               	movlw	0
 10046     1361  00C9               	movwf	___fldiv@b+3
 10047     1362  3000               	movlw	0
 10048     1363  00C8               	movwf	___fldiv@b+2
 10049     1364  3000               	movlw	0
 10050     1365  00C7               	movwf	___fldiv@b+1
 10051     1366  3000               	movlw	0
 10052     1367  00C6               	movwf	___fldiv@b
 10053     1368                     l3312:
 10054     1368  1283               	bcf	3,5	;RP0=0, select bank0
 10055     1369  1303               	bcf	3,6	;RP1=0, select bank0
 10056     136A  0855               	movf	___fldiv@new_exp+1,w
 10057     136B  3A80               	xorlw	128
 10058     136C  00FF               	movwf	btemp+1
 10059     136D  3080               	movlw	128
 10060     136E  027F               	subwf	btemp+1,w
 10061     136F  1D03               	skipz
 10062     1370  2B73               	goto	u5445
 10063     1371  3001               	movlw	1
 10064     1372  0254               	subwf	___fldiv@new_exp,w
 10065     1373                     u5445:
 10066     1373  1803               	skipnc
 10067     1374  2B76               	goto	u5441
 10068     1375  2B77               	goto	u5440
 10069     1376                     u5441:
 10070     1376  2B84               	goto	l748
 10071     1377                     u5440:
 10072     1377                     l3314:
 10073     1377  1283               	bcf	3,5	;RP0=0, select bank0
 10074     1378  1303               	bcf	3,6	;RP1=0, select bank0
 10075     1379  01D4               	clrf	___fldiv@new_exp
 10076     137A  01D5               	clrf	___fldiv@new_exp+1
 10077     137B                     l3316:
 10078     137B  3000               	movlw	0
 10079     137C  00C9               	movwf	___fldiv@b+3
 10080     137D  3000               	movlw	0
 10081     137E  00C8               	movwf	___fldiv@b+2
 10082     137F  3000               	movlw	0
 10083     1380  00C7               	movwf	___fldiv@b+1
 10084     1381  3000               	movlw	0
 10085     1382  00C6               	movwf	___fldiv@b
 10086     1383                     l3318:
 10087     1383  01D3               	clrf	___fldiv@sign
 10088     1384                     l748:
 10089     1384  1283               	bcf	3,5	;RP0=0, select bank0
 10090     1385  1303               	bcf	3,6	;RP1=0, select bank0
 10091     1386  0854               	movf	___fldiv@new_exp,w
 10092     1387  00DA               	movwf	___fldiv@bexp
 10093     1388                     l3320:
 10094     1388  1C5A               	btfss	___fldiv@bexp,0
 10095     1389  2B8B               	goto	u5451
 10096     138A  2B8C               	goto	u5450
 10097     138B                     u5451:
 10098     138B  2B8E               	goto	l3324
 10099     138C                     u5450:
 10100     138C                     l3322:
 10101     138C  17C8               	bsf	___fldiv@b+2,7
 10102     138D  2B92               	goto	l750
 10103     138E                     l3324:
 10104     138E  307F               	movlw	127
 10105     138F  00CA               	movwf	??___fldiv
 10106     1390  084A               	movf	??___fldiv,w
 10107     1391  05C8               	andwf	___fldiv@b+2,f
 10108     1392                     l750:
 10109     1392  085A               	movf	___fldiv@bexp,w
 10110     1393  00CA               	movwf	??___fldiv
 10111     1394  1003               	clrc
 10112     1395  0C4A               	rrf	??___fldiv,w
 10113     1396  00C9               	movwf	___fldiv@b+3
 10114     1397  0853               	movf	___fldiv@sign,w
 10115     1398  00CA               	movwf	??___fldiv
 10116     1399  084A               	movf	??___fldiv,w
 10117     139A  04C9               	iorwf	___fldiv@b+3,f
 10118     139B  2A38               	goto	l3232
 10119     139C                     l728:
 10120     139C  0008               	return
 10121     139D                     __end_of___fldiv:
 10122                           
 10123                           	psect	text28
 10124     1AFE                     __ptext28:	
 10125 ;; *************** function _adc_setup *****************
 10126 ;; Defined at:
 10127 ;;		line 16 in file "adc.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  inter           1    wreg     _Bool 
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;  inter           1    3[COMMON] _Bool 
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  1    wreg      void 
 10134 ;; Registers used:
 10135 ;;		wreg, status,2, status,0
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10141 ;;      Params:         0       0       0       0       0
 10142 ;;      Locals:         1       0       0       0       0
 10143 ;;      Temps:          1       0       0       0       0
 10144 ;;      Totals:         2       0       0       0       0
 10145 ;;Total ram usage:        2 bytes
 10146 ;; Hardware stack levels used: 1
 10147 ;; Hardware stack levels required when called: 1
 10148 ;; This function calls:
 10149 ;;		Nothing
 10150 ;; This function is called by:
 10151 ;;		_main
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155     1AFE                     _adc_setup:	
 10156                           ;psect for function _adc_setup
 10157                           
 10158                           
 10159                           ;incstack = 0
 10160                           ; Regs used in _adc_setup: [wreg+status,2+status,0]
 10161                           ;adc_setup@inter stored from wreg
 10162     1AFE  00F3               	movwf	adc_setup@inter
 10163     1AFF                     l3374:
 10164                           
 10165                           ;adc.c: 17:     if (inter == 1) {
 10166     1AFF  0373               	decf	adc_setup@inter,w
 10167     1B00  1D03               	btfss	3,2
 10168     1B01  2B03               	goto	u5601
 10169     1B02  2B04               	goto	u5600
 10170     1B03                     u5601:
 10171     1B03  2B0A               	goto	l71
 10172     1B04                     u5600:
 10173     1B04                     l3376:
 10174                           
 10175                           ;adc.c: 18:     INTCONbits.GIE = 1;
 10176     1B04  178B               	bsf	11,7	;volatile
 10177                           
 10178                           ;adc.c: 19:     INTCONbits.PEIE = 1;
 10179     1B05  170B               	bsf	11,6	;volatile
 10180                           
 10181                           ;adc.c: 20:     PIE1bits.ADIE = 0;}
 10182     1B06  1683               	bsf	3,5	;RP0=1, select bank1
 10183     1B07  1303               	bcf	3,6	;RP1=0, select bank1
 10184     1B08  130C               	bcf	12,6	;volatile
 10185     1B09  2B0D               	goto	l72
 10186     1B0A                     l71:	
 10187                           ;adc.c: 21:     else {
 10188                           
 10189                           
 10190                           ;adc.c: 22:     PIE1bits.ADIE = 0;}
 10191     1B0A  1683               	bsf	3,5	;RP0=1, select bank1
 10192     1B0B  1303               	bcf	3,6	;RP1=0, select bank1
 10193     1B0C  130C               	bcf	12,6	;volatile
 10194     1B0D                     l72:
 10195                           
 10196                           ;adc.c: 24:     ADCON1bits.ADFM = 0;
 10197     1B0D  139F               	bcf	31,7	;volatile
 10198                           
 10199                           ;adc.c: 25:     ADCON1bits.VCFG0 = 0;
 10200     1B0E  121F               	bcf	31,4	;volatile
 10201                           
 10202                           ;adc.c: 26:     ADCON1bits.VCFG1 = 0;
 10203     1B0F  129F               	bcf	31,5	;volatile
 10204     1B10                     l3378:
 10205                           
 10206                           ;adc.c: 28:     ANSEL = 0x00;
 10207     1B10  1683               	bsf	3,5	;RP0=1, select bank3
 10208     1B11  1703               	bsf	3,6	;RP1=1, select bank3
 10209     1B12  0188               	clrf	8	;volatile
 10210                           
 10211                           ;adc.c: 29:     ANSELH = 0x00;
 10212     1B13  0189               	clrf	9	;volatile
 10213     1B14                     l3380:
 10214                           
 10215                           ;adc.c: 31:     ADCON0bits.ADCS = 1;
 10216     1B14  1283               	bcf	3,5	;RP0=0, select bank0
 10217     1B15  1303               	bcf	3,6	;RP1=0, select bank0
 10218     1B16  081F               	movf	31,w	;volatile
 10219     1B17  393F               	andlw	-193
 10220     1B18  3840               	iorlw	64
 10221     1B19  009F               	movwf	31	;volatile
 10222     1B1A                     l3382:
 10223                           
 10224                           ;adc.c: 32:     ADCON0bits.CHS = 0;
 10225     1B1A  30C3               	movlw	-61
 10226     1B1B  059F               	andwf	31,f	;volatile
 10227     1B1C                     l3384:
 10228                           
 10229                           ;adc.c: 33:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 10230     1B1C  3021               	movlw	33
 10231     1B1D  00F2               	movwf	??_adc_setup
 10232     1B1E                     u6067:
 10233     1B1E  0BF2               	decfsz	??_adc_setup,f
 10234     1B1F  2B1E               	goto	u6067
 10235     1B20                     l3386:
 10236                           
 10237                           ;adc.c: 34:     ADCON0bits.ADON = 1;
 10238     1B20  1283               	bcf	3,5	;RP0=0, select bank0
 10239     1B21  1303               	bcf	3,6	;RP1=0, select bank0
 10240     1B22  141F               	bsf	31,0	;volatile
 10241     1B23                     l3388:
 10242                           
 10243                           ;adc.c: 35:     _delay((unsigned long)((100)*(4000000/4000000.0)));
 10244     1B23  3021               	movlw	33
 10245     1B24  00F2               	movwf	??_adc_setup
 10246     1B25                     u6077:
 10247     1B25  0BF2               	decfsz	??_adc_setup,f
 10248     1B26  2B25               	goto	u6077
 10249     1B27                     l73:
 10250     1B27  0008               	return
 10251     1B28                     __end_of_adc_setup:
 10252                           
 10253                           	psect	text29
 10254     080B                     __ptext29:	
 10255 ;; *************** function _adc_channel *****************
 10256 ;; Defined at:
 10257 ;;		line 41 in file "adc.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;  channel         2    2[COMMON] int 
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;		None
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  1    wreg      void 
 10264 ;; Registers used:
 10265 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10271 ;;      Params:         2       0       0       0       0
 10272 ;;      Locals:         0       0       0       0       0
 10273 ;;      Temps:          0       0       0       0       0
 10274 ;;      Totals:         2       0       0       0       0
 10275 ;;Total ram usage:        2 bytes
 10276 ;; Hardware stack levels used: 1
 10277 ;; Hardware stack levels required when called: 1
 10278 ;; This function calls:
 10279 ;;		Nothing
 10280 ;; This function is called by:
 10281 ;;		_main
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285     080B                     _adc_channel:	
 10286                           ;psect for function _adc_channel
 10287                           
 10288     080B                     l3390:	
 10289                           ;incstack = 0
 10290                           ; Regs used in _adc_channel: [wreg-fsr0h+status,2+status,0]
 10291                           
 10292                           
 10293                           ;adc.c: 42:     switch (channel)
 10294     080B  286E               	goto	l3394
 10295     080C                     l77:	
 10296                           ;adc.c: 43:     {case 0:
 10297                           
 10298                           
 10299                           ;adc.c: 44:         ANSELbits.ANS0 = 1;
 10300     080C  1683               	bsf	3,5	;RP0=1, select bank3
 10301     080D  1703               	bsf	3,6	;RP1=1, select bank3
 10302     080E  1408               	bsf	8,0	;volatile
 10303                           
 10304                           ;adc.c: 45:         TRISAbits.TRISA0 = 1;
 10305     080F  1683               	bsf	3,5	;RP0=1, select bank1
 10306     0810  1303               	bcf	3,6	;RP1=0, select bank1
 10307     0811  1405               	bsf	5,0	;volatile
 10308                           
 10309                           ;adc.c: 46:         break;
 10310     0812  289F               	goto	l93
 10311     0813                     l79:	
 10312                           ;adc.c: 47:     case 1:
 10313                           
 10314                           
 10315                           ;adc.c: 48:         ANSELbits.ANS1 = 1;
 10316     0813  1683               	bsf	3,5	;RP0=1, select bank3
 10317     0814  1703               	bsf	3,6	;RP1=1, select bank3
 10318     0815  1488               	bsf	8,1	;volatile
 10319                           
 10320                           ;adc.c: 49:         TRISAbits.TRISA1 = 1;
 10321     0816  1683               	bsf	3,5	;RP0=1, select bank1
 10322     0817  1303               	bcf	3,6	;RP1=0, select bank1
 10323     0818  1485               	bsf	5,1	;volatile
 10324                           
 10325                           ;adc.c: 50:         break;
 10326     0819  289F               	goto	l93
 10327     081A                     l80:	
 10328                           ;adc.c: 51:     case 2:
 10329                           
 10330                           
 10331                           ;adc.c: 52:         ANSELbits.ANS2 = 1;
 10332     081A  1683               	bsf	3,5	;RP0=1, select bank3
 10333     081B  1703               	bsf	3,6	;RP1=1, select bank3
 10334     081C  1508               	bsf	8,2	;volatile
 10335                           
 10336                           ;adc.c: 53:         TRISAbits.TRISA2 = 1;
 10337     081D  1683               	bsf	3,5	;RP0=1, select bank1
 10338     081E  1303               	bcf	3,6	;RP1=0, select bank1
 10339     081F  1505               	bsf	5,2	;volatile
 10340                           
 10341                           ;adc.c: 54:         break;
 10342     0820  289F               	goto	l93
 10343     0821                     l81:	
 10344                           ;adc.c: 55:     case 3:
 10345                           
 10346                           
 10347                           ;adc.c: 56:         ANSELbits.ANS3 = 1;
 10348     0821  1683               	bsf	3,5	;RP0=1, select bank3
 10349     0822  1703               	bsf	3,6	;RP1=1, select bank3
 10350     0823  1588               	bsf	8,3	;volatile
 10351                           
 10352                           ;adc.c: 57:         TRISAbits.TRISA3 = 1;
 10353     0824  1683               	bsf	3,5	;RP0=1, select bank1
 10354     0825  1303               	bcf	3,6	;RP1=0, select bank1
 10355     0826  1585               	bsf	5,3	;volatile
 10356                           
 10357                           ;adc.c: 58:         break;
 10358     0827  289F               	goto	l93
 10359     0828                     l82:	
 10360                           ;adc.c: 59:     case 4:
 10361                           
 10362                           
 10363                           ;adc.c: 60:         ANSELbits.ANS4 = 1;
 10364     0828  1683               	bsf	3,5	;RP0=1, select bank3
 10365     0829  1703               	bsf	3,6	;RP1=1, select bank3
 10366     082A  1608               	bsf	8,4	;volatile
 10367                           
 10368                           ;adc.c: 61:         TRISAbits.TRISA5 = 1;
 10369     082B  1683               	bsf	3,5	;RP0=1, select bank1
 10370     082C  1303               	bcf	3,6	;RP1=0, select bank1
 10371     082D  1685               	bsf	5,5	;volatile
 10372                           
 10373                           ;adc.c: 62:         break;
 10374     082E  289F               	goto	l93
 10375     082F                     l83:	
 10376                           ;adc.c: 63:     case 5:
 10377                           
 10378                           
 10379                           ;adc.c: 64:         ANSELbits.ANS5 = 1;
 10380     082F  1683               	bsf	3,5	;RP0=1, select bank3
 10381     0830  1703               	bsf	3,6	;RP1=1, select bank3
 10382     0831  1688               	bsf	8,5	;volatile
 10383                           
 10384                           ;adc.c: 65:         TRISEbits.TRISE0 = 1;
 10385     0832  1683               	bsf	3,5	;RP0=1, select bank1
 10386     0833  1303               	bcf	3,6	;RP1=0, select bank1
 10387     0834  1409               	bsf	9,0	;volatile
 10388                           
 10389                           ;adc.c: 66:         break;
 10390     0835  289F               	goto	l93
 10391     0836                     l84:	
 10392                           ;adc.c: 67:     case 6:
 10393                           
 10394                           
 10395                           ;adc.c: 68:         ANSELbits.ANS6 = 1;
 10396     0836  1683               	bsf	3,5	;RP0=1, select bank3
 10397     0837  1703               	bsf	3,6	;RP1=1, select bank3
 10398     0838  1708               	bsf	8,6	;volatile
 10399                           
 10400                           ;adc.c: 69:         TRISEbits.TRISE1 = 1;
 10401     0839  1683               	bsf	3,5	;RP0=1, select bank1
 10402     083A  1303               	bcf	3,6	;RP1=0, select bank1
 10403     083B  1489               	bsf	9,1	;volatile
 10404                           
 10405                           ;adc.c: 70:         break;
 10406     083C  289F               	goto	l93
 10407     083D                     l85:	
 10408                           ;adc.c: 71:     case 7:
 10409                           
 10410                           
 10411                           ;adc.c: 72:         ANSELbits.ANS7 = 1;
 10412     083D  1683               	bsf	3,5	;RP0=1, select bank3
 10413     083E  1703               	bsf	3,6	;RP1=1, select bank3
 10414     083F  1788               	bsf	8,7	;volatile
 10415                           
 10416                           ;adc.c: 73:         TRISEbits.TRISE2 = 1;
 10417     0840  1683               	bsf	3,5	;RP0=1, select bank1
 10418     0841  1303               	bcf	3,6	;RP1=0, select bank1
 10419     0842  1509               	bsf	9,2	;volatile
 10420                           
 10421                           ;adc.c: 74:         break;
 10422     0843  289F               	goto	l93
 10423     0844                     l86:	
 10424                           ;adc.c: 75:     case 8:
 10425                           
 10426                           
 10427                           ;adc.c: 76:         ANSELHbits.ANS8 = 1;
 10428     0844  1683               	bsf	3,5	;RP0=1, select bank3
 10429     0845  1703               	bsf	3,6	;RP1=1, select bank3
 10430     0846  1409               	bsf	9,0	;volatile
 10431                           
 10432                           ;adc.c: 77:         TRISBbits.TRISB2 = 1;
 10433     0847  1683               	bsf	3,5	;RP0=1, select bank1
 10434     0848  1303               	bcf	3,6	;RP1=0, select bank1
 10435     0849  1506               	bsf	6,2	;volatile
 10436                           
 10437                           ;adc.c: 78:         break;
 10438     084A  289F               	goto	l93
 10439     084B                     l87:	
 10440                           ;adc.c: 79:     case 9:
 10441                           
 10442                           
 10443                           ;adc.c: 80:         ANSELHbits.ANS9 = 1;
 10444     084B  1683               	bsf	3,5	;RP0=1, select bank3
 10445     084C  1703               	bsf	3,6	;RP1=1, select bank3
 10446     084D  1489               	bsf	9,1	;volatile
 10447                           
 10448                           ;adc.c: 81:         TRISBbits.TRISB3 = 1;
 10449     084E  1683               	bsf	3,5	;RP0=1, select bank1
 10450     084F  1303               	bcf	3,6	;RP1=0, select bank1
 10451     0850  1586               	bsf	6,3	;volatile
 10452                           
 10453                           ;adc.c: 82:         break;
 10454     0851  289F               	goto	l93
 10455     0852                     l88:	
 10456                           ;adc.c: 83:     case 10:
 10457                           
 10458                           
 10459                           ;adc.c: 84:         ANSELHbits.ANS10 = 1;
 10460     0852  1683               	bsf	3,5	;RP0=1, select bank3
 10461     0853  1703               	bsf	3,6	;RP1=1, select bank3
 10462     0854  1509               	bsf	9,2	;volatile
 10463                           
 10464                           ;adc.c: 85:         TRISBbits.TRISB1 = 1;
 10465     0855  1683               	bsf	3,5	;RP0=1, select bank1
 10466     0856  1303               	bcf	3,6	;RP1=0, select bank1
 10467     0857  1486               	bsf	6,1	;volatile
 10468                           
 10469                           ;adc.c: 86:         break;
 10470     0858  289F               	goto	l93
 10471     0859                     l89:	
 10472                           ;adc.c: 87:     case 11:
 10473                           
 10474                           
 10475                           ;adc.c: 88:         ANSELHbits.ANS11 = 1;
 10476     0859  1683               	bsf	3,5	;RP0=1, select bank3
 10477     085A  1703               	bsf	3,6	;RP1=1, select bank3
 10478     085B  1589               	bsf	9,3	;volatile
 10479                           
 10480                           ;adc.c: 89:         TRISBbits.TRISB4 = 1;
 10481     085C  1683               	bsf	3,5	;RP0=1, select bank1
 10482     085D  1303               	bcf	3,6	;RP1=0, select bank1
 10483     085E  1606               	bsf	6,4	;volatile
 10484                           
 10485                           ;adc.c: 90:         break;
 10486     085F  289F               	goto	l93
 10487     0860                     l90:	
 10488                           ;adc.c: 91:     case 12:
 10489                           
 10490                           
 10491                           ;adc.c: 92:         ANSELHbits.ANS12 = 1;
 10492     0860  1683               	bsf	3,5	;RP0=1, select bank3
 10493     0861  1703               	bsf	3,6	;RP1=1, select bank3
 10494     0862  1609               	bsf	9,4	;volatile
 10495                           
 10496                           ;adc.c: 93:         TRISBbits.TRISB0 = 1;
 10497     0863  1683               	bsf	3,5	;RP0=1, select bank1
 10498     0864  1303               	bcf	3,6	;RP1=0, select bank1
 10499     0865  1406               	bsf	6,0	;volatile
 10500                           
 10501                           ;adc.c: 94:         break;
 10502     0866  289F               	goto	l93
 10503     0867                     l91:	
 10504                           ;adc.c: 95:     case 13:
 10505                           
 10506                           
 10507                           ;adc.c: 96:         ANSELHbits.ANS13 = 1;
 10508     0867  1683               	bsf	3,5	;RP0=1, select bank3
 10509     0868  1703               	bsf	3,6	;RP1=1, select bank3
 10510     0869  1689               	bsf	9,5	;volatile
 10511                           
 10512                           ;adc.c: 97:         TRISBbits.TRISB5 = 1;
 10513     086A  1683               	bsf	3,5	;RP0=1, select bank1
 10514     086B  1303               	bcf	3,6	;RP1=0, select bank1
 10515     086C  1686               	bsf	6,5	;volatile
 10516                           
 10517                           ;adc.c: 98:         break;
 10518     086D  289F               	goto	l93
 10519     086E                     l3394:
 10520                           
 10521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10522                           ; Switch size 1, requested type "simple"
 10523                           ; Number of cases is 1, Range of values is 0 to 0
 10524                           ; switch strategies available:
 10525                           ; Name         Instructions Cycles
 10526                           ; simple_byte            4     3 (average)
 10527                           ; direct_byte           11     8 (fixed)
 10528                           ; jumptable            260     6 (fixed)
 10529                           ;	Chosen strategy is simple_byte
 10530     086E  0873               	movf	adc_channel@channel+1,w
 10531     086F  3A00               	xorlw	0	; case 0
 10532     0870  1903               	skipnz
 10533     0871  2873               	goto	l3750
 10534     0872  289F               	goto	l93
 10535     0873                     l3750:
 10536                           
 10537                           ; Switch size 1, requested type "simple"
 10538                           ; Number of cases is 14, Range of values is 0 to 13
 10539                           ; switch strategies available:
 10540                           ; Name         Instructions Cycles
 10541                           ; simple_byte           43    22 (average)
 10542                           ; direct_byte           50     8 (fixed)
 10543                           ; jumptable            260     6 (fixed)
 10544                           ;	Chosen strategy is simple_byte
 10545     0873  0872               	movf	adc_channel@channel,w
 10546     0874  3A00               	xorlw	0	; case 0
 10547     0875  1903               	skipnz
 10548     0876  280C               	goto	l77
 10549     0877  3A01               	xorlw	1	; case 1
 10550     0878  1903               	skipnz
 10551     0879  2813               	goto	l79
 10552     087A  3A03               	xorlw	3	; case 2
 10553     087B  1903               	skipnz
 10554     087C  281A               	goto	l80
 10555     087D  3A01               	xorlw	1	; case 3
 10556     087E  1903               	skipnz
 10557     087F  2821               	goto	l81
 10558     0880  3A07               	xorlw	7	; case 4
 10559     0881  1903               	skipnz
 10560     0882  2828               	goto	l82
 10561     0883  3A01               	xorlw	1	; case 5
 10562     0884  1903               	skipnz
 10563     0885  282F               	goto	l83
 10564     0886  3A03               	xorlw	3	; case 6
 10565     0887  1903               	skipnz
 10566     0888  2836               	goto	l84
 10567     0889  3A01               	xorlw	1	; case 7
 10568     088A  1903               	skipnz
 10569     088B  283D               	goto	l85
 10570     088C  3A0F               	xorlw	15	; case 8
 10571     088D  1903               	skipnz
 10572     088E  2844               	goto	l86
 10573     088F  3A01               	xorlw	1	; case 9
 10574     0890  1903               	skipnz
 10575     0891  284B               	goto	l87
 10576     0892  3A03               	xorlw	3	; case 10
 10577     0893  1903               	skipnz
 10578     0894  2852               	goto	l88
 10579     0895  3A01               	xorlw	1	; case 11
 10580     0896  1903               	skipnz
 10581     0897  2859               	goto	l89
 10582     0898  3A07               	xorlw	7	; case 12
 10583     0899  1903               	skipnz
 10584     089A  2860               	goto	l90
 10585     089B  3A01               	xorlw	1	; case 13
 10586     089C  1903               	skipnz
 10587     089D  2867               	goto	l91
 10588     089E  289F               	goto	l93
 10589     089F                     l93:
 10590     089F  0008               	return
 10591     08A0                     __end_of_adc_channel:
 10592                           
 10593                           	psect	text30
 10594     1BDD                     __ptext30:	
 10595 ;; *************** function _Lcd_Write_String *****************
 10596 ;; Defined at:
 10597 ;;		line 98 in file "LCD4.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;  a               2    7[COMMON] PTR unsigned char 
 10600 ;;		 -> main@display(50), STR_2(2), STR_1(9), 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;  i               2    0[BANK0 ] int 
 10603 ;; Return value:  Size  Location     Type
 10604 ;;                  1    wreg      void 
 10605 ;; Registers used:
 10606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10607 ;; Tracked objects:
 10608 ;;		On entry : 0/0
 10609 ;;		On exit  : 0/0
 10610 ;;		Unchanged: 0/0
 10611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10612 ;;      Params:         2       0       0       0       0
 10613 ;;      Locals:         0       2       0       0       0
 10614 ;;      Temps:          3       0       0       0       0
 10615 ;;      Totals:         5       2       0       0       0
 10616 ;;Total ram usage:        7 bytes
 10617 ;; Hardware stack levels used: 1
 10618 ;; Hardware stack levels required when called: 3
 10619 ;; This function calls:
 10620 ;;		_Lcd_Write_Char
 10621 ;; This function is called by:
 10622 ;;		_main
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626     1BDD                     _Lcd_Write_String:	
 10627                           ;psect for function _Lcd_Write_String
 10628                           
 10629     1BDD                     l3432:	
 10630                           ;incstack = 0
 10631                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10632                           
 10633                           
 10634                           ;LCD4.c: 99:     int i;;LCD4.c: 100:     for (i = 0; a[i] != '\0'; i++)
 10635     1BDD  1283               	bcf	3,5	;RP0=0, select bank0
 10636     1BDE  1303               	bcf	3,6	;RP1=0, select bank0
 10637     1BDF  01A0               	clrf	Lcd_Write_String@i
 10638     1BE0  01A1               	clrf	Lcd_Write_String@i+1
 10639     1BE1  2C06               	goto	l3438
 10640     1BE2                     l3434:
 10641                           
 10642                           ;LCD4.c: 101:         Lcd_Write_Char(a[i]);
 10643     1BE2  0820               	movf	Lcd_Write_String@i,w
 10644     1BE3  0777               	addwf	Lcd_Write_String@a,w
 10645     1BE4  00FA               	movwf	??_Lcd_Write_String+1
 10646     1BE5  0878               	movf	Lcd_Write_String@a+1,w
 10647     1BE6  00F9               	movwf	??_Lcd_Write_String
 10648     1BE7  1803               	skipnc
 10649     1BE8  0AF9               	incf	??_Lcd_Write_String,f
 10650     1BE9  1FA0               	btfss	Lcd_Write_String@i,7
 10651     1BEA  2BEC               	goto	u5650
 10652     1BEB  03F9               	decf	??_Lcd_Write_String,f
 10653     1BEC                     u5650:
 10654     1BEC  0879               	movf	??_Lcd_Write_String,w
 10655     1BED  00FB               	movwf	??_Lcd_Write_String+2
 10656     1BEE  087B               	movf	??_Lcd_Write_String+2,w
 10657     1BEF  1283               	bcf	3,5	;RP0=0, select bank0
 10658     1BF0  1303               	bcf	3,6	;RP1=0, select bank0
 10659     1BF1  00FF               	movwf	btemp+1
 10660     1BF2  087A               	movf	??_Lcd_Write_String+1,w
 10661     1BF3  0084               	movwf	4
 10662     1BF4  160A  118A  2000  160A  158A  	fcall	stringtab
 10663     1BF9  160A  158A  2328  160A  158A  	fcall	_Lcd_Write_Char
 10664     1BFE                     l3436:
 10665     1BFE  3001               	movlw	1
 10666     1BFF  1283               	bcf	3,5	;RP0=0, select bank0
 10667     1C00  1303               	bcf	3,6	;RP1=0, select bank0
 10668     1C01  07A0               	addwf	Lcd_Write_String@i,f
 10669     1C02  1803               	skipnc
 10670     1C03  0AA1               	incf	Lcd_Write_String@i+1,f
 10671     1C04  3000               	movlw	0
 10672     1C05  07A1               	addwf	Lcd_Write_String@i+1,f
 10673     1C06                     l3438:
 10674     1C06  0820               	movf	Lcd_Write_String@i,w
 10675     1C07  0777               	addwf	Lcd_Write_String@a,w
 10676     1C08  00FA               	movwf	??_Lcd_Write_String+1
 10677     1C09  0878               	movf	Lcd_Write_String@a+1,w
 10678     1C0A  00F9               	movwf	??_Lcd_Write_String
 10679     1C0B  1803               	skipnc
 10680     1C0C  0AF9               	incf	??_Lcd_Write_String,f
 10681     1C0D  1FA0               	btfss	Lcd_Write_String@i,7
 10682     1C0E  2C10               	goto	u5660
 10683     1C0F  03F9               	decf	??_Lcd_Write_String,f
 10684     1C10                     u5660:
 10685     1C10  0879               	movf	??_Lcd_Write_String,w
 10686     1C11  00FB               	movwf	??_Lcd_Write_String+2
 10687     1C12  087B               	movf	??_Lcd_Write_String+2,w
 10688     1C13  1283               	bcf	3,5	;RP0=0, select bank0
 10689     1C14  1303               	bcf	3,6	;RP1=0, select bank0
 10690     1C15  00FF               	movwf	btemp+1
 10691     1C16  087A               	movf	??_Lcd_Write_String+1,w
 10692     1C17  0084               	movwf	4
 10693     1C18  160A  118A  2000  160A  158A  	fcall	stringtab
 10694     1C1D  3A00               	xorlw	0
 10695     1C1E  1D03               	skipz
 10696     1C1F  2C21               	goto	u5671
 10697     1C20  2C22               	goto	u5670
 10698     1C21                     u5671:
 10699     1C21  2BE2               	goto	l3434
 10700     1C22                     u5670:
 10701     1C22                     l158:
 10702     1C22  0008               	return
 10703     1C23                     __end_of_Lcd_Write_String:
 10704                           
 10705                           	psect	text31
 10706     1B28                     __ptext31:	
 10707 ;; *************** function _Lcd_Write_Char *****************
 10708 ;; Defined at:
 10709 ;;		line 83 in file "LCD4.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;  a               1    wreg     unsigned char 
 10712 ;; Auto vars:     Size  Location     Type
 10713 ;;  a               1    6[COMMON] unsigned char 
 10714 ;;  y               1    5[COMMON] unsigned char 
 10715 ;;  temp            1    4[COMMON] unsigned char 
 10716 ;; Return value:  Size  Location     Type
 10717 ;;                  1    wreg      void 
 10718 ;; Registers used:
 10719 ;;		wreg, status,2, status,0, pclath, cstack
 10720 ;; Tracked objects:
 10721 ;;		On entry : 0/0
 10722 ;;		On exit  : 0/0
 10723 ;;		Unchanged: 0/0
 10724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10725 ;;      Params:         0       0       0       0       0
 10726 ;;      Locals:         3       0       0       0       0
 10727 ;;      Temps:          1       0       0       0       0
 10728 ;;      Totals:         4       0       0       0       0
 10729 ;;Total ram usage:        4 bytes
 10730 ;; Hardware stack levels used: 1
 10731 ;; Hardware stack levels required when called: 2
 10732 ;; This function calls:
 10733 ;;		_Lcd_Port
 10734 ;; This function is called by:
 10735 ;;		_Lcd_Write_String
 10736 ;; This function uses a non-reentrant model
 10737 ;;
 10738                           
 10739     1B28                     _Lcd_Write_Char:	
 10740                           ;psect for function _Lcd_Write_Char
 10741                           
 10742                           
 10743                           ;incstack = 0
 10744                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10745                           ;Lcd_Write_Char@a stored from wreg
 10746     1B28  00F6               	movwf	Lcd_Write_Char@a
 10747     1B29                     l2854:
 10748                           
 10749                           ;LCD4.c: 84:     char temp, y;;LCD4.c: 85:     temp = a & 0x0F;
 10750     1B29  0876               	movf	Lcd_Write_Char@a,w
 10751     1B2A  390F               	andlw	15
 10752     1B2B  00F4               	movwf	Lcd_Write_Char@temp
 10753                           
 10754                           ;LCD4.c: 86:     y = a & 0xF0;
 10755     1B2C  0876               	movf	Lcd_Write_Char@a,w
 10756     1B2D  39F0               	andlw	240
 10757     1B2E  00F5               	movwf	Lcd_Write_Char@y
 10758     1B2F                     l2856:
 10759                           
 10760                           ;LCD4.c: 87:     PORTDbits.RD2 = 1;
 10761     1B2F  1283               	bcf	3,5	;RP0=0, select bank0
 10762     1B30  1303               	bcf	3,6	;RP1=0, select bank0
 10763     1B31  1508               	bsf	8,2	;volatile
 10764     1B32                     l2858:
 10765                           
 10766                           ;LCD4.c: 88:     Lcd_Port(y >> 4);
 10767     1B32  0875               	movf	Lcd_Write_Char@y,w
 10768     1B33  00F3               	movwf	??_Lcd_Write_Char
 10769     1B34  3004               	movlw	4
 10770     1B35                     u4255:
 10771     1B35  1003               	clrc
 10772     1B36  0CF3               	rrf	??_Lcd_Write_Char,f
 10773     1B37  3EFF               	addlw	-1
 10774     1B38  1D03               	skipz
 10775     1B39  2B35               	goto	u4255
 10776     1B3A  0873               	movf	??_Lcd_Write_Char,w
 10777     1B3B  160A  158A  22B5  160A  158A  	fcall	_Lcd_Port
 10778     1B40                     l2860:
 10779                           
 10780                           ;LCD4.c: 89:     RD3 = 1;
 10781     1B40  1283               	bcf	3,5	;RP0=0, select bank0
 10782     1B41  1303               	bcf	3,6	;RP1=0, select bank0
 10783     1B42  1588               	bsf	8,3	;volatile
 10784     1B43                     l2862:
 10785                           
 10786                           ;LCD4.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10787     1B43  301A               	movlw	26
 10788     1B44  00F3               	movwf	??_Lcd_Write_Char
 10789     1B45                     u6087:
 10790     1B45  0BF3               	decfsz	??_Lcd_Write_Char,f
 10791     1B46  2B45               	goto	u6087
 10792     1B47  0000               	nop
 10793     1B48                     l2864:
 10794                           
 10795                           ;LCD4.c: 91:     RD3 = 0;
 10796     1B48  1283               	bcf	3,5	;RP0=0, select bank0
 10797     1B49  1303               	bcf	3,6	;RP1=0, select bank0
 10798     1B4A  1188               	bcf	8,3	;volatile
 10799     1B4B                     l2866:
 10800                           
 10801                           ;LCD4.c: 92:     Lcd_Port(temp);
 10802     1B4B  0874               	movf	Lcd_Write_Char@temp,w
 10803     1B4C  160A  158A  22B5  160A  158A  	fcall	_Lcd_Port
 10804     1B51                     l2868:
 10805                           
 10806                           ;LCD4.c: 93:     RD3 = 1;
 10807     1B51  1283               	bcf	3,5	;RP0=0, select bank0
 10808     1B52  1303               	bcf	3,6	;RP1=0, select bank0
 10809     1B53  1588               	bsf	8,3	;volatile
 10810     1B54                     l2870:
 10811                           
 10812                           ;LCD4.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10813     1B54  301A               	movlw	26
 10814     1B55  00F3               	movwf	??_Lcd_Write_Char
 10815     1B56                     u6097:
 10816     1B56  0BF3               	decfsz	??_Lcd_Write_Char,f
 10817     1B57  2B56               	goto	u6097
 10818     1B58  0000               	nop
 10819     1B59                     l2872:
 10820                           
 10821                           ;LCD4.c: 95:     RD3 = 0;
 10822     1B59  1283               	bcf	3,5	;RP0=0, select bank0
 10823     1B5A  1303               	bcf	3,6	;RP1=0, select bank0
 10824     1B5B  1188               	bcf	8,3	;volatile
 10825     1B5C                     l152:
 10826     1B5C  0008               	return
 10827     1B5D                     __end_of_Lcd_Write_Char:
 10828                           
 10829                           	psect	text32
 10830     1B97                     __ptext32:	
 10831 ;; *************** function _Lcd_Set_Cursor *****************
 10832 ;; Defined at:
 10833 ;;		line 48 in file "LCD4.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;  a               1    wreg     unsigned char 
 10836 ;;  b               1    6[COMMON] unsigned char 
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;  a               1    8[COMMON] unsigned char 
 10839 ;;  temp            1   11[COMMON] unsigned char 
 10840 ;;  y               1   10[COMMON] unsigned char 
 10841 ;;  z               1    9[COMMON] unsigned char 
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      void 
 10844 ;; Registers used:
 10845 ;;		wreg, status,2, status,0, pclath, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10851 ;;      Params:         1       0       0       0       0
 10852 ;;      Locals:         4       0       0       0       0
 10853 ;;      Temps:          1       0       0       0       0
 10854 ;;      Totals:         6       0       0       0       0
 10855 ;;Total ram usage:        6 bytes
 10856 ;; Hardware stack levels used: 1
 10857 ;; Hardware stack levels required when called: 3
 10858 ;; This function calls:
 10859 ;;		_Lcd_Cmd
 10860 ;; This function is called by:
 10861 ;;		_main
 10862 ;; This function uses a non-reentrant model
 10863 ;;
 10864                           
 10865     1B97                     _Lcd_Set_Cursor:	
 10866                           ;psect for function _Lcd_Set_Cursor
 10867                           
 10868                           
 10869                           ;incstack = 0
 10870                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10871                           ;Lcd_Set_Cursor@a stored from wreg
 10872     1B97  00F8               	movwf	Lcd_Set_Cursor@a
 10873     1B98                     l3412:
 10874                           
 10875                           ;LCD4.c: 49:     char temp, z, y;;LCD4.c: 50:     if (a == 1) {
 10876     1B98  0378               	decf	Lcd_Set_Cursor@a,w
 10877     1B99  1D03               	btfss	3,2
 10878     1B9A  2B9C               	goto	u5611
 10879     1B9B  2B9D               	goto	u5610
 10880     1B9C                     u5611:
 10881     1B9C  2BBA               	goto	l3422
 10882     1B9D                     u5610:
 10883     1B9D                     l3414:
 10884                           
 10885                           ;LCD4.c: 51:         temp = 0x80 + b - 1;
 10886     1B9D  0876               	movf	Lcd_Set_Cursor@b,w
 10887     1B9E  3E7F               	addlw	127
 10888     1B9F  00FB               	movwf	Lcd_Set_Cursor@temp
 10889                           
 10890                           ;LCD4.c: 52:         z = temp >> 4;
 10891     1BA0  087B               	movf	Lcd_Set_Cursor@temp,w
 10892     1BA1  00F7               	movwf	??_Lcd_Set_Cursor
 10893     1BA2  3004               	movlw	4
 10894     1BA3                     u5625:
 10895     1BA3  1003               	clrc
 10896     1BA4  0CF7               	rrf	??_Lcd_Set_Cursor,f
 10897     1BA5  3EFF               	addlw	-1
 10898     1BA6  1D03               	skipz
 10899     1BA7  2BA3               	goto	u5625
 10900     1BA8  0877               	movf	??_Lcd_Set_Cursor,w
 10901     1BA9  00F9               	movwf	Lcd_Set_Cursor@z
 10902     1BAA                     l3416:
 10903                           
 10904                           ;LCD4.c: 53:         y = temp & 0x0F;
 10905     1BAA  087B               	movf	Lcd_Set_Cursor@temp,w
 10906     1BAB  390F               	andlw	15
 10907     1BAC  00FA               	movwf	Lcd_Set_Cursor@y
 10908     1BAD                     l3418:
 10909                           
 10910                           ;LCD4.c: 54:         Lcd_Cmd(z);
 10911     1BAD  0879               	movf	Lcd_Set_Cursor@z,w
 10912     1BAE  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 10913     1BB3                     l3420:
 10914                           
 10915                           ;LCD4.c: 55:         Lcd_Cmd(y);
 10916     1BB3  087A               	movf	Lcd_Set_Cursor@y,w
 10917     1BB4  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 10918                           
 10919                           ;LCD4.c: 56:     } else if (a == 2) {
 10920     1BB9  2BDC               	goto	l146
 10921     1BBA                     l3422:
 10922     1BBA  3002               	movlw	2
 10923     1BBB  0678               	xorwf	Lcd_Set_Cursor@a,w
 10924     1BBC  1D03               	btfss	3,2
 10925     1BBD  2BBF               	goto	u5631
 10926     1BBE  2BC0               	goto	u5630
 10927     1BBF                     u5631:
 10928     1BBF  2BDC               	goto	l146
 10929     1BC0                     u5630:
 10930     1BC0                     l3424:
 10931                           
 10932                           ;LCD4.c: 57:         temp = 0xC0 + b - 1;
 10933     1BC0  0876               	movf	Lcd_Set_Cursor@b,w
 10934     1BC1  3EBF               	addlw	191
 10935     1BC2  00FB               	movwf	Lcd_Set_Cursor@temp
 10936                           
 10937                           ;LCD4.c: 58:         z = temp >> 4;
 10938     1BC3  087B               	movf	Lcd_Set_Cursor@temp,w
 10939     1BC4  00F7               	movwf	??_Lcd_Set_Cursor
 10940     1BC5  3004               	movlw	4
 10941     1BC6                     u5645:
 10942     1BC6  1003               	clrc
 10943     1BC7  0CF7               	rrf	??_Lcd_Set_Cursor,f
 10944     1BC8  3EFF               	addlw	-1
 10945     1BC9  1D03               	skipz
 10946     1BCA  2BC6               	goto	u5645
 10947     1BCB  0877               	movf	??_Lcd_Set_Cursor,w
 10948     1BCC  00F9               	movwf	Lcd_Set_Cursor@z
 10949     1BCD                     l3426:
 10950                           
 10951                           ;LCD4.c: 59:         y = temp & 0x0F;
 10952     1BCD  087B               	movf	Lcd_Set_Cursor@temp,w
 10953     1BCE  390F               	andlw	15
 10954     1BCF  00FA               	movwf	Lcd_Set_Cursor@y
 10955     1BD0                     l3428:
 10956                           
 10957                           ;LCD4.c: 60:         Lcd_Cmd(z);
 10958     1BD0  0879               	movf	Lcd_Set_Cursor@z,w
 10959     1BD1  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 10960     1BD6                     l3430:
 10961                           
 10962                           ;LCD4.c: 61:         Lcd_Cmd(y);
 10963     1BD6  087A               	movf	Lcd_Set_Cursor@y,w
 10964     1BD7  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 10965     1BDC                     l146:
 10966     1BDC  0008               	return
 10967     1BDD                     __end_of_Lcd_Set_Cursor:
 10968                           
 10969                           	psect	text33
 10970     1DB6                     __ptext33:	
 10971 ;; *************** function _Lcd_Init *****************
 10972 ;; Defined at:
 10973 ;;		line 65 in file "LCD4.c"
 10974 ;; Parameters:    Size  Location     Type
 10975 ;;		None
 10976 ;; Auto vars:     Size  Location     Type
 10977 ;;		None
 10978 ;; Return value:  Size  Location     Type
 10979 ;;                  1    wreg      void 
 10980 ;; Registers used:
 10981 ;;		wreg, status,2, status,0, pclath, cstack
 10982 ;; Tracked objects:
 10983 ;;		On entry : 0/0
 10984 ;;		On exit  : 0/0
 10985 ;;		Unchanged: 0/0
 10986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10987 ;;      Params:         0       0       0       0       0
 10988 ;;      Locals:         0       0       0       0       0
 10989 ;;      Temps:          2       0       0       0       0
 10990 ;;      Totals:         2       0       0       0       0
 10991 ;;Total ram usage:        2 bytes
 10992 ;; Hardware stack levels used: 1
 10993 ;; Hardware stack levels required when called: 3
 10994 ;; This function calls:
 10995 ;;		_Lcd_Cmd
 10996 ;;		_Lcd_Port
 10997 ;; This function is called by:
 10998 ;;		_main
 10999 ;; This function uses a non-reentrant model
 11000 ;;
 11001                           
 11002     1DB6                     _Lcd_Init:	
 11003                           ;psect for function _Lcd_Init
 11004                           
 11005     1DB6                     l3400:	
 11006                           ;incstack = 0
 11007                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 11008                           
 11009                           
 11010                           ;LCD4.c: 66:     Lcd_Port(0x00);
 11011     1DB6  3000               	movlw	0
 11012     1DB7  160A  158A  22B5  160A  158A  	fcall	_Lcd_Port
 11013     1DBC                     l3402:
 11014                           
 11015                           ;LCD4.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
 11016     1DBC  3034               	movlw	52
 11017     1DBD  00F7               	movwf	??_Lcd_Init+1
 11018     1DBE  30F1               	movlw	241
 11019     1DBF  00F6               	movwf	??_Lcd_Init
 11020     1DC0                     u6107:
 11021     1DC0  0BF6               	decfsz	??_Lcd_Init,f
 11022     1DC1  2DC0               	goto	u6107
 11023     1DC2  0BF7               	decfsz	??_Lcd_Init+1,f
 11024     1DC3  2DC0               	goto	u6107
 11025     1DC4  2DC5               	nop2
 11026     1DC5                     l3404:
 11027                           
 11028                           ;LCD4.c: 68:     Lcd_Cmd(0x03);
 11029     1DC5  3003               	movlw	3
 11030     1DC6  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11031                           
 11032                           ;LCD4.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
 11033     1DCB  300D               	movlw	13
 11034     1DCC  00F7               	movwf	??_Lcd_Init+1
 11035     1DCD  30FB               	movlw	251
 11036     1DCE  00F6               	movwf	??_Lcd_Init
 11037     1DCF                     u6117:
 11038     1DCF  0BF6               	decfsz	??_Lcd_Init,f
 11039     1DD0  2DCF               	goto	u6117
 11040     1DD1  0BF7               	decfsz	??_Lcd_Init+1,f
 11041     1DD2  2DCF               	goto	u6117
 11042     1DD3  2DD4               	nop2
 11043     1DD4                     l3406:
 11044                           
 11045                           ;LCD4.c: 70:     Lcd_Cmd(0x03);
 11046     1DD4  3003               	movlw	3
 11047     1DD5  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11048     1DDA                     l3408:
 11049                           
 11050                           ;LCD4.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
 11051     1DDA  301D               	movlw	29
 11052     1DDB  00F7               	movwf	??_Lcd_Init+1
 11053     1DDC  3091               	movlw	145
 11054     1DDD  00F6               	movwf	??_Lcd_Init
 11055     1DDE                     u6127:
 11056     1DDE  0BF6               	decfsz	??_Lcd_Init,f
 11057     1DDF  2DDE               	goto	u6127
 11058     1DE0  0BF7               	decfsz	??_Lcd_Init+1,f
 11059     1DE1  2DDE               	goto	u6127
 11060                           
 11061                           ;LCD4.c: 72:     Lcd_Cmd(0x03);
 11062     1DE2  3003               	movlw	3
 11063     1DE3  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11064                           
 11065                           ;LCD4.c: 74:     Lcd_Cmd(0x02);
 11066     1DE8  3002               	movlw	2
 11067     1DE9  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11068                           
 11069                           ;LCD4.c: 75:     Lcd_Cmd(0x02);
 11070     1DEE  3002               	movlw	2
 11071     1DEF  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11072                           
 11073                           ;LCD4.c: 76:     Lcd_Cmd(0x08);
 11074     1DF4  3008               	movlw	8
 11075     1DF5  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11076                           
 11077                           ;LCD4.c: 77:     Lcd_Cmd(0x00);
 11078     1DFA  3000               	movlw	0
 11079     1DFB  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11080                           
 11081                           ;LCD4.c: 78:     Lcd_Cmd(0x0C);
 11082     1E00  300C               	movlw	12
 11083     1E01  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11084                           
 11085                           ;LCD4.c: 79:     Lcd_Cmd(0x00);
 11086     1E06  3000               	movlw	0
 11087     1E07  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11088                           
 11089                           ;LCD4.c: 80:     Lcd_Cmd(0x06);
 11090     1E0C  3006               	movlw	6
 11091     1E0D  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11092     1E12                     l149:
 11093     1E12  0008               	return
 11094     1E13                     __end_of_Lcd_Init:
 11095                           
 11096                           	psect	text34
 11097     1A5C                     __ptext34:	
 11098 ;; *************** function _Lcd_Clear *****************
 11099 ;; Defined at:
 11100 ;;		line 43 in file "LCD4.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;		None
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;		None
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  1    wreg      void 
 11107 ;; Registers used:
 11108 ;;		wreg, status,2, status,0, pclath, cstack
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11114 ;;      Params:         0       0       0       0       0
 11115 ;;      Locals:         0       0       0       0       0
 11116 ;;      Temps:          0       0       0       0       0
 11117 ;;      Totals:         0       0       0       0       0
 11118 ;;Total ram usage:        0 bytes
 11119 ;; Hardware stack levels used: 1
 11120 ;; Hardware stack levels required when called: 3
 11121 ;; This function calls:
 11122 ;;		_Lcd_Cmd
 11123 ;; This function is called by:
 11124 ;;		_main
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128     1A5C                     _Lcd_Clear:	
 11129                           ;psect for function _Lcd_Clear
 11130                           
 11131     1A5C                     l3410:	
 11132                           ;incstack = 0
 11133                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 11134                           
 11135                           
 11136                           ;LCD4.c: 44:     Lcd_Cmd(0);
 11137     1A5C  3000               	movlw	0
 11138     1A5D  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11139                           
 11140                           ;LCD4.c: 45:     Lcd_Cmd(1);
 11141     1A62  3001               	movlw	1
 11142     1A63  160A  158A  229B  160A  158A  	fcall	_Lcd_Cmd
 11143     1A68                     l140:
 11144     1A68  0008               	return
 11145     1A69                     __end_of_Lcd_Clear:
 11146                           
 11147                           	psect	text35
 11148     1A9B                     __ptext35:	
 11149 ;; *************** function _Lcd_Cmd *****************
 11150 ;; Defined at:
 11151 ;;		line 35 in file "LCD4.c"
 11152 ;; Parameters:    Size  Location     Type
 11153 ;;  a               1    wreg     unsigned char 
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;  a               1    5[COMMON] unsigned char 
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  1    wreg      void 
 11158 ;; Registers used:
 11159 ;;		wreg, status,2, status,0, pclath, cstack
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11165 ;;      Params:         0       0       0       0       0
 11166 ;;      Locals:         1       0       0       0       0
 11167 ;;      Temps:          2       0       0       0       0
 11168 ;;      Totals:         3       0       0       0       0
 11169 ;;Total ram usage:        3 bytes
 11170 ;; Hardware stack levels used: 1
 11171 ;; Hardware stack levels required when called: 2
 11172 ;; This function calls:
 11173 ;;		_Lcd_Port
 11174 ;; This function is called by:
 11175 ;;		_Lcd_Clear
 11176 ;;		_Lcd_Set_Cursor
 11177 ;;		_Lcd_Init
 11178 ;;		_Lcd_Shift_Right
 11179 ;;		_Lcd_Shift_Left
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183     1A9B                     _Lcd_Cmd:	
 11184                           ;psect for function _Lcd_Cmd
 11185                           
 11186                           
 11187                           ;incstack = 0
 11188                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11189                           ;Lcd_Cmd@a stored from wreg
 11190     1A9B  00F5               	movwf	Lcd_Cmd@a
 11191     1A9C                     l2844:
 11192                           
 11193                           ;LCD4.c: 36:     PORTDbits.RD2 = 0;
 11194     1A9C  1283               	bcf	3,5	;RP0=0, select bank0
 11195     1A9D  1303               	bcf	3,6	;RP1=0, select bank0
 11196     1A9E  1108               	bcf	8,2	;volatile
 11197     1A9F                     l2846:
 11198                           
 11199                           ;LCD4.c: 37:     Lcd_Port(a);
 11200     1A9F  0875               	movf	Lcd_Cmd@a,w
 11201     1AA0  160A  158A  22B5  160A  158A  	fcall	_Lcd_Port
 11202     1AA5                     l2848:
 11203                           
 11204                           ;LCD4.c: 38:     RD3 = 1;
 11205     1AA5  1283               	bcf	3,5	;RP0=0, select bank0
 11206     1AA6  1303               	bcf	3,6	;RP1=0, select bank0
 11207     1AA7  1588               	bsf	8,3	;volatile
 11208     1AA8                     l2850:
 11209                           
 11210                           ;LCD4.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11211     1AA8  300B               	movlw	11
 11212     1AA9  00F4               	movwf	??_Lcd_Cmd+1
 11213     1AAA  3062               	movlw	98
 11214     1AAB  00F3               	movwf	??_Lcd_Cmd
 11215     1AAC                     u6137:
 11216     1AAC  0BF3               	decfsz	??_Lcd_Cmd,f
 11217     1AAD  2AAC               	goto	u6137
 11218     1AAE  0BF4               	decfsz	??_Lcd_Cmd+1,f
 11219     1AAF  2AAC               	goto	u6137
 11220     1AB0  0000               	nop
 11221     1AB1                     l2852:
 11222                           
 11223                           ;LCD4.c: 40:     RD3 = 0;
 11224     1AB1  1283               	bcf	3,5	;RP0=0, select bank0
 11225     1AB2  1303               	bcf	3,6	;RP1=0, select bank0
 11226     1AB3  1188               	bcf	8,3	;volatile
 11227     1AB4                     l137:
 11228     1AB4  0008               	return
 11229     1AB5                     __end_of_Lcd_Cmd:
 11230                           
 11231                           	psect	text36
 11232     1AB5                     __ptext36:	
 11233 ;; *************** function _Lcd_Port *****************
 11234 ;; Defined at:
 11235 ;;		line 13 in file "LCD4.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  a               1    wreg     unsigned char 
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;  a               1    2[COMMON] unsigned char 
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  1    wreg      void 
 11242 ;; Registers used:
 11243 ;;		wreg
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11249 ;;      Params:         0       0       0       0       0
 11250 ;;      Locals:         1       0       0       0       0
 11251 ;;      Temps:          0       0       0       0       0
 11252 ;;      Totals:         1       0       0       0       0
 11253 ;;Total ram usage:        1 bytes
 11254 ;; Hardware stack levels used: 1
 11255 ;; Hardware stack levels required when called: 1
 11256 ;; This function calls:
 11257 ;;		Nothing
 11258 ;; This function is called by:
 11259 ;;		_Lcd_Cmd
 11260 ;;		_Lcd_Init
 11261 ;;		_Lcd_Write_Char
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265     1AB5                     _Lcd_Port:	
 11266                           ;psect for function _Lcd_Port
 11267                           
 11268                           
 11269                           ;incstack = 0
 11270                           ; Regs used in _Lcd_Port: [wreg]
 11271                           ;Lcd_Port@a stored from wreg
 11272     1AB5  00F2               	movwf	Lcd_Port@a
 11273     1AB6                     l2362:
 11274                           
 11275                           ;LCD4.c: 14:     if (a & 1)
 11276     1AB6  1C72               	btfss	Lcd_Port@a,0
 11277     1AB7  2AB9               	goto	u3061
 11278     1AB8  2ABA               	goto	u3060
 11279     1AB9                     u3061:
 11280     1AB9  2ABE               	goto	l126
 11281     1ABA                     u3060:
 11282     1ABA                     l2364:
 11283                           
 11284                           ;LCD4.c: 15:         RD4 = 1;
 11285     1ABA  1283               	bcf	3,5	;RP0=0, select bank0
 11286     1ABB  1303               	bcf	3,6	;RP1=0, select bank0
 11287     1ABC  1608               	bsf	8,4	;volatile
 11288     1ABD  2AC1               	goto	l127
 11289     1ABE                     l126:	
 11290                           ;LCD4.c: 16:     else
 11291                           
 11292                           
 11293                           ;LCD4.c: 17:         RD4 = 0;
 11294     1ABE  1283               	bcf	3,5	;RP0=0, select bank0
 11295     1ABF  1303               	bcf	3,6	;RP1=0, select bank0
 11296     1AC0  1208               	bcf	8,4	;volatile
 11297     1AC1                     l127:
 11298                           
 11299                           ;LCD4.c: 19:     if (a & 2)
 11300     1AC1  1CF2               	btfss	Lcd_Port@a,1
 11301     1AC2  2AC4               	goto	u3071
 11302     1AC3  2AC5               	goto	u3070
 11303     1AC4                     u3071:
 11304     1AC4  2AC7               	goto	l128
 11305     1AC5                     u3070:
 11306     1AC5                     l2366:
 11307                           
 11308                           ;LCD4.c: 20:         RD5 = 1;
 11309     1AC5  1688               	bsf	8,5	;volatile
 11310     1AC6  2AC8               	goto	l129
 11311     1AC7                     l128:	
 11312                           ;LCD4.c: 21:     else
 11313                           
 11314                           
 11315                           ;LCD4.c: 22:         RD5 = 0;
 11316     1AC7  1288               	bcf	8,5	;volatile
 11317     1AC8                     l129:
 11318                           
 11319                           ;LCD4.c: 24:     if (a & 4)
 11320     1AC8  1D72               	btfss	Lcd_Port@a,2
 11321     1AC9  2ACB               	goto	u3081
 11322     1ACA  2ACC               	goto	u3080
 11323     1ACB                     u3081:
 11324     1ACB  2ACE               	goto	l130
 11325     1ACC                     u3080:
 11326     1ACC                     l2368:
 11327                           
 11328                           ;LCD4.c: 25:         RD6 = 1;
 11329     1ACC  1708               	bsf	8,6	;volatile
 11330     1ACD  2ACF               	goto	l131
 11331     1ACE                     l130:	
 11332                           ;LCD4.c: 26:     else
 11333                           
 11334                           
 11335                           ;LCD4.c: 27:         RD6 = 0;
 11336     1ACE  1308               	bcf	8,6	;volatile
 11337     1ACF                     l131:
 11338                           
 11339                           ;LCD4.c: 29:     if (a & 8)
 11340     1ACF  1DF2               	btfss	Lcd_Port@a,3
 11341     1AD0  2AD2               	goto	u3091
 11342     1AD1  2AD3               	goto	u3090
 11343     1AD2                     u3091:
 11344     1AD2  2AD5               	goto	l132
 11345     1AD3                     u3090:
 11346     1AD3                     l2370:
 11347                           
 11348                           ;LCD4.c: 30:         RD7 = 1;
 11349     1AD3  1788               	bsf	8,7	;volatile
 11350     1AD4  2AD6               	goto	l134
 11351     1AD5                     l132:	
 11352                           ;LCD4.c: 31:     else
 11353                           
 11354                           
 11355                           ;LCD4.c: 32:         RD7 = 0;
 11356     1AD5  1388               	bcf	8,7	;volatile
 11357     1AD6                     l134:
 11358     1AD6  0008               	return
 11359     1AD7                     __end_of_Lcd_Port:
 11360                           
 11361                           	psect	text37
 11362     1A4C                     __ptext37:	
 11363 ;; *************** function _Isr *****************
 11364 ;; Defined at:
 11365 ;;		line 66 in file "prelab.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;		None
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;		None
 11370 ;; Return value:  Size  Location     Type
 11371 ;;                  1    wreg      void 
 11372 ;; Registers used:
 11373 ;;		None
 11374 ;; Tracked objects:
 11375 ;;		On entry : 0/0
 11376 ;;		On exit  : 0/0
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11379 ;;      Params:         0       0       0       0       0
 11380 ;;      Locals:         0       0       0       0       0
 11381 ;;      Temps:          2       0       0       0       0
 11382 ;;      Totals:         2       0       0       0       0
 11383 ;;Total ram usage:        2 bytes
 11384 ;; Hardware stack levels used: 1
 11385 ;; This function calls:
 11386 ;;		Nothing
 11387 ;; This function is called by:
 11388 ;;		Interrupt level 1
 11389 ;; This function uses a non-reentrant model
 11390 ;;
 11391                           
 11392     1A4C                     _Isr:	
 11393                           ;psect for function _Isr
 11394                           
 11395     1A4C                     i1l40:
 11396     1A4C  0871               	movf	??_Isr+1,w
 11397     1A4D  008A               	movwf	10
 11398     1A4E  0E70               	swapf	??_Isr,w
 11399     1A4F  0083               	movwf	3
 11400     1A50  0EFE               	swapf	btemp,f
 11401     1A51  0E7E               	swapf	btemp,w
 11402     1A52  0009               	retfie
 11403     1A53                     __end_of_Isr:
 11404     007E                     btemp	set	126	;btemp
 11405     007E                     wtemp0	set	126
 11406                           
 11407                           	psect	intentry
 11408     0004                     __pintentry:	
 11409                           ;incstack = 0
 11410                           ; Regs used in _Isr: []
 11411                           
 11412     0004                     interrupt_function:
 11413     007E                     saved_w	set	btemp
 11414     0004  00FE               	movwf	btemp
 11415     0005  0E03               	swapf	3,w
 11416     0006  00F0               	movwf	??_Isr
 11417     0007  080A               	movf	10,w
 11418     0008  00F1               	movwf	??_Isr+1
 11419     0009  160A  158A  2A4C   	ljmp	_Isr
 11420                           
 11421                           	psect	idloc
 11422                           
 11423                           ;Config register IDLOC0 @ 0x2000
 11424                           ;	unspecified, using default values
 11425     2000                     	org	8192
 11426     2000  3FFF               	dw	16383
 11427                           
 11428                           ;Config register IDLOC1 @ 0x2001
 11429                           ;	unspecified, using default values
 11430     2001                     	org	8193
 11431     2001  3FFF               	dw	16383
 11432                           
 11433                           ;Config register IDLOC2 @ 0x2002
 11434                           ;	unspecified, using default values
 11435     2002                     	org	8194
 11436     2002  3FFF               	dw	16383
 11437                           
 11438                           ;Config register IDLOC3 @ 0x2003
 11439                           ;	unspecified, using default values
 11440     2003                     	org	8195
 11441     2003  3FFF               	dw	16383
 11442                           
 11443                           	psect	config
 11444                           
 11445                           ;Config register CONFIG1 @ 0x2007
 11446                           ;	Oscillator Selection bits
 11447                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
 11448                           ;	Watchdog Timer Enable bit
 11449                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11450                           ;	Power-up Timer Enable bit
 11451                           ;	PWRTE = OFF, PWRT disabled
 11452                           ;	RE3/MCLR pin function select bit
 11453                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11454                           ;	Code Protection bit
 11455                           ;	CP = OFF, Program memory code protection is disabled
 11456                           ;	Data Code Protection bit
 11457                           ;	CPD = OFF, Data memory code protection is disabled
 11458                           ;	Brown Out Reset Selection bits
 11459                           ;	BOREN = OFF, BOR disabled
 11460                           ;	Internal External Switchover bit
 11461                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11462                           ;	Fail-Safe Clock Monitor Enabled bit
 11463                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11464                           ;	Low Voltage Programming Enable bit
 11465                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11466                           ;	In-Circuit Debugger Mode bit
 11467                           ;	DEBUG = 0x1, unprogrammed default
 11468     2007                     	org	8199
 11469     2007  20D6               	dw	8406
 11470                           
 11471                           ;Config register CONFIG2 @ 0x2008
 11472                           ;	Brown-out Reset Selection bit
 11473                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11474                           ;	Flash Program Memory Self Write Enable bits
 11475                           ;	WRT = OFF, Write protection off
 11476     2008                     	org	8200
 11477     2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     79      79
    BANK1            80     40      40
    BANK3            96     55      55
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> main@display(BANK3[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 50
		 -> main@display(BANK3[50]), STR_2(CODE[2]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _sprintf->___llmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    _adc_RO->_adc_read
    ___flmul->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _Isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _adc_volt->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                59    59      0   39567
                                             38 BANK1      2     2      0
                                              0 BANK3     55    55      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _adc_RO
                        _adc_channel
                          _adc_setup
                           _adc_volt
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31410
                                             74 BANK0      5     0      5
                                              8 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              2 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             53 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_volt                                            13     9      4    6404
                                             60 BANK0     13     9      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                             _adc_RO
 ---------------------------------------------------------------------------------
 (2) _adc_RO                                               2     2      0      44
                                              4 COMMON     2     2      0
                         _adc_output
                           _adc_read
 ---------------------------------------------------------------------------------
 (3) _adc_read                                             2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _adc_output                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             34 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_setup                                            2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_channel                                          2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     496
                                              7 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     608
                                              6 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _adc_RO
     _adc_output
     _adc_read
   _adc_channel
   _adc_setup
   _adc_volt
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
     _adc_RO
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     28      28       7       50.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     37      37       9       57.3%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 18 00:09:47 2023

            ___fldiv@aexp 005B              ___fldiv@bexp 005A                         pc 0002  
            ___fldiv@sign 0053                        l71 1B0A                        l80 081A  
                      l72 1B0D                        l81 0821                        l73 1B27  
                      l90 0860                        l82 0828                        l91 0867  
                      l83 082F                        l84 0836                        l85 083D  
                      l93 089F                        l77 080C                        l86 0844  
                      l87 084B                        l79 0813                        l88 0852  
                      l96 1A76                        l89 0859              ___awdiv@sign 0025  
                      fsr 0004       ___wmul@multiplicand 0074       __Umul8_16@word_mpld 0078  
                     l100 1A5B                       l103 1A88                       l130 1ACE  
                     l106 1112                       l131 1ACF                       l132 1AD5  
                     l140 1A68                       l134 1AD6                       l126 1ABE  
                     l127 1AC1                       l128 1AC7                       l152 1B5C  
                     l129 1AC8                       l137 1AB4                       l146 1BDC  
                     l149 1E12                       l333 0614                       l325 04B3  
                     l158 1C22                       l318 0475                       l343 07E6  
                     l345 07FE                       l513 0957                       l273 0FFF  
                     l530 1CA3                       l514 08BE                       l266 15A7  
                     l531 1CB8                       l339 065B                       l524 094A  
                     l292 0091                       l701 1795                       l517 091A  
                     l509 1DB5                       l534 1F7A                       l542 080A  
                     l712 17F5                       l704 17D3                       l560 11C9  
                     l529 1C87                       l537 1FE6                       l713 17FF  
                     l553 1F46                       l561 113D                       l810 0744  
                     l538 1FFF                       l546 1F5B                       l379 1E7A  
                     l571 11BC                       l812 07D9                       l716 1D08  
                     l556 1F5B                       l564 118C                       l750 1392  
                     l742 1312                       l726 1220                       l670 1603  
                     l830 1A9A                       l823 07A3                       l728 139C  
                     l824 07AF                       l816 0787                       l496 1EE3  
                     l649 1C68                       l674 1686                       l691 174F  
                     l683 17FF                       l659 1B96                       l748 1384  
                     l772 0C0C                       l676 165F                       l766 0C9C  
                     l695 1773                       l599 1D5C                       l785 1AEB  
                     l778 0C90                       l787 1AFD                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       _Isr 1A4C                       fsr0 0004  
                     indf 0000              ___awmod@sign 0078              ___flmul@aexp 003A  
            ___flmul@bexp 003B              ___flmul@sign 0035              ___flmul@temp 0040  
            ___flmul@prod 003C                      ?_Isr 0070              ___fltol@exp1 005E  
             main@display 0190                      l3010 08C7                      l3002 08B4  
                    l3100 1F72                      l3020 08FC                      l3012 08D8  
                    l3110 1FC2                      l3102 1F8E                      l3022 090A  
                    l3014 08DA                      l3200 11E2                      l3112 1FFC  
                    l3104 1F96                      l3120 0808                      l3024 090B  
                    l3016 08E1                      l3008 08BF                      l2400 1EC1  
                    l3210 11FA                      l3202 11EA                      l3114 1FFE  
                    l3106 1F9A                      l3122 080A                      l3050 07DC  
                    l3042 093F                      l3034 0926                      l3026 0914  
                    l3018 08EA                      l2410 1EDA                      l2402 1EC7  
                    l3300 131C                      l3220 120D                      l3212 11FE  
                    l3204 11EB                      l2340 1AE1                      l3108 1FBE  
                    l3140 1F16                      l3132 1EF8                      l3052 07E0  
                    l3044 094F                      l3028 091E                      l3036 0938  
                    l2412 1EDF                      l2404 1EC8                      l2420 1D62  
                    l3310 135A                      l3302 132A                      l3230 1234  
                    l3222 1215                      l3214 1202                      l3206 11ED  
                    l2342 1AE5                      l2350 1A6A                      l3118 0800  
                    l2510 15B6                      l2502 15A8                      l3142 1F1A  
                    l3150 1F34                      l3134 1F0B                      l3126 1EE4  
                    l3070 1E39                      l3062 1E13                      l3054 07ED  
                    l2406 1ECF                      l2430 1D78                      l2422 1D67  
                    l3400 1DB6                      l3320 1388                      l3312 1368  
                    l3304 132E                      l3232 1238                      l3224 1216  
                    l3216 1203                      l3208 11F5                      l2344 1AF4  
                    l2336 1AD8                      l2352 1A75                      l2600 168A  
                    l2512 15BB                      l2520 15CB                      l2504 15AD  
                    l3160 1F50                      l3136 1F0C                      l3128 1EEF  
                    l3080 1E6C                      l3072 1E42                      l3064 1E25  
                    l3056 07F4                      l3048 07DA                      l2408 1ED5  
                    l2440 1D94                      l2432 1D7B                      l2424 1D69  
                    l2416 1D5D                      l2370 1AD3                      l2362 1AB6  
                    l3410 1A5C                      l3402 1DBC                      l3322 138C  
                    l3314 1377                      l3306 1347                      l3250 1279  
                    l3242 124F                      l3218 1208                      l3226 1218  
                    l2346 1AF9                      l2338 1ADA                      l3330 0723  
                    l2354 1A53                      l3090 1C9B                      l2610 16B3  
                    l2602 168F                      l2530 15E1                      l2522 15D3  
                    l2514 15C0                      l2506 15B1                      l3138 1F14  
                    l3074 1E54                      l3066 1E28                      l3082 1E72  
                    l3170 1D25                      l3162 1D09                      l3058 07FA  
                    l2450 1DB1                      l2442 1D9A                      l2434 1D82  
                    l2426 1D6D                      l2418 1D5E                      l2364 1ABA  
                    l3404 1DC5                      l3420 1BB3                      l3412 1B98  
                    l3324 138E                      l3316 137B                      l3308 134D  
                    l3260 1297                      l3252 127B                      l3244 1261  
                    l3228 1228                      l3236 1241                      l2700 0961  
                    l3332 0728                      l2356 1A59                      l3092 1CB5  
                    l2620 16C5                      l2612 16B7                      l2540 15F8  
                    l2532 15E5                      l2524 15D6                      l2516 15C8  
                    l2508 15B5                      l3156 1F3B                      l3148 1F22  
                    l3076 1E62                      l3068 1E35                      l3172 1D37  
                    l3164 1D11                      l2460 1C30                      l2380 1E89  
                    l2372 1E7B                      l2444 1DA1                      l2436 1D86  
                    l2428 1D72                      l3500 0111                      l2366 1AC5  
                    l3406 1DD4                      l3430 1BD6                      l3414 1B9D  
                    l3422 1BBA                      l3318 1383                      l3254 1280  
                    l3262 12A0                      l3270 12C5                      l3246 1269  
                    l3238 1246                      l3190 11CF                      l2710 0978  
                    l2702 0965                      l3350 0770                      l3342 0755  
                    l3334 072C                      l2358 1A5A                      l3094 1CB7  
                    l3086 1C69                      l2630 172D                      l2622 16CE  
                    l2614 16BE                      l2606 1698                      l2550 1611  
                    l2542 15F9                      l2534 15E6                      l2526 15DC  
                    l2518 15C9                      l3182 1CB9                      l3158 1F4B  
                    l3078 1E63                      l3174 1D45                      l3166 1D14  
                    l2470 1C56                      l2462 1C37                      l2454 1C23  
                    l2390 1E9E                      l2382 1E8D                      l2374 1E7E  
                    l2438 1D8A                      l2446 1DA7                      l3510 0171  
                    l3502 012A                      l2368 1ACC                      l3408 1DDA  
                    l3424 1BC0                      l3416 1BAA                      l3432 1BDD  
                    l3280 12E2                      l3272 12CB                      l3264 12B2  
                    l3256 1292                      l3248 1271                      l3192 11D3  
                    l2800 0C09                      l2720 098F                      l2712 097A  
                    l2704 0966                      l3360 07A7                      l3352 077E  
                    l3344 0758                      l3336 073C                      l3440 10B5  
                    l3088 1C7F                      l2632 1732                      l2616 16C0  
                    l2608 16AF                      l2624 16D3                      l2560 161B  
                    l2552 1613                      l2536 15EB                      l2544 15FB  
                    l2528 15DD                      l3184 1CBD                      l3176 1D4E  
                    l3168 1D21                      l2472 1C57                      l2464 1C3B  
                    l2456 1C27                      l2480 1B5D                      l2392 1EA1  
                    l2384 1E92                      l2376 1E82                      l2448 1DAC  
                    l3600 04C6                      l3520 01FE                      l3512 0175  
                    l3504 0135                      l3426 1BCD                      l3418 1BAD  
                    l3434 1BE2                      l3290 12F7                      l3282 12E3  
                    l3274 12D3                      l3266 12B3                      l3258 1296  
                    l3194 11D7                      l2810 0C28                      l2730 09A4  
                    l2722 0990                      l2714 0982                      l2706 096B  
                    l3370 07D1                      l3362 07B1                      l3354 078E  
                    l3346 0765                      l3338 074C                      l3442 10C3  
                    l3098 1F5C                      l2650 177A                      l2642 1765  
                    l2626 16E9                      l2634 1741                      l2618 16C4  
                    l2570 1625                      l2562 161D                      l2554 1615  
                    l2546 1609                      l2538 15F0                      l3178 1D54  
                    l2474 1C5E                      l2466 1C3F                      l2458 1C2D  
                    l2490 1B75                      l2482 1B63                      l2394 1EA8  
                    l2386 1E96                      l2378 1E87                      l3610 059D  
                    l3602 04CA                      l3530 0280                      l3522 0207  
                    l3514 017B                      l3506 013B                      l3450 0019  
                    l3428 1BD0                      l3436 1BFE                      l3380 1B14  
                    l3292 12FB                      l3284 12EC                      l3276 12D5  
                    l3268 12C1                      l3196 11D8                      l3188 11CA  
                    l2820 0C6E                      l2812 0C41                      l2804 0C11  
                    l2740 09BF                      l2732 09AC                      l2724 0995  
                    l2716 0987                      l2708 0970                      l3364 07C7  
                    l3356 0799                      l3348 076C                      l3444 110A  
                    l2660 1788                      l2652 177C                      l2644 176E  
                    l2636 1757                      l2628 1727                      l2572 1627  
                    l2564 161F                      l2556 1617                      l2548 160D  
                    l2580 162F                      l2468 1C50                      l2476 1C64  
                    l2492 1B7F                      l2484 1B66                      l2396 1EAC  
                    l2388 1E98                      l3620 05F3                      l3612 05A7  
                    l3604 04E8                      l3540 02FB                      l3532 028F  
                    l3524 0222                      l3516 019A                      l3508 014E  
                    l3460 0039                      l3452 001F                      l3438 1C06  
                    l3390 080B                      l3382 1B1A                      l3374 1AFF  
                    l3294 130F                      l3278 12DE                      l3286 12F2  
                    l3198 11DD                      l2830 0C8B                      l2822 0C78  
                    l2806 0C16                      l2814 0C47                      l2750 0A3B  
                    l2742 09CD                      l2734 09B1                      l2726 099A  
                    l2718 098B                      l3366 07CC                      l3358 079D  
                    l2670 179F                      l2662 178C                      l2654 1781  
                    l2646 1772                      l2638 175C                      l2590 166C  
                    l2582 1630                      l2574 1629                      l2566 1621  
                    l2558 1619                      l2494 1B85                      l2486 1B6D  
                    l2398 1EB0                      l2910 0E26                      l3630 061F  
                    l3622 05F9                      l3606 0543                      l3614 05E2  
                    l3550 0349                      l3542 0304                      l3534 02AA  
                    l3518 01E5                      l3526 022A                      l3470 0073  
                    l3462 003C                      l3454 0024                      l3384 1B1C  
                    l3376 1B04                      l3288 12F6                      l2832 0C94  
                    l2824 0C7A                      l2816 0C54                      l2808 0C24  
                    l2760 0AA7                      l2752 0A57                      l2744 09DA  
                    l2736 09B6                      l2728 09A2                      l3368 07D0  
                    l2840 1A83                      l2680 17DD                      l2672 17AD  
                    l2664 1792                      l2648 1777                      l2656 1783  
                    l2592 1670                      l2584 1647                      l2576 162B  
                    l2568 1623                      l2496 1B8C                      l2488 1B71  
                    l2904 0D97                      l3632 0620                      l3616 05EA  
                    l3608 057E                      l3544 030C                      l3536 02D1  
                    l3552 0352                      l3528 0239                      l3624 0600  
                    l3480 0093                      l3472 0079                      l3464 0042  
                    l3456 0029                      l3448 0016                      l2850 1AA8  
                    l3394 086E                      l3386 1B20                      l3378 1B10  
                    l3298 1317                      l2826 0C86                      l2818 0C5F  
                    l2770 0B31                      l2762 0AB5                      l2754 0A73  
                    l2746 09F5                      l2690 17F1                      l2682 17E5  
                    l2674 17B1                      l2658 1787                      l2594 1671  
                    l2586 1663                      l2578 162D                      l2498 1B92  
                    l2922 0F44                      l2906 0D9E                      l2914 0E53  
                    l3634 062F                      l3626 0606                      l3618 05EF  
                    l3570 03FB                      l3554 0387                      l3546 032A  
                    l3538 02E0                      l3490 00D3                      l3482 00B1  
                    l3466 0047                      l3474 008B                      l3458 002B  
                    l3642 0643                      l2852 1AB1                      l2844 1A9C  
                    l2860 1B40                      l3388 1B23                      l2828 0C8A  
                    l2780 0BC1                      l2772 0B3F                      l2764 0AD2  
                    l2756 0A7C                      l2748 0A11                      l2836 1A78  
                    l2692 17FA                      l2684 17EA                      l2676 17CF  
                    l2668 179A                      l2596 167A                      l2588 166A  
                    l2940 1A99                      l2932 1A8A                      l2924 0F4B  
                    l2916 0E5A                      l3636 062F                      l3628 060E  
                    l3580 046B                      l3572 0407                      l3564 03BA  
                    l3556 03B6                      l3492 00D7                      l3484 00BD  
                    l3644 0657                      l3476 008F                      l3468 005C  
                    l3660 0676                      l2846 1A9F                      l2870 1B54  
                    l2862 1B43                      l2854 1B29                      l3750 0873  
                    l2790 0BE6                      l2782 0BCF                      l2774 0B6A  
                    l2766 0AE9                      l2758 0A8A                      l2838 1A7E  
                    l2694 17FE                      l2686 17EB                      l2678 17D8  
                    l2598 167E                      l2950 112D                      l2934 1A8B  
                    l3638 063D                      l3590 049B                      l3582 047D  
                    l3574 040C                      l3558 03B8                      l3494 00F0  
                    l3486 00C1                      l3670 0694                      l3662 0679  
                    l3654 065C                      l2848 1AA5                      l2872 1B59  
                    l2864 1B48                      l2856 1B2F                      l2784 0BD8  
                    l2792 0BEC                      l2776 0B90                      l2768 0B06  
                    l2696 0958                      l2688 17EF                      l2960 1153  
                    l2944 1113                      l2936 1A91                      l2928 0FD3  
                    l3592 04AA                      l3584 0484                      l3576 0411  
                    l3568 03F1                      l3496 0109                      l3488 00C5  
                    l3680 06C2                      l3672 069C                      l3664 067E  
                    l3656 0668                      l2866 1B4B                      l2858 1B32  
                    l2794 0BF0                      l2786 0BDC                      l2778 0BB8  
                    l2698 095D                      l2970 117D                      l2962 1155  
                    l2946 1124                      l2882 14B3                      l2874 13A0  
                    l2938 1A97                      l3594 04AF                      l3586 0488  
                    l3578 044C                      l3498 010D                      l3682 06E2  
                    l3674 06A5                      l3666 0683                      l3658 066E  
                    l2868 1B51                      l2796 0BF1                      l2788 0BDD  
                    l2972 117E                      l2964 115C                      l2956 113E  
                    l2884 14B9                      l2876 13A6                      l2892 0CA0  
                    l3596 04BC                      l3588 048E                      l3748 00A9  
                    l3684 0704                      l3676 06AF                      l3668 068B  
                    l2798 0BF5                      l2990 11B1                      l2982 1198  
                    l2974 1186                      l2966 1165                      l2958 1144  
                    l2894 0CA4                      l3598 04C1                      l3686 070C  
                    l3678 06B7                      l2992 11C1                      l2976 1190  
                    l2984 11AA                      l2968 1173                      l2888 1564  
                    l2896 0CA6                      l3688 0713                      l2898 0CAD  
                    l2996 08A0                      l2998 08AB                      STR_1 10A0  
                    STR_2 10AE                      STR_3 10A9                      u3020 1AE5  
                    u3100 1E82                      u3021 1AE4                      u3101 1E81  
                    u3110 1E8D                      u3111 1E8C                      u3040 1AF9  
                    u3120 1E9E                      u3200 1D62                      u3041 1AF8  
                    u3121 1E9D                      u3201 1D61                      u3050 1A59  
                    u3210 1D6D                      u3035 1AEC                      u4011 0A99  
                    u3051 1A58                      u3211 1D6C                      u3060 1ABA  
                    u4012 0AA0                      u3140 1EB0                      u3220 1D78  
                    u3061 1AB9                      u4101 0BAA                      u4021 0AC4  
                    u4013 0AA7                      u4005 0A75                      u3141 1EAF  
                    u3221 1D77                      u3070 1AC5                      u4102 0BB1  
                    u4022 0ACB                      u3310 1C3F                      u3071 1AC4  
                    u4103 0BB8                      u4023 0AD2                      u3311 1C3E  
                    u3135 1EA2                      u3080 1ACC                      u4200 0C28  
                    u5000 0808                      u3160 1EC1                      u3240 1D8A  
                    u3081 1ACB                      u4201 0C27                      u4041 0AF8  
                    u5001 0807                      u3305 1C31                      u3161 1EC0  
                    u3241 1D89                      u3090 1AD3                      u4210 0C37  
                    u4130 0BDC                      u4042 0AFF                      u5010 1EEF  
                    u3330 1C50                      u3410 1B92                      u3250 1D94  
                    u3091 1AD2                      u4131 0BDB                      u4115 0BBA  
                    u4051 0B23                      u4043 0B06                      u4035 0AD4  
                    u5011 1EEE                      u3331 1C4F                      u3411 1B91  
                    u3155 1EB1                      u3251 1D93                      u3235 1D7C  
                    u4220 0C54                      u4052 0B2A                      u3500 160D  
                    u3420 15B5                      u5100 1F50                      u5020 1F06  
                    u4300 14B9                      u3180 1ED5                      u4221 0C53  
                    u4125 0BD1                      u4061 0B4E                      u4053 0B31  
                    u3501 160C                      u3421 15B4                      u5101 1F4F  
                    u3325 1C40                      u3405 1B86                      u4301 14B8  
                    u3181 1ED4                      u3165 1EBD                      u4230 0C6E  
                    u4150 0BF0                      u4070 0B76                      u4062 0B55  
                    u3510 1647                      u3430 15BB                      u5030 1F1A  
                    u5110 1D11                      u3350 1C64                      u3190 1EDA  
                    u3270 1DA7                      u4231 0C6D                      u4215 0C32  
                    u4151 0BEF                      u4063 0B5C                      u3511 1646  
                    u3431 15BA                      u5031 1F19                      u5111 1D10  
                    u3351 1C63                      u3335 1C4C                      u3191 1ED9  
                    u3175 1EC9                      u3271 1DA6                      u3255 1D90  
                    u5200 1202                      u4240 0C8A                      u4160 0BF5  
                    u3520 1652                      u3440 15C0                      u5040 1F21  
                    u3360 1B63                      u3280 1DAC                      u6000 062F  
                    u5201 1201                      u4241 0C89                      u4225 0C50  
                    u4161 0BF4                      u4145 0BDF                      u4081 0B82  
                    u3601 16A1                      u3521 1650                      u3441 15BF  
                    u5041 1F20                      u5025 1F01                      u3345 1C58  
                    u3361 1B62                      u3281 1DAB                      u3265 1D9B  
                    u6001 062E                      u5210 1208                      u4170 0C09  
                    u4090 0B9E                      u4082 0B89                      u3610 16B3  
                    u3602 16A8                      u3530 1653                      u3450 15DC  
                    u5130 1D25                      u3290 1C2D                      u6010 063D  
                    u5211 1207                      u4235 0C6A                      u4171 0C08  
                    u4083 0B90                      u4075 0B71                      u3611 16B2  
                    u3603 16AF                      u3515 1643                      u3451 15DB  
                    u5131 1D24                      u3291 1C2C                      u4315 14D6  
                    u6011 063C                      u5300 12B2                      u5220 120D  
                    u4180 0C10                      u3700 175C                      u3620 16B7  
                    u3540 1663                      u3460 15E5                      u5060 1F33  
                    u5140 1D37                      u3380 1B75                      u4260 13A6  
                    u4340 0CA4                      u6020 0657                      u5301 12B1  
                    u5221 120C                      u4181 0C0F                      u3701 175B  
                    u3621 16B6                      u3541 1662                      u3461 15E4  
                    u5061 1F32                      u5141 1D36                      u5125 1D16  
                    u3381 1B74                      u4325 1523                      u4261 13A5  
                    u4405 0DB1                      u4341 0CA3                      u6021 0656  
                    u6005 062B                      u5310 12CB                      u5230 1228  
                    u4190 0C16                      u3630 16C4                      u3550 1670  
                    u3470 15EB                      u5070 1F3A                      u3390 1B7F  
                    u4510 1A91                      u4430 0E5A                      u4350 0CAD  
                    u4255 1B35                      u5311 12CA                      u5231 1227  
                    u4191 0C15                      u4095 0B99                      u3631 16C3  
                    u3551 166F                      u3471 15EA                      u5071 1F39  
                    u5055 1F23                      u3391 1B7E                      u3375 1B67  
                    u4335 156F                      u4511 1A90                      u4431 0E59  
                    u4415 0DED                      u4351 0CAC                      u5400 131C  
                    u5320 12D3                      u5240 1246                      u3800 17B1  
                    u3720 1772                      u3480 15F0                      u5160 1D54  
                    u4600 1197                      u4520 1A97                      u5401 131B  
                    u5321 12D2                      u5305 12AE                      u5241 1245  
                    u3801 17B0                      u3721 1771                      u3481 15EF  
                    u5161 1D53                      u5145 1D33                      u4601 1196  
                    u4521 1A96                      u4505 0FD6                      u4425 0E29  
                    u5410 132E                      u5250 1280                      u5170 11D7  
                    u3810 17C0                      u3730 1777                      u3650 16E9  
                    u3570 1686                      u3490 1609                      u5090 1F4B  
                    u4530 1124                      u6107 1DC0                      u5411 132D  
                    u5251 127F                      u5171 11D6                      u3731 1776  
                    u3715 1767                      u3651 16E8                      u3571 1685  
                    u3491 1608                      u5091 1F4A                      u5155 1D46  
                    u4531 1123                      u3395 1B7B                      u4275 13C3  
                    u5420 133D                      u5340 12E2                      u5180 11DD  
                    u3900 0970                      u5500 076B                      u3820 17CF  
                    u3740 1781                      u3580 168A                      u4620 11A9  
                    u4540 113C                      u6117 1DCF                      u5341 12E1  
                    u5181 11DC                      u3901 096F                      u5501 076A  
                    u3821 17CE                      u3741 1780                      u3661 1700  
                    u3653 16E5                      u3645 16C7                      u3581 1689  
                    u3565 1673                      u5085 1F3D                      u4621 11A8  
                    u4541 113B                      u4285 141D                      u4445 0E7C  
                    u4365 0CCF                      u6037 06AB                      u5430 135A  
                    u5190 11E2                      u3910 098F                      u3830 17D8  
                    u3750 1787                      u3670 1714                      u3662 1701  
                    u3590 168F                      u4710 091A                      u4630 11B0  
                    u4470 0F4B                      u4390 0D9E                      u6127 1DDE  
                    u5431 1359                      u5335 12D7                      u5191 11E1  
                    u3911 098E                      u3831 17D7                      u3815 17BB  
                    u3751 1786                      u3671 1715                      u3663 1706  
                    u3591 168E                      u4711 0919                      u4631 11AF  
                    u4615 1199                      u4295 1472                      u4471 0F4A  
                    u4455 0EB8                      u4391 0D9D                      u4375 0D0B  
                    u6047 0710                      i1l40 1A4C                      u5600 1B04  
                    u5440 1377                      u5360 12F6                      u5280 1296  
                    u3920 0995                      u5520 078D                      u3840 17DD  
                    u3760 178C                      u3680 1732                      u3672 171A  
                    u3664 1707                      u4720 091E                      u4560 1173  
                    u6137 1AAC                      u5601 1B03                      u5441 1376  
                    u5425 1338                      u5361 12F5                      u5281 1295  
                    u5265 1282                      u3921 0994                      u5521 078C  
                    u6057 1A80                      u3841 17DC                      u3761 178B  
                    u3681 1731                      u3673 171B                      u3665 170C  
                    u4721 091D                      u4705 090D                      u4561 1172  
                    u4465 0F03                      u4385 0D56                      u5610 1B9D  
                    u5450 138C                      u5370 12FB                      u3930 099A  
                    u3850 17EA                      u3770 1792                      u3690 1757  
                    u3666 170D                      u4730 0925                      u4650 11C1  
                    u5611 1B9C                      u6067 1B1E                      u5451 138B  
                    u5435 1356                      u5371 12FA                      u5355 12E5  
                    u5275 128B                      u3931 0999                      u5515 077F  
                    u3851 17E9                      u3771 1791                      u3691 1756  
                    u4731 0924                      u4651 11C0                      u4555 115E  
                    u5380 130F                      u3940 09B1                      u5540 079D  
                    u5460 0728                      u4900 1C7F                      u3860 17EF  
                    u3780 1799                      u4820 07FA                      u4660 08AB  
                    u4580 118C                      u5700 008A                      u6077 1B25  
                    u5445 1373                      u5381 130E                      u3941 09B0  
                    u5541 079C                      u5461 0727                      u4901 1C7E  
                    u3861 17EE                      u3781 1798                      u4821 07F9  
                    u4805 07E7                      u4661 08AA                      u4645 11B3  
                    u4581 118B                      u4565 116F                      u4485 0F5E  
                    u5701 0089                      u5630 1BC0                      u5390 1316  
                    u3950 09B6                      u5550 07A3                      u5470 072C  
                    u4910 1C9B                      u3870 17FE                      u3790 179F  
                    u4830 1E25                      u4750 0937                      u4670 08BD  
                    u4590 1190                      u5710 00BD                      u5631 1BBF  
                    u6087 1B45                      u5391 1315                      u5295 1299  
                    u3951 09B5                      u5551 07A2                      u5535 0792  
                    u5471 072B                      u4911 1C9A                      u3871 17FD  
                    u3791 179E                      u4831 1E24                      u4815 07EE  
                    u4751 0936                      u4671 08BC                      u4591 118F  
                    u4575 117F                      u4495 0F9A                      u5711 00BC  
                    u3880 0965                      u5560 07A7                      u5480 074C  
                    u4920 1CB5                      u4760 093E                      u5800 02AA  
                    u5720 00C1                      u5625 1BA3                      u6097 1B56  
                    u3961 0A03                      u3881 0964                      u5561 07A6  
                    u5481 074B                      u4921 1CB4                      u4761 093D  
                    u4745 0927                      u5801 02A9                      u5721 00C0  
                    u5650 1BEC                      u3962 0A0A                      u3890 096B  
                    u5570 07BC                      u4930 1F72                      u4850 1E39  
                    u4690 08FC                      u5810 02D1                      u5730 00F0  
                    u3971 0A1F                      u3963 0A11                      u3891 096A  
                    u4931 1F71                      u4851 1E38                      u4691 08FB  
                    u5811 02D0                      u5731 00EF                      u5660 1C10  
                    u3972 0A26                      u5580 07CC                      u4940 1F8E  
                    u4780 094F                      u5900 049B                      u5820 02E0  
                    u5740 012A                      u5645 1BC6                      u3981 0A49  
                    u3973 0A2D                      u5581 07CB                      u4925 1CB1  
                    u4941 1F8D                      u4845 1E2A                      u4781 094E  
                    u4685 08E3                      u5901 049A                      u5821 02DF  
                    u5741 0129                      u5670 1C22                      u3982 0A50  
                    u5590 07D0                      u4950 1F9A                      u4870 1E54  
                    u4790 07E0                      u5910 04AA                      u5830 02FB  
                    u5750 0175                      u5671 1C21                      u3991 0A65  
                    u3983 0A57                      u5591 07CF                      u5575 07B7  
                    u5495 075D                      u4951 1F99                      u4871 1E53  
                    u4791 07DF                      u4775 0941                      u4695 08F8  
                    u5911 04A9                      u5831 02FA                      u5751 0174  
                    u3992 0A6C                      u5920 04C1                      u5760 01FE  
                    u5680 001F                      u3993 0A73                      u4961 1FA9  
                    u4865 1E3B                      u5921 04C0                      u5905 0497  
                    u5825 02DC                      u5761 01FD                      u5681 001E  
                    u4970 1FC2                      u4962 1FAA                      u4890 1E72  
                    u5850 03F0                      u5770 0222                      u5690 0039  
                    u4971 1FC1                      u4963 1FAF                      u4891 1E71  
                    u4875 1E50                      u5915 04A6                      u5851 03EF  
                    u5771 0221                      u5691 0038                      u4964 1FB0  
                    u5860 03FB                      u5780 0239                      u4981 1FD1  
                    u4965 1FB5                      u4885 1E64                      u5861 03FA  
                    u5845 03BD                      u5781 0238                      u4990 1FFC  
                    u4982 1FD2                      u4966 1FB6                      u5950 05E9  
                    u5870 0407                      u5790 028F                      u4991 1FFB  
                    u4983 1FD7                      u5951 05E8                      u5935 0546  
                    u5871 0406                      u5855 03EC                      u5791 028E  
                    u4984 1FD8                      u5960 05FF                      u4985 1FDD  
                    u5961 05FE                      u5945 05AA                      u5785 0235  
                    u4986 1FDE                      u5970 0606                      u5890 047C  
                    u4995 1FF8                      u5971 0605                      u5891 047B  
                    u5795 028B                      u5980 060E                      u5981 060D  
                    u5885 0414                      u5990 061F                      u5991 061E  
                    u5995 061B         ?_Lcd_Write_String 0077                      _main 065C  
                    btemp 007E                      start 000C        ??_Lcd_Write_String 0079  
         ___fldiv@new_exp 0054              _sprintf$1154 00AD           __end_of_Lcd_Cmd 1AB5  
                   ??_Isr 0070             ___fltol@sign1 005D           __end_of___fladd 1800  
                   ?_main 0070           __end_of___fldiv 139D           __end_of___awdiv 1EE4  
         __end_of___flneg 080B           __end_of___awmod 1DB6           __end_of___flmul 0C9D  
         __end_of___flsub 1D09           __end_of___fltol 1F5C                     _ANSEL 0188  
         __end_of___lldiv 1E7B           ___awdiv@divisor 0020           __end_of___llmod 1D5D  
         __end_of___lwdiv 1C69           __end_of___lwmod 1B97           ___awdiv@counter 0024  
                   _PORTA 0005                     _PORTC 0007                     _TRISC 0087  
                   _TRISD 0088           adc_volt@channel 0068           __end_of_dpowers 10A0  
                   _scale 0C9D           __end_of_isdigit 1A9B                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 065C  
        __end_of_Lcd_Init 1E13          __end_of_Lcd_Port 1AD7           __initialization 000F  
            __end_of_main 0720                    ??_main 00C6          ___llmod@dividend 0076  
                  ?_scale 0042                    _ADRESH 001E          ___awdiv@dividend 0022  
                  _ANSELH 0189          __end_of_adc_read 1A77          __end_of_adc_volt 1113  
               ??_Lcd_Cmd 0073          __end_of___xxtofl 07DA          __end_of__powers_ 1044  
                  ___flge 1F5C                    _adc_RO 1A77                    ___fleq 1C69  
               ??___fladd 005E                    ___wmul 07DA                 ??___fldiv 004A  
               ??___awdiv 0079                 ??___flneg 0076                 ??___awmod 0076  
               ??___flmul 0030                 ??___flsub 007C                 ??___fltol 0059  
               ??___lldiv 007A                 ??___llmod 007A                 ??___lwdiv 0020  
               ??___lwmod 0076                    _fround 139D          ___awdiv@quotient 0026  
         ___awmod@divisor 0072           ___awmod@counter 0077                    main@ch 01C6  
               ??_isdigit 0072                    saved_w 007E                 ??_sprintf 00A8  
         Lcd_Set_Cursor@a 0078           Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 007A  
         Lcd_Set_Cursor@z 0079             adc_RO@channel 0075                ___flge@ff1 0072  
              ___flge@ff2 0076              ___xxtofl@arg 0022              ___xxtofl@exp 0021  
            ___xxtofl@val 0072                ___fleq@ff1 0072                ___fleq@ff2 0076  
 __end_of__initialization 000F                ___flneg@f1 0072         __end_of_Lcd_Clear 1A69  
              ___fltol@f1 0055            __pcstackCOMMON 0070             __end_of_scale 1000  
              _adc_output 1A53            _Lcd_Set_Cursor 1B97                __div_to_l_ 08A0  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070           __div_to_l_@exp1 0025  
         __div_to_l_@cntr 0024                   ??_scale 0046           __div_to_l_@quot 0020  
           __div_to_l_@f1 0072             __div_to_l_@f2 0076         __end_of__Umul8_16 1AFE  
              __pmaintext 065C             ??_adc_channel 0074                   ?___flge 0072  
                 ?_adc_RO 0070                   ?___fleq 0072                   ?___wmul 0072  
              __pintentry 0004                   ?_fround 0042    __end_of_Lcd_Set_Cursor 1BDD  
               ?_adc_read 0070                 ?_adc_volt 005C         __end_of_adc_setup 1B28  
               ?___xxtofl 0072                ??_Lcd_Init 0076                ??_Lcd_Port 0072  
              __stringtab 1000            _Lcd_Write_Char 1B28                   _Lcd_Cmd 1A9B  
       __end_of__npowers_ 1078                _scale$1153 0050                   ___fladd 15A8  
                 ___fldiv 11CA                   ___awdiv 1E7B                   ___flneg 0800  
                 ___awmod 1D5D                   ___flmul 0958                   ___flsub 1CB9  
                 ___fltol 1EE4                   ___lldiv 1E13                   ___llmod 1D09  
                 ___lwdiv 1C23                   ___lwmod 1B5D               ?_adc_output 0070  
               _ANSELbits 0188           ?_Lcd_Set_Cursor 0076                ??_adc_read 0072  
                 __ptext1 0013                   __ptext2 0C9D                   __ptext3 1D5D  
                 __ptext4 1E7B                   __ptext5 1A89                   __ptext6 139D  
                 __ptext7 1B5D                   __ptext8 1C23                   __ptext9 1113  
              ??_adc_volt 0060       __end_of_adc_channel 08A0               ?__div_to_l_ 0072  
                 _dpowers 1078                   _isdigit 1A89                ??___xxtofl 0076  
        ___awmod@dividend 0074                   _sprintf 0013                   main@out 01C2  
  __end_of_Lcd_Write_Char 1B5D      end_of_initialization 000F        adc_channel@channel 0072  
         ___lldiv@divisor 0072           ___lldiv@counter 0024                 Lcd_Port@a 0072  
          __tdiv_to_l_@f1 0072            __tdiv_to_l_@f2 0076             ??__tdiv_to_l_ 0020  
          adc_setup@inter 0073                 _PORTDbits 0008               ___fladd@grs 0069  
           ___xxtofl@sign 0020                 _TRISAbits 0085                 _TRISBbits 0086  
               _TRISEbits 0089               ___fldiv@grs 0056               ___fldiv@rem 004F  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0077         Lcd_Write_String@i 0020  
             ___flmul@grs 0036                 _Lcd_Clear 1A5C               _adc_channel 080B  
          __end_of___flge 2000            __end_of_adc_RO 1A89            __end_of___fleq 1CB9  
          __end_of___wmul 07FF          _Lcd_Write_String 1BDD            __end_of_fround 15A8  
     start_initialization 000F               __end_of_Isr 1A53       __end_of__tdiv_to_l_ 11CA  
         ___llmod@divisor 0072           ___llmod@counter 007B                ?_Lcd_Clear 0070  
                ??___flge 0020                  ??_adc_RO 0074                  ??___fleq 0020  
                ??___wmul 0076                 __Umul8_16 1AD7           Lcd_Write_Char@a 0076  
         Lcd_Write_Char@y 0075                  ??_fround 0046             sprintf@tmpval 00BA  
               ___fladd@a 005A                 ___fladd@b 0056                fround@prec 0055  
               ___fldiv@a 0042                 ___fldiv@b 0046                 ___flmul@a 002C  
               ___flmul@b 0028           adc_read@channel 0073                 ___flsub@a 00A0  
               ___flsub@b 00A4                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0             __pcstackBANK3 0190                 _adc_setup 1AFE  
                ?_Lcd_Cmd 0070               sprintf@flag 00B2               sprintf@eexp 00B8  
             sprintf@fval 00C1               sprintf@prec 00BF          ___lwdiv@dividend 007A  
        ??_Lcd_Set_Cursor 0077                  ?___fladd 0056                  ?___fldiv 0042  
                ?___awdiv 0020                  ?___flneg 0072                  ?___awmod 0072  
                ?___flmul 0028                  ?___flsub 00A0                  ?___fltol 0055  
                ?___lldiv 0072                  ?___llmod 0072                 __npowers_ 1044  
              ?__Umul8_16 0072                  ?___lwdiv 0078                  ?___lwmod 0072  
            ??_adc_output 0072                 __pstrings 1000               __tdiv_to_l_ 1113  
            ??__div_to_l_ 007A                  ?_isdigit 0070               adc_volt@out 0066  
        ___lwdiv@quotient 0021                ?_adc_setup 0070                  ?_sprintf 006A  
       interrupt_function 0004            ___wmul@product 0076        __end_of_adc_output 1A5C  
                _PIE1bits 008C                  Lcd_Cmd@a 0075                  _PIR1bits 000C  
      __end_of__div_to_l_ 0958               ??_Lcd_Clear 0076                _ADCON0bits 001F  
             __stringbase 100F                _ADCON1bits 009F         ___wmul@multiplier 0072  
        ??_Lcd_Write_Char 0073                  _Lcd_Init 1DB6                  _Lcd_Port 1AB5  
           adc_volt@final 0062  __end_of_Lcd_Write_String 1C23              ?_adc_channel 0072  
             ??__Umul8_16 0074               _fround$1151 0051               _fround$1152 004D  
      __end_of__stringtab 1010                  _adc_read 1A69               _isdigit$963 0072  
                _adc_volt 10B2                _ANSELHbits 0189                sprintf@val 00B4  
                ___xxtofl 0720           ___lwdiv@divisor 0078           ___lwdiv@counter 0023  
                __ptext10 08A0                  __ptext11 07DA                  __ptext20 10B2  
                __ptext12 1D09                  __ptext21 1A77                  __ptext13 1E13  
                __ptext30 1BDD                  __ptext22 1A69                  __ptext14 1EE4  
                __ptext31 1B28                  __ptext23 1A53                  __ptext15 1CB9  
                __ptext32 1B97                  __ptext24 0720                  __ptext16 15A8  
                __ptext33 1DB6                  __ptext25 0958                  __ptext17 0800  
                __ptext34 1A5C                  __ptext26 1AD7                  __ptext18 1F5C  
                __ptext35 1A9B                  __ptext27 11CA                  __ptext19 1C69  
                __ptext36 1AB5                  __ptext28 1AFE                  __ptext37 1A4C  
                __ptext29 080B               ??_adc_setup 0072                  __powers_ 1010  
              _INTCONbits 000B                  isdigit@c 0073                  scale@scl 0054  
      Lcd_Write_Char@temp 0074                  intlevel1 0000                 sprintf@ap 00B1  
        __tdiv_to_l_@exp1 0028          __tdiv_to_l_@cntr 0027                 sprintf@sp 00BE  
        __tdiv_to_l_@quot 0023          ___lwmod@dividend 0074          ___lldiv@dividend 0076  
               stringcode 100A        Lcd_Set_Cursor@temp 007B              ?__tdiv_to_l_ 0072  
  __Umul8_16@multiplicand 0072                  sprintf@c 00C5                  sprintf@f 006A  
        ___lldiv@quotient 0020           ___lwmod@divisor 0072           ___lwmod@counter 0077  
                stringdir 100A                  stringtab 1000             ___fladd@signs 0066  
            ___fladd@aexp 0067              ___fladd@bexp 0068      __Umul8_16@multiplier 007A  
       __Umul8_16@product 0076  
