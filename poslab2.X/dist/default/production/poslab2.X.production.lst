

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Feb 21 01:46:16 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47     0000                     
    48                           ; Version 2.40
    49                           ; Generated 17/11/2021 GMT
    50                           ; 
    51                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     0007                     	;# 
    91     0008                     	;# 
    92     0009                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000D                     	;# 
    97     000E                     	;# 
    98     000E                     	;# 
    99     000F                     	;# 
   100     0010                     	;# 
   101     0011                     	;# 
   102     0012                     	;# 
   103     0013                     	;# 
   104     0014                     	;# 
   105     0015                     	;# 
   106     0015                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001B                     	;# 
   114     001C                     	;# 
   115     001D                     	;# 
   116     001E                     	;# 
   117     001F                     	;# 
   118     0081                     	;# 
   119     0085                     	;# 
   120     0086                     	;# 
   121     0087                     	;# 
   122     0088                     	;# 
   123     0089                     	;# 
   124     008C                     	;# 
   125     008D                     	;# 
   126     008E                     	;# 
   127     008F                     	;# 
   128     0090                     	;# 
   129     0091                     	;# 
   130     0092                     	;# 
   131     0093                     	;# 
   132     0093                     	;# 
   133     0093                     	;# 
   134     0094                     	;# 
   135     0095                     	;# 
   136     0096                     	;# 
   137     0097                     	;# 
   138     0098                     	;# 
   139     0099                     	;# 
   140     009A                     	;# 
   141     009B                     	;# 
   142     009C                     	;# 
   143     009D                     	;# 
   144     009E                     	;# 
   145     009F                     	;# 
   146     0105                     	;# 
   147     0107                     	;# 
   148     0108                     	;# 
   149     0109                     	;# 
   150     010C                     	;# 
   151     010C                     	;# 
   152     010D                     	;# 
   153     010E                     	;# 
   154     010F                     	;# 
   155     0185                     	;# 
   156     0187                     	;# 
   157     0188                     	;# 
   158     0189                     	;# 
   159     018C                     	;# 
   160     018D                     	;# 
   161     0000                     	;# 
   162     0001                     	;# 
   163     0002                     	;# 
   164     0003                     	;# 
   165     0004                     	;# 
   166     0005                     	;# 
   167     0006                     	;# 
   168     0007                     	;# 
   169     0008                     	;# 
   170     0009                     	;# 
   171     000A                     	;# 
   172     000B                     	;# 
   173     000C                     	;# 
   174     000D                     	;# 
   175     000E                     	;# 
   176     000E                     	;# 
   177     000F                     	;# 
   178     0010                     	;# 
   179     0011                     	;# 
   180     0012                     	;# 
   181     0013                     	;# 
   182     0014                     	;# 
   183     0015                     	;# 
   184     0015                     	;# 
   185     0016                     	;# 
   186     0017                     	;# 
   187     0018                     	;# 
   188     0019                     	;# 
   189     001A                     	;# 
   190     001B                     	;# 
   191     001B                     	;# 
   192     001C                     	;# 
   193     001D                     	;# 
   194     001E                     	;# 
   195     001F                     	;# 
   196     0081                     	;# 
   197     0085                     	;# 
   198     0086                     	;# 
   199     0087                     	;# 
   200     0088                     	;# 
   201     0089                     	;# 
   202     008C                     	;# 
   203     008D                     	;# 
   204     008E                     	;# 
   205     008F                     	;# 
   206     0090                     	;# 
   207     0091                     	;# 
   208     0092                     	;# 
   209     0093                     	;# 
   210     0093                     	;# 
   211     0093                     	;# 
   212     0094                     	;# 
   213     0095                     	;# 
   214     0096                     	;# 
   215     0097                     	;# 
   216     0098                     	;# 
   217     0099                     	;# 
   218     009A                     	;# 
   219     009B                     	;# 
   220     009C                     	;# 
   221     009D                     	;# 
   222     009E                     	;# 
   223     009F                     	;# 
   224     0105                     	;# 
   225     0107                     	;# 
   226     0108                     	;# 
   227     0109                     	;# 
   228     010C                     	;# 
   229     010C                     	;# 
   230     010D                     	;# 
   231     010E                     	;# 
   232     010F                     	;# 
   233     0185                     	;# 
   234     0187                     	;# 
   235     0188                     	;# 
   236     0189                     	;# 
   237     018C                     	;# 
   238     018D                     	;# 
   239     0000                     	;# 
   240     0001                     	;# 
   241     0002                     	;# 
   242     0003                     	;# 
   243     0004                     	;# 
   244     0005                     	;# 
   245     0006                     	;# 
   246     0007                     	;# 
   247     0008                     	;# 
   248     0009                     	;# 
   249     000A                     	;# 
   250     000B                     	;# 
   251     000C                     	;# 
   252     000D                     	;# 
   253     000E                     	;# 
   254     000E                     	;# 
   255     000F                     	;# 
   256     0010                     	;# 
   257     0011                     	;# 
   258     0012                     	;# 
   259     0013                     	;# 
   260     0014                     	;# 
   261     0015                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0017                     	;# 
   265     0018                     	;# 
   266     0019                     	;# 
   267     001A                     	;# 
   268     001B                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001D                     	;# 
   272     001E                     	;# 
   273     001F                     	;# 
   274     0081                     	;# 
   275     0085                     	;# 
   276     0086                     	;# 
   277     0087                     	;# 
   278     0088                     	;# 
   279     0089                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     008F                     	;# 
   284     0090                     	;# 
   285     0091                     	;# 
   286     0092                     	;# 
   287     0093                     	;# 
   288     0093                     	;# 
   289     0093                     	;# 
   290     0094                     	;# 
   291     0095                     	;# 
   292     0096                     	;# 
   293     0097                     	;# 
   294     0098                     	;# 
   295     0099                     	;# 
   296     009A                     	;# 
   297     009B                     	;# 
   298     009C                     	;# 
   299     009D                     	;# 
   300     009E                     	;# 
   301     009F                     	;# 
   302     0105                     	;# 
   303     0107                     	;# 
   304     0108                     	;# 
   305     0109                     	;# 
   306     010C                     	;# 
   307     010C                     	;# 
   308     010D                     	;# 
   309     010E                     	;# 
   310     010F                     	;# 
   311     0185                     	;# 
   312     0187                     	;# 
   313     0188                     	;# 
   314     0189                     	;# 
   315     018C                     	;# 
   316     018D                     	;# 
   317     0000                     	;# 
   318     0001                     	;# 
   319     0002                     	;# 
   320     0003                     	;# 
   321     0004                     	;# 
   322     0005                     	;# 
   323     0006                     	;# 
   324     0007                     	;# 
   325     0008                     	;# 
   326     0009                     	;# 
   327     000A                     	;# 
   328     000B                     	;# 
   329     000C                     	;# 
   330     000D                     	;# 
   331     000E                     	;# 
   332     000E                     	;# 
   333     000F                     	;# 
   334     0010                     	;# 
   335     0011                     	;# 
   336     0012                     	;# 
   337     0013                     	;# 
   338     0014                     	;# 
   339     0015                     	;# 
   340     0015                     	;# 
   341     0016                     	;# 
   342     0017                     	;# 
   343     0018                     	;# 
   344     0019                     	;# 
   345     001A                     	;# 
   346     001B                     	;# 
   347     001B                     	;# 
   348     001C                     	;# 
   349     001D                     	;# 
   350     001E                     	;# 
   351     001F                     	;# 
   352     0081                     	;# 
   353     0085                     	;# 
   354     0086                     	;# 
   355     0087                     	;# 
   356     0088                     	;# 
   357     0089                     	;# 
   358     008C                     	;# 
   359     008D                     	;# 
   360     008E                     	;# 
   361     008F                     	;# 
   362     0090                     	;# 
   363     0091                     	;# 
   364     0092                     	;# 
   365     0093                     	;# 
   366     0093                     	;# 
   367     0093                     	;# 
   368     0094                     	;# 
   369     0095                     	;# 
   370     0096                     	;# 
   371     0097                     	;# 
   372     0098                     	;# 
   373     0099                     	;# 
   374     009A                     	;# 
   375     009B                     	;# 
   376     009C                     	;# 
   377     009D                     	;# 
   378     009E                     	;# 
   379     009F                     	;# 
   380     0105                     	;# 
   381     0107                     	;# 
   382     0108                     	;# 
   383     0109                     	;# 
   384     010C                     	;# 
   385     010C                     	;# 
   386     010D                     	;# 
   387     010E                     	;# 
   388     010F                     	;# 
   389     0185                     	;# 
   390     0187                     	;# 
   391     0188                     	;# 
   392     0189                     	;# 
   393     018C                     	;# 
   394     018D                     	;# 
   395     0000                     	;# 
   396     0001                     	;# 
   397     0002                     	;# 
   398     0003                     	;# 
   399     0004                     	;# 
   400     0005                     	;# 
   401     0006                     	;# 
   402     0007                     	;# 
   403     0008                     	;# 
   404     0009                     	;# 
   405     000A                     	;# 
   406     000B                     	;# 
   407     000C                     	;# 
   408     000D                     	;# 
   409     000E                     	;# 
   410     000E                     	;# 
   411     000F                     	;# 
   412     0010                     	;# 
   413     0011                     	;# 
   414     0012                     	;# 
   415     0013                     	;# 
   416     0014                     	;# 
   417     0015                     	;# 
   418     0015                     	;# 
   419     0016                     	;# 
   420     0017                     	;# 
   421     0018                     	;# 
   422     0019                     	;# 
   423     001A                     	;# 
   424     001B                     	;# 
   425     001B                     	;# 
   426     001C                     	;# 
   427     001D                     	;# 
   428     001E                     	;# 
   429     001F                     	;# 
   430     0081                     	;# 
   431     0085                     	;# 
   432     0086                     	;# 
   433     0087                     	;# 
   434     0088                     	;# 
   435     0089                     	;# 
   436     008C                     	;# 
   437     008D                     	;# 
   438     008E                     	;# 
   439     008F                     	;# 
   440     0090                     	;# 
   441     0091                     	;# 
   442     0092                     	;# 
   443     0093                     	;# 
   444     0093                     	;# 
   445     0093                     	;# 
   446     0094                     	;# 
   447     0095                     	;# 
   448     0096                     	;# 
   449     0097                     	;# 
   450     0098                     	;# 
   451     0099                     	;# 
   452     009A                     	;# 
   453     009B                     	;# 
   454     009C                     	;# 
   455     009D                     	;# 
   456     009E                     	;# 
   457     009F                     	;# 
   458     0105                     	;# 
   459     0107                     	;# 
   460     0108                     	;# 
   461     0109                     	;# 
   462     010C                     	;# 
   463     010C                     	;# 
   464     010D                     	;# 
   465     010E                     	;# 
   466     010F                     	;# 
   467     0185                     	;# 
   468     0187                     	;# 
   469     0188                     	;# 
   470     0189                     	;# 
   471     018C                     	;# 
   472     018D                     	;# 
   473                           
   474                           	psect	strings
   475     0800                     __pstrings:
   476     0800                     stringtab:
   477     0800                     __stringtab:
   478                           
   479                           ;	String table - string pointers are 1 byte each
   480     0800  1BFF               	btfsc	btemp+1,7
   481     0801  280A               	ljmp	stringcode
   482     0802  1383               	bcf	3,7
   483     0803  187F               	btfsc	btemp+1,0
   484     0804  1783               	bsf	3,7
   485     0805  0800               	movf	0,w
   486     0806  0A84               	incf	4,f
   487     0807  1903               	skipnz
   488     0808  0AFF               	incf	btemp+1,f
   489     0809  0008               	return
   490     080A                     stringcode:
   491     080A                     stringdir:
   492     080A  3008               	movlw	high stringdir
   493     080B  008A               	movwf	10
   494     080C  0804               	movf	4,w
   495     080D  0A84               	incf	4,f
   496     080E  0782               	addwf	2,f
   497     080F                     __stringbase:
   498     080F  3400               	retlw	0
   499     0810                     __end_of__stringtab:
   500     0810                     _dpowers:
   501     0810  3401               	retlw	1
   502     0811  3400               	retlw	0
   503     0812  340A               	retlw	10
   504     0813  3400               	retlw	0
   505     0814  3464               	retlw	100
   506     0815  3400               	retlw	0
   507     0816  34E8               	retlw	232
   508     0817  3403               	retlw	3
   509     0818  3410               	retlw	16
   510     0819  3427               	retlw	39
   511     081A                     __end_of_dpowers:
   512     001A                     _RCREG	set	26
   513     0019                     _TXREG	set	25
   514     0018                     _RCSTAbits	set	24
   515     001E                     _ADRESH	set	30
   516     001F                     _ADCON0bits	set	31
   517     0009                     _PORTEbits	set	9
   518     0006                     _PORTB	set	6
   519     0009                     _PORTE	set	9
   520     0008                     _PORTD	set	8
   521     0005                     _PORTA	set	5
   522     000B                     _INTCONbits	set	11
   523     000C                     _PIR1bits	set	12
   524     009A                     _SPBRGH	set	154
   525     0099                     _SPBRG	set	153
   526     0098                     _TXSTAbits	set	152
   527     0086                     _TRISBbits	set	134
   528     0089                     _TRISEbits	set	137
   529     0085                     _TRISAbits	set	133
   530     009F                     _ADCON1bits	set	159
   531     0086                     _TRISB	set	134
   532     0089                     _TRISE	set	137
   533     0088                     _TRISD	set	136
   534     008C                     _PIE1bits	set	140
   535     0187                     _BAUDCTLbits	set	391
   536     0189                     _ANSELHbits	set	393
   537     0188                     _ANSELbits	set	392
   538     0189                     _ANSELH	set	393
   539     0188                     _ANSEL	set	392
   540     081A                     STR_6:
   541     081A  3420               	retlw	32	;' '
   542     081B  3420               	retlw	32	;' '
   543     081C  3420               	retlw	32	;' '
   544     081D  3420               	retlw	32	;' '
   545     081E  3420               	retlw	32	;' '
   546     081F  3420               	retlw	32	;' '
   547     0820  3420               	retlw	32	;' '
   548     0821  3420               	retlw	32	;' '
   549     0822  3420               	retlw	32	;' '
   550     0823  3420               	retlw	32	;' '
   551     0824  3420               	retlw	32	;' '
   552     0825  3420               	retlw	32	;' '
   553     0826  3420               	retlw	32	;' '
   554     0827  3420               	retlw	32	;' '
   555     0828  3420               	retlw	32	;' '
   556     0829  3420               	retlw	32	;' '
   557     082A  3420               	retlw	32	;' '
   558     082B  3420               	retlw	32	;' '
   559     082C  3420               	retlw	32	;' '
   560     082D  3420               	retlw	32	;' '
   561     082E  3420               	retlw	32	;' '
   562     082F  3420               	retlw	32	;' '
   563     0830  3420               	retlw	32	;' '
   564     0831  3420               	retlw	32	;' '
   565     0832  3420               	retlw	32	;' '
   566     0833  3420               	retlw	32	;' '
   567     0834  3420               	retlw	32	;' '
   568     0835  3420               	retlw	32	;' '
   569     0836  3420               	retlw	32	;' '
   570     0837  3420               	retlw	32	;' '
   571     0838  3420               	retlw	32	;' '
   572     0839  3420               	retlw	32	;' '
   573     083A  3420               	retlw	32	;' '
   574     083B  3400               	retlw	0
   575     083C                     STR_1:
   576     083C  3420               	retlw	32	;' '
   577     083D  3453               	retlw	83	;'S'
   578     083E  3431               	retlw	49	;'1'
   579     083F  3420               	retlw	32	;' '
   580     0840  3420               	retlw	32	;' '
   581     0841  3420               	retlw	32	;' '
   582     0842  3420               	retlw	32	;' '
   583     0843  3453               	retlw	83	;'S'
   584     0844  3432               	retlw	50	;'2'
   585     0845  3420               	retlw	32	;' '
   586     0846  3420               	retlw	32	;' '
   587     0847  3420               	retlw	32	;' '
   588     0848  3420               	retlw	32	;' '
   589     0849  3453               	retlw	83	;'S'
   590     084A  3433               	retlw	51	;'3'
   591     084B  3400               	retlw	0
   592     084C                     STR_2:
   593     084C  3430               	retlw	48	;'0'
   594     084D  342E               	retlw	46	;'.'
   595     084E  3430               	retlw	48	;'0'
   596     084F  3430               	retlw	48	;'0'
   597     0850  3456               	retlw	86	;'V'
   598     0851  3420               	retlw	32	;' '
   599     0852  3430               	retlw	48	;'0'
   600     0853  342E               	retlw	46	;'.'
   601     0854  3430               	retlw	48	;'0'
   602     0855  3430               	retlw	48	;'0'
   603     0856  3456               	retlw	86	;'V'
   604     0857  3400               	retlw	0
   605     0858                     STR_3:
   606     0858  3425               	retlw	37	;'%'
   607     0859  3475               	retlw	117	;'u'
   608     085A  3400               	retlw	0
   609     0858                     
   610                           	psect	cinit
   611     000F                     start_initialization:	
   612                           ; #config settings
   613                           
   614     000F                     __initialization:
   615                           
   616                           ; Clear objects allocated to COMMON
   617     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   618     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   619                           
   620                           ; Clear objects allocated to BANK0
   621     0011  1283               	bcf	3,5	;RP0=0, select bank0
   622     0012  1303               	bcf	3,6	;RP1=0, select bank0
   623     0013  01EB               	clrf	__pbssBANK0& (0+127)
   624     0014                     end_of_initialization:	
   625                           ;End of C runtime variable initialization code
   626                           
   627     0014                     __end_of__initialization:
   628     0014  0183               	clrf	3
   629     0015  120A  118A  2A70   	ljmp	_main	;jump to C main() function
   630                           
   631                           	psect	bssCOMMON
   632     0077                     __pbssCOMMON:
   633     0077                     _errno:
   634     0077                     	ds	2
   635                           
   636                           	psect	bssBANK0
   637     006B                     __pbssBANK0:
   638     006B                     _cnt:
   639     006B                     	ds	1
   640                           
   641                           	psect	cstackBANK3
   642     0190                     __pcstackBANK3:
   643     0190                     main@display1:
   644                           
   645                           ; 50 bytes @ 0x0
   646     0190                     	ds	50
   647                           
   648                           	psect	cstackBANK2
   649     0110                     __pcstackBANK2:
   650     0110                     main@display2:
   651                           
   652                           ; 50 bytes @ 0x0
   653     0110                     	ds	50
   654                           
   655                           	psect	cstackBANK1
   656     00A0                     __pcstackBANK1:
   657     00A0                     main@display0:
   658                           
   659                           ; 50 bytes @ 0x0
   660     00A0                     	ds	50
   661                           
   662                           	psect	cstackCOMMON
   663     0070                     __pcstackCOMMON:
   664     0070                     ?_adc_setup:
   665     0070                     ?_Lcd_Cmd:	
   666                           ; 1 bytes @ 0x0
   667                           
   668     0070                     ?_Lcd_Init:	
   669                           ; 1 bytes @ 0x0
   670                           
   671     0070                     ?_Lcd_Clear:	
   672                           ; 1 bytes @ 0x0
   673                           
   674     0070                     ?_adc_RO:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     0070                     ?_UART_read_char:	
   678                           ; 1 bytes @ 0x0
   679                           
   680     0070                     ??_UART_read_char:	
   681                           ; 1 bytes @ 0x0
   682                           
   683     0070                     ?_main:	
   684                           ; 1 bytes @ 0x0
   685                           
   686     0070                     ?_Isr:	
   687                           ; 1 bytes @ 0x0
   688                           
   689     0070                     ??_Isr:	
   690                           ; 1 bytes @ 0x0
   691                           
   692     0070                     ?_Lcd_Port:	
   693                           ; 1 bytes @ 0x0
   694                           
   695     0070                     ?_Lcd_Write_Char:	
   696                           ; 1 bytes @ 0x0
   697                           
   698     0070                     ?_adc_read:	
   699                           ; 1 bytes @ 0x0
   700                           
   701     0070                     ?_adc_output:	
   702                           ; 1 bytes @ 0x0
   703                           
   704                           
   705                           ; 1 bytes @ 0x0
   706     0070                     	ds	4
   707     0074                     Isr@uart_return:
   708                           
   709                           ; 1 bytes @ 0x4
   710     0074                     	ds	1
   711     0075                     ?_UART_RX_config:
   712     0075                     ??_adc_setup:	
   713                           ; 1 bytes @ 0x5
   714                           
   715     0075                     ?_adc_channel:	
   716                           ; 1 bytes @ 0x5
   717                           
   718     0075                     ??_frexp:	
   719                           ; 1 bytes @ 0x5
   720                           
   721     0075                     ??_Lcd_Port:	
   722                           ; 1 bytes @ 0x5
   723                           
   724     0075                     ??_adc_read:	
   725                           ; 1 bytes @ 0x5
   726                           
   727     0075                     ??_adc_output:	
   728                           ; 1 bytes @ 0x5
   729                           
   730     0075                     ??___wmul:	
   731                           ; 1 bytes @ 0x5
   732                           
   733     0075                     ??___lwdiv:	
   734                           ; 1 bytes @ 0x5
   735                           
   736     0075                     Lcd_Port@a:	
   737                           ; 1 bytes @ 0x5
   738                           
   739     0075                     ___fltol@sign1:	
   740                           ; 1 bytes @ 0x5
   741                           
   742     0075                     adc_channel@channel:	
   743                           ; 1 bytes @ 0x5
   744                           
   745     0075                     UART_RX_config@baudrate:	
   746                           ; 2 bytes @ 0x5
   747                           
   748     0075                     ___wmul@product:	
   749                           ; 2 bytes @ 0x5
   750                           
   751                           
   752                           ; 2 bytes @ 0x5
   753     0075                     	ds	1
   754     0076                     ??_Lcd_Write_Char:
   755     0076                     ??___lwmod:	
   756                           ; 1 bytes @ 0x6
   757                           
   758     0076                     Lcd_Cmd@a:	
   759                           ; 1 bytes @ 0x6
   760                           
   761     0076                     adc_setup@inter:	
   762                           ; 1 bytes @ 0x6
   763                           
   764     0076                     adc_read@channel:	
   765                           ; 1 bytes @ 0x6
   766                           
   767     0076                     ___fltol@exp1:	
   768                           ; 1 bytes @ 0x6
   769                           
   770                           
   771                           ; 1 bytes @ 0x6
   772     0076                     	ds	1
   773     0077                     ??_UART_RX_config:
   774     0077                     ??_adc_channel:	
   775                           ; 1 bytes @ 0x7
   776                           
   777     0077                     ??_Lcd_Clear:	
   778                           ; 1 bytes @ 0x7
   779                           
   780     0077                     ??_Lcd_Set_Cursor:	
   781                           ; 1 bytes @ 0x7
   782                           
   783     0077                     ??_round:	
   784                           ; 1 bytes @ 0x7
   785                           
   786     0077                     ??_trunc:	
   787                           ; 1 bytes @ 0x7
   788                           
   789     0077                     ??___flsub:	
   790                           ; 1 bytes @ 0x7
   791                           
   792                           
   793                           	psect	cstackBANK0
   794     0020                     __pcstackBANK0:	
   795                           ; 1 bytes @ 0x7
   796                           
   797     0020                     ?___fleq:
   798     0020                     ??_Lcd_Cmd:	
   799                           ; 1 bit 
   800                           
   801     0020                     ??_adc_RO:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0020                     ?___wmul:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0020                     ?___lwdiv:	
   808                           ; 2 bytes @ 0x0
   809                           
   810     0020                     ?___fltol:	
   811                           ; 2 bytes @ 0x0
   812                           
   813     0020                     ?___fladd:	
   814                           ; 4 bytes @ 0x0
   815                           
   816     0020                     Lcd_Write_Char@a:	
   817                           ; 4 bytes @ 0x0
   818                           
   819     0020                     ___wmul@multiplier:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0020                     ___lwdiv@divisor:	
   823                           ; 2 bytes @ 0x0
   824                           
   825     0020                     ___fleq@ff1:	
   826                           ; 2 bytes @ 0x0
   827                           
   828     0020                     ___fltol@f1:	
   829                           ; 4 bytes @ 0x0
   830                           
   831     0020                     ___fladd@b:	
   832                           ; 4 bytes @ 0x0
   833                           
   834                           
   835                           ; 4 bytes @ 0x0
   836     0020                     	ds	1
   837     0021                     ?_Lcd_Write_String:
   838     0021                     adc_RO@channel:	
   839                           ; 1 bytes @ 0x1
   840                           
   841     0021                     Lcd_Write_String@a:	
   842                           ; 1 bytes @ 0x1
   843                           
   844                           
   845                           ; 2 bytes @ 0x1
   846     0021                     	ds	1
   847     0022                     ??_Lcd_Init:
   848     0022                     ?_Lcd_Set_Cursor:	
   849                           ; 1 bytes @ 0x2
   850                           
   851     0022                     Lcd_Set_Cursor@b:	
   852                           ; 1 bytes @ 0x2
   853                           
   854     0022                     ___wmul@multiplicand:	
   855                           ; 1 bytes @ 0x2
   856                           
   857     0022                     ___lwdiv@dividend:	
   858                           ; 2 bytes @ 0x2
   859                           
   860                           
   861                           ; 2 bytes @ 0x2
   862     0022                     	ds	1
   863     0023                     ??_Lcd_Write_String:
   864     0023                     Lcd_Set_Cursor@a:	
   865                           ; 1 bytes @ 0x3
   866                           
   867                           
   868                           ; 1 bytes @ 0x3
   869     0023                     	ds	1
   870     0024                     ??___fltol:
   871     0024                     ?___awdiv:	
   872                           ; 1 bytes @ 0x4
   873                           
   874     0024                     Lcd_Set_Cursor@temp:	
   875                           ; 2 bytes @ 0x4
   876                           
   877     0024                     ___lwdiv@counter:	
   878                           ; 1 bytes @ 0x4
   879                           
   880     0024                     ___awdiv@divisor:	
   881                           ; 1 bytes @ 0x4
   882                           
   883     0024                     ___fleq@ff2:	
   884                           ; 2 bytes @ 0x4
   885                           
   886     0024                     ___fladd@a:	
   887                           ; 4 bytes @ 0x4
   888                           
   889                           
   890                           ; 4 bytes @ 0x4
   891     0024                     	ds	1
   892     0025                     ___lwdiv@quotient:
   893                           
   894                           ; 2 bytes @ 0x5
   895     0025                     	ds	1
   896     0026                     Lcd_Write_String@i:
   897     0026                     ___awdiv@dividend:	
   898                           ; 2 bytes @ 0x6
   899                           
   900                           
   901                           ; 2 bytes @ 0x6
   902     0026                     	ds	1
   903     0027                     ?___lwmod:
   904     0027                     ___lwmod@divisor:	
   905                           ; 2 bytes @ 0x7
   906                           
   907                           
   908                           ; 2 bytes @ 0x7
   909     0027                     	ds	1
   910     0028                     ??___awdiv:
   911     0028                     ??___fleq:	
   912                           ; 1 bytes @ 0x8
   913                           
   914     0028                     ??___fladd:	
   915                           ; 1 bytes @ 0x8
   916                           
   917                           
   918                           ; 1 bytes @ 0x8
   919     0028                     	ds	1
   920     0029                     ___awdiv@counter:
   921     0029                     ___lwmod@dividend:	
   922                           ; 1 bytes @ 0x9
   923                           
   924                           
   925                           ; 2 bytes @ 0x9
   926     0029                     	ds	1
   927     002A                     ___awdiv@sign:
   928                           
   929                           ; 1 bytes @ 0xA
   930     002A                     	ds	1
   931     002B                     ___lwmod@counter:
   932     002B                     ___awdiv@quotient:	
   933                           ; 1 bytes @ 0xB
   934                           
   935                           
   936                           ; 2 bytes @ 0xB
   937     002B                     	ds	1
   938     002C                     ?_sprintf:
   939     002C                     ?_frexp:	
   940                           ; 2 bytes @ 0xC
   941                           
   942     002C                     sprintf@sp:	
   943                           ; 4 bytes @ 0xC
   944                           
   945     002C                     frexp@value:	
   946                           ; 2 bytes @ 0xC
   947                           
   948                           
   949                           ; 4 bytes @ 0xC
   950     002C                     	ds	1
   951     002D                     ?___xxtofl:
   952     002D                     ___xxtofl@val:	
   953                           ; 4 bytes @ 0xD
   954                           
   955                           
   956                           ; 4 bytes @ 0xD
   957     002D                     	ds	1
   958     002E                     sprintf@f:
   959                           
   960                           ; 1 bytes @ 0xE
   961     002E                     	ds	2
   962     0030                     ___fladd@signs:
   963     0030                     frexp@eptr:	
   964                           ; 1 bytes @ 0x10
   965                           
   966                           
   967                           ; 1 bytes @ 0x10
   968     0030                     	ds	1
   969     0031                     ??_sprintf:
   970     0031                     ??___xxtofl:	
   971                           ; 1 bytes @ 0x11
   972                           
   973     0031                     ___fladd@aexp:	
   974                           ; 1 bytes @ 0x11
   975                           
   976                           
   977                           ; 1 bytes @ 0x11
   978     0031                     	ds	1
   979     0032                     ___fladd@bexp:
   980                           
   981                           ; 1 bytes @ 0x12
   982     0032                     	ds	1
   983     0033                     ___fladd@grs:
   984                           
   985                           ; 1 bytes @ 0x13
   986     0033                     	ds	1
   987     0034                     sprintf@flag:
   988                           
   989                           ; 1 bytes @ 0x14
   990     0034                     	ds	1
   991     0035                     sprintf@ap:
   992     0035                     ___xxtofl@sign:	
   993                           ; 1 bytes @ 0x15
   994                           
   995                           
   996                           ; 1 bytes @ 0x15
   997     0035                     	ds	1
   998     0036                     ___xxtofl@exp:
   999     0036                     sprintf@val:	
  1000                           ; 1 bytes @ 0x16
  1001                           
  1002                           
  1003                           ; 2 bytes @ 0x16
  1004     0036                     	ds	1
  1005     0037                     ___xxtofl@arg:
  1006                           
  1007                           ; 4 bytes @ 0x17
  1008     0037                     	ds	1
  1009     0038                     sprintf@prec:
  1010                           
  1011                           ; 1 bytes @ 0x18
  1012     0038                     	ds	1
  1013     0039                     sprintf@c:
  1014                           
  1015                           ; 1 bytes @ 0x19
  1016     0039                     	ds	2
  1017     003B                     ?_trunc:
  1018     003B                     trunc@x:	
  1019                           ; 4 bytes @ 0x1B
  1020                           
  1021                           
  1022                           ; 4 bytes @ 0x1B
  1023     003B                     	ds	4
  1024     003F                     trunc@i:
  1025                           
  1026                           ; 4 bytes @ 0x1F
  1027     003F                     	ds	4
  1028     0043                     trunc@expon:
  1029                           
  1030                           ; 2 bytes @ 0x23
  1031     0043                     	ds	2
  1032     0045                     ?___flsub:
  1033     0045                     ___flsub@a:	
  1034                           ; 4 bytes @ 0x25
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0x25
  1038     0045                     	ds	4
  1039     0049                     ___flsub@b:
  1040                           
  1041                           ; 4 bytes @ 0x29
  1042     0049                     	ds	4
  1043     004D                     ?_round:
  1044     004D                     round@x:	
  1045                           ; 4 bytes @ 0x2D
  1046                           
  1047                           
  1048                           ; 4 bytes @ 0x2D
  1049     004D                     	ds	4
  1050     0051                     round@f:
  1051                           
  1052                           ; 4 bytes @ 0x31
  1053     0051                     	ds	4
  1054     0055                     ?_adc_mv:
  1055                           
  1056                           ; 2 bytes @ 0x35
  1057     0055                     	ds	2
  1058     0057                     ??_adc_mv:
  1059                           
  1060                           ; 1 bytes @ 0x37
  1061     0057                     	ds	2
  1062     0059                     adc_mv@calc:
  1063                           
  1064                           ; 4 bytes @ 0x39
  1065     0059                     	ds	4
  1066     005D                     _adc_mv$1352:
  1067                           
  1068                           ; 4 bytes @ 0x3D
  1069     005D                     	ds	4
  1070     0061                     adc_mv@channel:
  1071                           
  1072                           ; 1 bytes @ 0x41
  1073     0061                     	ds	1
  1074     0062                     adc_mv@out:
  1075                           
  1076                           ; 1 bytes @ 0x42
  1077     0062                     	ds	1
  1078     0063                     ??_main:
  1079                           
  1080                           ; 1 bytes @ 0x43
  1081     0063                     	ds	2
  1082     0065                     main@output0:
  1083                           
  1084                           ; 2 bytes @ 0x45
  1085     0065                     	ds	2
  1086     0067                     main@output1:
  1087                           
  1088                           ; 2 bytes @ 0x47
  1089     0067                     	ds	2
  1090     0069                     main@ch1:
  1091                           
  1092                           ; 1 bytes @ 0x49
  1093     0069                     	ds	1
  1094     006A                     main@ch0:
  1095                           
  1096                           ; 1 bytes @ 0x4A
  1097     006A                     	ds	1
  1098                           
  1099                           	psect	maintext
  1100     0270                     __pmaintext:	
  1101 ;;
  1102 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1103 ;;
  1104 ;; *************** function _main *****************
  1105 ;; Defined at:
  1106 ;;		line 35 in file "main_poslab2.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  display2       50    0[BANK2 ] unsigned char [50]
  1111 ;;  display1       50    0[BANK3 ] unsigned char [50]
  1112 ;;  display0       50    0[BANK1 ] unsigned char [50]
  1113 ;;  output1         2   71[BANK0 ] unsigned int 
  1114 ;;  output0         2   69[BANK0 ] unsigned int 
  1115 ;;  ch0             1   74[BANK0 ] unsigned char 
  1116 ;;  ch1             1   73[BANK0 ] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : B00/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       0       0       0       0
  1127 ;;      Locals:         0       6      50      50      50
  1128 ;;      Temps:          0       2       0       0       0
  1129 ;;      Totals:         0       8      50      50      50
  1130 ;;Total ram usage:      158 bytes
  1131 ;; Hardware stack levels required when called: 7
  1132 ;; This function calls:
  1133 ;;		_Lcd_Clear
  1134 ;;		_Lcd_Cmd
  1135 ;;		_Lcd_Init
  1136 ;;		_Lcd_Set_Cursor
  1137 ;;		_Lcd_Write_String
  1138 ;;		_UART_RX_config
  1139 ;;		_adc_RO
  1140 ;;		_adc_channel
  1141 ;;		_adc_mv
  1142 ;;		_adc_setup
  1143 ;;		_sprintf
  1144 ;; This function is called by:
  1145 ;;		Startup code after reset
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149     0270                     _main:	
  1150                           ;psect for function _main
  1151                           
  1152     0270                     l2953:	
  1153                           ;incstack = 0
  1154                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1155                           
  1156                           
  1157                           ;main_poslab2.c: 37:     UART_RX_config(207);
  1158     0270  30CF               	movlw	207
  1159     0271  00F5               	movwf	UART_RX_config@baudrate
  1160     0272  3000               	movlw	0
  1161     0273  00F6               	movwf	UART_RX_config@baudrate+1
  1162     0274  120A  158A  2502  120A  118A  	fcall	_UART_RX_config
  1163     0279                     l2955:
  1164                           
  1165                           ;main_poslab2.c: 39:     uint16_t output0, output1;;main_poslab2.c: 40:     char ch1, ch
      +                          0;;main_poslab2.c: 43:     PIR1bits.RCIF = 0;
  1166     0279  1283               	bcf	3,5	;RP0=0, select bank0
  1167     027A  1303               	bcf	3,6	;RP1=0, select bank0
  1168     027B  128C               	bcf	12,5	;volatile
  1169     027C                     l2957:
  1170                           
  1171                           ;main_poslab2.c: 44:     PIE1bits.RCIE = 1;
  1172     027C  1683               	bsf	3,5	;RP0=1, select bank1
  1173     027D  1303               	bcf	3,6	;RP1=0, select bank1
  1174     027E  168C               	bsf	12,5	;volatile
  1175     027F                     l2959:
  1176                           
  1177                           ;main_poslab2.c: 45:     INTCONbits.PEIE = 1;
  1178     027F  170B               	bsf	11,6	;volatile
  1179     0280                     l2961:
  1180                           
  1181                           ;main_poslab2.c: 46:     INTCONbits.GIE = 1;
  1182     0280  178B               	bsf	11,7	;volatile
  1183     0281                     l2963:
  1184                           
  1185                           ;main_poslab2.c: 53:     PORTA = 0;
  1186     0281  1283               	bcf	3,5	;RP0=0, select bank0
  1187     0282  1303               	bcf	3,6	;RP1=0, select bank0
  1188     0283  0185               	clrf	5	;volatile
  1189     0284                     l2965:
  1190                           
  1191                           ;main_poslab2.c: 54:     ch0 = 0;
  1192     0284  01EA               	clrf	main@ch0
  1193     0285                     l2967:
  1194                           
  1195                           ;main_poslab2.c: 55:     ch1 = 1;
  1196     0285  01E9               	clrf	main@ch1
  1197     0286  0AE9               	incf	main@ch1,f
  1198                           
  1199                           ;main_poslab2.c: 56:     adc_setup(0);
  1200     0287  3000               	movlw	0
  1201     0288  120A  158A  25E4  120A  118A  	fcall	_adc_setup
  1202                           
  1203                           ;main_poslab2.c: 57:     Lcd_Cmd(0x0E);
  1204     028D  300E               	movlw	14
  1205     028E  120A  158A  253F  120A  118A  	fcall	_Lcd_Cmd
  1206     0293                     l2969:
  1207                           
  1208                           ;main_poslab2.c: 58:     adc_channel(ch0);
  1209     0293  3000               	movlw	0
  1210     0294  00F5               	movwf	adc_channel@channel
  1211     0295  00F6               	movwf	adc_channel@channel+1
  1212     0296  120A  118A  2552  120A  118A  	fcall	_adc_channel
  1213     029B                     l2971:
  1214                           
  1215                           ;main_poslab2.c: 59:     adc_channel(ch1);
  1216     029B  3001               	movlw	1
  1217     029C  00F5               	movwf	adc_channel@channel
  1218     029D  3000               	movlw	0
  1219     029E  00F6               	movwf	adc_channel@channel+1
  1220     029F  120A  118A  2552  120A  118A  	fcall	_adc_channel
  1221     02A4                     l2973:
  1222                           
  1223                           ;main_poslab2.c: 62:     TRISD = 0x00;
  1224     02A4  1683               	bsf	3,5	;RP0=1, select bank1
  1225     02A5  1303               	bcf	3,6	;RP1=0, select bank1
  1226     02A6  0188               	clrf	8	;volatile
  1227     02A7                     l2975:
  1228                           
  1229                           ;main_poslab2.c: 63:     PORTD = 0x00;
  1230     02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1231     02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1232     02A9  0188               	clrf	8	;volatile
  1233     02AA                     l2977:
  1234                           
  1235                           ;main_poslab2.c: 64:     TRISE = 0x00;
  1236     02AA  1683               	bsf	3,5	;RP0=1, select bank1
  1237     02AB  1303               	bcf	3,6	;RP1=0, select bank1
  1238     02AC  0189               	clrf	9	;volatile
  1239     02AD                     l2979:
  1240                           
  1241                           ;main_poslab2.c: 65:     PORTE = 0x00;
  1242     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1243     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1244     02AF  0189               	clrf	9	;volatile
  1245     02B0                     l2981:
  1246                           
  1247                           ;main_poslab2.c: 66:     TRISB = 0x00;
  1248     02B0  1683               	bsf	3,5	;RP0=1, select bank1
  1249     02B1  1303               	bcf	3,6	;RP1=0, select bank1
  1250     02B2  0186               	clrf	6	;volatile
  1251     02B3                     l2983:
  1252                           
  1253                           ;main_poslab2.c: 67:     PORTB = 0x00;
  1254     02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1255     02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1256     02B5  0186               	clrf	6	;volatile
  1257                           
  1258                           ;main_poslab2.c: 70:     Lcd_Init();
  1259     02B6  120A  118A  27A0  120A  118A  	fcall	_Lcd_Init
  1260                           
  1261                           ;main_poslab2.c: 71:     Lcd_Clear();
  1262     02BB  120A  158A  24F5  120A  118A  	fcall	_Lcd_Clear
  1263                           
  1264                           ;main_poslab2.c: 72:     Lcd_Set_Cursor(1,1);
  1265     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1266     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1267     02C2  01A2               	clrf	Lcd_Set_Cursor@b
  1268     02C3  0AA2               	incf	Lcd_Set_Cursor@b,f
  1269     02C4  3001               	movlw	1
  1270     02C5  120A  158A  2577  120A  118A  	fcall	_Lcd_Set_Cursor
  1271     02CA                     l2985:
  1272                           
  1273                           ;main_poslab2.c: 73:     Lcd_Write_String(" S1    S2    S3");
  1274     02CA  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1275     02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1276     02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1277     02CD  00A1               	movwf	Lcd_Write_String@a
  1278     02CE  3080               	movlw	128
  1279     02CF  00A2               	movwf	Lcd_Write_String@a+1
  1280     02D0  120A  158A  2676  120A  118A  	fcall	_Lcd_Write_String
  1281     02D5                     l2987:
  1282                           
  1283                           ;main_poslab2.c: 74:     Lcd_Set_Cursor(2,1);
  1284     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1285     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1286     02D7  01A2               	clrf	Lcd_Set_Cursor@b
  1287     02D8  0AA2               	incf	Lcd_Set_Cursor@b,f
  1288     02D9  3002               	movlw	2
  1289     02DA  120A  158A  2577  120A  118A  	fcall	_Lcd_Set_Cursor
  1290                           
  1291                           ;main_poslab2.c: 75:      Lcd_Write_String("0.00V 0.00V");
  1292     02DF  303D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1293     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1294     02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1295     02E2  00A1               	movwf	Lcd_Write_String@a
  1296     02E3  3080               	movlw	128
  1297     02E4  00A2               	movwf	Lcd_Write_String@a+1
  1298     02E5  120A  158A  2676  120A  118A  	fcall	_Lcd_Write_String
  1299     02EA                     l2989:
  1300                           
  1301                           ;main_poslab2.c: 80:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1302     02EA  3003               	movlw	3
  1303     02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1304     02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1305     02ED  00E4               	movwf	??_main+1
  1306     02EE  3097               	movlw	151
  1307     02EF  00E3               	movwf	??_main
  1308     02F0                     u3287:
  1309     02F0  0BE3               	decfsz	??_main,f
  1310     02F1  2AF0               	goto	u3287
  1311     02F2  0BE4               	decfsz	??_main+1,f
  1312     02F3  2AF0               	goto	u3287
  1313     02F4                     l2991:
  1314                           
  1315                           ;main_poslab2.c: 82:         output0 = adc_mv(ch0);
  1316     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1317     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1318     02F6  086A               	movf	main@ch0,w
  1319     02F7  120A  118A  265F  120A  118A  	fcall	_adc_mv
  1320     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1321     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1322     02FE  0856               	movf	?_adc_mv+1,w
  1323     02FF  00E6               	movwf	main@output0+1
  1324     0300  0855               	movf	?_adc_mv,w
  1325     0301  00E5               	movwf	main@output0
  1326     0302                     l2993:
  1327                           
  1328                           ;main_poslab2.c: 84:         output1 = adc_mv(ch1);
  1329     0302  0869               	movf	main@ch1,w
  1330     0303  120A  118A  265F  120A  118A  	fcall	_adc_mv
  1331     0308  1283               	bcf	3,5	;RP0=0, select bank0
  1332     0309  1303               	bcf	3,6	;RP1=0, select bank0
  1333     030A  0856               	movf	?_adc_mv+1,w
  1334     030B  00E8               	movwf	main@output1+1
  1335     030C  0855               	movf	?_adc_mv,w
  1336     030D  00E7               	movwf	main@output1
  1337     030E                     l2995:
  1338                           
  1339                           ;main_poslab2.c: 87:         char display0[50];;main_poslab2.c: 88:         char display
      +                          1[50];;main_poslab2.c: 89:         char display2[50];;main_poslab2.c: 90:         sprint
      +                          f(display0, "%u", output0);
  1340     030E  30A0               	movlw	(low (main@display0| 0))& (0+255)
  1341     030F  00AC               	movwf	sprintf@sp
  1342     0310  3000               	movlw	0
  1343     0311  00AD               	movwf	sprintf@sp+1
  1344     0312  3049               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1345     0313  00AE               	movwf	sprintf@f
  1346     0314  0866               	movf	main@output0+1,w
  1347     0315  00B0               	movwf	?_sprintf+4
  1348     0316  0865               	movf	main@output0,w
  1349     0317  00AF               	movwf	?_sprintf+3
  1350     0318  120A  118A  23CC  120A  118A  	fcall	_sprintf
  1351     031D                     l2997:
  1352                           
  1353                           ;main_poslab2.c: 91:         sprintf(display1, "%u", output1);
  1354     031D  3090               	movlw	(low (main@display1| (0+256)))& (0+255)
  1355     031E  1283               	bcf	3,5	;RP0=0, select bank0
  1356     031F  1303               	bcf	3,6	;RP1=0, select bank0
  1357     0320  00AC               	movwf	sprintf@sp
  1358     0321  3001               	movlw	1
  1359     0322  00AD               	movwf	sprintf@sp+1
  1360     0323  3049               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1361     0324  00AE               	movwf	sprintf@f
  1362     0325  0868               	movf	main@output1+1,w
  1363     0326  00B0               	movwf	?_sprintf+4
  1364     0327  0867               	movf	main@output1,w
  1365     0328  00AF               	movwf	?_sprintf+3
  1366     0329  120A  118A  23CC  120A  118A  	fcall	_sprintf
  1367     032E                     l2999:
  1368                           
  1369                           ;main_poslab2.c: 92:         sprintf(display2, "%u", cnt);
  1370     032E  3010               	movlw	(low (main@display2| (0+256)))& (0+255)
  1371     032F  1283               	bcf	3,5	;RP0=0, select bank0
  1372     0330  1303               	bcf	3,6	;RP1=0, select bank0
  1373     0331  00AC               	movwf	sprintf@sp
  1374     0332  3001               	movlw	1
  1375     0333  00AD               	movwf	sprintf@sp+1
  1376     0334  3049               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1377     0335  00AE               	movwf	sprintf@f
  1378     0336  086B               	movf	_cnt,w
  1379     0337  00E3               	movwf	??_main
  1380     0338  01E4               	clrf	??_main+1
  1381     0339  0863               	movf	??_main,w
  1382     033A  00AF               	movwf	?_sprintf+3
  1383     033B  0864               	movf	??_main+1,w
  1384     033C  00B0               	movwf	?_sprintf+4
  1385     033D  120A  118A  23CC  120A  118A  	fcall	_sprintf
  1386     0342                     l3001:
  1387                           
  1388                           ;main_poslab2.c: 97:         Lcd_Set_Cursor(2,1);
  1389     0342  1283               	bcf	3,5	;RP0=0, select bank0
  1390     0343  1303               	bcf	3,6	;RP1=0, select bank0
  1391     0344  01A2               	clrf	Lcd_Set_Cursor@b
  1392     0345  0AA2               	incf	Lcd_Set_Cursor@b,f
  1393     0346  3002               	movlw	2
  1394     0347  120A  158A  2577  120A  118A  	fcall	_Lcd_Set_Cursor
  1395     034C                     l3003:
  1396                           
  1397                           ;main_poslab2.c: 98:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1398     034C  3005               	movlw	5
  1399     034D  1283               	bcf	3,5	;RP0=0, select bank0
  1400     034E  1303               	bcf	3,6	;RP1=0, select bank0
  1401     034F  00E3               	movwf	??_main
  1402     0350                     u3297:
  1403     0350  0BE3               	decfsz	??_main,f
  1404     0351  2B50               	goto	u3297
  1405     0352  2B53               	nop2
  1406     0353                     l3005:
  1407                           
  1408                           ;main_poslab2.c: 99:         Lcd_Write_String("                                 ");
  1409     0353  300B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1410     0354  1283               	bcf	3,5	;RP0=0, select bank0
  1411     0355  1303               	bcf	3,6	;RP1=0, select bank0
  1412     0356  00A1               	movwf	Lcd_Write_String@a
  1413     0357  3080               	movlw	128
  1414     0358  00A2               	movwf	Lcd_Write_String@a+1
  1415     0359  120A  158A  2676  120A  118A  	fcall	_Lcd_Write_String
  1416     035E                     l3007:
  1417                           
  1418                           ;main_poslab2.c: 100:         Lcd_Set_Cursor(2,1);
  1419     035E  1283               	bcf	3,5	;RP0=0, select bank0
  1420     035F  1303               	bcf	3,6	;RP1=0, select bank0
  1421     0360  01A2               	clrf	Lcd_Set_Cursor@b
  1422     0361  0AA2               	incf	Lcd_Set_Cursor@b,f
  1423     0362  3002               	movlw	2
  1424     0363  120A  158A  2577  120A  118A  	fcall	_Lcd_Set_Cursor
  1425     0368                     l3009:
  1426                           
  1427                           ;main_poslab2.c: 101:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1428     0368  3005               	movlw	5
  1429     0369  1283               	bcf	3,5	;RP0=0, select bank0
  1430     036A  1303               	bcf	3,6	;RP1=0, select bank0
  1431     036B  00E3               	movwf	??_main
  1432     036C                     u3307:
  1433     036C  0BE3               	decfsz	??_main,f
  1434     036D  2B6C               	goto	u3307
  1435     036E  2B6F               	nop2
  1436     036F                     l3011:
  1437                           
  1438                           ;main_poslab2.c: 102:         Lcd_Write_String(display0);
  1439     036F  30A0               	movlw	(low (main@display0| 0))& (0+255)
  1440     0370  1283               	bcf	3,5	;RP0=0, select bank0
  1441     0371  1303               	bcf	3,6	;RP1=0, select bank0
  1442     0372  00A1               	movwf	Lcd_Write_String@a
  1443     0373  3000               	movlw	0
  1444     0374  00A2               	movwf	Lcd_Write_String@a+1
  1445     0375  120A  158A  2676  120A  118A  	fcall	_Lcd_Write_String
  1446     037A                     l3013:
  1447                           
  1448                           ;main_poslab2.c: 103:         Lcd_Set_Cursor(2,7);
  1449     037A  3007               	movlw	7
  1450     037B  1283               	bcf	3,5	;RP0=0, select bank0
  1451     037C  1303               	bcf	3,6	;RP1=0, select bank0
  1452     037D  00A2               	movwf	Lcd_Set_Cursor@b
  1453     037E  3002               	movlw	2
  1454     037F  120A  158A  2577  120A  118A  	fcall	_Lcd_Set_Cursor
  1455     0384                     l3015:
  1456                           
  1457                           ;main_poslab2.c: 104:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1458     0384  3005               	movlw	5
  1459     0385  1283               	bcf	3,5	;RP0=0, select bank0
  1460     0386  1303               	bcf	3,6	;RP1=0, select bank0
  1461     0387  00E3               	movwf	??_main
  1462     0388                     u3317:
  1463     0388  0BE3               	decfsz	??_main,f
  1464     0389  2B88               	goto	u3317
  1465     038A  2B8B               	nop2
  1466     038B                     l3017:
  1467                           
  1468                           ;main_poslab2.c: 105:         Lcd_Write_String(display1);
  1469     038B  3090               	movlw	(low (main@display1| (0+256)))& (0+255)
  1470     038C  1283               	bcf	3,5	;RP0=0, select bank0
  1471     038D  1303               	bcf	3,6	;RP1=0, select bank0
  1472     038E  00A1               	movwf	Lcd_Write_String@a
  1473     038F  3001               	movlw	1
  1474     0390  00A2               	movwf	Lcd_Write_String@a+1
  1475     0391  120A  158A  2676  120A  118A  	fcall	_Lcd_Write_String
  1476     0396                     l3019:
  1477                           
  1478                           ;main_poslab2.c: 106:         Lcd_Set_Cursor (2,13);
  1479     0396  300D               	movlw	13
  1480     0397  1283               	bcf	3,5	;RP0=0, select bank0
  1481     0398  1303               	bcf	3,6	;RP1=0, select bank0
  1482     0399  00A2               	movwf	Lcd_Set_Cursor@b
  1483     039A  3002               	movlw	2
  1484     039B  120A  158A  2577  120A  118A  	fcall	_Lcd_Set_Cursor
  1485     03A0                     l3021:
  1486                           
  1487                           ;main_poslab2.c: 107:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1488     03A0  3005               	movlw	5
  1489     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1490     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1491     03A3  00E3               	movwf	??_main
  1492     03A4                     u3327:
  1493     03A4  0BE3               	decfsz	??_main,f
  1494     03A5  2BA4               	goto	u3327
  1495     03A6  2BA7               	nop2
  1496     03A7                     l3023:
  1497                           
  1498                           ;main_poslab2.c: 108:         Lcd_Write_String(display2);
  1499     03A7  3010               	movlw	(low (main@display2| (0+256)))& (0+255)
  1500     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  1501     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  1502     03AA  00A1               	movwf	Lcd_Write_String@a
  1503     03AB  3001               	movlw	1
  1504     03AC  00A2               	movwf	Lcd_Write_String@a+1
  1505     03AD  120A  158A  2676  120A  118A  	fcall	_Lcd_Write_String
  1506                           
  1507                           ;main_poslab2.c: 109:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1508     03B2  301A               	movlw	26
  1509     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1510     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1511     03B5  00E4               	movwf	??_main+1
  1512     03B6  30F7               	movlw	247
  1513     03B7  00E3               	movwf	??_main
  1514     03B8                     u3337:
  1515     03B8  0BE3               	decfsz	??_main,f
  1516     03B9  2BB8               	goto	u3337
  1517     03BA  0BE4               	decfsz	??_main+1,f
  1518     03BB  2BB8               	goto	u3337
  1519     03BC  2BBD               	nop2
  1520     03BD                     l3025:
  1521                           
  1522                           ;main_poslab2.c: 110:         PORTB = adc_RO(ch0);
  1523     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1524     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1525     03BF  086A               	movf	main@ch0,w
  1526     03C0  120A  158A  2529  120A  118A  	fcall	_adc_RO
  1527     03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1528     03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1529     03C7  0086               	movwf	6	;volatile
  1530                           
  1531                           ;main_poslab2.c: 111:     }
  1532     03C8  2AEA               	goto	l2989
  1533     03C9  120A  118A  280C   	ljmp	start
  1534     03CC                     __end_of_main:
  1535                           
  1536                           	psect	text1
  1537     03CC                     __ptext1:	
  1538 ;; *************** function _sprintf *****************
  1539 ;; Defined at:
  1540 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  1543 ;;		 -> main@display2(50), main@display1(50), main@display0(50), 
  1544 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1545 ;;		 -> STR_5(3), STR_4(3), STR_3(3), 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  tmpval          4    0        struct .
  1548 ;;  val             2   22[BANK0 ] unsigned int 
  1549 ;;  cp              2    0        PTR const unsigned char 
  1550 ;;  len             2    0        unsigned int 
  1551 ;;  c               1   25[BANK0 ] unsigned char 
  1552 ;;  prec            1   24[BANK0 ] char 
  1553 ;;  ap              1   21[BANK0 ] PTR void [1]
  1554 ;;		 -> ?_sprintf(2), 
  1555 ;;  flag            1   20[BANK0 ] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  2   12[BANK0 ] int 
  1558 ;; Registers used:
  1559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1565 ;;      Params:         0       5       0       0       0
  1566 ;;      Locals:         0       6       0       0       0
  1567 ;;      Temps:          0       3       0       0       0
  1568 ;;      Totals:         0      14       0       0       0
  1569 ;;Total ram usage:       14 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 3
  1572 ;; This function calls:
  1573 ;;		___lwdiv
  1574 ;;		___lwmod
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580     03CC                     _sprintf:	
  1581                           ;psect for function _sprintf
  1582                           
  1583     03CC                     l2901:	
  1584                           ;incstack = 0
  1585                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1586                           
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1589     03CC  302F               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  1590     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  1591     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  1592     03CF  00B5               	movwf	sprintf@ap
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1595     03D0  2C81               	goto	l2943
  1596     03D1                     l2903:
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1599     03D1  3025               	movlw	37
  1600     03D2  0639               	xorwf	sprintf@c,w
  1601     03D3  1903               	btfsc	3,2
  1602     03D4  2BD6               	goto	u3231
  1603     03D5  2BD7               	goto	u3230
  1604     03D6                     u3231:
  1605     03D6  2BE5               	goto	l2909
  1606     03D7                     u3230:
  1607     03D7                     l2905:
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1610     03D7  082C               	movf	sprintf@sp,w
  1611     03D8  0084               	movwf	4
  1612     03D9  1783               	bsf	3,7
  1613     03DA  1C2D               	btfss	sprintf@sp+1,0
  1614     03DB  1383               	bcf	3,7
  1615     03DC  0839               	movf	sprintf@c,w
  1616     03DD  0080               	movwf	0
  1617     03DE                     l2907:
  1618     03DE  3001               	movlw	1
  1619     03DF  07AC               	addwf	sprintf@sp,f
  1620     03E0  1803               	skipnc
  1621     03E1  0AAD               	incf	sprintf@sp+1,f
  1622     03E2  3000               	movlw	0
  1623     03E3  07AD               	addwf	sprintf@sp+1,f
  1624                           
  1625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1626     03E4  2C81               	goto	l2943
  1627     03E5                     l2909:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1630     03E5  01B4               	clrf	sprintf@flag
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1633     03E6  2BEC               	goto	l2915
  1634     03E7                     l2911:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1637     03E7  30C0               	movlw	192
  1638     03E8  00B1               	movwf	??_sprintf
  1639     03E9  0831               	movf	??_sprintf,w
  1640     03EA  04B4               	iorwf	sprintf@flag,f
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1643     03EB  2C06               	goto	l2917
  1644     03EC                     l2915:
  1645     03EC  3001               	movlw	1
  1646     03ED  07AE               	addwf	sprintf@f,f
  1647     03EE  30FF               	movlw	-1
  1648     03EF  072E               	addwf	sprintf@f,w
  1649     03F0  0084               	movwf	4
  1650     03F1  120A  158A  200A  120A  118A  	fcall	stringdir
  1651     03F6  00B9               	movwf	sprintf@c
  1652     03F7  00B1               	movwf	??_sprintf
  1653     03F8  01B2               	clrf	??_sprintf+1
  1654                           
  1655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1656                           ; Switch size 1, requested type "simple"
  1657                           ; Number of cases is 1, Range of values is 0 to 0
  1658                           ; switch strategies available:
  1659                           ; Name         Instructions Cycles
  1660                           ; simple_byte            4     3 (average)
  1661                           ; direct_byte           11     8 (fixed)
  1662                           ; jumptable            260     6 (fixed)
  1663                           ;	Chosen strategy is simple_byte
  1664     03F9  0832               	movf	??_sprintf+1,w
  1665     03FA  3A00               	xorlw	0	; case 0
  1666     03FB  1903               	skipnz
  1667     03FC  2BFE               	goto	l3077
  1668     03FD  2C81               	goto	l2943
  1669     03FE                     l3077:
  1670                           
  1671                           ; Switch size 1, requested type "simple"
  1672                           ; Number of cases is 2, Range of values is 0 to 117
  1673                           ; switch strategies available:
  1674                           ; Name         Instructions Cycles
  1675                           ; simple_byte            7     4 (average)
  1676                           ; jumptable            260     6 (fixed)
  1677                           ;	Chosen strategy is simple_byte
  1678     03FE  0831               	movf	??_sprintf,w
  1679     03FF  3A00               	xorlw	0	; case 0
  1680     0400  1903               	skipnz
  1681     0401  2C91               	goto	l2945
  1682     0402  3A75               	xorlw	117	; case 117
  1683     0403  1903               	skipnz
  1684     0404  2BE7               	goto	l2911
  1685     0405  2C81               	goto	l2943
  1686     0406                     l2917:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1689     0406  0835               	movf	sprintf@ap,w
  1690     0407  0084               	movwf	4
  1691     0408  1383               	bcf	3,7	;select IRP bank0
  1692     0409  0800               	movf	0,w
  1693     040A  00B6               	movwf	sprintf@val
  1694     040B  0A84               	incf	4,f
  1695     040C  0800               	movf	0,w
  1696     040D  00B7               	movwf	sprintf@val+1
  1697     040E                     l2919:
  1698     040E  3002               	movlw	2
  1699     040F  00B1               	movwf	??_sprintf
  1700     0410  0831               	movf	??_sprintf,w
  1701     0411  07B5               	addwf	sprintf@ap,f
  1702     0412                     l2921:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1705     0412  01B9               	clrf	sprintf@c
  1706     0413  0AB9               	incf	sprintf@c,f
  1707     0414                     l2927:
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1710     0414  0839               	movf	sprintf@c,w
  1711     0415  00B1               	movwf	??_sprintf
  1712     0416  0731               	addwf	??_sprintf,w
  1713     0417  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1714     0418  0084               	movwf	4
  1715     0419  120A  158A  200A  120A  118A  	fcall	stringdir
  1716     041E  00B2               	movwf	??_sprintf+1
  1717     041F  120A  158A  200A  120A  118A  	fcall	stringdir
  1718     0424  00B3               	movwf	??_sprintf+2
  1719     0425  0833               	movf	??_sprintf+2,w
  1720     0426  0237               	subwf	sprintf@val+1,w
  1721     0427  1D03               	skipz
  1722     0428  2C2B               	goto	u3245
  1723     0429  0832               	movf	??_sprintf+1,w
  1724     042A  0236               	subwf	sprintf@val,w
  1725     042B                     u3245:
  1726     042B  1803               	skipnc
  1727     042C  2C2E               	goto	u3241
  1728     042D  2C2F               	goto	u3240
  1729     042E                     u3241:
  1730     042E  2C30               	goto	l2931
  1731     042F                     u3240:
  1732     042F  2C3A               	goto	l2933
  1733     0430                     l2931:
  1734     0430  3001               	movlw	1
  1735     0431  00B1               	movwf	??_sprintf
  1736     0432  0831               	movf	??_sprintf,w
  1737     0433  07B9               	addwf	sprintf@c,f
  1738     0434  3005               	movlw	5
  1739     0435  0639               	xorwf	sprintf@c,w
  1740     0436  1D03               	btfss	3,2
  1741     0437  2C39               	goto	u3251
  1742     0438  2C3A               	goto	u3250
  1743     0439                     u3251:
  1744     0439  2C14               	goto	l2927
  1745     043A                     u3250:
  1746     043A                     l2933:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1749     043A  0839               	movf	sprintf@c,w
  1750     043B  00B8               	movwf	sprintf@prec
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1753     043C  2C78               	goto	l2941
  1754     043D                     l2935:
  1755                           
  1756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1757     043D  300A               	movlw	10
  1758     043E  00A7               	movwf	___lwmod@divisor
  1759     043F  3000               	movlw	0
  1760     0440  00A8               	movwf	___lwmod@divisor+1
  1761     0441  0838               	movf	sprintf@prec,w
  1762     0442  00B1               	movwf	??_sprintf
  1763     0443  0731               	addwf	??_sprintf,w
  1764     0444  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1765     0445  0084               	movwf	4
  1766     0446  120A  158A  200A  120A  118A  	fcall	stringdir
  1767     044B  00A0               	movwf	___lwdiv@divisor
  1768     044C  120A  158A  200A  120A  118A  	fcall	stringdir
  1769     0451  00A1               	movwf	___lwdiv@divisor+1
  1770     0452  0837               	movf	sprintf@val+1,w
  1771     0453  00A3               	movwf	___lwdiv@dividend+1
  1772     0454  0836               	movf	sprintf@val,w
  1773     0455  00A2               	movwf	___lwdiv@dividend
  1774     0456  120A  158A  26BC  120A  118A  	fcall	___lwdiv
  1775     045B  1283               	bcf	3,5	;RP0=0, select bank0
  1776     045C  1303               	bcf	3,6	;RP1=0, select bank0
  1777     045D  0821               	movf	?___lwdiv+1,w
  1778     045E  00AA               	movwf	___lwmod@dividend+1
  1779     045F  0820               	movf	?___lwdiv,w
  1780     0460  00A9               	movwf	___lwmod@dividend
  1781     0461  120A  158A  263A  120A  118A  	fcall	___lwmod
  1782     0466  1283               	bcf	3,5	;RP0=0, select bank0
  1783     0467  1303               	bcf	3,6	;RP1=0, select bank0
  1784     0468  0827               	movf	?___lwmod,w
  1785     0469  3E30               	addlw	48
  1786     046A  00B9               	movwf	sprintf@c
  1787     046B                     l2937:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1790     046B  082C               	movf	sprintf@sp,w
  1791     046C  0084               	movwf	4
  1792     046D  1783               	bsf	3,7
  1793     046E  1C2D               	btfss	sprintf@sp+1,0
  1794     046F  1383               	bcf	3,7
  1795     0470  0839               	movf	sprintf@c,w
  1796     0471  0080               	movwf	0
  1797     0472                     l2939:
  1798     0472  3001               	movlw	1
  1799     0473  07AC               	addwf	sprintf@sp,f
  1800     0474  1803               	skipnc
  1801     0475  0AAD               	incf	sprintf@sp+1,f
  1802     0476  3000               	movlw	0
  1803     0477  07AD               	addwf	sprintf@sp+1,f
  1804     0478                     l2941:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1807     0478  30FF               	movlw	255
  1808     0479  00B1               	movwf	??_sprintf
  1809     047A  0831               	movf	??_sprintf,w
  1810     047B  07B8               	addwf	sprintf@prec,f
  1811     047C  0A38               	incf	sprintf@prec,w
  1812     047D  1D03               	btfss	3,2
  1813     047E  2C80               	goto	u3261
  1814     047F  2C81               	goto	u3260
  1815     0480                     u3261:
  1816     0480  2C3D               	goto	l2935
  1817     0481                     u3260:
  1818     0481                     l2943:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1821     0481  3001               	movlw	1
  1822     0482  07AE               	addwf	sprintf@f,f
  1823     0483  30FF               	movlw	-1
  1824     0484  072E               	addwf	sprintf@f,w
  1825     0485  0084               	movwf	4
  1826     0486  120A  158A  200A  120A  118A  	fcall	stringdir
  1827     048B  00B9               	movwf	sprintf@c
  1828     048C  0839               	movf	sprintf@c,w
  1829     048D  1D03               	btfss	3,2
  1830     048E  2C90               	goto	u3271
  1831     048F  2C91               	goto	u3270
  1832     0490                     u3271:
  1833     0490  2BD1               	goto	l2903
  1834     0491                     u3270:
  1835     0491                     l2945:
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1838     0491  082C               	movf	sprintf@sp,w
  1839     0492  0084               	movwf	4
  1840     0493  1783               	bsf	3,7
  1841     0494  1C2D               	btfss	sprintf@sp+1,0
  1842     0495  1383               	bcf	3,7
  1843     0496  0180               	clrf	0
  1844     0497                     l313:
  1845     0497  0008               	return
  1846     0498                     __end_of_sprintf:
  1847                           
  1848                           	psect	text2
  1849     0E3A                     __ptext2:	
  1850 ;; *************** function ___lwmod *****************
  1851 ;; Defined at:
  1852 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  divisor         2    7[BANK0 ] unsigned int 
  1855 ;;  dividend        2    9[BANK0 ] unsigned int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  counter         1   11[BANK0 ] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2    7[BANK0 ] unsigned int 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1867 ;;      Params:         0       4       0       0       0
  1868 ;;      Locals:         0       1       0       0       0
  1869 ;;      Temps:          1       0       0       0       0
  1870 ;;      Totals:         1       5       0       0       0
  1871 ;;Total ram usage:        6 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 2
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_sprintf
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881     0E3A                     ___lwmod:	
  1882                           ;psect for function ___lwmod
  1883                           
  1884     0E3A                     l2825:	
  1885                           ;incstack = 0
  1886                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1887                           
  1888     0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  1889     0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  1890     0E3C  0827               	movf	___lwmod@divisor,w
  1891     0E3D  0428               	iorwf	___lwmod@divisor+1,w
  1892     0E3E  1903               	btfsc	3,2
  1893     0E3F  2E41               	goto	u3121
  1894     0E40  2E42               	goto	u3120
  1895     0E41                     u3121:
  1896     0E41  2E71               	goto	l2843
  1897     0E42                     u3120:
  1898     0E42                     l2827:
  1899     0E42  01AB               	clrf	___lwmod@counter
  1900     0E43  0AAB               	incf	___lwmod@counter,f
  1901     0E44  2E50               	goto	l2833
  1902     0E45                     l2829:
  1903     0E45  3001               	movlw	1
  1904     0E46                     u3135:
  1905     0E46  1003               	clrc
  1906     0E47  0DA7               	rlf	___lwmod@divisor,f
  1907     0E48  0DA8               	rlf	___lwmod@divisor+1,f
  1908     0E49  3EFF               	addlw	-1
  1909     0E4A  1D03               	skipz
  1910     0E4B  2E46               	goto	u3135
  1911     0E4C                     l2831:
  1912     0E4C  3001               	movlw	1
  1913     0E4D  00F6               	movwf	??___lwmod
  1914     0E4E  0876               	movf	??___lwmod,w
  1915     0E4F  07AB               	addwf	___lwmod@counter,f
  1916     0E50                     l2833:
  1917     0E50  1FA8               	btfss	___lwmod@divisor+1,7
  1918     0E51  2E53               	goto	u3141
  1919     0E52  2E54               	goto	u3140
  1920     0E53                     u3141:
  1921     0E53  2E45               	goto	l2829
  1922     0E54                     u3140:
  1923     0E54                     l2835:
  1924     0E54  0828               	movf	___lwmod@divisor+1,w
  1925     0E55  022A               	subwf	___lwmod@dividend+1,w
  1926     0E56  1D03               	skipz
  1927     0E57  2E5A               	goto	u3155
  1928     0E58  0827               	movf	___lwmod@divisor,w
  1929     0E59  0229               	subwf	___lwmod@dividend,w
  1930     0E5A                     u3155:
  1931     0E5A  1C03               	skipc
  1932     0E5B  2E5D               	goto	u3151
  1933     0E5C  2E5E               	goto	u3150
  1934     0E5D                     u3151:
  1935     0E5D  2E64               	goto	l2839
  1936     0E5E                     u3150:
  1937     0E5E                     l2837:
  1938     0E5E  0827               	movf	___lwmod@divisor,w
  1939     0E5F  02A9               	subwf	___lwmod@dividend,f
  1940     0E60  0828               	movf	___lwmod@divisor+1,w
  1941     0E61  1C03               	skipc
  1942     0E62  03AA               	decf	___lwmod@dividend+1,f
  1943     0E63  02AA               	subwf	___lwmod@dividend+1,f
  1944     0E64                     l2839:
  1945     0E64  3001               	movlw	1
  1946     0E65                     u3165:
  1947     0E65  1003               	clrc
  1948     0E66  0CA8               	rrf	___lwmod@divisor+1,f
  1949     0E67  0CA7               	rrf	___lwmod@divisor,f
  1950     0E68  3EFF               	addlw	-1
  1951     0E69  1D03               	skipz
  1952     0E6A  2E65               	goto	u3165
  1953     0E6B                     l2841:
  1954     0E6B  3001               	movlw	1
  1955     0E6C  02AB               	subwf	___lwmod@counter,f
  1956     0E6D  1D03               	btfss	3,2
  1957     0E6E  2E70               	goto	u3171
  1958     0E6F  2E71               	goto	u3170
  1959     0E70                     u3171:
  1960     0E70  2E54               	goto	l2835
  1961     0E71                     u3170:
  1962     0E71                     l2843:
  1963     0E71  082A               	movf	___lwmod@dividend+1,w
  1964     0E72  00A8               	movwf	?___lwmod+1
  1965     0E73  0829               	movf	___lwmod@dividend,w
  1966     0E74  00A7               	movwf	?___lwmod
  1967     0E75                     l599:
  1968     0E75  0008               	return
  1969     0E76                     __end_of___lwmod:
  1970                           
  1971                           	psect	text3
  1972     0EBC                     __ptext3:	
  1973 ;; *************** function ___lwdiv *****************
  1974 ;; Defined at:
  1975 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  divisor         2    0[BANK0 ] unsigned int 
  1978 ;;  dividend        2    2[BANK0 ] unsigned int 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  quotient        2    5[BANK0 ] unsigned int 
  1981 ;;  counter         1    4[BANK0 ] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2    0[BANK0 ] unsigned int 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1991 ;;      Params:         0       4       0       0       0
  1992 ;;      Locals:         0       3       0       0       0
  1993 ;;      Temps:          1       0       0       0       0
  1994 ;;      Totals:         1       7       0       0       0
  1995 ;;Total ram usage:        8 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 2
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_sprintf
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005     0EBC                     ___lwdiv:	
  2006                           ;psect for function ___lwdiv
  2007                           
  2008     0EBC                     l2799:	
  2009                           ;incstack = 0
  2010                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2011                           
  2012     0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  2013     0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  2014     0EBE  01A5               	clrf	___lwdiv@quotient
  2015     0EBF  01A6               	clrf	___lwdiv@quotient+1
  2016     0EC0                     l2801:
  2017     0EC0  0820               	movf	___lwdiv@divisor,w
  2018     0EC1  0421               	iorwf	___lwdiv@divisor+1,w
  2019     0EC2  1903               	btfsc	3,2
  2020     0EC3  2EC5               	goto	u3051
  2021     0EC4  2EC6               	goto	u3050
  2022     0EC5                     u3051:
  2023     0EC5  2EFD               	goto	l2821
  2024     0EC6                     u3050:
  2025     0EC6                     l2803:
  2026     0EC6  01A4               	clrf	___lwdiv@counter
  2027     0EC7  0AA4               	incf	___lwdiv@counter,f
  2028     0EC8  2ED4               	goto	l2809
  2029     0EC9                     l2805:
  2030     0EC9  3001               	movlw	1
  2031     0ECA                     u3065:
  2032     0ECA  1003               	clrc
  2033     0ECB  0DA0               	rlf	___lwdiv@divisor,f
  2034     0ECC  0DA1               	rlf	___lwdiv@divisor+1,f
  2035     0ECD  3EFF               	addlw	-1
  2036     0ECE  1D03               	skipz
  2037     0ECF  2ECA               	goto	u3065
  2038     0ED0                     l2807:
  2039     0ED0  3001               	movlw	1
  2040     0ED1  00F5               	movwf	??___lwdiv
  2041     0ED2  0875               	movf	??___lwdiv,w
  2042     0ED3  07A4               	addwf	___lwdiv@counter,f
  2043     0ED4                     l2809:
  2044     0ED4  1FA1               	btfss	___lwdiv@divisor+1,7
  2045     0ED5  2ED7               	goto	u3071
  2046     0ED6  2ED8               	goto	u3070
  2047     0ED7                     u3071:
  2048     0ED7  2EC9               	goto	l2805
  2049     0ED8                     u3070:
  2050     0ED8                     l2811:
  2051     0ED8  3001               	movlw	1
  2052     0ED9                     u3085:
  2053     0ED9  1003               	clrc
  2054     0EDA  0DA5               	rlf	___lwdiv@quotient,f
  2055     0EDB  0DA6               	rlf	___lwdiv@quotient+1,f
  2056     0EDC  3EFF               	addlw	-1
  2057     0EDD  1D03               	skipz
  2058     0EDE  2ED9               	goto	u3085
  2059     0EDF  0821               	movf	___lwdiv@divisor+1,w
  2060     0EE0  0223               	subwf	___lwdiv@dividend+1,w
  2061     0EE1  1D03               	skipz
  2062     0EE2  2EE5               	goto	u3095
  2063     0EE3  0820               	movf	___lwdiv@divisor,w
  2064     0EE4  0222               	subwf	___lwdiv@dividend,w
  2065     0EE5                     u3095:
  2066     0EE5  1C03               	skipc
  2067     0EE6  2EE8               	goto	u3091
  2068     0EE7  2EE9               	goto	u3090
  2069     0EE8                     u3091:
  2070     0EE8  2EF0               	goto	l2817
  2071     0EE9                     u3090:
  2072     0EE9                     l2813:
  2073     0EE9  0820               	movf	___lwdiv@divisor,w
  2074     0EEA  02A2               	subwf	___lwdiv@dividend,f
  2075     0EEB  0821               	movf	___lwdiv@divisor+1,w
  2076     0EEC  1C03               	skipc
  2077     0EED  03A3               	decf	___lwdiv@dividend+1,f
  2078     0EEE  02A3               	subwf	___lwdiv@dividend+1,f
  2079     0EEF                     l2815:
  2080     0EEF  1425               	bsf	___lwdiv@quotient,0
  2081     0EF0                     l2817:
  2082     0EF0  3001               	movlw	1
  2083     0EF1                     u3105:
  2084     0EF1  1003               	clrc
  2085     0EF2  0CA1               	rrf	___lwdiv@divisor+1,f
  2086     0EF3  0CA0               	rrf	___lwdiv@divisor,f
  2087     0EF4  3EFF               	addlw	-1
  2088     0EF5  1D03               	skipz
  2089     0EF6  2EF1               	goto	u3105
  2090     0EF7                     l2819:
  2091     0EF7  3001               	movlw	1
  2092     0EF8  02A4               	subwf	___lwdiv@counter,f
  2093     0EF9  1D03               	btfss	3,2
  2094     0EFA  2EFC               	goto	u3111
  2095     0EFB  2EFD               	goto	u3110
  2096     0EFC                     u3111:
  2097     0EFC  2ED8               	goto	l2811
  2098     0EFD                     u3110:
  2099     0EFD                     l2821:
  2100     0EFD  0826               	movf	___lwdiv@quotient+1,w
  2101     0EFE  00A1               	movwf	?___lwdiv+1
  2102     0EFF  0825               	movf	___lwdiv@quotient,w
  2103     0F00  00A0               	movwf	?___lwdiv
  2104     0F01                     l589:
  2105     0F01  0008               	return
  2106     0F02                     __end_of___lwdiv:
  2107                           
  2108                           	psect	text4
  2109     0DE4                     __ptext4:	
  2110 ;; *************** function _adc_setup *****************
  2111 ;; Defined at:
  2112 ;;		line 17 in file "adc.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  inter           1    wreg     _Bool 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  inter           1    6[COMMON] _Bool 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2126 ;;      Params:         0       0       0       0       0
  2127 ;;      Locals:         1       0       0       0       0
  2128 ;;      Temps:          1       0       0       0       0
  2129 ;;      Totals:         2       0       0       0       0
  2130 ;;Total ram usage:        2 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 2
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140     0DE4                     _adc_setup:	
  2141                           ;psect for function _adc_setup
  2142                           
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _adc_setup: [wreg+status,2+status,0]
  2146                           ;adc_setup@inter stored from wreg
  2147     0DE4  00F6               	movwf	adc_setup@inter
  2148     0DE5                     l2171:
  2149                           
  2150                           ;adc.c: 18:     if (inter == 1) {
  2151     0DE5  0376               	decf	adc_setup@inter,w
  2152     0DE6  1D03               	btfss	3,2
  2153     0DE7  2DE9               	goto	u2241
  2154     0DE8  2DEA               	goto	u2240
  2155     0DE9                     u2241:
  2156     0DE9  2DF0               	goto	l134
  2157     0DEA                     u2240:
  2158     0DEA                     l2173:
  2159                           
  2160                           ;adc.c: 19:     INTCONbits.GIE = 1;
  2161     0DEA  178B               	bsf	11,7	;volatile
  2162                           
  2163                           ;adc.c: 20:     INTCONbits.PEIE = 1;
  2164     0DEB  170B               	bsf	11,6	;volatile
  2165                           
  2166                           ;adc.c: 21:     PIE1bits.ADIE = 0;}
  2167     0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  2168     0DED  1303               	bcf	3,6	;RP1=0, select bank1
  2169     0DEE  130C               	bcf	12,6	;volatile
  2170     0DEF  2DF3               	goto	l135
  2171     0DF0                     l134:	
  2172                           ;adc.c: 22:     else {
  2173                           
  2174                           
  2175                           ;adc.c: 23:     PIE1bits.ADIE = 0;}
  2176     0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  2177     0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  2178     0DF2  130C               	bcf	12,6	;volatile
  2179     0DF3                     l135:
  2180                           
  2181                           ;adc.c: 25:     ADCON1bits.ADFM = 0;
  2182     0DF3  139F               	bcf	31,7	;volatile
  2183                           
  2184                           ;adc.c: 26:     ADCON1bits.VCFG0 = 0;
  2185     0DF4  121F               	bcf	31,4	;volatile
  2186                           
  2187                           ;adc.c: 27:     ADCON1bits.VCFG1 = 0;
  2188     0DF5  129F               	bcf	31,5	;volatile
  2189     0DF6                     l2175:
  2190                           
  2191                           ;adc.c: 29:     ANSEL = 0x00;
  2192     0DF6  1683               	bsf	3,5	;RP0=1, select bank3
  2193     0DF7  1703               	bsf	3,6	;RP1=1, select bank3
  2194     0DF8  0188               	clrf	8	;volatile
  2195                           
  2196                           ;adc.c: 30:     ANSELH = 0x00;
  2197     0DF9  0189               	clrf	9	;volatile
  2198     0DFA                     l2177:
  2199                           
  2200                           ;adc.c: 32:     ADCON0bits.ADCS = 1;
  2201     0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  2202     0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  2203     0DFC  081F               	movf	31,w	;volatile
  2204     0DFD  393F               	andlw	-193
  2205     0DFE  3840               	iorlw	64
  2206     0DFF  009F               	movwf	31	;volatile
  2207     0E00                     l2179:
  2208                           
  2209                           ;adc.c: 33:     ADCON0bits.CHS = 0;
  2210     0E00  30C3               	movlw	-61
  2211     0E01  059F               	andwf	31,f	;volatile
  2212     0E02                     l2181:
  2213                           
  2214                           ;adc.c: 34:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2215     0E02  3021               	movlw	33
  2216     0E03  00F5               	movwf	??_adc_setup
  2217     0E04                     u3347:
  2218     0E04  0BF5               	decfsz	??_adc_setup,f
  2219     0E05  2E04               	goto	u3347
  2220     0E06                     l2183:
  2221                           
  2222                           ;adc.c: 35:     ADCON0bits.ADON = 1;
  2223     0E06  1283               	bcf	3,5	;RP0=0, select bank0
  2224     0E07  1303               	bcf	3,6	;RP1=0, select bank0
  2225     0E08  141F               	bsf	31,0	;volatile
  2226     0E09                     l2185:
  2227                           
  2228                           ;adc.c: 36:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2229     0E09  3021               	movlw	33
  2230     0E0A  00F5               	movwf	??_adc_setup
  2231     0E0B                     u3357:
  2232     0E0B  0BF5               	decfsz	??_adc_setup,f
  2233     0E0C  2E0B               	goto	u3357
  2234     0E0D                     l136:
  2235     0E0D  0008               	return
  2236     0E0E                     __end_of_adc_setup:
  2237                           
  2238                           	psect	text5
  2239     065F                     __ptext5:	
  2240 ;; *************** function _adc_mv *****************
  2241 ;; Defined at:
  2242 ;;		line 135 in file "adc.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  channel         1    wreg     unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  channel         1   65[BANK0 ] unsigned char 
  2247 ;;  calc            4   57[BANK0 ] float 
  2248 ;;  out             1   66[BANK0 ] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  2   53[BANK0 ] unsigned int 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2258 ;;      Params:         0       2       0       0       0
  2259 ;;      Locals:         0      10       0       0       0
  2260 ;;      Temps:          0       2       0       0       0
  2261 ;;      Totals:         0      14       0       0       0
  2262 ;;Total ram usage:       14 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 6
  2265 ;; This function calls:
  2266 ;;		___awdiv
  2267 ;;		___fltol
  2268 ;;		___wmul
  2269 ;;		___xxtofl
  2270 ;;		_adc_RO
  2271 ;;		_round
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277     065F                     _adc_mv:	
  2278                           ;psect for function _adc_mv
  2279                           
  2280                           
  2281                           ;incstack = 0
  2282                           ; Regs used in _adc_mv: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2283                           ;adc_mv@channel stored from wreg
  2284     065F  1283               	bcf	3,5	;RP0=0, select bank0
  2285     0660  1303               	bcf	3,6	;RP1=0, select bank0
  2286     0661  00E1               	movwf	adc_mv@channel
  2287     0662                     l2893:
  2288                           
  2289                           ;adc.c: 136:     char out;;adc.c: 137:     float calc;;adc.c: 138:     out = adc_RO(chan
      +                          nel);
  2290     0662  0861               	movf	adc_mv@channel,w
  2291     0663  120A  158A  2529  120A  118A  	fcall	_adc_RO
  2292     0668  1283               	bcf	3,5	;RP0=0, select bank0
  2293     0669  1303               	bcf	3,6	;RP1=0, select bank0
  2294     066A  00E2               	movwf	adc_mv@out
  2295                           
  2296                           ;adc.c: 139:     calc = out * 5000 / 255;
  2297     066B  3088               	movlw	136
  2298     066C  00A2               	movwf	___wmul@multiplicand
  2299     066D  3013               	movlw	19
  2300     066E  00A3               	movwf	___wmul@multiplicand+1
  2301     066F  0862               	movf	adc_mv@out,w
  2302     0670  00D7               	movwf	??_adc_mv
  2303     0671  01D8               	clrf	??_adc_mv+1
  2304     0672  0857               	movf	??_adc_mv,w
  2305     0673  00A0               	movwf	___wmul@multiplier
  2306     0674  0858               	movf	??_adc_mv+1,w
  2307     0675  00A1               	movwf	___wmul@multiplier+1
  2308     0676  120A  158A  25BD  120A  118A  	fcall	___wmul
  2309     067B  1283               	bcf	3,5	;RP0=0, select bank0
  2310     067C  1303               	bcf	3,6	;RP1=0, select bank0
  2311     067D  0821               	movf	?___wmul+1,w
  2312     067E  00A7               	movwf	___awdiv@dividend+1
  2313     067F  0820               	movf	?___wmul,w
  2314     0680  00A6               	movwf	___awdiv@dividend
  2315     0681  30FF               	movlw	255
  2316     0682  00A4               	movwf	___awdiv@divisor
  2317     0683  3000               	movlw	0
  2318     0684  00A5               	movwf	___awdiv@divisor+1
  2319     0685  120A  118A  26D0  120A  118A  	fcall	___awdiv
  2320     068A  1283               	bcf	3,5	;RP0=0, select bank0
  2321     068B  1303               	bcf	3,6	;RP1=0, select bank0
  2322     068C  0824               	movf	?___awdiv,w
  2323     068D  00AD               	movwf	___xxtofl@val
  2324     068E  0825               	movf	?___awdiv+1,w
  2325     068F  00AE               	movwf	___xxtofl@val+1
  2326     0690  3000               	movlw	0
  2327     0691  1BAE               	btfsc	___xxtofl@val+1,7
  2328     0692  30FF               	movlw	255
  2329     0693  00AF               	movwf	___xxtofl@val+2
  2330     0694  00B0               	movwf	___xxtofl@val+3
  2331     0695  3001               	movlw	1
  2332     0696  120A  118A  2498  120A  118A  	fcall	___xxtofl
  2333     069B  1283               	bcf	3,5	;RP0=0, select bank0
  2334     069C  1303               	bcf	3,6	;RP1=0, select bank0
  2335     069D  0830               	movf	?___xxtofl+3,w
  2336     069E  00DC               	movwf	adc_mv@calc+3
  2337     069F  082F               	movf	?___xxtofl+2,w
  2338     06A0  00DB               	movwf	adc_mv@calc+2
  2339     06A1  082E               	movf	?___xxtofl+1,w
  2340     06A2  00DA               	movwf	adc_mv@calc+1
  2341     06A3  082D               	movf	?___xxtofl,w
  2342     06A4  00D9               	movwf	adc_mv@calc
  2343     06A5                     l2895:
  2344                           
  2345                           ;adc.c: 140:     return round(calc);
  2346     06A5  085C               	movf	adc_mv@calc+3,w
  2347     06A6  00D0               	movwf	round@x+3
  2348     06A7  085B               	movf	adc_mv@calc+2,w
  2349     06A8  00CF               	movwf	round@x+2
  2350     06A9  085A               	movf	adc_mv@calc+1,w
  2351     06AA  00CE               	movwf	round@x+1
  2352     06AB  0859               	movf	adc_mv@calc,w
  2353     06AC  00CD               	movwf	round@x
  2354     06AD  120A  118A  2739  120A  118A  	fcall	_round
  2355     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  2356     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  2357     06B4  0850               	movf	?_round+3,w
  2358     06B5  00E0               	movwf	_adc_mv$1352+3
  2359     06B6  084F               	movf	?_round+2,w
  2360     06B7  00DF               	movwf	_adc_mv$1352+2
  2361     06B8  084E               	movf	?_round+1,w
  2362     06B9  00DE               	movwf	_adc_mv$1352+1
  2363     06BA  084D               	movf	?_round,w
  2364     06BB  00DD               	movwf	_adc_mv$1352
  2365     06BC                     l2897:
  2366                           
  2367                           ;adc.c: 140:     return round(calc);
  2368     06BC  0860               	movf	_adc_mv$1352+3,w
  2369     06BD  00A3               	movwf	___fltol@f1+3
  2370     06BE  085F               	movf	_adc_mv$1352+2,w
  2371     06BF  00A2               	movwf	___fltol@f1+2
  2372     06C0  085E               	movf	_adc_mv$1352+1,w
  2373     06C1  00A1               	movwf	___fltol@f1+1
  2374     06C2  085D               	movf	_adc_mv$1352,w
  2375     06C3  00A0               	movwf	___fltol@f1
  2376     06C4  120A  118A  25E7  120A  118A  	fcall	___fltol
  2377     06C9  1283               	bcf	3,5	;RP0=0, select bank0
  2378     06CA  1303               	bcf	3,6	;RP1=0, select bank0
  2379     06CB  0821               	movf	?___fltol+1,w
  2380     06CC  00D6               	movwf	?_adc_mv+1
  2381     06CD  0820               	movf	?___fltol,w
  2382     06CE  00D5               	movwf	?_adc_mv
  2383     06CF                     l172:
  2384     06CF  0008               	return
  2385     06D0                     __end_of_adc_mv:
  2386                           
  2387                           	psect	text6
  2388     0739                     __ptext6:	
  2389 ;; *************** function _round *****************
  2390 ;; Defined at:
  2391 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\round.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  x               4   45[BANK0 ] unsigned int 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  f               4   49[BANK0 ] unsigned int 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  4   45[BANK0 ] unsigned int 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         0       4       0       0       0
  2406 ;;      Locals:         0       4       0       0       0
  2407 ;;      Temps:          0       0       0       0       0
  2408 ;;      Totals:         0       8       0       0       0
  2409 ;;Total ram usage:        8 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 5
  2412 ;; This function calls:
  2413 ;;		___fladd
  2414 ;;		___flsub
  2415 ;;		_trunc
  2416 ;; This function is called by:
  2417 ;;		_adc_mv
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421     0739                     _round:	
  2422                           ;psect for function _round
  2423                           
  2424     0739                     l2777:	
  2425                           ;incstack = 0
  2426                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2427                           
  2428     0739  1283               	bcf	3,5	;RP0=0, select bank0
  2429     073A  1303               	bcf	3,6	;RP1=0, select bank0
  2430     073B  0850               	movf	round@x+3,w
  2431     073C  00BE               	movwf	trunc@x+3
  2432     073D  084F               	movf	round@x+2,w
  2433     073E  00BD               	movwf	trunc@x+2
  2434     073F  084E               	movf	round@x+1,w
  2435     0740  00BC               	movwf	trunc@x+1
  2436     0741  084D               	movf	round@x,w
  2437     0742  00BB               	movwf	trunc@x
  2438     0743  120A  158A  27A6  120A  118A  	fcall	_trunc
  2439     0748  1283               	bcf	3,5	;RP0=0, select bank0
  2440     0749  1303               	bcf	3,6	;RP1=0, select bank0
  2441     074A  083E               	movf	?_trunc+3,w
  2442     074B  00C8               	movwf	___flsub@a+3
  2443     074C  083D               	movf	?_trunc+2,w
  2444     074D  00C7               	movwf	___flsub@a+2
  2445     074E  083C               	movf	?_trunc+1,w
  2446     074F  00C6               	movwf	___flsub@a+1
  2447     0750  083B               	movf	?_trunc,w
  2448     0751  00C5               	movwf	___flsub@a
  2449     0752  0850               	movf	round@x+3,w
  2450     0753  00CC               	movwf	___flsub@b+3
  2451     0754  084F               	movf	round@x+2,w
  2452     0755  00CB               	movwf	___flsub@b+2
  2453     0756  084E               	movf	round@x+1,w
  2454     0757  00CA               	movwf	___flsub@b+1
  2455     0758  084D               	movf	round@x,w
  2456     0759  00C9               	movwf	___flsub@b
  2457     075A  120A  158A  2599  120A  118A  	fcall	___flsub
  2458     075F  1283               	bcf	3,5	;RP0=0, select bank0
  2459     0760  1303               	bcf	3,6	;RP1=0, select bank0
  2460     0761  0848               	movf	?___flsub+3,w
  2461     0762  00D4               	movwf	round@f+3
  2462     0763  0847               	movf	?___flsub+2,w
  2463     0764  00D3               	movwf	round@f+2
  2464     0765  0846               	movf	?___flsub+1,w
  2465     0766  00D2               	movwf	round@f+1
  2466     0767  0845               	movf	?___flsub,w
  2467     0768  00D1               	movwf	round@f
  2468     0769                     l2779:
  2469     0769  0854               	movf	round@f+3,w
  2470     076A  00A3               	movwf	___fladd@b+3
  2471     076B  0853               	movf	round@f+2,w
  2472     076C  00A2               	movwf	___fladd@b+2
  2473     076D  0852               	movf	round@f+1,w
  2474     076E  00A1               	movwf	___fladd@b+1
  2475     076F  0851               	movf	round@f,w
  2476     0770  00A0               	movwf	___fladd@b
  2477     0771  0850               	movf	round@x+3,w
  2478     0772  00A7               	movwf	___fladd@a+3
  2479     0773  084F               	movf	round@x+2,w
  2480     0774  00A6               	movwf	___fladd@a+2
  2481     0775  084E               	movf	round@x+1,w
  2482     0776  00A5               	movwf	___fladd@a+1
  2483     0777  084D               	movf	round@x,w
  2484     0778  00A4               	movwf	___fladd@a
  2485     0779  120A  118A  2018  120A  118A  	fcall	___fladd
  2486     077E  1283               	bcf	3,5	;RP0=0, select bank0
  2487     077F  1303               	bcf	3,6	;RP1=0, select bank0
  2488     0780  0823               	movf	?___fladd+3,w
  2489     0781  00D0               	movwf	round@x+3
  2490     0782  0822               	movf	?___fladd+2,w
  2491     0783  00CF               	movwf	round@x+2
  2492     0784  0821               	movf	?___fladd+1,w
  2493     0785  00CE               	movwf	round@x+1
  2494     0786  0820               	movf	?___fladd,w
  2495     0787  00CD               	movwf	round@x
  2496     0788                     l2781:
  2497     0788  0850               	movf	round@x+3,w
  2498     0789  00BE               	movwf	trunc@x+3
  2499     078A  084F               	movf	round@x+2,w
  2500     078B  00BD               	movwf	trunc@x+2
  2501     078C  084E               	movf	round@x+1,w
  2502     078D  00BC               	movwf	trunc@x+1
  2503     078E  084D               	movf	round@x,w
  2504     078F  00BB               	movwf	trunc@x
  2505     0790  120A  158A  27A6  120A  118A  	fcall	_trunc
  2506     0795  1283               	bcf	3,5	;RP0=0, select bank0
  2507     0796  1303               	bcf	3,6	;RP1=0, select bank0
  2508     0797  083E               	movf	?_trunc+3,w
  2509     0798  00D0               	movwf	?_round+3
  2510     0799  083D               	movf	?_trunc+2,w
  2511     079A  00CF               	movwf	?_round+2
  2512     079B  083C               	movf	?_trunc+1,w
  2513     079C  00CE               	movwf	?_round+1
  2514     079D  083B               	movf	?_trunc,w
  2515     079E  00CD               	movwf	?_round
  2516     079F                     l770:
  2517     079F  0008               	return
  2518     07A0                     __end_of_round:
  2519                           
  2520                           	psect	text7
  2521     0FA6                     __ptext7:	
  2522 ;; *************** function _trunc *****************
  2523 ;; Defined at:
  2524 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\trunc.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  x               4   27[BANK0 ] unsigned int 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  i               4   31[BANK0 ] unsigned int 
  2529 ;;  expon           2   35[BANK0 ] int 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  4   27[BANK0 ] int 
  2532 ;; Registers used:
  2533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2539 ;;      Params:         0       4       0       0       0
  2540 ;;      Locals:         0       6       0       0       0
  2541 ;;      Temps:          0       0       0       0       0
  2542 ;;      Totals:         0      10       0       0       0
  2543 ;;Total ram usage:       10 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 4
  2546 ;; This function calls:
  2547 ;;		___fltol
  2548 ;;		___xxtofl
  2549 ;;		_frexp
  2550 ;; This function is called by:
  2551 ;;		_round
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555     0FA6                     _trunc:	
  2556                           ;psect for function _trunc
  2557                           
  2558     0FA6                     l2727:	
  2559                           ;incstack = 0
  2560                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2561                           
  2562     0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  2563     0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  2564     0FA8  083E               	movf	trunc@x+3,w
  2565     0FA9  00AF               	movwf	frexp@value+3
  2566     0FAA  083D               	movf	trunc@x+2,w
  2567     0FAB  00AE               	movwf	frexp@value+2
  2568     0FAC  083C               	movf	trunc@x+1,w
  2569     0FAD  00AD               	movwf	frexp@value+1
  2570     0FAE  083B               	movf	trunc@x,w
  2571     0FAF  00AC               	movwf	frexp@value
  2572     0FB0  3043               	movlw	(low (trunc@expon| 0))& (0+255)
  2573     0FB1  00B0               	movwf	frexp@eptr
  2574     0FB2  120A  158A  2752  120A  158A  	fcall	_frexp
  2575     0FB7                     l2729:
  2576     0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  2577     0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  2578     0FB9  1FC4               	btfss	trunc@expon+1,7
  2579     0FBA  2FBC               	goto	u2991
  2580     0FBB  2FBD               	goto	u2990
  2581     0FBC                     u2991:
  2582     0FBC  2FC6               	goto	l2735
  2583     0FBD                     u2990:
  2584     0FBD                     l2731:
  2585     0FBD  3000               	movlw	0
  2586     0FBE  00BE               	movwf	?_trunc+3
  2587     0FBF  3000               	movlw	0
  2588     0FC0  00BD               	movwf	?_trunc+2
  2589     0FC1  3000               	movlw	0
  2590     0FC2  00BC               	movwf	?_trunc+1
  2591     0FC3  3000               	movlw	0
  2592     0FC4  00BB               	movwf	?_trunc
  2593     0FC5  2FFF               	goto	l776
  2594     0FC6                     l2735:
  2595     0FC6  3000               	movlw	0
  2596     0FC7  0244               	subwf	trunc@expon+1,w
  2597     0FC8  301D               	movlw	29
  2598     0FC9  1903               	skipnz
  2599     0FCA  0243               	subwf	trunc@expon,w
  2600     0FCB  1C03               	skipc
  2601     0FCC  2FCE               	goto	u3001
  2602     0FCD  2FCF               	goto	u3000
  2603     0FCE                     u3001:
  2604     0FCE  2FD0               	goto	l2739
  2605     0FCF                     u3000:
  2606     0FCF                     l2737:
  2607     0FCF  2FFF               	goto	l776
  2608     0FD0                     l2739:
  2609     0FD0  083E               	movf	trunc@x+3,w
  2610     0FD1  00A3               	movwf	___fltol@f1+3
  2611     0FD2  083D               	movf	trunc@x+2,w
  2612     0FD3  00A2               	movwf	___fltol@f1+2
  2613     0FD4  083C               	movf	trunc@x+1,w
  2614     0FD5  00A1               	movwf	___fltol@f1+1
  2615     0FD6  083B               	movf	trunc@x,w
  2616     0FD7  00A0               	movwf	___fltol@f1
  2617     0FD8  120A  118A  25E7  120A  158A  	fcall	___fltol
  2618     0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  2619     0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  2620     0FDF  0823               	movf	?___fltol+3,w
  2621     0FE0  00B0               	movwf	___xxtofl@val+3
  2622     0FE1  0822               	movf	?___fltol+2,w
  2623     0FE2  00AF               	movwf	___xxtofl@val+2
  2624     0FE3  0821               	movf	?___fltol+1,w
  2625     0FE4  00AE               	movwf	___xxtofl@val+1
  2626     0FE5  0820               	movf	?___fltol,w
  2627     0FE6  00AD               	movwf	___xxtofl@val
  2628     0FE7  3001               	movlw	1
  2629     0FE8  120A  118A  2498  120A  158A  	fcall	___xxtofl
  2630     0FED  1283               	bcf	3,5	;RP0=0, select bank0
  2631     0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  2632     0FEF  0830               	movf	?___xxtofl+3,w
  2633     0FF0  00C2               	movwf	trunc@i+3
  2634     0FF1  082F               	movf	?___xxtofl+2,w
  2635     0FF2  00C1               	movwf	trunc@i+2
  2636     0FF3  082E               	movf	?___xxtofl+1,w
  2637     0FF4  00C0               	movwf	trunc@i+1
  2638     0FF5  082D               	movf	?___xxtofl,w
  2639     0FF6  00BF               	movwf	trunc@i
  2640     0FF7                     l2741:
  2641     0FF7  0842               	movf	trunc@i+3,w
  2642     0FF8  00BE               	movwf	?_trunc+3
  2643     0FF9  0841               	movf	trunc@i+2,w
  2644     0FFA  00BD               	movwf	?_trunc+2
  2645     0FFB  0840               	movf	trunc@i+1,w
  2646     0FFC  00BC               	movwf	?_trunc+1
  2647     0FFD  083F               	movf	trunc@i,w
  2648     0FFE  00BB               	movwf	?_trunc
  2649     0FFF                     l776:
  2650     0FFF  0008               	return
  2651     1000                     __end_of_trunc:
  2652                           
  2653                           	psect	text8
  2654     0F52                     __ptext8:	
  2655 ;; *************** function _frexp *****************
  2656 ;; Defined at:
  2657 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\frexp.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  value           4   12[BANK0 ] int 
  2660 ;;  eptr            1   16[BANK0 ] PTR int 
  2661 ;;		 -> trunc@expon(2), 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  4   12[BANK0 ] PTR int 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2673 ;;      Params:         0       5       0       0       0
  2674 ;;      Locals:         0       0       0       0       0
  2675 ;;      Temps:          2       0       0       0       0
  2676 ;;      Totals:         2       5       0       0       0
  2677 ;;Total ram usage:        7 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 3
  2680 ;; This function calls:
  2681 ;;		___fleq
  2682 ;; This function is called by:
  2683 ;;		_trunc
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687     0F52                     _frexp:	
  2688                           ;psect for function _frexp
  2689                           
  2690     0F52                     l2689:	
  2691                           ;incstack = 0
  2692                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2693                           
  2694     0F52  1283               	bcf	3,5	;RP0=0, select bank0
  2695     0F53  1303               	bcf	3,6	;RP1=0, select bank0
  2696     0F54  082F               	movf	frexp@value+3,w
  2697     0F55  00A3               	movwf	___fleq@ff1+3
  2698     0F56  082E               	movf	frexp@value+2,w
  2699     0F57  00A2               	movwf	___fleq@ff1+2
  2700     0F58  082D               	movf	frexp@value+1,w
  2701     0F59  00A1               	movwf	___fleq@ff1+1
  2702     0F5A  082C               	movf	frexp@value,w
  2703     0F5B  00A0               	movwf	___fleq@ff1
  2704     0F5C  3000               	movlw	0
  2705     0F5D  00A7               	movwf	___fleq@ff2+3
  2706     0F5E  3000               	movlw	0
  2707     0F5F  00A6               	movwf	___fleq@ff2+2
  2708     0F60  3000               	movlw	0
  2709     0F61  00A5               	movwf	___fleq@ff2+1
  2710     0F62  3000               	movlw	0
  2711     0F63  00A4               	movwf	___fleq@ff2
  2712     0F64  120A  158A  2702  120A  158A  	fcall	___fleq
  2713     0F69  1C03               	btfss	3,0
  2714     0F6A  2F6C               	goto	u2971
  2715     0F6B  2F6D               	goto	u2970
  2716     0F6C                     u2971:
  2717     0F6C  2F76               	goto	l2695
  2718     0F6D                     u2970:
  2719     0F6D                     l2691:
  2720     0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  2721     0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  2722     0F6F  0830               	movf	frexp@eptr,w
  2723     0F70  0084               	movwf	4
  2724     0F71  1383               	bcf	3,7	;select IRP bank0
  2725     0F72  0180               	clrf	0
  2726     0F73  0A84               	incf	4,f
  2727     0F74  0180               	clrf	0
  2728     0F75  2FA5               	goto	l783
  2729     0F76                     l2695:
  2730     0F76  1283               	bcf	3,5	;RP0=0, select bank0
  2731     0F77  1303               	bcf	3,6	;RP1=0, select bank0
  2732     0F78  082F               	movf	frexp@value+3,w
  2733     0F79  397F               	andlw	127
  2734     0F7A  00F5               	movwf	??_frexp
  2735     0F7B  01F6               	clrf	??_frexp+1
  2736     0F7C  1003               	clrc
  2737     0F7D  0DF5               	rlf	??_frexp,f
  2738     0F7E  0DF6               	rlf	??_frexp+1,f
  2739     0F7F  0830               	movf	frexp@eptr,w
  2740     0F80  0084               	movwf	4
  2741     0F81  0875               	movf	??_frexp,w
  2742     0F82  1383               	bcf	3,7	;select IRP bank0
  2743     0F83  0080               	movwf	0
  2744     0F84  0A84               	incf	4,f
  2745     0F85  0876               	movf	??_frexp+1,w
  2746     0F86  0080               	movwf	0
  2747     0F87  0D2E               	rlf	frexp@value+2,w
  2748     0F88  0D2E               	rlf	frexp@value+2,w
  2749     0F89  3901               	andlw	1
  2750     0F8A  00F5               	movwf	??_frexp
  2751     0F8B  01F6               	clrf	??_frexp+1
  2752     0F8C  0830               	movf	frexp@eptr,w
  2753     0F8D  0084               	movwf	4
  2754     0F8E  0875               	movf	??_frexp,w
  2755     0F8F  0480               	iorwf	0,f
  2756     0F90  0A84               	incf	4,f
  2757     0F91  0876               	movf	??_frexp+1,w
  2758     0F92  0480               	iorwf	0,f
  2759     0F93                     l2697:
  2760     0F93  0830               	movf	frexp@eptr,w
  2761     0F94  0084               	movwf	4
  2762     0F95  3082               	movlw	130
  2763     0F96  0780               	addwf	0,f
  2764     0F97  0F84               	incfsz	4,f
  2765     0F98  0800               	movf	0,w
  2766     0F99  1803               	skipnc
  2767     0F9A  0A00               	incf	0,w
  2768     0F9B  00FF               	movwf	btemp+1
  2769     0F9C  30FF               	movlw	255
  2770     0F9D  077F               	addwf	btemp+1,w
  2771     0F9E  0080               	movwf	0
  2772     0F9F  0384               	decf	4,f
  2773     0FA0                     l2699:
  2774     0FA0  082F               	movf	frexp@value+3,w
  2775     0FA1  3980               	andlw	-128
  2776     0FA2  383F               	iorlw	63
  2777     0FA3  00AF               	movwf	frexp@value+3
  2778     0FA4                     l2701:
  2779     0FA4  13AE               	bcf	frexp@value+2,7
  2780     0FA5                     l783:
  2781     0FA5  0008               	return
  2782     0FA6                     __end_of_frexp:
  2783                           
  2784                           	psect	text9
  2785     0F02                     __ptext9:	
  2786 ;; *************** function ___fleq *****************
  2787 ;; Defined at:
  2788 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  ff1             4    0[BANK0 ] PTR int 
  2791 ;;  ff2             4    4[BANK0 ] PTR int 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;		None               void
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2803 ;;      Params:         0       8       0       0       0
  2804 ;;      Locals:         0       0       0       0       0
  2805 ;;      Temps:          0       4       0       0       0
  2806 ;;      Totals:         0      12       0       0       0
  2807 ;;Total ram usage:       12 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; Hardware stack levels required when called: 2
  2810 ;; This function calls:
  2811 ;;		Nothing
  2812 ;; This function is called by:
  2813 ;;		_frexp
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817     0F02                     ___fleq:	
  2818                           ;psect for function ___fleq
  2819                           
  2820     0F02                     l2447:	
  2821                           ;incstack = 0
  2822                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  2823                           
  2824     0F02  3000               	movlw	0
  2825     0F03  1283               	bcf	3,5	;RP0=0, select bank0
  2826     0F04  1303               	bcf	3,6	;RP1=0, select bank0
  2827     0F05  0520               	andwf	___fleq@ff1,w
  2828     0F06  00A8               	movwf	??___fleq
  2829     0F07  3000               	movlw	0
  2830     0F08  0521               	andwf	___fleq@ff1+1,w
  2831     0F09  00A9               	movwf	??___fleq+1
  2832     0F0A  3080               	movlw	128
  2833     0F0B  0522               	andwf	___fleq@ff1+2,w
  2834     0F0C  00AA               	movwf	??___fleq+2
  2835     0F0D  307F               	movlw	127
  2836     0F0E  0523               	andwf	___fleq@ff1+3,w
  2837     0F0F  00AB               	movwf	??___fleq+3
  2838     0F10  082B               	movf	??___fleq+3,w
  2839     0F11  042A               	iorwf	??___fleq+2,w
  2840     0F12  0429               	iorwf	??___fleq+1,w
  2841     0F13  0428               	iorwf	??___fleq,w
  2842     0F14  1D03               	skipz
  2843     0F15  2F17               	goto	u2381
  2844     0F16  2F18               	goto	u2380
  2845     0F17                     u2381:
  2846     0F17  2F20               	goto	l486
  2847     0F18                     u2380:
  2848     0F18                     l2449:
  2849     0F18  3000               	movlw	0
  2850     0F19  00A3               	movwf	___fleq@ff1+3
  2851     0F1A  3000               	movlw	0
  2852     0F1B  00A2               	movwf	___fleq@ff1+2
  2853     0F1C  3000               	movlw	0
  2854     0F1D  00A1               	movwf	___fleq@ff1+1
  2855     0F1E  3000               	movlw	0
  2856     0F1F  00A0               	movwf	___fleq@ff1
  2857     0F20                     l486:
  2858     0F20  3000               	movlw	0
  2859     0F21  0524               	andwf	___fleq@ff2,w
  2860     0F22  00A8               	movwf	??___fleq
  2861     0F23  3000               	movlw	0
  2862     0F24  0525               	andwf	___fleq@ff2+1,w
  2863     0F25  00A9               	movwf	??___fleq+1
  2864     0F26  3080               	movlw	128
  2865     0F27  0526               	andwf	___fleq@ff2+2,w
  2866     0F28  00AA               	movwf	??___fleq+2
  2867     0F29  307F               	movlw	127
  2868     0F2A  0527               	andwf	___fleq@ff2+3,w
  2869     0F2B  00AB               	movwf	??___fleq+3
  2870     0F2C  082B               	movf	??___fleq+3,w
  2871     0F2D  042A               	iorwf	??___fleq+2,w
  2872     0F2E  0429               	iorwf	??___fleq+1,w
  2873     0F2F  0428               	iorwf	??___fleq,w
  2874     0F30  1D03               	skipz
  2875     0F31  2F33               	goto	u2391
  2876     0F32  2F34               	goto	u2390
  2877     0F33                     u2391:
  2878     0F33  2F3C               	goto	l487
  2879     0F34                     u2390:
  2880     0F34                     l2451:
  2881     0F34  3000               	movlw	0
  2882     0F35  00A7               	movwf	___fleq@ff2+3
  2883     0F36  3000               	movlw	0
  2884     0F37  00A6               	movwf	___fleq@ff2+2
  2885     0F38  3000               	movlw	0
  2886     0F39  00A5               	movwf	___fleq@ff2+1
  2887     0F3A  3000               	movlw	0
  2888     0F3B  00A4               	movwf	___fleq@ff2
  2889     0F3C                     l487:
  2890     0F3C  0827               	movf	___fleq@ff2+3,w
  2891     0F3D  0623               	xorwf	___fleq@ff1+3,w
  2892     0F3E  1D03               	skipz
  2893     0F3F  2F4A               	goto	u2405
  2894     0F40  0826               	movf	___fleq@ff2+2,w
  2895     0F41  0622               	xorwf	___fleq@ff1+2,w
  2896     0F42  1D03               	skipz
  2897     0F43  2F4A               	goto	u2405
  2898     0F44  0825               	movf	___fleq@ff2+1,w
  2899     0F45  0621               	xorwf	___fleq@ff1+1,w
  2900     0F46  1D03               	skipz
  2901     0F47  2F4A               	goto	u2405
  2902     0F48  0824               	movf	___fleq@ff2,w
  2903     0F49  0620               	xorwf	___fleq@ff1,w
  2904     0F4A                     u2405:
  2905     0F4A  1903               	skipnz
  2906     0F4B  2F4D               	goto	u2401
  2907     0F4C  2F4E               	goto	u2400
  2908     0F4D                     u2401:
  2909     0F4D  2F50               	goto	l2455
  2910     0F4E                     u2400:
  2911     0F4E                     l2453:
  2912     0F4E  1003               	clrc
  2913     0F4F  2F51               	goto	l488
  2914     0F50                     l2455:
  2915     0F50  1403               	setc
  2916     0F51                     l488:
  2917     0F51  0008               	return
  2918     0F52                     __end_of___fleq:
  2919                           
  2920                           	psect	text10
  2921     0498                     __ptext10:	
  2922 ;; *************** function ___xxtofl *****************
  2923 ;; Defined at:
  2924 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  sign            1    wreg     unsigned char 
  2927 ;;  val             4   13[BANK0 ] long 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  sign            1   21[BANK0 ] unsigned char 
  2930 ;;  arg             4   23[BANK0 ] unsigned long 
  2931 ;;  exp             1   22[BANK0 ] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  4   13[BANK0 ] unsigned char 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       4       0       0       0
  2942 ;;      Locals:         0       6       0       0       0
  2943 ;;      Temps:          0       4       0       0       0
  2944 ;;      Totals:         0      14       0       0       0
  2945 ;;Total ram usage:       14 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 2
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_adc_mv
  2952 ;;		_trunc
  2953 ;;		_adc_volt
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957     0498                     ___xxtofl:	
  2958                           ;psect for function ___xxtofl
  2959                           
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2963                           ;___xxtofl@sign stored from wreg
  2964     0498  1283               	bcf	3,5	;RP0=0, select bank0
  2965     0499  1303               	bcf	3,6	;RP1=0, select bank0
  2966     049A  00B5               	movwf	___xxtofl@sign
  2967     049B                     l1913:
  2968     049B  0835               	movf	___xxtofl@sign,w
  2969     049C  1903               	btfsc	3,2
  2970     049D  2C9F               	goto	u1791
  2971     049E  2CA0               	goto	u1790
  2972     049F                     u1791:
  2973     049F  2CB4               	goto	l1919
  2974     04A0                     u1790:
  2975     04A0                     l1915:
  2976     04A0  1FB0               	btfss	___xxtofl@val+3,7
  2977     04A1  2CA3               	goto	u1801
  2978     04A2  2CA4               	goto	u1800
  2979     04A3                     u1801:
  2980     04A3  2CB4               	goto	l1919
  2981     04A4                     u1800:
  2982     04A4                     l1917:
  2983     04A4  092D               	comf	___xxtofl@val,w
  2984     04A5  00B7               	movwf	___xxtofl@arg
  2985     04A6  092E               	comf	___xxtofl@val+1,w
  2986     04A7  00B8               	movwf	___xxtofl@arg+1
  2987     04A8  092F               	comf	___xxtofl@val+2,w
  2988     04A9  00B9               	movwf	___xxtofl@arg+2
  2989     04AA  0930               	comf	___xxtofl@val+3,w
  2990     04AB  00BA               	movwf	___xxtofl@arg+3
  2991     04AC  0AB7               	incf	___xxtofl@arg,f
  2992     04AD  1903               	skipnz
  2993     04AE  0AB8               	incf	___xxtofl@arg+1,f
  2994     04AF  1903               	skipnz
  2995     04B0  0AB9               	incf	___xxtofl@arg+2,f
  2996     04B1  1903               	skipnz
  2997     04B2  0ABA               	incf	___xxtofl@arg+3,f
  2998     04B3  2CBC               	goto	l750
  2999     04B4                     l1919:
  3000     04B4  0830               	movf	___xxtofl@val+3,w
  3001     04B5  00BA               	movwf	___xxtofl@arg+3
  3002     04B6  082F               	movf	___xxtofl@val+2,w
  3003     04B7  00B9               	movwf	___xxtofl@arg+2
  3004     04B8  082E               	movf	___xxtofl@val+1,w
  3005     04B9  00B8               	movwf	___xxtofl@arg+1
  3006     04BA  082D               	movf	___xxtofl@val,w
  3007     04BB  00B7               	movwf	___xxtofl@arg
  3008     04BC                     l750:
  3009     04BC  0830               	movf	___xxtofl@val+3,w
  3010     04BD  042F               	iorwf	___xxtofl@val+2,w
  3011     04BE  042E               	iorwf	___xxtofl@val+1,w
  3012     04BF  042D               	iorwf	___xxtofl@val,w
  3013     04C0  1D03               	skipz
  3014     04C1  2CC3               	goto	u1811
  3015     04C2  2CC4               	goto	u1810
  3016     04C3                     u1811:
  3017     04C3  2CCD               	goto	l1925
  3018     04C4                     u1810:
  3019     04C4                     l1921:
  3020     04C4  3000               	movlw	0
  3021     04C5  00B0               	movwf	?___xxtofl+3
  3022     04C6  3000               	movlw	0
  3023     04C7  00AF               	movwf	?___xxtofl+2
  3024     04C8  3000               	movlw	0
  3025     04C9  00AE               	movwf	?___xxtofl+1
  3026     04CA  3000               	movlw	0
  3027     04CB  00AD               	movwf	?___xxtofl
  3028     04CC  2D51               	goto	l752
  3029     04CD                     l1925:
  3030     04CD  3096               	movlw	150
  3031     04CE  00B6               	movwf	___xxtofl@exp
  3032     04CF  2CDD               	goto	l1929
  3033     04D0                     l1927:
  3034     04D0  3001               	movlw	1
  3035     04D1  00B1               	movwf	??___xxtofl
  3036     04D2  0831               	movf	??___xxtofl,w
  3037     04D3  07B6               	addwf	___xxtofl@exp,f
  3038     04D4  3001               	movlw	1
  3039     04D5                     u1825:
  3040     04D5  1003               	clrc
  3041     04D6  0CBA               	rrf	___xxtofl@arg+3,f
  3042     04D7  0CB9               	rrf	___xxtofl@arg+2,f
  3043     04D8  0CB8               	rrf	___xxtofl@arg+1,f
  3044     04D9  0CB7               	rrf	___xxtofl@arg,f
  3045     04DA  3EFF               	addlw	-1
  3046     04DB  1D03               	skipz
  3047     04DC  2CD5               	goto	u1825
  3048     04DD                     l1929:
  3049     04DD  30FE               	movlw	254
  3050     04DE  053A               	andwf	___xxtofl@arg+3,w
  3051     04DF  1D03               	btfss	3,2
  3052     04E0  2CE2               	goto	u1831
  3053     04E1  2CE3               	goto	u1830
  3054     04E2                     u1831:
  3055     04E2  2CD0               	goto	l1927
  3056     04E3                     u1830:
  3057     04E3  2CFF               	goto	l756
  3058     04E4                     l1931:
  3059     04E4  3001               	movlw	1
  3060     04E5  00B1               	movwf	??___xxtofl
  3061     04E6  0831               	movf	??___xxtofl,w
  3062     04E7  07B6               	addwf	___xxtofl@exp,f
  3063     04E8                     l1933:
  3064     04E8  3001               	movlw	1
  3065     04E9  07B7               	addwf	___xxtofl@arg,f
  3066     04EA  3000               	movlw	0
  3067     04EB  1803               	skipnc
  3068     04EC  3001               	movlw	1
  3069     04ED  07B8               	addwf	___xxtofl@arg+1,f
  3070     04EE  3000               	movlw	0
  3071     04EF  1803               	skipnc
  3072     04F0  3001               	movlw	1
  3073     04F1  07B9               	addwf	___xxtofl@arg+2,f
  3074     04F2  3000               	movlw	0
  3075     04F3  1803               	skipnc
  3076     04F4  3001               	movlw	1
  3077     04F5  07BA               	addwf	___xxtofl@arg+3,f
  3078     04F6                     l1935:
  3079     04F6  3001               	movlw	1
  3080     04F7                     u1845:
  3081     04F7  1003               	clrc
  3082     04F8  0CBA               	rrf	___xxtofl@arg+3,f
  3083     04F9  0CB9               	rrf	___xxtofl@arg+2,f
  3084     04FA  0CB8               	rrf	___xxtofl@arg+1,f
  3085     04FB  0CB7               	rrf	___xxtofl@arg,f
  3086     04FC  3EFF               	addlw	-1
  3087     04FD  1D03               	skipz
  3088     04FE  2CF7               	goto	u1845
  3089     04FF                     l756:
  3090     04FF  30FF               	movlw	255
  3091     0500  053A               	andwf	___xxtofl@arg+3,w
  3092     0501  1D03               	btfss	3,2
  3093     0502  2D04               	goto	u1851
  3094     0503  2D05               	goto	u1850
  3095     0504                     u1851:
  3096     0504  2CE4               	goto	l1931
  3097     0505                     u1850:
  3098     0505  2D11               	goto	l1939
  3099     0506                     l1937:
  3100     0506  3001               	movlw	1
  3101     0507  02B6               	subwf	___xxtofl@exp,f
  3102     0508  3001               	movlw	1
  3103     0509  00B1               	movwf	??___xxtofl
  3104     050A                     u1865:
  3105     050A  1003               	clrc
  3106     050B  0DB7               	rlf	___xxtofl@arg,f
  3107     050C  0DB8               	rlf	___xxtofl@arg+1,f
  3108     050D  0DB9               	rlf	___xxtofl@arg+2,f
  3109     050E  0DBA               	rlf	___xxtofl@arg+3,f
  3110     050F  0BB1               	decfsz	??___xxtofl,f
  3111     0510  2D0A               	goto	u1865
  3112     0511                     l1939:
  3113     0511  1BB9               	btfsc	___xxtofl@arg+2,7
  3114     0512  2D14               	goto	u1871
  3115     0513  2D15               	goto	u1870
  3116     0514                     u1871:
  3117     0514  2D1B               	goto	l763
  3118     0515                     u1870:
  3119     0515                     l1941:
  3120     0515  3002               	movlw	2
  3121     0516  0236               	subwf	___xxtofl@exp,w
  3122     0517  1803               	skipnc
  3123     0518  2D1A               	goto	u1881
  3124     0519  2D1B               	goto	u1880
  3125     051A                     u1881:
  3126     051A  2D06               	goto	l1937
  3127     051B                     u1880:
  3128     051B                     l763:
  3129     051B  1836               	btfsc	___xxtofl@exp,0
  3130     051C  2D1E               	goto	u1891
  3131     051D  2D1F               	goto	u1890
  3132     051E                     u1891:
  3133     051E  2D27               	goto	l764
  3134     051F                     u1890:
  3135     051F                     l1943:
  3136     051F  30FF               	movlw	255
  3137     0520  05B7               	andwf	___xxtofl@arg,f
  3138     0521  30FF               	movlw	255
  3139     0522  05B8               	andwf	___xxtofl@arg+1,f
  3140     0523  307F               	movlw	127
  3141     0524  05B9               	andwf	___xxtofl@arg+2,f
  3142     0525  30FF               	movlw	255
  3143     0526  05BA               	andwf	___xxtofl@arg+3,f
  3144     0527                     l764:
  3145     0527  1003               	clrc
  3146     0528  0CB6               	rrf	___xxtofl@exp,f
  3147     0529                     l1945:
  3148     0529  0836               	movf	___xxtofl@exp,w
  3149     052A  00B1               	movwf	??___xxtofl
  3150     052B  01B2               	clrf	??___xxtofl+1
  3151     052C  01B3               	clrf	??___xxtofl+2
  3152     052D  01B4               	clrf	??___xxtofl+3
  3153     052E  3018               	movlw	24
  3154     052F                     u1905:
  3155     052F  1003               	clrc
  3156     0530  0DB1               	rlf	??___xxtofl,f
  3157     0531  0DB2               	rlf	??___xxtofl+1,f
  3158     0532  0DB3               	rlf	??___xxtofl+2,f
  3159     0533  0DB4               	rlf	??___xxtofl+3,f
  3160     0534                     u1900:
  3161     0534  3EFF               	addlw	-1
  3162     0535  1D03               	skipz
  3163     0536  2D2F               	goto	u1905
  3164     0537  0831               	movf	??___xxtofl,w
  3165     0538  04B7               	iorwf	___xxtofl@arg,f
  3166     0539  0832               	movf	??___xxtofl+1,w
  3167     053A  04B8               	iorwf	___xxtofl@arg+1,f
  3168     053B  0833               	movf	??___xxtofl+2,w
  3169     053C  04B9               	iorwf	___xxtofl@arg+2,f
  3170     053D  0834               	movf	??___xxtofl+3,w
  3171     053E  04BA               	iorwf	___xxtofl@arg+3,f
  3172     053F                     l1947:
  3173     053F  0835               	movf	___xxtofl@sign,w
  3174     0540  1903               	btfsc	3,2
  3175     0541  2D43               	goto	u1911
  3176     0542  2D44               	goto	u1910
  3177     0543                     u1911:
  3178     0543  2D49               	goto	l1953
  3179     0544                     u1910:
  3180     0544                     l1949:
  3181     0544  1FB0               	btfss	___xxtofl@val+3,7
  3182     0545  2D47               	goto	u1921
  3183     0546  2D48               	goto	u1920
  3184     0547                     u1921:
  3185     0547  2D49               	goto	l1953
  3186     0548                     u1920:
  3187     0548                     l1951:
  3188     0548  17BA               	bsf	___xxtofl@arg+3,7
  3189     0549                     l1953:
  3190     0549  083A               	movf	___xxtofl@arg+3,w
  3191     054A  00B0               	movwf	?___xxtofl+3
  3192     054B  0839               	movf	___xxtofl@arg+2,w
  3193     054C  00AF               	movwf	?___xxtofl+2
  3194     054D  0838               	movf	___xxtofl@arg+1,w
  3195     054E  00AE               	movwf	?___xxtofl+1
  3196     054F  0837               	movf	___xxtofl@arg,w
  3197     0550  00AD               	movwf	?___xxtofl
  3198     0551                     l752:
  3199     0551  0008               	return
  3200     0552                     __end_of___xxtofl:
  3201                           
  3202                           	psect	text11
  3203     05E7                     __ptext11:	
  3204 ;; *************** function ___fltol *****************
  3205 ;; Defined at:
  3206 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  f1              4    0[BANK0 ] unsigned char 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  exp1            1    6[COMMON] unsigned char 
  3211 ;;  sign1           1    5[COMMON] unsigned char 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  4    0[BANK0 ] long 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3221 ;;      Params:         0       4       0       0       0
  3222 ;;      Locals:         2       0       0       0       0
  3223 ;;      Temps:          0       4       0       0       0
  3224 ;;      Totals:         2       8       0       0       0
  3225 ;;Total ram usage:       10 bytes
  3226 ;; Hardware stack levels used: 1
  3227 ;; Hardware stack levels required when called: 2
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_adc_mv
  3232 ;;		_trunc
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236     05E7                     ___fltol:	
  3237                           ;psect for function ___fltol
  3238                           
  3239     05E7                     l2459:	
  3240                           ;incstack = 0
  3241                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3242                           
  3243     05E7  1003               	clrc
  3244     05E8  1283               	bcf	3,5	;RP0=0, select bank0
  3245     05E9  1303               	bcf	3,6	;RP1=0, select bank0
  3246     05EA  0D22               	rlf	___fltol@f1+2,w
  3247     05EB  0D23               	rlf	___fltol@f1+3,w
  3248     05EC  00F6               	movwf	___fltol@exp1
  3249     05ED  0876               	movf	___fltol@exp1,w
  3250     05EE  1D03               	btfss	3,2
  3251     05EF  2DF1               	goto	u2411
  3252     05F0  2DF2               	goto	u2410
  3253     05F1                     u2411:
  3254     05F1  2DFB               	goto	l2465
  3255     05F2                     u2410:
  3256     05F2                     l2461:
  3257     05F2  3000               	movlw	0
  3258     05F3  00A3               	movwf	?___fltol+3
  3259     05F4  3000               	movlw	0
  3260     05F5  00A2               	movwf	?___fltol+2
  3261     05F6  3000               	movlw	0
  3262     05F7  00A1               	movwf	?___fltol+1
  3263     05F8  3000               	movlw	0
  3264     05F9  00A0               	movwf	?___fltol
  3265     05FA  2E5E               	goto	l503
  3266     05FB                     l2465:
  3267     05FB  0820               	movf	___fltol@f1,w
  3268     05FC  00A4               	movwf	??___fltol
  3269     05FD  0821               	movf	___fltol@f1+1,w
  3270     05FE  00A5               	movwf	??___fltol+1
  3271     05FF  0822               	movf	___fltol@f1+2,w
  3272     0600  00A6               	movwf	??___fltol+2
  3273     0601  0823               	movf	___fltol@f1+3,w
  3274     0602  00A7               	movwf	??___fltol+3
  3275     0603  301F               	movlw	31
  3276     0604                     u2425:
  3277     0604  1003               	clrc
  3278     0605  0CA7               	rrf	??___fltol+3,f
  3279     0606  0CA6               	rrf	??___fltol+2,f
  3280     0607  0CA5               	rrf	??___fltol+1,f
  3281     0608  0CA4               	rrf	??___fltol,f
  3282     0609                     u2420:
  3283     0609  3EFF               	addlw	-1
  3284     060A  1D03               	skipz
  3285     060B  2E04               	goto	u2425
  3286     060C  0824               	movf	??___fltol,w
  3287     060D  00F5               	movwf	___fltol@sign1
  3288     060E                     l2467:
  3289     060E  17A2               	bsf	___fltol@f1+2,7
  3290     060F                     l2469:
  3291     060F  30FF               	movlw	255
  3292     0610  05A0               	andwf	___fltol@f1,f
  3293     0611  30FF               	movlw	255
  3294     0612  05A1               	andwf	___fltol@f1+1,f
  3295     0613  30FF               	movlw	255
  3296     0614  05A2               	andwf	___fltol@f1+2,f
  3297     0615  3000               	movlw	0
  3298     0616  05A3               	andwf	___fltol@f1+3,f
  3299     0617                     l2471:
  3300     0617  3096               	movlw	150
  3301     0618  02F6               	subwf	___fltol@exp1,f
  3302     0619                     l2473:
  3303     0619  1FF6               	btfss	___fltol@exp1,7
  3304     061A  2E1C               	goto	u2431
  3305     061B  2E1D               	goto	u2430
  3306     061C                     u2431:
  3307     061C  2E37               	goto	l2483
  3308     061D                     u2430:
  3309     061D                     l2475:
  3310     061D  0876               	movf	___fltol@exp1,w
  3311     061E  3A80               	xorlw	128
  3312     061F  3E97               	addlw	151
  3313     0620  1803               	skipnc
  3314     0621  2E23               	goto	u2441
  3315     0622  2E24               	goto	u2440
  3316     0623                     u2441:
  3317     0623  2E25               	goto	l2481
  3318     0624                     u2440:
  3319     0624  2DF2               	goto	l2461
  3320     0625                     l2481:
  3321     0625  3001               	movlw	1
  3322     0626                     u2455:
  3323     0626  1003               	clrc
  3324     0627  0CA3               	rrf	___fltol@f1+3,f
  3325     0628  0CA2               	rrf	___fltol@f1+2,f
  3326     0629  0CA1               	rrf	___fltol@f1+1,f
  3327     062A  0CA0               	rrf	___fltol@f1,f
  3328     062B  3EFF               	addlw	-1
  3329     062C  1D03               	skipz
  3330     062D  2E26               	goto	u2455
  3331     062E  3001               	movlw	1
  3332     062F  00A4               	movwf	??___fltol
  3333     0630  0824               	movf	??___fltol,w
  3334     0631  07F6               	addwf	___fltol@exp1,f
  3335     0632  1D03               	btfss	3,2
  3336     0633  2E35               	goto	u2461
  3337     0634  2E36               	goto	u2460
  3338     0635                     u2461:
  3339     0635  2E25               	goto	l2481
  3340     0636                     u2460:
  3341     0636  2E4E               	goto	l2491
  3342     0637                     l2483:
  3343     0637  3020               	movlw	32
  3344     0638  0276               	subwf	___fltol@exp1,w
  3345     0639  1C03               	skipc
  3346     063A  2E3C               	goto	u2471
  3347     063B  2E3D               	goto	u2470
  3348     063C                     u2471:
  3349     063C  2E49               	goto	l510
  3350     063D                     u2470:
  3351     063D  2DF2               	goto	l2461
  3352     063E                     l2489:
  3353     063E  3001               	movlw	1
  3354     063F  00A4               	movwf	??___fltol
  3355     0640                     u2485:
  3356     0640  1003               	clrc
  3357     0641  0DA0               	rlf	___fltol@f1,f
  3358     0642  0DA1               	rlf	___fltol@f1+1,f
  3359     0643  0DA2               	rlf	___fltol@f1+2,f
  3360     0644  0DA3               	rlf	___fltol@f1+3,f
  3361     0645  0BA4               	decfsz	??___fltol,f
  3362     0646  2E40               	goto	u2485
  3363     0647  3001               	movlw	1
  3364     0648  02F6               	subwf	___fltol@exp1,f
  3365     0649                     l510:
  3366     0649  0876               	movf	___fltol@exp1,w
  3367     064A  1D03               	btfss	3,2
  3368     064B  2E4D               	goto	u2491
  3369     064C  2E4E               	goto	u2490
  3370     064D                     u2491:
  3371     064D  2E3E               	goto	l2489
  3372     064E                     u2490:
  3373     064E                     l2491:
  3374     064E  0875               	movf	___fltol@sign1,w
  3375     064F  1903               	btfsc	3,2
  3376     0650  2E52               	goto	u2501
  3377     0651  2E53               	goto	u2500
  3378     0652                     u2501:
  3379     0652  2E5E               	goto	l513
  3380     0653                     u2500:
  3381     0653                     l2493:
  3382     0653  09A0               	comf	___fltol@f1,f
  3383     0654  09A1               	comf	___fltol@f1+1,f
  3384     0655  09A2               	comf	___fltol@f1+2,f
  3385     0656  09A3               	comf	___fltol@f1+3,f
  3386     0657  0AA0               	incf	___fltol@f1,f
  3387     0658  1903               	skipnz
  3388     0659  0AA1               	incf	___fltol@f1+1,f
  3389     065A  1903               	skipnz
  3390     065B  0AA2               	incf	___fltol@f1+2,f
  3391     065C  1903               	skipnz
  3392     065D  0AA3               	incf	___fltol@f1+3,f
  3393     065E                     l513:
  3394     065E                     l503:
  3395     065E  0008               	return
  3396     065F                     __end_of___fltol:
  3397                           
  3398                           	psect	text12
  3399     0D99                     __ptext12:	
  3400 ;; *************** function ___flsub *****************
  3401 ;; Defined at:
  3402 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  a               4   37[BANK0 ] long 
  3405 ;;  b               4   41[BANK0 ] long 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  4   37[BANK0 ] long 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3417 ;;      Params:         0       8       0       0       0
  3418 ;;      Locals:         0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0
  3420 ;;      Totals:         0       8       0       0       0
  3421 ;;Total ram usage:        8 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; Hardware stack levels required when called: 3
  3424 ;; This function calls:
  3425 ;;		___fladd
  3426 ;; This function is called by:
  3427 ;;		_round
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431     0D99                     ___flsub:	
  3432                           ;psect for function ___flsub
  3433                           
  3434     0D99                     l2721:	
  3435                           ;incstack = 0
  3436                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3437                           
  3438     0D99  3080               	movlw	128
  3439     0D9A  1283               	bcf	3,5	;RP0=0, select bank0
  3440     0D9B  1303               	bcf	3,6	;RP1=0, select bank0
  3441     0D9C  06C8               	xorwf	___flsub@a+3,f
  3442     0D9D                     l2723:
  3443     0D9D  084C               	movf	___flsub@b+3,w
  3444     0D9E  00A3               	movwf	___fladd@b+3
  3445     0D9F  084B               	movf	___flsub@b+2,w
  3446     0DA0  00A2               	movwf	___fladd@b+2
  3447     0DA1  084A               	movf	___flsub@b+1,w
  3448     0DA2  00A1               	movwf	___fladd@b+1
  3449     0DA3  0849               	movf	___flsub@b,w
  3450     0DA4  00A0               	movwf	___fladd@b
  3451     0DA5  0848               	movf	___flsub@a+3,w
  3452     0DA6  00A7               	movwf	___fladd@a+3
  3453     0DA7  0847               	movf	___flsub@a+2,w
  3454     0DA8  00A6               	movwf	___fladd@a+2
  3455     0DA9  0846               	movf	___flsub@a+1,w
  3456     0DAA  00A5               	movwf	___fladd@a+1
  3457     0DAB  0845               	movf	___flsub@a,w
  3458     0DAC  00A4               	movwf	___fladd@a
  3459     0DAD  120A  118A  2018  120A  158A  	fcall	___fladd
  3460     0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  3461     0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  3462     0DB4  0823               	movf	?___fladd+3,w
  3463     0DB5  00C8               	movwf	?___flsub+3
  3464     0DB6  0822               	movf	?___fladd+2,w
  3465     0DB7  00C7               	movwf	?___flsub+2
  3466     0DB8  0821               	movf	?___fladd+1,w
  3467     0DB9  00C6               	movwf	?___flsub+1
  3468     0DBA  0820               	movf	?___fladd,w
  3469     0DBB  00C5               	movwf	?___flsub
  3470     0DBC                     l656:
  3471     0DBC  0008               	return
  3472     0DBD                     __end_of___flsub:
  3473                           
  3474                           	psect	text13
  3475     0018                     __ptext13:	
  3476 ;; *************** function ___fladd *****************
  3477 ;; Defined at:
  3478 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  b               4    0[BANK0 ] long 
  3481 ;;  a               4    4[BANK0 ] long 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  grs             1   19[BANK0 ] unsigned char 
  3484 ;;  bexp            1   18[BANK0 ] unsigned char 
  3485 ;;  aexp            1   17[BANK0 ] unsigned char 
  3486 ;;  signs           1   16[BANK0 ] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  4    0[BANK0 ] unsigned char 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, btemp+1
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3496 ;;      Params:         0       8       0       0       0
  3497 ;;      Locals:         0       4       0       0       0
  3498 ;;      Temps:          0       8       0       0       0
  3499 ;;      Totals:         0      20       0       0       0
  3500 ;;Total ram usage:       20 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 2
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		___flsub
  3507 ;;		_round
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511     0018                     ___fladd:	
  3512                           ;psect for function ___fladd
  3513                           
  3514     0018                     l2495:	
  3515                           ;incstack = 0
  3516                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3517                           
  3518     0018  1283               	bcf	3,5	;RP0=0, select bank0
  3519     0019  1303               	bcf	3,6	;RP1=0, select bank0
  3520     001A  0823               	movf	___fladd@b+3,w
  3521     001B  3980               	andlw	128
  3522     001C  00B0               	movwf	___fladd@signs
  3523     001D                     l2497:
  3524     001D  0823               	movf	___fladd@b+3,w
  3525     001E  00A8               	movwf	??___fladd
  3526     001F  0728               	addwf	??___fladd,w
  3527     0020  00B2               	movwf	___fladd@bexp
  3528     0021                     l2499:
  3529     0021  1FA2               	btfss	___fladd@b+2,7
  3530     0022  2824               	goto	u2511
  3531     0023  2825               	goto	u2510
  3532     0024                     u2511:
  3533     0024  2826               	goto	l2503
  3534     0025                     u2510:
  3535     0025                     l2501:
  3536     0025  1432               	bsf	___fladd@bexp,0
  3537     0026                     l2503:
  3538     0026  0832               	movf	___fladd@bexp,w
  3539     0027  1903               	btfsc	3,2
  3540     0028  282A               	goto	u2521
  3541     0029  282B               	goto	u2520
  3542     002A                     u2521:
  3543     002A  283B               	goto	l2513
  3544     002B                     u2520:
  3545     002B                     l2505:
  3546     002B  0A32               	incf	___fladd@bexp,w
  3547     002C  1D03               	btfss	3,2
  3548     002D  282F               	goto	u2531
  3549     002E  2830               	goto	u2530
  3550     002F                     u2531:
  3551     002F  2838               	goto	l2509
  3552     0030                     u2530:
  3553     0030                     l2507:
  3554     0030  3000               	movlw	0
  3555     0031  00A3               	movwf	___fladd@b+3
  3556     0032  3000               	movlw	0
  3557     0033  00A2               	movwf	___fladd@b+2
  3558     0034  3000               	movlw	0
  3559     0035  00A1               	movwf	___fladd@b+1
  3560     0036  3000               	movlw	0
  3561     0037  00A0               	movwf	___fladd@b
  3562     0038                     l2509:
  3563     0038  17A2               	bsf	___fladd@b+2,7
  3564     0039                     l2511:
  3565     0039  01A3               	clrf	___fladd@b+3
  3566     003A  2843               	goto	l2515
  3567     003B                     l2513:
  3568     003B  3000               	movlw	0
  3569     003C  00A3               	movwf	___fladd@b+3
  3570     003D  3000               	movlw	0
  3571     003E  00A2               	movwf	___fladd@b+2
  3572     003F  3000               	movlw	0
  3573     0040  00A1               	movwf	___fladd@b+1
  3574     0041  3000               	movlw	0
  3575     0042  00A0               	movwf	___fladd@b
  3576     0043                     l2515:
  3577     0043  0827               	movf	___fladd@a+3,w
  3578     0044  3980               	andlw	128
  3579     0045  00B1               	movwf	___fladd@aexp
  3580     0046                     l2517:
  3581     0046  0831               	movf	___fladd@aexp,w
  3582     0047  0630               	xorwf	___fladd@signs,w
  3583     0048  1903               	skipnz
  3584     0049  284B               	goto	u2541
  3585     004A  284C               	goto	u2540
  3586     004B                     u2541:
  3587     004B  284D               	goto	l2521
  3588     004C                     u2540:
  3589     004C                     l2519:
  3590     004C  1730               	bsf	___fladd@signs,6
  3591     004D                     l2521:
  3592     004D  0827               	movf	___fladd@a+3,w
  3593     004E  00A8               	movwf	??___fladd
  3594     004F  0728               	addwf	??___fladd,w
  3595     0050  00B1               	movwf	___fladd@aexp
  3596     0051                     l2523:
  3597     0051  1FA6               	btfss	___fladd@a+2,7
  3598     0052  2854               	goto	u2551
  3599     0053  2855               	goto	u2550
  3600     0054                     u2551:
  3601     0054  2856               	goto	l2527
  3602     0055                     u2550:
  3603     0055                     l2525:
  3604     0055  1431               	bsf	___fladd@aexp,0
  3605     0056                     l2527:
  3606     0056  0831               	movf	___fladd@aexp,w
  3607     0057  1903               	btfsc	3,2
  3608     0058  285A               	goto	u2561
  3609     0059  285B               	goto	u2560
  3610     005A                     u2561:
  3611     005A  286B               	goto	l2537
  3612     005B                     u2560:
  3613     005B                     l2529:
  3614     005B  0A31               	incf	___fladd@aexp,w
  3615     005C  1D03               	btfss	3,2
  3616     005D  285F               	goto	u2571
  3617     005E  2860               	goto	u2570
  3618     005F                     u2571:
  3619     005F  2868               	goto	l2533
  3620     0060                     u2570:
  3621     0060                     l2531:
  3622     0060  3000               	movlw	0
  3623     0061  00A7               	movwf	___fladd@a+3
  3624     0062  3000               	movlw	0
  3625     0063  00A6               	movwf	___fladd@a+2
  3626     0064  3000               	movlw	0
  3627     0065  00A5               	movwf	___fladd@a+1
  3628     0066  3000               	movlw	0
  3629     0067  00A4               	movwf	___fladd@a
  3630     0068                     l2533:
  3631     0068  17A6               	bsf	___fladd@a+2,7
  3632     0069                     l2535:
  3633     0069  01A7               	clrf	___fladd@a+3
  3634     006A  2873               	goto	l610
  3635     006B                     l2537:
  3636     006B  3000               	movlw	0
  3637     006C  00A7               	movwf	___fladd@a+3
  3638     006D  3000               	movlw	0
  3639     006E  00A6               	movwf	___fladd@a+2
  3640     006F  3000               	movlw	0
  3641     0070  00A5               	movwf	___fladd@a+1
  3642     0071  3000               	movlw	0
  3643     0072  00A4               	movwf	___fladd@a
  3644     0073                     l610:
  3645     0073  0832               	movf	___fladd@bexp,w
  3646     0074  0231               	subwf	___fladd@aexp,w
  3647     0075  1803               	skipnc
  3648     0076  2878               	goto	u2581
  3649     0077  2879               	goto	u2580
  3650     0078                     u2581:
  3651     0078  289F               	goto	l2573
  3652     0079                     u2580:
  3653     0079                     l2539:
  3654     0079  1F30               	btfss	___fladd@signs,6
  3655     007A  287C               	goto	u2591
  3656     007B  287D               	goto	u2590
  3657     007C                     u2591:
  3658     007C  2881               	goto	l2543
  3659     007D                     u2590:
  3660     007D                     l2541:
  3661     007D  3080               	movlw	128
  3662     007E  00A8               	movwf	??___fladd
  3663     007F  0828               	movf	??___fladd,w
  3664     0080  06B0               	xorwf	___fladd@signs,f
  3665     0081                     l2543:
  3666     0081  0832               	movf	___fladd@bexp,w
  3667     0082  00B3               	movwf	___fladd@grs
  3668     0083                     l2545:
  3669     0083  0831               	movf	___fladd@aexp,w
  3670     0084  00B2               	movwf	___fladd@bexp
  3671     0085                     l2547:
  3672     0085  0833               	movf	___fladd@grs,w
  3673     0086  00B1               	movwf	___fladd@aexp
  3674     0087                     l2549:
  3675     0087  0820               	movf	___fladd@b,w
  3676     0088  00B3               	movwf	___fladd@grs
  3677     0089                     l2551:
  3678     0089  0824               	movf	___fladd@a,w
  3679     008A  00A0               	movwf	___fladd@b
  3680     008B                     l2553:
  3681     008B  0833               	movf	___fladd@grs,w
  3682     008C  00A4               	movwf	___fladd@a
  3683     008D                     l2555:
  3684     008D  0821               	movf	___fladd@b+1,w
  3685     008E  00B3               	movwf	___fladd@grs
  3686     008F                     l2557:
  3687     008F  0825               	movf	___fladd@a+1,w
  3688     0090  00A1               	movwf	___fladd@b+1
  3689     0091                     l2559:
  3690     0091  0833               	movf	___fladd@grs,w
  3691     0092  00A5               	movwf	___fladd@a+1
  3692     0093                     l2561:
  3693     0093  0822               	movf	___fladd@b+2,w
  3694     0094  00B3               	movwf	___fladd@grs
  3695     0095                     l2563:
  3696     0095  0826               	movf	___fladd@a+2,w
  3697     0096  00A2               	movwf	___fladd@b+2
  3698     0097                     l2565:
  3699     0097  0833               	movf	___fladd@grs,w
  3700     0098  00A6               	movwf	___fladd@a+2
  3701     0099                     l2567:
  3702     0099  0823               	movf	___fladd@b+3,w
  3703     009A  00B3               	movwf	___fladd@grs
  3704     009B                     l2569:
  3705     009B  0827               	movf	___fladd@a+3,w
  3706     009C  00A3               	movwf	___fladd@b+3
  3707     009D                     l2571:
  3708     009D  0833               	movf	___fladd@grs,w
  3709     009E  00A7               	movwf	___fladd@a+3
  3710     009F                     l2573:
  3711     009F  01B3               	clrf	___fladd@grs
  3712     00A0                     l2575:
  3713     00A0  0831               	movf	___fladd@aexp,w
  3714     00A1  00A8               	movwf	??___fladd
  3715     00A2  01A9               	clrf	??___fladd+1
  3716     00A3  0829               	movf	??___fladd+1,w
  3717     00A4  00AB               	movwf	??___fladd+3
  3718     00A5  0832               	movf	___fladd@bexp,w
  3719     00A6  0228               	subwf	??___fladd,w
  3720     00A7  00AA               	movwf	??___fladd+2
  3721     00A8  1C03               	skipc
  3722     00A9  03AB               	decf	??___fladd+3,f
  3723     00AA  082B               	movf	??___fladd+3,w
  3724     00AB  3A80               	xorlw	128
  3725     00AC  00FF               	movwf	btemp+1
  3726     00AD  3080               	movlw	128
  3727     00AE  027F               	subwf	btemp+1,w
  3728     00AF  1D03               	skipz
  3729     00B0  28B3               	goto	u2605
  3730     00B1  301A               	movlw	26
  3731     00B2  022A               	subwf	??___fladd+2,w
  3732     00B3                     u2605:
  3733     00B3  1C03               	skipc
  3734     00B4  28B6               	goto	u2601
  3735     00B5  28B7               	goto	u2600
  3736     00B6                     u2601:
  3737     00B6  28EE               	goto	l2591
  3738     00B7                     u2600:
  3739     00B7                     l2577:
  3740     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  3741     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  3742     00B9  0823               	movf	___fladd@b+3,w
  3743     00BA  0422               	iorwf	___fladd@b+2,w
  3744     00BB  0421               	iorwf	___fladd@b+1,w
  3745     00BC  0420               	iorwf	___fladd@b,w
  3746     00BD  1D03               	skipz
  3747     00BE  28C0               	goto	u2611
  3748     00BF  28C2               	goto	u2610
  3749     00C0                     u2611:
  3750     00C0  3001               	movlw	1
  3751     00C1  28C3               	goto	u2620
  3752     00C2                     u2610:
  3753     00C2  3000               	movlw	0
  3754     00C3                     u2620:
  3755     00C3  00B3               	movwf	___fladd@grs
  3756     00C4  3000               	movlw	0
  3757     00C5  00A3               	movwf	___fladd@b+3
  3758     00C6  3000               	movlw	0
  3759     00C7  00A2               	movwf	___fladd@b+2
  3760     00C8  3000               	movlw	0
  3761     00C9  00A1               	movwf	___fladd@b+1
  3762     00CA  3000               	movlw	0
  3763     00CB  00A0               	movwf	___fladd@b
  3764     00CC  0831               	movf	___fladd@aexp,w
  3765     00CD  00B2               	movwf	___fladd@bexp
  3766     00CE  28F6               	goto	l614
  3767     00CF                     l616:
  3768     00CF  1C33               	btfss	___fladd@grs,0
  3769     00D0  28D2               	goto	u2631
  3770     00D1  28D3               	goto	u2630
  3771     00D2                     u2631:
  3772     00D2  28DA               	goto	l2581
  3773     00D3                     u2630:
  3774     00D3                     l2579:
  3775     00D3  0833               	movf	___fladd@grs,w
  3776     00D4  00A8               	movwf	??___fladd
  3777     00D5  1003               	clrc
  3778     00D6  0C28               	rrf	??___fladd,w
  3779     00D7  3801               	iorlw	1
  3780     00D8  00B3               	movwf	___fladd@grs
  3781     00D9  28DC               	goto	l2583
  3782     00DA                     l2581:
  3783     00DA  1003               	clrc
  3784     00DB  0CB3               	rrf	___fladd@grs,f
  3785     00DC                     l2583:
  3786     00DC  1C20               	btfss	___fladd@b,0
  3787     00DD  28DF               	goto	u2641
  3788     00DE  28E0               	goto	u2640
  3789     00DF                     u2641:
  3790     00DF  28E1               	goto	l2587
  3791     00E0                     u2640:
  3792     00E0                     l2585:
  3793     00E0  17B3               	bsf	___fladd@grs,7
  3794     00E1                     l2587:
  3795     00E1  3001               	movlw	1
  3796     00E2  00A8               	movwf	??___fladd
  3797     00E3                     u2655:
  3798     00E3  0D23               	rlf	___fladd@b+3,w
  3799     00E4  0CA3               	rrf	___fladd@b+3,f
  3800     00E5  0CA2               	rrf	___fladd@b+2,f
  3801     00E6  0CA1               	rrf	___fladd@b+1,f
  3802     00E7  0CA0               	rrf	___fladd@b,f
  3803     00E8  0BA8               	decfsz	??___fladd& (0+127),f
  3804     00E9  28E3               	goto	u2655
  3805     00EA                     l2589:
  3806     00EA  3001               	movlw	1
  3807     00EB  00A8               	movwf	??___fladd
  3808     00EC  0828               	movf	??___fladd,w
  3809     00ED  07B2               	addwf	___fladd@bexp,f
  3810     00EE                     l2591:
  3811     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  3812     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  3813     00F0  0831               	movf	___fladd@aexp,w
  3814     00F1  0232               	subwf	___fladd@bexp,w
  3815     00F2  1C03               	skipc
  3816     00F3  28F5               	goto	u2661
  3817     00F4  28F6               	goto	u2660
  3818     00F5                     u2661:
  3819     00F5  28CF               	goto	l616
  3820     00F6                     u2660:
  3821     00F6                     l614:
  3822     00F6  1B30               	btfsc	___fladd@signs,6
  3823     00F7  28F9               	goto	u2671
  3824     00F8  28FA               	goto	u2670
  3825     00F9                     u2671:
  3826     00F9  2943               	goto	l2617
  3827     00FA                     u2670:
  3828     00FA                     l2593:
  3829     00FA  0832               	movf	___fladd@bexp,w
  3830     00FB  1D03               	btfss	3,2
  3831     00FC  28FE               	goto	u2681
  3832     00FD  28FF               	goto	u2680
  3833     00FE                     u2681:
  3834     00FE  2908               	goto	l2599
  3835     00FF                     u2680:
  3836     00FF                     l2595:
  3837     00FF  3000               	movlw	0
  3838     0100  00A3               	movwf	?___fladd+3
  3839     0101  3000               	movlw	0
  3840     0102  00A2               	movwf	?___fladd+2
  3841     0103  3000               	movlw	0
  3842     0104  00A1               	movwf	?___fladd+1
  3843     0105  3000               	movlw	0
  3844     0106  00A0               	movwf	?___fladd
  3845     0107  2A6F               	goto	l623
  3846     0108                     l2599:
  3847     0108  0824               	movf	___fladd@a,w
  3848     0109  07A0               	addwf	___fladd@b,f
  3849     010A  0825               	movf	___fladd@a+1,w
  3850     010B  1103               	clrz
  3851     010C  1803               	skipnc
  3852     010D  3E01               	addlw	1
  3853     010E  1903               	skipnz
  3854     010F  2911               	goto	u2691
  3855     0110  07A1               	addwf	___fladd@b+1,f
  3856     0111                     u2691:
  3857     0111  0826               	movf	___fladd@a+2,w
  3858     0112  1103               	clrz
  3859     0113  1803               	skipnc
  3860     0114  3E01               	addlw	1
  3861     0115  1903               	skipnz
  3862     0116  2918               	goto	u2692
  3863     0117  07A2               	addwf	___fladd@b+2,f
  3864     0118                     u2692:
  3865     0118  0827               	movf	___fladd@a+3,w
  3866     0119  1103               	clrz
  3867     011A  1803               	skipnc
  3868     011B  3E01               	addlw	1
  3869     011C  1903               	skipnz
  3870     011D  291F               	goto	u2693
  3871     011E  07A3               	addwf	___fladd@b+3,f
  3872     011F                     u2693:
  3873     011F                     l2601:
  3874     011F  1C23               	btfss	___fladd@b+3,0
  3875     0120  2922               	goto	u2701
  3876     0121  2923               	goto	u2700
  3877     0122                     u2701:
  3878     0122  29F7               	goto	l2651
  3879     0123                     u2700:
  3880     0123                     l2603:
  3881     0123  1C33               	btfss	___fladd@grs,0
  3882     0124  2926               	goto	u2711
  3883     0125  2927               	goto	u2710
  3884     0126                     u2711:
  3885     0126  292E               	goto	l2607
  3886     0127                     u2710:
  3887     0127                     l2605:
  3888     0127  0833               	movf	___fladd@grs,w
  3889     0128  00A8               	movwf	??___fladd
  3890     0129  1003               	clrc
  3891     012A  0C28               	rrf	??___fladd,w
  3892     012B  3801               	iorlw	1
  3893     012C  00B3               	movwf	___fladd@grs
  3894     012D  2930               	goto	l2609
  3895     012E                     l2607:
  3896     012E  1003               	clrc
  3897     012F  0CB3               	rrf	___fladd@grs,f
  3898     0130                     l2609:
  3899     0130  1C20               	btfss	___fladd@b,0
  3900     0131  2933               	goto	u2721
  3901     0132  2934               	goto	u2720
  3902     0133                     u2721:
  3903     0133  2935               	goto	l2613
  3904     0134                     u2720:
  3905     0134                     l2611:
  3906     0134  17B3               	bsf	___fladd@grs,7
  3907     0135                     l2613:
  3908     0135  3001               	movlw	1
  3909     0136  00A8               	movwf	??___fladd
  3910     0137                     u2735:
  3911     0137  0D23               	rlf	___fladd@b+3,w
  3912     0138  0CA3               	rrf	___fladd@b+3,f
  3913     0139  0CA2               	rrf	___fladd@b+2,f
  3914     013A  0CA1               	rrf	___fladd@b+1,f
  3915     013B  0CA0               	rrf	___fladd@b,f
  3916     013C  0BA8               	decfsz	??___fladd& (0+127),f
  3917     013D  2937               	goto	u2735
  3918     013E                     l2615:
  3919     013E  3001               	movlw	1
  3920     013F  00A8               	movwf	??___fladd
  3921     0140  0828               	movf	??___fladd,w
  3922     0141  07B2               	addwf	___fladd@bexp,f
  3923     0142  29F7               	goto	l2651
  3924     0143                     l2617:
  3925     0143  0823               	movf	___fladd@b+3,w
  3926     0144  3A80               	xorlw	128
  3927     0145  00FF               	movwf	btemp+1
  3928     0146  0827               	movf	___fladd@a+3,w
  3929     0147  3A80               	xorlw	128
  3930     0148  027F               	subwf	btemp+1,w
  3931     0149  1D03               	skipz
  3932     014A  2955               	goto	u2743
  3933     014B  0826               	movf	___fladd@a+2,w
  3934     014C  0222               	subwf	___fladd@b+2,w
  3935     014D  1D03               	skipz
  3936     014E  2955               	goto	u2743
  3937     014F  0825               	movf	___fladd@a+1,w
  3938     0150  0221               	subwf	___fladd@b+1,w
  3939     0151  1D03               	skipz
  3940     0152  2955               	goto	u2743
  3941     0153  0824               	movf	___fladd@a,w
  3942     0154  0220               	subwf	___fladd@b,w
  3943     0155                     u2743:
  3944     0155  1803               	skipnc
  3945     0156  2958               	goto	u2741
  3946     0157  2959               	goto	u2740
  3947     0158                     u2741:
  3948     0158  29B1               	goto	l2627
  3949     0159                     u2740:
  3950     0159                     l2619:
  3951     0159  30FF               	movlw	255
  3952     015A  00A8               	movwf	??___fladd
  3953     015B  30FF               	movlw	255
  3954     015C  00A9               	movwf	??___fladd+1
  3955     015D  30FF               	movlw	255
  3956     015E  00AA               	movwf	??___fladd+2
  3957     015F  30FF               	movlw	255
  3958     0160  00AB               	movwf	??___fladd+3
  3959     0161  0824               	movf	___fladd@a,w
  3960     0162  00AC               	movwf	??___fladd+4
  3961     0163  0825               	movf	___fladd@a+1,w
  3962     0164  00AD               	movwf	??___fladd+5
  3963     0165  0826               	movf	___fladd@a+2,w
  3964     0166  00AE               	movwf	??___fladd+6
  3965     0167  0827               	movf	___fladd@a+3,w
  3966     0168  00AF               	movwf	??___fladd+7
  3967     0169  0820               	movf	___fladd@b,w
  3968     016A  02AC               	subwf	??___fladd+4,f
  3969     016B  0821               	movf	___fladd@b+1,w
  3970     016C  1C03               	skipc
  3971     016D  0F21               	incfsz	___fladd@b+1,w
  3972     016E  2970               	goto	u2751
  3973     016F  2971               	goto	u2752
  3974     0170                     u2751:
  3975     0170  02AD               	subwf	??___fladd+5,f
  3976     0171                     u2752:
  3977     0171  0822               	movf	___fladd@b+2,w
  3978     0172  1C03               	skipc
  3979     0173  0F22               	incfsz	___fladd@b+2,w
  3980     0174  2976               	goto	u2753
  3981     0175  2977               	goto	u2754
  3982     0176                     u2753:
  3983     0176  02AE               	subwf	??___fladd+6,f
  3984     0177                     u2754:
  3985     0177  0823               	movf	___fladd@b+3,w
  3986     0178  1C03               	skipc
  3987     0179  0F23               	incfsz	___fladd@b+3,w
  3988     017A  297C               	goto	u2755
  3989     017B  297D               	goto	u2756
  3990     017C                     u2755:
  3991     017C  02AF               	subwf	??___fladd+7,f
  3992     017D                     u2756:
  3993     017D  082C               	movf	??___fladd+4,w
  3994     017E  07A8               	addwf	??___fladd,f
  3995     017F  082D               	movf	??___fladd+5,w
  3996     0180  1803               	skipnc
  3997     0181  0F2D               	incfsz	??___fladd+5,w
  3998     0182  2984               	goto	u2760
  3999     0183  2985               	goto	u2761
  4000     0184                     u2760:
  4001     0184  07A9               	addwf	??___fladd+1,f
  4002     0185                     u2761:
  4003     0185  082E               	movf	??___fladd+6,w
  4004     0186  1803               	skipnc
  4005     0187  0F2E               	incfsz	??___fladd+6,w
  4006     0188  298A               	goto	u2762
  4007     0189  298B               	goto	u2763
  4008     018A                     u2762:
  4009     018A  07AA               	addwf	??___fladd+2,f
  4010     018B                     u2763:
  4011     018B  082F               	movf	??___fladd+7,w
  4012     018C  1803               	skipnc
  4013     018D  0A2F               	incf	??___fladd+7,w
  4014     018E  07AB               	addwf	??___fladd+3,f
  4015     018F  082B               	movf	??___fladd+3,w
  4016     0190  00A3               	movwf	___fladd@b+3
  4017     0191  082A               	movf	??___fladd+2,w
  4018     0192  00A2               	movwf	___fladd@b+2
  4019     0193  0829               	movf	??___fladd+1,w
  4020     0194  00A1               	movwf	___fladd@b+1
  4021     0195  0828               	movf	??___fladd,w
  4022     0196  00A0               	movwf	___fladd@b
  4023     0197                     l2621:
  4024     0197  3080               	movlw	128
  4025     0198  00A8               	movwf	??___fladd
  4026     0199  0828               	movf	??___fladd,w
  4027     019A  06B0               	xorwf	___fladd@signs,f
  4028     019B  09B3               	comf	___fladd@grs,f
  4029     019C  0AB3               	incf	___fladd@grs,f
  4030     019D                     l2623:
  4031     019D  0833               	movf	___fladd@grs,w
  4032     019E  1D03               	btfss	3,2
  4033     019F  29A1               	goto	u2771
  4034     01A0  29A2               	goto	u2770
  4035     01A1                     u2771:
  4036     01A1  29BF               	goto	l631
  4037     01A2                     u2770:
  4038     01A2                     l2625:
  4039     01A2  3001               	movlw	1
  4040     01A3  07A0               	addwf	___fladd@b,f
  4041     01A4  3000               	movlw	0
  4042     01A5  1803               	skipnc
  4043     01A6  3001               	movlw	1
  4044     01A7  07A1               	addwf	___fladd@b+1,f
  4045     01A8  3000               	movlw	0
  4046     01A9  1803               	skipnc
  4047     01AA  3001               	movlw	1
  4048     01AB  07A2               	addwf	___fladd@b+2,f
  4049     01AC  3000               	movlw	0
  4050     01AD  1803               	skipnc
  4051     01AE  3001               	movlw	1
  4052     01AF  07A3               	addwf	___fladd@b+3,f
  4053     01B0  29BF               	goto	l631
  4054     01B1                     l2627:
  4055     01B1  0824               	movf	___fladd@a,w
  4056     01B2  02A0               	subwf	___fladd@b,f
  4057     01B3  0825               	movf	___fladd@a+1,w
  4058     01B4  1C03               	skipc
  4059     01B5  0F25               	incfsz	___fladd@a+1,w
  4060     01B6  02A1               	subwf	___fladd@b+1,f
  4061     01B7  0826               	movf	___fladd@a+2,w
  4062     01B8  1C03               	skipc
  4063     01B9  0F26               	incfsz	___fladd@a+2,w
  4064     01BA  02A2               	subwf	___fladd@b+2,f
  4065     01BB  0827               	movf	___fladd@a+3,w
  4066     01BC  1C03               	skipc
  4067     01BD  0F27               	incfsz	___fladd@a+3,w
  4068     01BE  02A3               	subwf	___fladd@b+3,f
  4069     01BF                     l631:
  4070     01BF  0823               	movf	___fladd@b+3,w
  4071     01C0  0422               	iorwf	___fladd@b+2,w
  4072     01C1  0421               	iorwf	___fladd@b+1,w
  4073     01C2  0420               	iorwf	___fladd@b,w
  4074     01C3  1D03               	skipz
  4075     01C4  29C6               	goto	u2781
  4076     01C5  29C7               	goto	u2780
  4077     01C6                     u2781:
  4078     01C6  29F3               	goto	l2649
  4079     01C7                     u2780:
  4080     01C7                     l2629:
  4081     01C7  0833               	movf	___fladd@grs,w
  4082     01C8  1D03               	btfss	3,2
  4083     01C9  29CB               	goto	u2791
  4084     01CA  29CC               	goto	u2790
  4085     01CB                     u2791:
  4086     01CB  29F3               	goto	l2649
  4087     01CC                     u2790:
  4088     01CC                     l2631:
  4089     01CC  3000               	movlw	0
  4090     01CD  00A3               	movwf	?___fladd+3
  4091     01CE  3000               	movlw	0
  4092     01CF  00A2               	movwf	?___fladd+2
  4093     01D0  3000               	movlw	0
  4094     01D1  00A1               	movwf	?___fladd+1
  4095     01D2  3000               	movlw	0
  4096     01D3  00A0               	movwf	?___fladd
  4097     01D4  2A6F               	goto	l623
  4098     01D5                     l2635:
  4099     01D5  3001               	movlw	1
  4100     01D6  00A8               	movwf	??___fladd
  4101     01D7                     u2805:
  4102     01D7  1003               	clrc
  4103     01D8  0DA0               	rlf	___fladd@b,f
  4104     01D9  0DA1               	rlf	___fladd@b+1,f
  4105     01DA  0DA2               	rlf	___fladd@b+2,f
  4106     01DB  0DA3               	rlf	___fladd@b+3,f
  4107     01DC  0BA8               	decfsz	??___fladd,f
  4108     01DD  29D7               	goto	u2805
  4109     01DE                     l2637:
  4110     01DE  1FB3               	btfss	___fladd@grs,7
  4111     01DF  29E1               	goto	u2811
  4112     01E0  29E2               	goto	u2810
  4113     01E1                     u2811:
  4114     01E1  29E3               	goto	l635
  4115     01E2                     u2810:
  4116     01E2                     l2639:
  4117     01E2  1420               	bsf	___fladd@b,0
  4118     01E3                     l635:
  4119     01E3  1C33               	btfss	___fladd@grs,0
  4120     01E4  29E6               	goto	u2821
  4121     01E5  29E7               	goto	u2820
  4122     01E6                     u2821:
  4123     01E6  29EA               	goto	l2643
  4124     01E7                     u2820:
  4125     01E7                     l2641:
  4126     01E7  1403               	setc
  4127     01E8  0DB3               	rlf	___fladd@grs,f
  4128     01E9  29EC               	goto	l2645
  4129     01EA                     l2643:
  4130     01EA  1003               	clrc
  4131     01EB  0DB3               	rlf	___fladd@grs,f
  4132     01EC                     l2645:
  4133     01EC  0832               	movf	___fladd@bexp,w
  4134     01ED  1903               	btfsc	3,2
  4135     01EE  29F0               	goto	u2831
  4136     01EF  29F1               	goto	u2830
  4137     01F0                     u2831:
  4138     01F0  29F3               	goto	l2649
  4139     01F1                     u2830:
  4140     01F1                     l2647:
  4141     01F1  3001               	movlw	1
  4142     01F2  02B2               	subwf	___fladd@bexp,f
  4143     01F3                     l2649:
  4144     01F3  1FA2               	btfss	___fladd@b+2,7
  4145     01F4  29F6               	goto	u2841
  4146     01F5  29F7               	goto	u2840
  4147     01F6                     u2841:
  4148     01F6  29D5               	goto	l2635
  4149     01F7                     u2840:
  4150     01F7                     l2651:
  4151     01F7  01B1               	clrf	___fladd@aexp
  4152     01F8                     l2653:
  4153     01F8  1FB3               	btfss	___fladd@grs,7
  4154     01F9  29FB               	goto	u2851
  4155     01FA  29FC               	goto	u2850
  4156     01FB                     u2851:
  4157     01FB  2A0A               	goto	l2661
  4158     01FC                     u2850:
  4159     01FC                     l2655:
  4160     01FC  0833               	movf	___fladd@grs,w
  4161     01FD  397F               	andlw	127
  4162     01FE  1903               	btfsc	3,2
  4163     01FF  2A01               	goto	u2861
  4164     0200  2A02               	goto	u2860
  4165     0201                     u2861:
  4166     0201  2A05               	goto	l641
  4167     0202                     u2860:
  4168     0202                     l2657:
  4169     0202  01B1               	clrf	___fladd@aexp
  4170     0203  0AB1               	incf	___fladd@aexp,f
  4171     0204  2A0A               	goto	l2661
  4172     0205                     l641:
  4173     0205  1C20               	btfss	___fladd@b,0
  4174     0206  2A08               	goto	u2871
  4175     0207  2A09               	goto	u2870
  4176     0208                     u2871:
  4177     0208  2A0A               	goto	l2661
  4178     0209                     u2870:
  4179     0209  2A02               	goto	l2657
  4180     020A                     l2661:
  4181     020A  0831               	movf	___fladd@aexp,w
  4182     020B  1903               	btfsc	3,2
  4183     020C  2A0E               	goto	u2881
  4184     020D  2A0F               	goto	u2880
  4185     020E                     u2881:
  4186     020E  2A43               	goto	l644
  4187     020F                     u2880:
  4188     020F                     l2663:
  4189     020F  3001               	movlw	1
  4190     0210  07A0               	addwf	___fladd@b,f
  4191     0211  3000               	movlw	0
  4192     0212  1803               	skipnc
  4193     0213  3001               	movlw	1
  4194     0214  07A1               	addwf	___fladd@b+1,f
  4195     0215  3000               	movlw	0
  4196     0216  1803               	skipnc
  4197     0217  3001               	movlw	1
  4198     0218  07A2               	addwf	___fladd@b+2,f
  4199     0219  3000               	movlw	0
  4200     021A  1803               	skipnc
  4201     021B  3001               	movlw	1
  4202     021C  07A3               	addwf	___fladd@b+3,f
  4203     021D                     l2665:
  4204     021D  1C23               	btfss	___fladd@b+3,0
  4205     021E  2A20               	goto	u2891
  4206     021F  2A21               	goto	u2890
  4207     0220                     u2891:
  4208     0220  2A43               	goto	l644
  4209     0221                     u2890:
  4210     0221                     l2667:
  4211     0221  0820               	movf	___fladd@b,w
  4212     0222  00A8               	movwf	??___fladd
  4213     0223  0821               	movf	___fladd@b+1,w
  4214     0224  00A9               	movwf	??___fladd+1
  4215     0225  0822               	movf	___fladd@b+2,w
  4216     0226  00AA               	movwf	??___fladd+2
  4217     0227  0823               	movf	___fladd@b+3,w
  4218     0228  00AB               	movwf	??___fladd+3
  4219     0229  3001               	movlw	1
  4220     022A  00AC               	movwf	??___fladd+4
  4221     022B                     u2905:
  4222     022B  0D2B               	rlf	??___fladd+3,w
  4223     022C  0CAB               	rrf	??___fladd+3,f
  4224     022D  0CAA               	rrf	??___fladd+2,f
  4225     022E  0CA9               	rrf	??___fladd+1,f
  4226     022F  0CA8               	rrf	??___fladd,f
  4227     0230                     u2900:
  4228     0230  0BAC               	decfsz	??___fladd+4,f
  4229     0231  2A2B               	goto	u2905
  4230     0232  082B               	movf	??___fladd+3,w
  4231     0233  00A3               	movwf	___fladd@b+3
  4232     0234  082A               	movf	??___fladd+2,w
  4233     0235  00A2               	movwf	___fladd@b+2
  4234     0236  0829               	movf	??___fladd+1,w
  4235     0237  00A1               	movwf	___fladd@b+1
  4236     0238  0828               	movf	??___fladd,w
  4237     0239  00A0               	movwf	___fladd@b
  4238     023A  0A32               	incf	___fladd@bexp,w
  4239     023B  1903               	btfsc	3,2
  4240     023C  2A3E               	goto	u2911
  4241     023D  2A3F               	goto	u2910
  4242     023E                     u2911:
  4243     023E  2A43               	goto	l644
  4244     023F                     u2910:
  4245     023F                     l2669:
  4246     023F  3001               	movlw	1
  4247     0240  00A8               	movwf	??___fladd
  4248     0241  0828               	movf	??___fladd,w
  4249     0242  07B2               	addwf	___fladd@bexp,f
  4250     0243                     l644:
  4251     0243  0A32               	incf	___fladd@bexp,w
  4252     0244  1903               	btfsc	3,2
  4253     0245  2A47               	goto	u2921
  4254     0246  2A48               	goto	u2920
  4255     0247                     u2921:
  4256     0247  2A4D               	goto	l2673
  4257     0248                     u2920:
  4258     0248                     l2671:
  4259     0248  0832               	movf	___fladd@bexp,w
  4260     0249  1D03               	btfss	3,2
  4261     024A  2A4C               	goto	u2931
  4262     024B  2A4D               	goto	u2930
  4263     024C                     u2931:
  4264     024C  2A5B               	goto	l2679
  4265     024D                     u2930:
  4266     024D                     l2673:
  4267     024D  3000               	movlw	0
  4268     024E  00A3               	movwf	___fladd@b+3
  4269     024F  3000               	movlw	0
  4270     0250  00A2               	movwf	___fladd@b+2
  4271     0251  3000               	movlw	0
  4272     0252  00A1               	movwf	___fladd@b+1
  4273     0253  3000               	movlw	0
  4274     0254  00A0               	movwf	___fladd@b
  4275     0255                     l2675:
  4276     0255  0832               	movf	___fladd@bexp,w
  4277     0256  1D03               	btfss	3,2
  4278     0257  2A59               	goto	u2941
  4279     0258  2A5A               	goto	u2940
  4280     0259                     u2941:
  4281     0259  2A5B               	goto	l2679
  4282     025A                     u2940:
  4283     025A                     l2677:
  4284     025A  01B0               	clrf	___fladd@signs
  4285     025B                     l2679:
  4286     025B  1C32               	btfss	___fladd@bexp,0
  4287     025C  2A5E               	goto	u2951
  4288     025D  2A5F               	goto	u2950
  4289     025E                     u2951:
  4290     025E  2A61               	goto	l2683
  4291     025F                     u2950:
  4292     025F                     l2681:
  4293     025F  17A2               	bsf	___fladd@b+2,7
  4294     0260  2A65               	goto	l652
  4295     0261                     l2683:
  4296     0261  307F               	movlw	127
  4297     0262  00A8               	movwf	??___fladd
  4298     0263  0828               	movf	??___fladd,w
  4299     0264  05A2               	andwf	___fladd@b+2,f
  4300     0265                     l652:
  4301     0265  0832               	movf	___fladd@bexp,w
  4302     0266  00A8               	movwf	??___fladd
  4303     0267  1003               	clrc
  4304     0268  0C28               	rrf	??___fladd,w
  4305     0269  00A3               	movwf	___fladd@b+3
  4306     026A                     l2685:
  4307     026A  1FB0               	btfss	___fladd@signs,7
  4308     026B  2A6D               	goto	u2961
  4309     026C  2A6E               	goto	u2960
  4310     026D                     u2961:
  4311     026D  2A6F               	goto	l653
  4312     026E                     u2960:
  4313     026E                     l2687:
  4314     026E  17A3               	bsf	___fladd@b+3,7
  4315     026F                     l653:
  4316     026F                     l623:
  4317     026F  0008               	return
  4318     0270                     __end_of___fladd:
  4319                           
  4320                           	psect	text14
  4321     0D29                     __ptext14:	
  4322 ;; *************** function _adc_RO *****************
  4323 ;; Defined at:
  4324 ;;		line 121 in file "adc.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  channel         1    wreg     unsigned char 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  channel         1    1[BANK0 ] unsigned char 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      unsigned char 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0, pclath, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4338 ;;      Params:         0       0       0       0       0
  4339 ;;      Locals:         0       1       0       0       0
  4340 ;;      Temps:          0       1       0       0       0
  4341 ;;      Totals:         0       2       0       0       0
  4342 ;;Total ram usage:        2 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 3
  4345 ;; This function calls:
  4346 ;;		_adc_output
  4347 ;;		_adc_read
  4348 ;; This function is called by:
  4349 ;;		_main
  4350 ;;		_adc_mv
  4351 ;;		_adc_volt
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355     0D29                     _adc_RO:	
  4356                           ;psect for function _adc_RO
  4357                           
  4358                           
  4359                           ;incstack = 0
  4360                           ; Regs used in _adc_RO: [wreg+status,2+status,0+pclath+cstack]
  4361                           ;adc_RO@channel stored from wreg
  4362     0D29  1283               	bcf	3,5	;RP0=0, select bank0
  4363     0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  4364     0D2B  00A1               	movwf	adc_RO@channel
  4365     0D2C                     l2755:
  4366                           
  4367                           ;adc.c: 122:     adc_read(channel);
  4368     0D2C  0821               	movf	adc_RO@channel,w
  4369     0D2D  120A  158A  2515  120A  158A  	fcall	_adc_read
  4370     0D32                     l2757:
  4371                           
  4372                           ;adc.c: 123:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  4373     0D32  300F               	movlw	15
  4374     0D33  1283               	bcf	3,5	;RP0=0, select bank0
  4375     0D34  1303               	bcf	3,6	;RP1=0, select bank0
  4376     0D35  00A0               	movwf	??_adc_RO
  4377     0D36                     u3367:
  4378     0D36  0BA0               	decfsz	??_adc_RO,f
  4379     0D37  2D36               	goto	u3367
  4380     0D38  2D39               	nop2
  4381     0D39                     l2759:
  4382                           
  4383                           ;adc.c: 124:     return adc_output();
  4384     0D39  120A  158A  24EC  120A  158A  	fcall	_adc_output
  4385     0D3E                     l166:
  4386     0D3E  0008               	return
  4387     0D3F                     __end_of_adc_RO:
  4388                           
  4389                           	psect	text15
  4390     0D15                     __ptext15:	
  4391 ;; *************** function _adc_read *****************
  4392 ;; Defined at:
  4393 ;;		line 106 in file "adc.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  channel         1    wreg     unsigned char 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  channel         1    6[COMMON] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4407 ;;      Params:         0       0       0       0       0
  4408 ;;      Locals:         1       0       0       0       0
  4409 ;;      Temps:          1       0       0       0       0
  4410 ;;      Totals:         2       0       0       0       0
  4411 ;;Total ram usage:        2 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; Hardware stack levels required when called: 2
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_adc_RO
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421     0D15                     _adc_read:	
  4422                           ;psect for function _adc_read
  4423                           
  4424                           
  4425                           ;incstack = 0
  4426                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  4427                           ;adc_read@channel stored from wreg
  4428     0D15  00F6               	movwf	adc_read@channel
  4429     0D16                     l2707:
  4430                           
  4431                           ;adc.c: 107:     ADCON0bits.CHS = channel;
  4432     0D16  0876               	movf	adc_read@channel,w
  4433     0D17  00F5               	movwf	??_adc_read
  4434     0D18  0DF5               	rlf	??_adc_read,f
  4435     0D19  0DF5               	rlf	??_adc_read,f
  4436     0D1A  1283               	bcf	3,5	;RP0=0, select bank0
  4437     0D1B  1303               	bcf	3,6	;RP1=0, select bank0
  4438     0D1C  081F               	movf	31,w	;volatile
  4439     0D1D  0675               	xorwf	??_adc_read,w
  4440     0D1E  39C3               	andlw	-61
  4441     0D1F  0675               	xorwf	??_adc_read,w
  4442     0D20  009F               	movwf	31	;volatile
  4443     0D21                     l2709:
  4444                           
  4445                           ;adc.c: 108:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  4446     0D21  3021               	movlw	33
  4447     0D22  00F5               	movwf	??_adc_read
  4448     0D23                     u3377:
  4449     0D23  0BF5               	decfsz	??_adc_read,f
  4450     0D24  2D23               	goto	u3377
  4451     0D25                     l2711:
  4452                           
  4453                           ;adc.c: 109:     ADCON0bits.GO = 1;
  4454     0D25  1283               	bcf	3,5	;RP0=0, select bank0
  4455     0D26  1303               	bcf	3,6	;RP1=0, select bank0
  4456     0D27  149F               	bsf	31,1	;volatile
  4457     0D28                     l159:
  4458     0D28  0008               	return
  4459     0D29                     __end_of_adc_read:
  4460                           
  4461                           	psect	text16
  4462     0CEC                     __ptext16:	
  4463 ;; *************** function _adc_output *****************
  4464 ;; Defined at:
  4465 ;;		line 114 in file "adc.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      unsigned char 
  4472 ;; Registers used:
  4473 ;;		wreg
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4479 ;;      Params:         0       0       0       0       0
  4480 ;;      Locals:         0       0       0       0       0
  4481 ;;      Temps:          0       0       0       0       0
  4482 ;;      Totals:         0       0       0       0       0
  4483 ;;Total ram usage:        0 bytes
  4484 ;; Hardware stack levels used: 1
  4485 ;; Hardware stack levels required when called: 2
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_adc_RO
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493     0CEC                     _adc_output:	
  4494                           ;psect for function _adc_output
  4495                           
  4496     0CEC                     l2713:	
  4497                           ;incstack = 0
  4498                           ; Regs used in _adc_output: [wreg]
  4499                           
  4500                           
  4501                           ;adc.c: 115:     if (PIR1bits.ADIF == 1) {
  4502     0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  4503     0CED  1303               	bcf	3,6	;RP1=0, select bank0
  4504     0CEE  1F0C               	btfss	12,6	;volatile
  4505     0CEF  2CF1               	goto	u2981
  4506     0CF0  2CF2               	goto	u2980
  4507     0CF1                     u2981:
  4508     0CF1  2CF3               	goto	l2717
  4509     0CF2                     u2980:
  4510     0CF2                     l2715:
  4511                           
  4512                           ;adc.c: 116:         PIR1bits.ADIF = 0;
  4513     0CF2  130C               	bcf	12,6	;volatile
  4514     0CF3                     l2717:
  4515                           
  4516                           ;adc.c: 118:     return ADRESH;
  4517     0CF3  081E               	movf	30,w	;volatile
  4518     0CF4                     l163:
  4519     0CF4  0008               	return
  4520     0CF5                     __end_of_adc_output:
  4521                           
  4522                           	psect	text17
  4523     0DBD                     __ptext17:	
  4524 ;; *************** function ___wmul *****************
  4525 ;; Defined at:
  4526 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4529 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  product         2    5[COMMON] unsigned int 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  2    0[BANK0 ] unsigned int 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4541 ;;      Params:         0       4       0       0       0
  4542 ;;      Locals:         2       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0
  4544 ;;      Totals:         2       4       0       0       0
  4545 ;;Total ram usage:        6 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 2
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_adc_mv
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555     0DBD                     ___wmul:	
  4556                           ;psect for function ___wmul
  4557                           
  4558     0DBD                     l2785:	
  4559                           ;incstack = 0
  4560                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4561                           
  4562     0DBD  01F5               	clrf	___wmul@product
  4563     0DBE  01F6               	clrf	___wmul@product+1
  4564     0DBF                     l2787:
  4565     0DBF  1283               	bcf	3,5	;RP0=0, select bank0
  4566     0DC0  1303               	bcf	3,6	;RP1=0, select bank0
  4567     0DC1  1C20               	btfss	___wmul@multiplier,0
  4568     0DC2  2DC4               	goto	u3011
  4569     0DC3  2DC5               	goto	u3010
  4570     0DC4                     u3011:
  4571     0DC4  2DCB               	goto	l317
  4572     0DC5                     u3010:
  4573     0DC5                     l2789:
  4574     0DC5  0822               	movf	___wmul@multiplicand,w
  4575     0DC6  07F5               	addwf	___wmul@product,f
  4576     0DC7  1803               	skipnc
  4577     0DC8  0AF6               	incf	___wmul@product+1,f
  4578     0DC9  0823               	movf	___wmul@multiplicand+1,w
  4579     0DCA  07F6               	addwf	___wmul@product+1,f
  4580     0DCB                     l317:
  4581     0DCB  3001               	movlw	1
  4582     0DCC                     u3025:
  4583     0DCC  1003               	clrc
  4584     0DCD  0DA2               	rlf	___wmul@multiplicand,f
  4585     0DCE  0DA3               	rlf	___wmul@multiplicand+1,f
  4586     0DCF  3EFF               	addlw	-1
  4587     0DD0  1D03               	skipz
  4588     0DD1  2DCC               	goto	u3025
  4589     0DD2                     l2791:
  4590     0DD2  3001               	movlw	1
  4591     0DD3                     u3035:
  4592     0DD3  1003               	clrc
  4593     0DD4  0CA1               	rrf	___wmul@multiplier+1,f
  4594     0DD5  0CA0               	rrf	___wmul@multiplier,f
  4595     0DD6  3EFF               	addlw	-1
  4596     0DD7  1D03               	skipz
  4597     0DD8  2DD3               	goto	u3035
  4598     0DD9                     l2793:
  4599     0DD9  0820               	movf	___wmul@multiplier,w
  4600     0DDA  0421               	iorwf	___wmul@multiplier+1,w
  4601     0DDB  1D03               	btfss	3,2
  4602     0DDC  2DDE               	goto	u3041
  4603     0DDD  2DDF               	goto	u3040
  4604     0DDE                     u3041:
  4605     0DDE  2DBF               	goto	l2787
  4606     0DDF                     u3040:
  4607     0DDF                     l2795:
  4608     0DDF  0876               	movf	___wmul@product+1,w
  4609     0DE0  00A1               	movwf	?___wmul+1
  4610     0DE1  0875               	movf	___wmul@product,w
  4611     0DE2  00A0               	movwf	?___wmul
  4612     0DE3                     l319:
  4613     0DE3  0008               	return
  4614     0DE4                     __end_of___wmul:
  4615                           
  4616                           	psect	text18
  4617     06D0                     __ptext18:	
  4618 ;; *************** function ___awdiv *****************
  4619 ;; Defined at:
  4620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  divisor         2    4[BANK0 ] int 
  4623 ;;  dividend        2    6[BANK0 ] int 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  quotient        2   11[BANK0 ] int 
  4626 ;;  sign            1   10[BANK0 ] unsigned char 
  4627 ;;  counter         1    9[BANK0 ] unsigned char 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  2    4[BANK0 ] int 
  4630 ;; Registers used:
  4631 ;;		wreg, status,2, status,0
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4637 ;;      Params:         0       4       0       0       0
  4638 ;;      Locals:         0       4       0       0       0
  4639 ;;      Temps:          0       1       0       0       0
  4640 ;;      Totals:         0       9       0       0       0
  4641 ;;Total ram usage:        9 bytes
  4642 ;; Hardware stack levels used: 1
  4643 ;; Hardware stack levels required when called: 2
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_adc_mv
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651     06D0                     ___awdiv:	
  4652                           ;psect for function ___awdiv
  4653                           
  4654     06D0                     l2067:	
  4655                           ;incstack = 0
  4656                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4657                           
  4658     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  4659     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  4660     06D2  01AA               	clrf	___awdiv@sign
  4661     06D3                     l2069:
  4662     06D3  1FA5               	btfss	___awdiv@divisor+1,7
  4663     06D4  2ED6               	goto	u2011
  4664     06D5  2ED7               	goto	u2010
  4665     06D6                     u2011:
  4666     06D6  2EDE               	goto	l2075
  4667     06D7                     u2010:
  4668     06D7                     l2071:
  4669     06D7  09A4               	comf	___awdiv@divisor,f
  4670     06D8  09A5               	comf	___awdiv@divisor+1,f
  4671     06D9  0AA4               	incf	___awdiv@divisor,f
  4672     06DA  1903               	skipnz
  4673     06DB  0AA5               	incf	___awdiv@divisor+1,f
  4674     06DC                     l2073:
  4675     06DC  01AA               	clrf	___awdiv@sign
  4676     06DD  0AAA               	incf	___awdiv@sign,f
  4677     06DE                     l2075:
  4678     06DE  1FA7               	btfss	___awdiv@dividend+1,7
  4679     06DF  2EE1               	goto	u2021
  4680     06E0  2EE2               	goto	u2020
  4681     06E1                     u2021:
  4682     06E1  2EEB               	goto	l2081
  4683     06E2                     u2020:
  4684     06E2                     l2077:
  4685     06E2  09A6               	comf	___awdiv@dividend,f
  4686     06E3  09A7               	comf	___awdiv@dividend+1,f
  4687     06E4  0AA6               	incf	___awdiv@dividend,f
  4688     06E5  1903               	skipnz
  4689     06E6  0AA7               	incf	___awdiv@dividend+1,f
  4690     06E7                     l2079:
  4691     06E7  3001               	movlw	1
  4692     06E8  00A8               	movwf	??___awdiv
  4693     06E9  0828               	movf	??___awdiv,w
  4694     06EA  06AA               	xorwf	___awdiv@sign,f
  4695     06EB                     l2081:
  4696     06EB  01AB               	clrf	___awdiv@quotient
  4697     06EC  01AC               	clrf	___awdiv@quotient+1
  4698     06ED                     l2083:
  4699     06ED  0824               	movf	___awdiv@divisor,w
  4700     06EE  0425               	iorwf	___awdiv@divisor+1,w
  4701     06EF  1903               	btfsc	3,2
  4702     06F0  2EF2               	goto	u2031
  4703     06F1  2EF3               	goto	u2030
  4704     06F2                     u2031:
  4705     06F2  2F2A               	goto	l2103
  4706     06F3                     u2030:
  4707     06F3                     l2085:
  4708     06F3  01A9               	clrf	___awdiv@counter
  4709     06F4  0AA9               	incf	___awdiv@counter,f
  4710     06F5  2F01               	goto	l2091
  4711     06F6                     l2087:
  4712     06F6  3001               	movlw	1
  4713     06F7                     u2045:
  4714     06F7  1003               	clrc
  4715     06F8  0DA4               	rlf	___awdiv@divisor,f
  4716     06F9  0DA5               	rlf	___awdiv@divisor+1,f
  4717     06FA  3EFF               	addlw	-1
  4718     06FB  1D03               	skipz
  4719     06FC  2EF7               	goto	u2045
  4720     06FD                     l2089:
  4721     06FD  3001               	movlw	1
  4722     06FE  00A8               	movwf	??___awdiv
  4723     06FF  0828               	movf	??___awdiv,w
  4724     0700  07A9               	addwf	___awdiv@counter,f
  4725     0701                     l2091:
  4726     0701  1FA5               	btfss	___awdiv@divisor+1,7
  4727     0702  2F04               	goto	u2051
  4728     0703  2F05               	goto	u2050
  4729     0704                     u2051:
  4730     0704  2EF6               	goto	l2087
  4731     0705                     u2050:
  4732     0705                     l2093:
  4733     0705  3001               	movlw	1
  4734     0706                     u2065:
  4735     0706  1003               	clrc
  4736     0707  0DAB               	rlf	___awdiv@quotient,f
  4737     0708  0DAC               	rlf	___awdiv@quotient+1,f
  4738     0709  3EFF               	addlw	-1
  4739     070A  1D03               	skipz
  4740     070B  2F06               	goto	u2065
  4741     070C  0825               	movf	___awdiv@divisor+1,w
  4742     070D  0227               	subwf	___awdiv@dividend+1,w
  4743     070E  1D03               	skipz
  4744     070F  2F12               	goto	u2075
  4745     0710  0824               	movf	___awdiv@divisor,w
  4746     0711  0226               	subwf	___awdiv@dividend,w
  4747     0712                     u2075:
  4748     0712  1C03               	skipc
  4749     0713  2F15               	goto	u2071
  4750     0714  2F16               	goto	u2070
  4751     0715                     u2071:
  4752     0715  2F1D               	goto	l2099
  4753     0716                     u2070:
  4754     0716                     l2095:
  4755     0716  0824               	movf	___awdiv@divisor,w
  4756     0717  02A6               	subwf	___awdiv@dividend,f
  4757     0718  0825               	movf	___awdiv@divisor+1,w
  4758     0719  1C03               	skipc
  4759     071A  03A7               	decf	___awdiv@dividend+1,f
  4760     071B  02A7               	subwf	___awdiv@dividend+1,f
  4761     071C                     l2097:
  4762     071C  142B               	bsf	___awdiv@quotient,0
  4763     071D                     l2099:
  4764     071D  3001               	movlw	1
  4765     071E                     u2085:
  4766     071E  1003               	clrc
  4767     071F  0CA5               	rrf	___awdiv@divisor+1,f
  4768     0720  0CA4               	rrf	___awdiv@divisor,f
  4769     0721  3EFF               	addlw	-1
  4770     0722  1D03               	skipz
  4771     0723  2F1E               	goto	u2085
  4772     0724                     l2101:
  4773     0724  3001               	movlw	1
  4774     0725  02A9               	subwf	___awdiv@counter,f
  4775     0726  1D03               	btfss	3,2
  4776     0727  2F29               	goto	u2091
  4777     0728  2F2A               	goto	u2090
  4778     0729                     u2091:
  4779     0729  2F05               	goto	l2093
  4780     072A                     u2090:
  4781     072A                     l2103:
  4782     072A  082A               	movf	___awdiv@sign,w
  4783     072B  1903               	btfsc	3,2
  4784     072C  2F2E               	goto	u2101
  4785     072D  2F2F               	goto	u2100
  4786     072E                     u2101:
  4787     072E  2F34               	goto	l2107
  4788     072F                     u2100:
  4789     072F                     l2105:
  4790     072F  09AB               	comf	___awdiv@quotient,f
  4791     0730  09AC               	comf	___awdiv@quotient+1,f
  4792     0731  0AAB               	incf	___awdiv@quotient,f
  4793     0732  1903               	skipnz
  4794     0733  0AAC               	incf	___awdiv@quotient+1,f
  4795     0734                     l2107:
  4796     0734  082C               	movf	___awdiv@quotient+1,w
  4797     0735  00A5               	movwf	?___awdiv+1
  4798     0736  082B               	movf	___awdiv@quotient,w
  4799     0737  00A4               	movwf	?___awdiv
  4800     0738                     l470:
  4801     0738  0008               	return
  4802     0739                     __end_of___awdiv:
  4803                           
  4804                           	psect	text19
  4805     0552                     __ptext19:	
  4806 ;; *************** function _adc_channel *****************
  4807 ;; Defined at:
  4808 ;;		line 42 in file "adc.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  channel         2    5[COMMON] int 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      void 
  4815 ;; Registers used:
  4816 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4822 ;;      Params:         2       0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0
  4824 ;;      Temps:          0       0       0       0       0
  4825 ;;      Totals:         2       0       0       0       0
  4826 ;;Total ram usage:        2 bytes
  4827 ;; Hardware stack levels used: 1
  4828 ;; Hardware stack levels required when called: 2
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_main
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836     0552                     _adc_channel:	
  4837                           ;psect for function _adc_channel
  4838                           
  4839     0552                     l2187:	
  4840                           ;incstack = 0
  4841                           ; Regs used in _adc_channel: [wreg-fsr0h+status,2+status,0]
  4842                           
  4843                           
  4844                           ;adc.c: 43:     switch (channel)
  4845     0552  2DB5               	goto	l2191
  4846     0553                     l140:	
  4847                           ;adc.c: 44:     {case 0:
  4848                           
  4849                           
  4850                           ;adc.c: 45:         ANSELbits.ANS0 = 1;
  4851     0553  1683               	bsf	3,5	;RP0=1, select bank3
  4852     0554  1703               	bsf	3,6	;RP1=1, select bank3
  4853     0555  1408               	bsf	8,0	;volatile
  4854                           
  4855                           ;adc.c: 46:         TRISAbits.TRISA0 = 1;
  4856     0556  1683               	bsf	3,5	;RP0=1, select bank1
  4857     0557  1303               	bcf	3,6	;RP1=0, select bank1
  4858     0558  1405               	bsf	5,0	;volatile
  4859                           
  4860                           ;adc.c: 47:         break;
  4861     0559  2DE6               	goto	l156
  4862     055A                     l142:	
  4863                           ;adc.c: 48:     case 1:
  4864                           
  4865                           
  4866                           ;adc.c: 49:         ANSELbits.ANS1 = 1;
  4867     055A  1683               	bsf	3,5	;RP0=1, select bank3
  4868     055B  1703               	bsf	3,6	;RP1=1, select bank3
  4869     055C  1488               	bsf	8,1	;volatile
  4870                           
  4871                           ;adc.c: 50:         TRISAbits.TRISA1 = 1;
  4872     055D  1683               	bsf	3,5	;RP0=1, select bank1
  4873     055E  1303               	bcf	3,6	;RP1=0, select bank1
  4874     055F  1485               	bsf	5,1	;volatile
  4875                           
  4876                           ;adc.c: 51:         break;
  4877     0560  2DE6               	goto	l156
  4878     0561                     l143:	
  4879                           ;adc.c: 52:     case 2:
  4880                           
  4881                           
  4882                           ;adc.c: 53:         ANSELbits.ANS2 = 1;
  4883     0561  1683               	bsf	3,5	;RP0=1, select bank3
  4884     0562  1703               	bsf	3,6	;RP1=1, select bank3
  4885     0563  1508               	bsf	8,2	;volatile
  4886                           
  4887                           ;adc.c: 54:         TRISAbits.TRISA2 = 1;
  4888     0564  1683               	bsf	3,5	;RP0=1, select bank1
  4889     0565  1303               	bcf	3,6	;RP1=0, select bank1
  4890     0566  1505               	bsf	5,2	;volatile
  4891                           
  4892                           ;adc.c: 55:         break;
  4893     0567  2DE6               	goto	l156
  4894     0568                     l144:	
  4895                           ;adc.c: 56:     case 3:
  4896                           
  4897                           
  4898                           ;adc.c: 57:         ANSELbits.ANS3 = 1;
  4899     0568  1683               	bsf	3,5	;RP0=1, select bank3
  4900     0569  1703               	bsf	3,6	;RP1=1, select bank3
  4901     056A  1588               	bsf	8,3	;volatile
  4902                           
  4903                           ;adc.c: 58:         TRISAbits.TRISA3 = 1;
  4904     056B  1683               	bsf	3,5	;RP0=1, select bank1
  4905     056C  1303               	bcf	3,6	;RP1=0, select bank1
  4906     056D  1585               	bsf	5,3	;volatile
  4907                           
  4908                           ;adc.c: 59:         break;
  4909     056E  2DE6               	goto	l156
  4910     056F                     l145:	
  4911                           ;adc.c: 60:     case 4:
  4912                           
  4913                           
  4914                           ;adc.c: 61:         ANSELbits.ANS4 = 1;
  4915     056F  1683               	bsf	3,5	;RP0=1, select bank3
  4916     0570  1703               	bsf	3,6	;RP1=1, select bank3
  4917     0571  1608               	bsf	8,4	;volatile
  4918                           
  4919                           ;adc.c: 62:         TRISAbits.TRISA5 = 1;
  4920     0572  1683               	bsf	3,5	;RP0=1, select bank1
  4921     0573  1303               	bcf	3,6	;RP1=0, select bank1
  4922     0574  1685               	bsf	5,5	;volatile
  4923                           
  4924                           ;adc.c: 63:         break;
  4925     0575  2DE6               	goto	l156
  4926     0576                     l146:	
  4927                           ;adc.c: 64:     case 5:
  4928                           
  4929                           
  4930                           ;adc.c: 65:         ANSELbits.ANS5 = 1;
  4931     0576  1683               	bsf	3,5	;RP0=1, select bank3
  4932     0577  1703               	bsf	3,6	;RP1=1, select bank3
  4933     0578  1688               	bsf	8,5	;volatile
  4934                           
  4935                           ;adc.c: 66:         TRISEbits.TRISE0 = 1;
  4936     0579  1683               	bsf	3,5	;RP0=1, select bank1
  4937     057A  1303               	bcf	3,6	;RP1=0, select bank1
  4938     057B  1409               	bsf	9,0	;volatile
  4939                           
  4940                           ;adc.c: 67:         break;
  4941     057C  2DE6               	goto	l156
  4942     057D                     l147:	
  4943                           ;adc.c: 68:     case 6:
  4944                           
  4945                           
  4946                           ;adc.c: 69:         ANSELbits.ANS6 = 1;
  4947     057D  1683               	bsf	3,5	;RP0=1, select bank3
  4948     057E  1703               	bsf	3,6	;RP1=1, select bank3
  4949     057F  1708               	bsf	8,6	;volatile
  4950                           
  4951                           ;adc.c: 70:         TRISEbits.TRISE1 = 1;
  4952     0580  1683               	bsf	3,5	;RP0=1, select bank1
  4953     0581  1303               	bcf	3,6	;RP1=0, select bank1
  4954     0582  1489               	bsf	9,1	;volatile
  4955                           
  4956                           ;adc.c: 71:         break;
  4957     0583  2DE6               	goto	l156
  4958     0584                     l148:	
  4959                           ;adc.c: 72:     case 7:
  4960                           
  4961                           
  4962                           ;adc.c: 73:         ANSELbits.ANS7 = 1;
  4963     0584  1683               	bsf	3,5	;RP0=1, select bank3
  4964     0585  1703               	bsf	3,6	;RP1=1, select bank3
  4965     0586  1788               	bsf	8,7	;volatile
  4966                           
  4967                           ;adc.c: 74:         TRISEbits.TRISE2 = 1;
  4968     0587  1683               	bsf	3,5	;RP0=1, select bank1
  4969     0588  1303               	bcf	3,6	;RP1=0, select bank1
  4970     0589  1509               	bsf	9,2	;volatile
  4971                           
  4972                           ;adc.c: 75:         break;
  4973     058A  2DE6               	goto	l156
  4974     058B                     l149:	
  4975                           ;adc.c: 76:     case 8:
  4976                           
  4977                           
  4978                           ;adc.c: 77:         ANSELHbits.ANS8 = 1;
  4979     058B  1683               	bsf	3,5	;RP0=1, select bank3
  4980     058C  1703               	bsf	3,6	;RP1=1, select bank3
  4981     058D  1409               	bsf	9,0	;volatile
  4982                           
  4983                           ;adc.c: 78:         TRISBbits.TRISB2 = 1;
  4984     058E  1683               	bsf	3,5	;RP0=1, select bank1
  4985     058F  1303               	bcf	3,6	;RP1=0, select bank1
  4986     0590  1506               	bsf	6,2	;volatile
  4987                           
  4988                           ;adc.c: 79:         break;
  4989     0591  2DE6               	goto	l156
  4990     0592                     l150:	
  4991                           ;adc.c: 80:     case 9:
  4992                           
  4993                           
  4994                           ;adc.c: 81:         ANSELHbits.ANS9 = 1;
  4995     0592  1683               	bsf	3,5	;RP0=1, select bank3
  4996     0593  1703               	bsf	3,6	;RP1=1, select bank3
  4997     0594  1489               	bsf	9,1	;volatile
  4998                           
  4999                           ;adc.c: 82:         TRISBbits.TRISB3 = 1;
  5000     0595  1683               	bsf	3,5	;RP0=1, select bank1
  5001     0596  1303               	bcf	3,6	;RP1=0, select bank1
  5002     0597  1586               	bsf	6,3	;volatile
  5003                           
  5004                           ;adc.c: 83:         break;
  5005     0598  2DE6               	goto	l156
  5006     0599                     l151:	
  5007                           ;adc.c: 84:     case 10:
  5008                           
  5009                           
  5010                           ;adc.c: 85:         ANSELHbits.ANS10 = 1;
  5011     0599  1683               	bsf	3,5	;RP0=1, select bank3
  5012     059A  1703               	bsf	3,6	;RP1=1, select bank3
  5013     059B  1509               	bsf	9,2	;volatile
  5014                           
  5015                           ;adc.c: 86:         TRISBbits.TRISB1 = 1;
  5016     059C  1683               	bsf	3,5	;RP0=1, select bank1
  5017     059D  1303               	bcf	3,6	;RP1=0, select bank1
  5018     059E  1486               	bsf	6,1	;volatile
  5019                           
  5020                           ;adc.c: 87:         break;
  5021     059F  2DE6               	goto	l156
  5022     05A0                     l152:	
  5023                           ;adc.c: 88:     case 11:
  5024                           
  5025                           
  5026                           ;adc.c: 89:         ANSELHbits.ANS11 = 1;
  5027     05A0  1683               	bsf	3,5	;RP0=1, select bank3
  5028     05A1  1703               	bsf	3,6	;RP1=1, select bank3
  5029     05A2  1589               	bsf	9,3	;volatile
  5030                           
  5031                           ;adc.c: 90:         TRISBbits.TRISB4 = 1;
  5032     05A3  1683               	bsf	3,5	;RP0=1, select bank1
  5033     05A4  1303               	bcf	3,6	;RP1=0, select bank1
  5034     05A5  1606               	bsf	6,4	;volatile
  5035                           
  5036                           ;adc.c: 91:         break;
  5037     05A6  2DE6               	goto	l156
  5038     05A7                     l153:	
  5039                           ;adc.c: 92:     case 12:
  5040                           
  5041                           
  5042                           ;adc.c: 93:         ANSELHbits.ANS12 = 1;
  5043     05A7  1683               	bsf	3,5	;RP0=1, select bank3
  5044     05A8  1703               	bsf	3,6	;RP1=1, select bank3
  5045     05A9  1609               	bsf	9,4	;volatile
  5046                           
  5047                           ;adc.c: 94:         TRISBbits.TRISB0 = 1;
  5048     05AA  1683               	bsf	3,5	;RP0=1, select bank1
  5049     05AB  1303               	bcf	3,6	;RP1=0, select bank1
  5050     05AC  1406               	bsf	6,0	;volatile
  5051                           
  5052                           ;adc.c: 95:         break;
  5053     05AD  2DE6               	goto	l156
  5054     05AE                     l154:	
  5055                           ;adc.c: 96:     case 13:
  5056                           
  5057                           
  5058                           ;adc.c: 97:         ANSELHbits.ANS13 = 1;
  5059     05AE  1683               	bsf	3,5	;RP0=1, select bank3
  5060     05AF  1703               	bsf	3,6	;RP1=1, select bank3
  5061     05B0  1689               	bsf	9,5	;volatile
  5062                           
  5063                           ;adc.c: 98:         TRISBbits.TRISB5 = 1;
  5064     05B1  1683               	bsf	3,5	;RP0=1, select bank1
  5065     05B2  1303               	bcf	3,6	;RP1=0, select bank1
  5066     05B3  1686               	bsf	6,5	;volatile
  5067                           
  5068                           ;adc.c: 99:         break;
  5069     05B4  2DE6               	goto	l156
  5070     05B5                     l2191:
  5071                           
  5072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5073                           ; Switch size 1, requested type "simple"
  5074                           ; Number of cases is 1, Range of values is 0 to 0
  5075                           ; switch strategies available:
  5076                           ; Name         Instructions Cycles
  5077                           ; simple_byte            4     3 (average)
  5078                           ; direct_byte           11     8 (fixed)
  5079                           ; jumptable            260     6 (fixed)
  5080                           ;	Chosen strategy is simple_byte
  5081     05B5  0876               	movf	adc_channel@channel+1,w
  5082     05B6  3A00               	xorlw	0	; case 0
  5083     05B7  1903               	skipnz
  5084     05B8  2DBA               	goto	l3079
  5085     05B9  2DE6               	goto	l156
  5086     05BA                     l3079:
  5087                           
  5088                           ; Switch size 1, requested type "simple"
  5089                           ; Number of cases is 14, Range of values is 0 to 13
  5090                           ; switch strategies available:
  5091                           ; Name         Instructions Cycles
  5092                           ; simple_byte           43    22 (average)
  5093                           ; direct_byte           50     8 (fixed)
  5094                           ; jumptable            260     6 (fixed)
  5095                           ;	Chosen strategy is simple_byte
  5096     05BA  0875               	movf	adc_channel@channel,w
  5097     05BB  3A00               	xorlw	0	; case 0
  5098     05BC  1903               	skipnz
  5099     05BD  2D53               	goto	l140
  5100     05BE  3A01               	xorlw	1	; case 1
  5101     05BF  1903               	skipnz
  5102     05C0  2D5A               	goto	l142
  5103     05C1  3A03               	xorlw	3	; case 2
  5104     05C2  1903               	skipnz
  5105     05C3  2D61               	goto	l143
  5106     05C4  3A01               	xorlw	1	; case 3
  5107     05C5  1903               	skipnz
  5108     05C6  2D68               	goto	l144
  5109     05C7  3A07               	xorlw	7	; case 4
  5110     05C8  1903               	skipnz
  5111     05C9  2D6F               	goto	l145
  5112     05CA  3A01               	xorlw	1	; case 5
  5113     05CB  1903               	skipnz
  5114     05CC  2D76               	goto	l146
  5115     05CD  3A03               	xorlw	3	; case 6
  5116     05CE  1903               	skipnz
  5117     05CF  2D7D               	goto	l147
  5118     05D0  3A01               	xorlw	1	; case 7
  5119     05D1  1903               	skipnz
  5120     05D2  2D84               	goto	l148
  5121     05D3  3A0F               	xorlw	15	; case 8
  5122     05D4  1903               	skipnz
  5123     05D5  2D8B               	goto	l149
  5124     05D6  3A01               	xorlw	1	; case 9
  5125     05D7  1903               	skipnz
  5126     05D8  2D92               	goto	l150
  5127     05D9  3A03               	xorlw	3	; case 10
  5128     05DA  1903               	skipnz
  5129     05DB  2D99               	goto	l151
  5130     05DC  3A01               	xorlw	1	; case 11
  5131     05DD  1903               	skipnz
  5132     05DE  2DA0               	goto	l152
  5133     05DF  3A07               	xorlw	7	; case 12
  5134     05E0  1903               	skipnz
  5135     05E1  2DA7               	goto	l153
  5136     05E2  3A01               	xorlw	1	; case 13
  5137     05E3  1903               	skipnz
  5138     05E4  2DAE               	goto	l154
  5139     05E5  2DE6               	goto	l156
  5140     05E6                     l156:
  5141     05E6  0008               	return
  5142     05E7                     __end_of_adc_channel:
  5143                           
  5144                           	psect	text20
  5145     0D02                     __ptext20:	
  5146 ;; *************** function _UART_RX_config *****************
  5147 ;; Defined at:
  5148 ;;		line 13 in file "uart.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  baudrate        2    5[COMMON] unsigned int 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5162 ;;      Params:         2       0       0       0       0
  5163 ;;      Locals:         0       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0
  5165 ;;      Totals:         2       0       0       0       0
  5166 ;;Total ram usage:        2 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 2
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_main
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176     0D02                     _UART_RX_config:	
  5177                           ;psect for function _UART_RX_config
  5178                           
  5179     0D02                     l2159:	
  5180                           ;incstack = 0
  5181                           ; Regs used in _UART_RX_config: [wreg+status,2]
  5182                           
  5183                           
  5184                           ;uart.c: 14:     TXSTAbits.SYNC = 0;
  5185     0D02  1683               	bsf	3,5	;RP0=1, select bank1
  5186     0D03  1303               	bcf	3,6	;RP1=0, select bank1
  5187     0D04  1218               	bcf	24,4	;volatile
  5188                           
  5189                           ;uart.c: 17:     TXSTAbits.BRGH = 1;
  5190     0D05  1518               	bsf	24,2	;volatile
  5191                           
  5192                           ;uart.c: 18:     BAUDCTLbits.BRG16 = 1;
  5193     0D06  1683               	bsf	3,5	;RP0=1, select bank3
  5194     0D07  1703               	bsf	3,6	;RP1=1, select bank3
  5195     0D08  1587               	bsf	7,3	;volatile
  5196     0D09                     l2161:
  5197                           
  5198                           ;uart.c: 19:     SPBRG = (char)(baudrate & 0xFF);
  5199     0D09  0875               	movf	UART_RX_config@baudrate,w
  5200     0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  5201     0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  5202     0D0C  0099               	movwf	25	;volatile
  5203     0D0D                     l2163:
  5204                           
  5205                           ;uart.c: 20:     SPBRGH = (char)(baudrate >> 8);
  5206     0D0D  0876               	movf	UART_RX_config@baudrate+1,w
  5207     0D0E  009A               	movwf	26	;volatile
  5208     0D0F                     l2165:
  5209                           
  5210                           ;uart.c: 22:     RCSTAbits.SPEN = 1;
  5211     0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  5212     0D10  1303               	bcf	3,6	;RP1=0, select bank0
  5213     0D11  1798               	bsf	24,7	;volatile
  5214     0D12                     l2167:
  5215                           
  5216                           ;uart.c: 23:     RCSTAbits.RX9 = 0;
  5217     0D12  1318               	bcf	24,6	;volatile
  5218     0D13                     l2169:
  5219                           
  5220                           ;uart.c: 24:     RCSTAbits.CREN = 1;
  5221     0D13  1618               	bsf	24,4	;volatile
  5222     0D14                     l191:
  5223     0D14  0008               	return
  5224     0D15                     __end_of_UART_RX_config:
  5225                           
  5226                           	psect	text21
  5227     0E76                     __ptext21:	
  5228 ;; *************** function _Lcd_Write_String *****************
  5229 ;; Defined at:
  5230 ;;		line 123 in file "LCD8.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  a               2    1[BANK0 ] PTR unsigned char 
  5233 ;;		 -> STR_6(34), main@display2(50), main@display1(50), main@display0(50), 
  5234 ;;		 -> STR_2(12), STR_1(16), 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  i               2    6[BANK0 ] int 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      void 
  5239 ;; Registers used:
  5240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5246 ;;      Params:         0       2       0       0       0
  5247 ;;      Locals:         0       2       0       0       0
  5248 ;;      Temps:          0       3       0       0       0
  5249 ;;      Totals:         0       7       0       0       0
  5250 ;;Total ram usage:        7 bytes
  5251 ;; Hardware stack levels used: 1
  5252 ;; Hardware stack levels required when called: 4
  5253 ;; This function calls:
  5254 ;;		_Lcd_Write_Char
  5255 ;; This function is called by:
  5256 ;;		_main
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260     0E76                     _Lcd_Write_String:	
  5261                           ;psect for function _Lcd_Write_String
  5262                           
  5263     0E76                     l2885:	
  5264                           ;incstack = 0
  5265                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5266                           
  5267                           
  5268                           ;LCD8.c: 124:     int i;;LCD8.c: 125:     for (i = 0; a[i] != '\0'; i++)
  5269     0E76  1283               	bcf	3,5	;RP0=0, select bank0
  5270     0E77  1303               	bcf	3,6	;RP1=0, select bank0
  5271     0E78  01A6               	clrf	Lcd_Write_String@i
  5272     0E79  01A7               	clrf	Lcd_Write_String@i+1
  5273     0E7A  2E9F               	goto	l2891
  5274     0E7B                     l2887:
  5275                           
  5276                           ;LCD8.c: 126:         Lcd_Write_Char(a[i]);
  5277     0E7B  0826               	movf	Lcd_Write_String@i,w
  5278     0E7C  0721               	addwf	Lcd_Write_String@a,w
  5279     0E7D  00A4               	movwf	??_Lcd_Write_String+1
  5280     0E7E  0822               	movf	Lcd_Write_String@a+1,w
  5281     0E7F  00A3               	movwf	??_Lcd_Write_String
  5282     0E80  1803               	skipnc
  5283     0E81  0AA3               	incf	??_Lcd_Write_String,f
  5284     0E82  1FA6               	btfss	Lcd_Write_String@i,7
  5285     0E83  2E85               	goto	u3200
  5286     0E84  03A3               	decf	??_Lcd_Write_String,f
  5287     0E85                     u3200:
  5288     0E85  1283               	bcf	3,5	;RP0=0, select bank0
  5289     0E86  1303               	bcf	3,6	;RP1=0, select bank0
  5290     0E87  0823               	movf	??_Lcd_Write_String,w
  5291     0E88  00A5               	movwf	??_Lcd_Write_String+2
  5292     0E89  0825               	movf	??_Lcd_Write_String+2,w
  5293     0E8A  00FF               	movwf	btemp+1
  5294     0E8B  0824               	movf	??_Lcd_Write_String+1,w
  5295     0E8C  0084               	movwf	4
  5296     0E8D  120A  158A  2000  120A  158A  	fcall	stringtab
  5297     0E92  120A  158A  255B  120A  158A  	fcall	_Lcd_Write_Char
  5298     0E97                     l2889:
  5299     0E97  3001               	movlw	1
  5300     0E98  1283               	bcf	3,5	;RP0=0, select bank0
  5301     0E99  1303               	bcf	3,6	;RP1=0, select bank0
  5302     0E9A  07A6               	addwf	Lcd_Write_String@i,f
  5303     0E9B  1803               	skipnc
  5304     0E9C  0AA7               	incf	Lcd_Write_String@i+1,f
  5305     0E9D  3000               	movlw	0
  5306     0E9E  07A7               	addwf	Lcd_Write_String@i+1,f
  5307     0E9F                     l2891:
  5308     0E9F  0826               	movf	Lcd_Write_String@i,w
  5309     0EA0  0721               	addwf	Lcd_Write_String@a,w
  5310     0EA1  00A4               	movwf	??_Lcd_Write_String+1
  5311     0EA2  0822               	movf	Lcd_Write_String@a+1,w
  5312     0EA3  00A3               	movwf	??_Lcd_Write_String
  5313     0EA4  1803               	skipnc
  5314     0EA5  0AA3               	incf	??_Lcd_Write_String,f
  5315     0EA6  1FA6               	btfss	Lcd_Write_String@i,7
  5316     0EA7  2EA9               	goto	u3210
  5317     0EA8  03A3               	decf	??_Lcd_Write_String,f
  5318     0EA9                     u3210:
  5319     0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  5320     0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  5321     0EAB  0823               	movf	??_Lcd_Write_String,w
  5322     0EAC  00A5               	movwf	??_Lcd_Write_String+2
  5323     0EAD  0825               	movf	??_Lcd_Write_String+2,w
  5324     0EAE  00FF               	movwf	btemp+1
  5325     0EAF  0824               	movf	??_Lcd_Write_String+1,w
  5326     0EB0  0084               	movwf	4
  5327     0EB1  120A  158A  2000  120A  158A  	fcall	stringtab
  5328     0EB6  3A00               	xorlw	0
  5329     0EB7  1D03               	skipz
  5330     0EB8  2EBA               	goto	u3221
  5331     0EB9  2EBB               	goto	u3220
  5332     0EBA                     u3221:
  5333     0EBA  2E7B               	goto	l2887
  5334     0EBB                     u3220:
  5335     0EBB                     l95:
  5336     0EBB  0008               	return
  5337     0EBC                     __end_of_Lcd_Write_String:
  5338                           
  5339                           	psect	text22
  5340     0D5B                     __ptext22:	
  5341 ;; *************** function _Lcd_Write_Char *****************
  5342 ;; Defined at:
  5343 ;;		line 113 in file "LCD8.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;  a               1    wreg     unsigned char 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  a               1    0[BANK0 ] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      void 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0, pclath, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5357 ;;      Params:         0       0       0       0       0
  5358 ;;      Locals:         0       1       0       0       0
  5359 ;;      Temps:          1       0       0       0       0
  5360 ;;      Totals:         1       1       0       0       0
  5361 ;;Total ram usage:        2 bytes
  5362 ;; Hardware stack levels used: 1
  5363 ;; Hardware stack levels required when called: 3
  5364 ;; This function calls:
  5365 ;;		_Lcd_Port
  5366 ;; This function is called by:
  5367 ;;		_Lcd_Write_String
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371     0D5B                     _Lcd_Write_Char:	
  5372                           ;psect for function _Lcd_Write_Char
  5373                           
  5374                           
  5375                           ;incstack = 0
  5376                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5377                           ;Lcd_Write_Char@a stored from wreg
  5378     0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  5379     0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  5380     0D5D  00A0               	movwf	Lcd_Write_Char@a
  5381     0D5E                     l2763:
  5382                           
  5383                           ;LCD8.c: 114:     PORTEbits.RE0 = 1;
  5384     0D5E  1409               	bsf	9,0	;volatile
  5385     0D5F                     l2765:
  5386                           
  5387                           ;LCD8.c: 115:     Lcd_Port(a);
  5388     0D5F  0820               	movf	Lcd_Write_Char@a,w
  5389     0D60  120A  158A  24DD  120A  158A  	fcall	_Lcd_Port
  5390     0D65                     l2767:
  5391                           
  5392                           ;LCD8.c: 116:     PORTEbits.RE2 = 1;
  5393     0D65  1283               	bcf	3,5	;RP0=0, select bank0
  5394     0D66  1303               	bcf	3,6	;RP1=0, select bank0
  5395     0D67  1509               	bsf	9,2	;volatile
  5396     0D68                     l2769:
  5397                           
  5398                           ;LCD8.c: 117:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  5399     0D68  301A               	movlw	26
  5400     0D69  00F6               	movwf	??_Lcd_Write_Char
  5401     0D6A                     u3387:
  5402     0D6A  0BF6               	decfsz	??_Lcd_Write_Char,f
  5403     0D6B  2D6A               	goto	u3387
  5404     0D6C  0000               	nop
  5405     0D6D                     l2771:
  5406                           
  5407                           ;LCD8.c: 118:     PORTEbits.RE2 = 0;
  5408     0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  5409     0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  5410     0D6F  1109               	bcf	9,2	;volatile
  5411     0D70                     l2773:
  5412                           
  5413                           ;LCD8.c: 119:     PORTEbits.RE0 = 0;
  5414     0D70  1009               	bcf	9,0	;volatile
  5415     0D71                     l2775:
  5416                           
  5417                           ;LCD8.c: 120:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  5418     0D71  301A               	movlw	26
  5419     0D72  00F6               	movwf	??_Lcd_Write_Char
  5420     0D73                     u3397:
  5421     0D73  0BF6               	decfsz	??_Lcd_Write_Char,f
  5422     0D74  2D73               	goto	u3397
  5423     0D75  0000               	nop
  5424     0D76                     l89:
  5425     0D76  0008               	return
  5426     0D77                     __end_of_Lcd_Write_Char:
  5427                           
  5428                           	psect	text23
  5429     0D77                     __ptext23:	
  5430 ;; *************** function _Lcd_Set_Cursor *****************
  5431 ;; Defined at:
  5432 ;;		line 75 in file "LCD8.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  a               1    wreg     unsigned char 
  5435 ;;  b               1    2[BANK0 ] unsigned char 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  a               1    3[BANK0 ] unsigned char 
  5438 ;;  temp            1    4[BANK0 ] unsigned char 
  5439 ;;  y               1    0        unsigned char 
  5440 ;;  z               1    0        unsigned char 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      void 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0, pclath, cstack
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5450 ;;      Params:         0       1       0       0       0
  5451 ;;      Locals:         0       2       0       0       0
  5452 ;;      Temps:          0       0       0       0       0
  5453 ;;      Totals:         0       3       0       0       0
  5454 ;;Total ram usage:        3 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; Hardware stack levels required when called: 4
  5457 ;; This function calls:
  5458 ;;		_Lcd_Cmd
  5459 ;; This function is called by:
  5460 ;;		_main
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464     0D77                     _Lcd_Set_Cursor:	
  5465                           ;psect for function _Lcd_Set_Cursor
  5466                           
  5467                           
  5468                           ;incstack = 0
  5469                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5470                           ;Lcd_Set_Cursor@a stored from wreg
  5471     0D77  1283               	bcf	3,5	;RP0=0, select bank0
  5472     0D78  1303               	bcf	3,6	;RP1=0, select bank0
  5473     0D79  00A3               	movwf	Lcd_Set_Cursor@a
  5474     0D7A                     l2869:
  5475                           
  5476                           ;LCD8.c: 76:     char temp, z, y;;LCD8.c: 77:     if (a == 1) {
  5477     0D7A  0323               	decf	Lcd_Set_Cursor@a,w
  5478     0D7B  1D03               	btfss	3,2
  5479     0D7C  2D7E               	goto	u3181
  5480     0D7D  2D7F               	goto	u3180
  5481     0D7E                     u3181:
  5482     0D7E  2D89               	goto	l2877
  5483     0D7F                     u3180:
  5484     0D7F                     l2871:
  5485                           
  5486                           ;LCD8.c: 78:         temp = 0x80 + b - 1;
  5487     0D7F  0822               	movf	Lcd_Set_Cursor@b,w
  5488     0D80  3E7F               	addlw	127
  5489     0D81  00A4               	movwf	Lcd_Set_Cursor@temp
  5490     0D82                     l2873:
  5491     0D82                     l2875:
  5492                           
  5493                           ;LCD8.c: 81:         Lcd_Cmd(temp);
  5494     0D82  0824               	movf	Lcd_Set_Cursor@temp,w
  5495     0D83  120A  158A  253F  120A  158A  	fcall	_Lcd_Cmd
  5496                           
  5497                           ;LCD8.c: 83:     } else if (a == 2) {
  5498     0D88  2D98               	goto	l83
  5499     0D89                     l2877:
  5500     0D89  3002               	movlw	2
  5501     0D8A  0623               	xorwf	Lcd_Set_Cursor@a,w
  5502     0D8B  1D03               	btfss	3,2
  5503     0D8C  2D8E               	goto	u3191
  5504     0D8D  2D8F               	goto	u3190
  5505     0D8E                     u3191:
  5506     0D8E  2D98               	goto	l83
  5507     0D8F                     u3190:
  5508     0D8F                     l2879:
  5509                           
  5510                           ;LCD8.c: 84:         temp = 0xC0 + b - 1;
  5511     0D8F  0822               	movf	Lcd_Set_Cursor@b,w
  5512     0D90  3EBF               	addlw	191
  5513     0D91  00A4               	movwf	Lcd_Set_Cursor@temp
  5514     0D92                     l2881:
  5515     0D92                     l2883:
  5516                           
  5517                           ;LCD8.c: 87:         Lcd_Cmd(temp);
  5518     0D92  0824               	movf	Lcd_Set_Cursor@temp,w
  5519     0D93  120A  158A  253F  120A  158A  	fcall	_Lcd_Cmd
  5520     0D98                     l83:
  5521     0D98  0008               	return
  5522     0D99                     __end_of_Lcd_Set_Cursor:
  5523                           
  5524                           	psect	text24
  5525     07A0                     __ptext24:	
  5526 ;; *************** function _Lcd_Init *****************
  5527 ;; Defined at:
  5528 ;;		line 94 in file "LCD8.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;		None
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  1    wreg      void 
  5535 ;; Registers used:
  5536 ;;		wreg, status,2, status,0, pclath, cstack
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5542 ;;      Params:         0       0       0       0       0
  5543 ;;      Locals:         0       0       0       0       0
  5544 ;;      Temps:          0       3       0       0       0
  5545 ;;      Totals:         0       3       0       0       0
  5546 ;;Total ram usage:        3 bytes
  5547 ;; Hardware stack levels used: 1
  5548 ;; Hardware stack levels required when called: 4
  5549 ;; This function calls:
  5550 ;;		_Lcd_Cmd
  5551 ;; This function is called by:
  5552 ;;		_main
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556     07A0                     _Lcd_Init:	
  5557                           ;psect for function _Lcd_Init
  5558                           
  5559     07A0                     l2847:	
  5560                           ;incstack = 0
  5561                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5562                           
  5563                           
  5564                           ;LCD8.c: 95:     _delay((unsigned long)((101)*(8000000/4000.0)));
  5565     07A0  3002               	movlw	2
  5566     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  5567     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  5568     07A3  00A4               	movwf	??_Lcd_Init+2
  5569     07A4  3007               	movlw	7
  5570     07A5  00A3               	movwf	??_Lcd_Init+1
  5571     07A6  3052               	movlw	82
  5572     07A7  00A2               	movwf	??_Lcd_Init
  5573     07A8                     u3407:
  5574     07A8  0BA2               	decfsz	??_Lcd_Init,f
  5575     07A9  2FA8               	goto	u3407
  5576     07AA  0BA3               	decfsz	??_Lcd_Init+1,f
  5577     07AB  2FA8               	goto	u3407
  5578     07AC  0BA4               	decfsz	??_Lcd_Init+2,f
  5579     07AD  2FA8               	goto	u3407
  5580     07AE  0000               	nop
  5581     07AF                     l2849:
  5582                           
  5583                           ;LCD8.c: 96:     Lcd_Cmd(0x30);
  5584     07AF  3030               	movlw	48
  5585     07B0  120A  158A  253F  120A  118A  	fcall	_Lcd_Cmd
  5586     07B5                     l2851:
  5587                           
  5588                           ;LCD8.c: 97:     _delay((unsigned long)((5)*(8000000/4000.0)));
  5589     07B5  300D               	movlw	13
  5590     07B6  1283               	bcf	3,5	;RP0=0, select bank0
  5591     07B7  1303               	bcf	3,6	;RP1=0, select bank0
  5592     07B8  00A3               	movwf	??_Lcd_Init+1
  5593     07B9  30FB               	movlw	251
  5594     07BA  00A2               	movwf	??_Lcd_Init
  5595     07BB                     u3417:
  5596     07BB  0BA2               	decfsz	??_Lcd_Init,f
  5597     07BC  2FBB               	goto	u3417
  5598     07BD  0BA3               	decfsz	??_Lcd_Init+1,f
  5599     07BE  2FBB               	goto	u3417
  5600                           
  5601                           ;LCD8.c: 98:     Lcd_Cmd(0x30);
  5602     07BF  3030               	movlw	48
  5603     07C0  120A  158A  253F  120A  118A  	fcall	_Lcd_Cmd
  5604     07C5                     l2853:
  5605                           
  5606                           ;LCD8.c: 99:     _delay((unsigned long)((1)*(8000000/4000.0)));
  5607     07C5  3003               	movlw	3
  5608     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  5609     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  5610     07C8  00A3               	movwf	??_Lcd_Init+1
  5611     07C9  3097               	movlw	151
  5612     07CA  00A2               	movwf	??_Lcd_Init
  5613     07CB                     u3427:
  5614     07CB  0BA2               	decfsz	??_Lcd_Init,f
  5615     07CC  2FCB               	goto	u3427
  5616     07CD  0BA3               	decfsz	??_Lcd_Init+1,f
  5617     07CE  2FCB               	goto	u3427
  5618     07CF                     l2855:
  5619                           
  5620                           ;LCD8.c: 100:     Lcd_Cmd(0x30);
  5621     07CF  3030               	movlw	48
  5622     07D0  120A  158A  253F  120A  118A  	fcall	_Lcd_Cmd
  5623                           
  5624                           ;LCD8.c: 101:     _delay((unsigned long)((1)*(8000000/4000.0)));
  5625     07D5  3003               	movlw	3
  5626     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  5627     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  5628     07D8  00A3               	movwf	??_Lcd_Init+1
  5629     07D9  3097               	movlw	151
  5630     07DA  00A2               	movwf	??_Lcd_Init
  5631     07DB                     u3437:
  5632     07DB  0BA2               	decfsz	??_Lcd_Init,f
  5633     07DC  2FDB               	goto	u3437
  5634     07DD  0BA3               	decfsz	??_Lcd_Init+1,f
  5635     07DE  2FDB               	goto	u3437
  5636     07DF                     l2857:
  5637                           
  5638                           ;LCD8.c: 103:     Lcd_Cmd(0x38);
  5639     07DF  3038               	movlw	56
  5640     07E0  120A  158A  253F  120A  118A  	fcall	_Lcd_Cmd
  5641     07E5                     l2859:
  5642                           
  5643                           ;LCD8.c: 104:     Lcd_Cmd(0x08);
  5644     07E5  3008               	movlw	8
  5645     07E6  120A  158A  253F  120A  118A  	fcall	_Lcd_Cmd
  5646     07EB                     l2861:
  5647                           
  5648                           ;LCD8.c: 105:     Lcd_Cmd(0x01);
  5649     07EB  3001               	movlw	1
  5650     07EC  120A  158A  253F  120A  118A  	fcall	_Lcd_Cmd
  5651     07F1                     l2863:
  5652                           
  5653                           ;LCD8.c: 106:     Lcd_Cmd(0x06);
  5654     07F1  3006               	movlw	6
  5655     07F2  120A  158A  253F  120A  118A  	fcall	_Lcd_Cmd
  5656     07F7                     l2865:
  5657                           
  5658                           ;LCD8.c: 107:     Lcd_Cmd(0x0C);
  5659     07F7  300C               	movlw	12
  5660     07F8  120A  158A  253F  120A  118A  	fcall	_Lcd_Cmd
  5661     07FD                     l86:
  5662     07FD  0008               	return
  5663     07FE                     __end_of_Lcd_Init:
  5664                           
  5665                           	psect	text25
  5666     0CF5                     __ptext25:	
  5667 ;; *************** function _Lcd_Clear *****************
  5668 ;; Defined at:
  5669 ;;		line 70 in file "LCD8.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;		None
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0, pclath, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5683 ;;      Params:         0       0       0       0       0
  5684 ;;      Locals:         0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0
  5686 ;;      Totals:         0       0       0       0       0
  5687 ;;Total ram usage:        0 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; Hardware stack levels required when called: 4
  5690 ;; This function calls:
  5691 ;;		_Lcd_Cmd
  5692 ;; This function is called by:
  5693 ;;		_main
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697     0CF5                     _Lcd_Clear:	
  5698                           ;psect for function _Lcd_Clear
  5699                           
  5700     0CF5                     l2867:	
  5701                           ;incstack = 0
  5702                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5703                           
  5704                           
  5705                           ;LCD8.c: 71:     Lcd_Cmd(0);
  5706     0CF5  3000               	movlw	0
  5707     0CF6  120A  158A  253F  120A  158A  	fcall	_Lcd_Cmd
  5708                           
  5709                           ;LCD8.c: 72:     Lcd_Cmd(1);
  5710     0CFB  3001               	movlw	1
  5711     0CFC  120A  158A  253F  120A  158A  	fcall	_Lcd_Cmd
  5712     0D01                     l77:
  5713     0D01  0008               	return
  5714     0D02                     __end_of_Lcd_Clear:
  5715                           
  5716                           	psect	text26
  5717     0D3F                     __ptext26:	
  5718 ;; *************** function _Lcd_Cmd *****************
  5719 ;; Defined at:
  5720 ;;		line 61 in file "LCD8.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  a               1    wreg     unsigned char 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  a               1    6[COMMON] unsigned char 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2, status,0, pclath, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5734 ;;      Params:         0       0       0       0       0
  5735 ;;      Locals:         1       0       0       0       0
  5736 ;;      Temps:          0       2       0       0       0
  5737 ;;      Totals:         1       2       0       0       0
  5738 ;;Total ram usage:        3 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 3
  5741 ;; This function calls:
  5742 ;;		_Lcd_Port
  5743 ;; This function is called by:
  5744 ;;		_main
  5745 ;;		_Lcd_Clear
  5746 ;;		_Lcd_Set_Cursor
  5747 ;;		_Lcd_Init
  5748 ;;		_Lcd_Shift_Right
  5749 ;;		_Lcd_Shift_Left
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753     0D3F                     _Lcd_Cmd:	
  5754                           ;psect for function _Lcd_Cmd
  5755                           
  5756                           
  5757                           ;incstack = 0
  5758                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5759                           ;Lcd_Cmd@a stored from wreg
  5760     0D3F  00F6               	movwf	Lcd_Cmd@a
  5761     0D40                     l2745:
  5762                           
  5763                           ;LCD8.c: 62:     PORTEbits.RE0 = 0;
  5764     0D40  1283               	bcf	3,5	;RP0=0, select bank0
  5765     0D41  1303               	bcf	3,6	;RP1=0, select bank0
  5766     0D42  1009               	bcf	9,0	;volatile
  5767     0D43                     l2747:
  5768                           
  5769                           ;LCD8.c: 63:     Lcd_Port(a);
  5770     0D43  0876               	movf	Lcd_Cmd@a,w
  5771     0D44  120A  158A  24DD  120A  158A  	fcall	_Lcd_Port
  5772     0D49                     l2749:
  5773                           
  5774                           ;LCD8.c: 64:     PORTEbits.RE2 = 1;
  5775     0D49  1283               	bcf	3,5	;RP0=0, select bank0
  5776     0D4A  1303               	bcf	3,6	;RP1=0, select bank0
  5777     0D4B  1509               	bsf	9,2	;volatile
  5778     0D4C                     l2751:
  5779                           
  5780                           ;LCD8.c: 65:     _delay((unsigned long)((4)*(8000000/4000.0)));
  5781     0D4C  300B               	movlw	11
  5782     0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  5783     0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  5784     0D4F  00A1               	movwf	??_Lcd_Cmd+1
  5785     0D50  3061               	movlw	97
  5786     0D51  00A0               	movwf	??_Lcd_Cmd
  5787     0D52                     u3447:
  5788     0D52  0BA0               	decfsz	??_Lcd_Cmd,f
  5789     0D53  2D52               	goto	u3447
  5790     0D54  0BA1               	decfsz	??_Lcd_Cmd+1,f
  5791     0D55  2D52               	goto	u3447
  5792     0D56  2D57               	nop2
  5793     0D57                     l2753:
  5794                           
  5795                           ;LCD8.c: 66:     PORTEbits.RE2 = 0;
  5796     0D57  1283               	bcf	3,5	;RP0=0, select bank0
  5797     0D58  1303               	bcf	3,6	;RP1=0, select bank0
  5798     0D59  1109               	bcf	9,2	;volatile
  5799     0D5A                     l74:
  5800     0D5A  0008               	return
  5801     0D5B                     __end_of_Lcd_Cmd:
  5802                           
  5803                           	psect	text27
  5804     0CDD                     __ptext27:	
  5805 ;; *************** function _Lcd_Port *****************
  5806 ;; Defined at:
  5807 ;;		line 16 in file "LCD8.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  a               1    wreg     unsigned char 
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;  a               1    5[COMMON] unsigned char 
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1    wreg      void 
  5814 ;; Registers used:
  5815 ;;		wreg
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5821 ;;      Params:         0       0       0       0       0
  5822 ;;      Locals:         1       0       0       0       0
  5823 ;;      Temps:          0       0       0       0       0
  5824 ;;      Totals:         1       0       0       0       0
  5825 ;;Total ram usage:        1 bytes
  5826 ;; Hardware stack levels used: 1
  5827 ;; Hardware stack levels required when called: 2
  5828 ;; This function calls:
  5829 ;;		Nothing
  5830 ;; This function is called by:
  5831 ;;		_Lcd_Cmd
  5832 ;;		_Lcd_Write_Char
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836     0CDD                     _Lcd_Port:	
  5837                           ;psect for function _Lcd_Port
  5838                           
  5839                           
  5840                           ;incstack = 0
  5841                           ; Regs used in _Lcd_Port: [wreg]
  5842                           ;Lcd_Port@a stored from wreg
  5843     0CDD  00F5               	movwf	Lcd_Port@a
  5844     0CDE                     l2705:
  5845                           
  5846                           ;LCD8.c: 17:     PORTD = a;
  5847     0CDE  0875               	movf	Lcd_Port@a,w
  5848     0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  5849     0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  5850     0CE1  0088               	movwf	8	;volatile
  5851     0CE2                     l71:
  5852     0CE2  0008               	return
  5853     0CE3                     __end_of_Lcd_Port:
  5854                           
  5855                           	psect	text28
  5856     0E0E                     __ptext28:	
  5857 ;; *************** function _Isr *****************
  5858 ;; Defined at:
  5859 ;;		line 115 in file "main_poslab2.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;		None
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;  uart_return     1    4[COMMON] unsigned char 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1    wreg      void 
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0, pclath, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5873 ;;      Params:         0       0       0       0       0
  5874 ;;      Locals:         1       0       0       0       0
  5875 ;;      Temps:          4       0       0       0       0
  5876 ;;      Totals:         5       0       0       0       0
  5877 ;;Total ram usage:        5 bytes
  5878 ;; Hardware stack levels used: 1
  5879 ;; Hardware stack levels required when called: 1
  5880 ;; This function calls:
  5881 ;;		_UART_read_char
  5882 ;; This function is called by:
  5883 ;;		Interrupt level 1
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887     0E0E                     _Isr:	
  5888                           ;psect for function _Isr
  5889                           
  5890     0E0E                     i1l2383:
  5891                           
  5892                           ;main_poslab2.c: 116:    char uart_return = UART_read_char();
  5893     0E0E  120A  158A  24E3  120A  158A  	fcall	_UART_read_char
  5894     0E13  00F4               	movwf	Isr@uart_return
  5895     0E14                     i1l2385:
  5896                           
  5897                           ;main_poslab2.c: 118:    if (uart_return == 43) cnt++;
  5898     0E14  302B               	movlw	43
  5899     0E15  0674               	xorwf	Isr@uart_return,w
  5900     0E16  1D03               	btfss	3,2
  5901     0E17  2E19               	goto	u236_21
  5902     0E18  2E1A               	goto	u236_20
  5903     0E19                     u236_21:
  5904     0E19  2E20               	goto	i1l60
  5905     0E1A                     u236_20:
  5906     0E1A                     i1l2387:
  5907     0E1A  3001               	movlw	1
  5908     0E1B  00F0               	movwf	??_Isr
  5909     0E1C  0870               	movf	??_Isr,w
  5910     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  5911     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  5912     0E1F  07EB               	addwf	_cnt,f
  5913     0E20                     i1l60:
  5914                           
  5915                           ;main_poslab2.c: 119:    if (uart_return == 0x2D) cnt--;
  5916     0E20  302D               	movlw	45
  5917     0E21  0674               	xorwf	Isr@uart_return,w
  5918     0E22  1D03               	btfss	3,2
  5919     0E23  2E25               	goto	u237_21
  5920     0E24  2E26               	goto	u237_20
  5921     0E25                     u237_21:
  5922     0E25  2E2A               	goto	i1l2391
  5923     0E26                     u237_20:
  5924     0E26                     i1l2389:
  5925     0E26  3001               	movlw	1
  5926     0E27  1283               	bcf	3,5	;RP0=0, select bank0
  5927     0E28  1303               	bcf	3,6	;RP1=0, select bank0
  5928     0E29  02EB               	subwf	_cnt,f
  5929     0E2A                     i1l2391:
  5930                           
  5931                           ;main_poslab2.c: 121:    _delay((unsigned long)((10)*(8000000/4000.0)));
  5932     0E2A  301A               	movlw	26
  5933     0E2B  00F1               	movwf	??_Isr+1
  5934     0E2C  30F8               	movlw	248
  5935     0E2D  00F0               	movwf	??_Isr
  5936     0E2E                     u345_27:
  5937     0E2E  0BF0               	decfsz	??_Isr,f
  5938     0E2F  2E2E               	goto	u345_27
  5939     0E30  0BF1               	decfsz	??_Isr+1,f
  5940     0E31  2E2E               	goto	u345_27
  5941     0E32  0000               	nop
  5942     0E33                     i1l62:
  5943     0E33  0873               	movf	??_Isr+3,w
  5944     0E34  008A               	movwf	10
  5945     0E35  0E72               	swapf	??_Isr+2,w
  5946     0E36  0083               	movwf	3
  5947     0E37  0EFE               	swapf	btemp,f
  5948     0E38  0E7E               	swapf	btemp,w
  5949     0E39  0009               	retfie
  5950     0E3A                     __end_of_Isr:
  5951                           
  5952                           	psect	intentry
  5953     0004                     __pintentry:	
  5954                           ;incstack = 0
  5955                           ; Regs used in _Isr: [wreg+status,2+status,0+pclath+cstack]
  5956                           
  5957     0004                     interrupt_function:
  5958     007E                     saved_w	set	btemp
  5959     0004  00FE               	movwf	btemp
  5960     0005  0E03               	swapf	3,w
  5961     0006  00F2               	movwf	??_Isr+2
  5962     0007  080A               	movf	10,w
  5963     0008  00F3               	movwf	??_Isr+3
  5964     0009  120A  158A  2E0E   	ljmp	_Isr
  5965                           
  5966                           	psect	text29
  5967     0CE3                     __ptext29:	
  5968 ;; *************** function _UART_read_char *****************
  5969 ;; Defined at:
  5970 ;;		line 48 in file "uart.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      unsigned char 
  5977 ;; Registers used:
  5978 ;;		wreg
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5984 ;;      Params:         0       0       0       0       0
  5985 ;;      Locals:         0       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0
  5987 ;;      Totals:         0       0       0       0       0
  5988 ;;Total ram usage:        0 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_Isr
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997     0CE3                     _UART_read_char:	
  5998                           ;psect for function _UART_read_char
  5999                           
  6000     0CE3                     i1l2303:	
  6001                           ;incstack = 0
  6002                           ; Regs used in _UART_read_char: [wreg]
  6003                           
  6004     0CE3                     i1l203:	
  6005                           ;uart.c: 49:     while (PIR1bits.RCIF == 0);
  6006                           
  6007     0CE3  1283               	bcf	3,5	;RP0=0, select bank0
  6008     0CE4  1303               	bcf	3,6	;RP1=0, select bank0
  6009     0CE5  1E8C               	btfss	12,5	;volatile
  6010     0CE6  2CE8               	goto	u235_21
  6011     0CE7  2CE9               	goto	u235_20
  6012     0CE8                     u235_21:
  6013     0CE8  2CE3               	goto	i1l203
  6014     0CE9                     u235_20:
  6015     0CE9                     i1l205:
  6016                           
  6017                           ;uart.c: 50:     PIR1bits.RCIF = 0;
  6018     0CE9  128C               	bcf	12,5	;volatile
  6019     0CEA                     i1l2305:
  6020                           
  6021                           ;uart.c: 51:     return RCREG;
  6022     0CEA  081A               	movf	26,w	;volatile
  6023     0CEB                     i1l206:
  6024     0CEB  0008               	return
  6025     0CEC                     __end_of_UART_read_char:
  6026     007E                     btemp	set	126	;btemp
  6027     007E                     wtemp0	set	126
  6028                           
  6029                           	psect	idloc
  6030                           
  6031                           ;Config register IDLOC0 @ 0x2000
  6032                           ;	unspecified, using default values
  6033     2000                     	org	8192
  6034     2000  3FFF               	dw	16383
  6035                           
  6036                           ;Config register IDLOC1 @ 0x2001
  6037                           ;	unspecified, using default values
  6038     2001                     	org	8193
  6039     2001  3FFF               	dw	16383
  6040                           
  6041                           ;Config register IDLOC2 @ 0x2002
  6042                           ;	unspecified, using default values
  6043     2002                     	org	8194
  6044     2002  3FFF               	dw	16383
  6045                           
  6046                           ;Config register IDLOC3 @ 0x2003
  6047                           ;	unspecified, using default values
  6048     2003                     	org	8195
  6049     2003  3FFF               	dw	16383
  6050                           
  6051                           	psect	config
  6052                           
  6053                           ;Config register CONFIG1 @ 0x2007
  6054                           ;	Oscillator Selection bits
  6055                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  6056                           ;	Watchdog Timer Enable bit
  6057                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6058                           ;	Power-up Timer Enable bit
  6059                           ;	PWRTE = OFF, PWRT disabled
  6060                           ;	RE3/MCLR pin function select bit
  6061                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6062                           ;	Code Protection bit
  6063                           ;	CP = OFF, Program memory code protection is disabled
  6064                           ;	Data Code Protection bit
  6065                           ;	CPD = OFF, Data memory code protection is disabled
  6066                           ;	Brown Out Reset Selection bits
  6067                           ;	BOREN = OFF, BOR disabled
  6068                           ;	Internal External Switchover bit
  6069                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6070                           ;	Fail-Safe Clock Monitor Enabled bit
  6071                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6072                           ;	Low Voltage Programming Enable bit
  6073                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6074                           ;	In-Circuit Debugger Mode bit
  6075                           ;	DEBUG = 0x1, unprogrammed default
  6076     2007                     	org	8199
  6077     2007  20D6               	dw	8406
  6078                           
  6079                           ;Config register CONFIG2 @ 0x2008
  6080                           ;	Brown-out Reset Selection bit
  6081                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6082                           ;	Flash Program Memory Self Write Enable bits
  6083                           ;	WRT = OFF, Write protection off
  6084     2008                     	org	8200
  6085     2008  3FFF               	dw	16383

Data Sizes:
    Strings     65
    Constant    10
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     75      76
    BANK1            80     50      50
    BANK3            96     50      50
    BANK2            96     50      50

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> main@display2(BANK2[50]), main@display1(BANK3[50]), main@display0(BANK1[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 50
		 -> STR_6(CODE[34]), main@display2(BANK2[50]), main@display1(BANK3[50]), main@display0(BANK1[50]), 
		 -> STR_2(CODE[12]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Cmd
    _main->_UART_RX_config
    _main->_adc_channel
    _main->_adc_setup
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _adc_mv->___fltol
    _adc_mv->___wmul
    _trunc->___fltol
    _trunc->_frexp
    ___xxtofl->___fltol
    ___xxtofl->___wmul
    _adc_RO->_adc_read
    ___awdiv->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _Isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_adc_mv
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _adc_mv->_round
    _round->___flsub
    _trunc->___xxtofl
    _frexp->___fleq
    ___xxtofl->___awdiv
    ___flsub->_trunc
    ___awdiv->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               158   158      0   16066
                                             67 BANK0      8     8      0
                                              0 BANK1     50    50      0
                                              0 BANK3     50    50      0
                                              0 BANK2     50    50      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                     _UART_RX_config
                             _adc_RO
                        _adc_channel
                             _adc_mv
                          _adc_setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    17      5    1804
                                             12 BANK0     14     9      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              6 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              5 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _adc_setup                                            2     2      0      22
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_mv                                              14    12      2   11549
                                             53 BANK0     14    12      2
                            ___awdiv
                            ___fltol
                             ___wmul
                           ___xxtofl
                             _adc_RO
                              _round
 ---------------------------------------------------------------------------------
 (2) _round                                                8     4      4    9519
                                             45 BANK0      8     4      4
                            ___fladd
                            ___flsub
                              _trunc
 ---------------------------------------------------------------------------------
 (3) _trunc                                               10     6      4    2419
                                             27 BANK0     10     6      4
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     928
                                              5 COMMON     2     2      0
                                             12 BANK0      5     0      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     450
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                             13 BANK0     14    10      4
                            ___awdiv (ARG)
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     517
                                              5 COMMON     2     2      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3547
                                             37 BANK0      8     0      8
                            ___fladd
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3302
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _adc_RO                                               2     2      0      62
                                              0 BANK0      2     2      0
                         _adc_output
                           _adc_read
 ---------------------------------------------------------------------------------
 (3) _adc_read                                             2     2      0      31
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _adc_output                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              4 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_channel                                          2     0      2     174
                                              5 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_RX_config                                       2     0      2     120
                                              5 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     732
                                              1 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              6 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     930
                                              2 BANK0      3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0      62
                                              2 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Isr                                                  5     5      0      45
                                              0 COMMON     5     5      0
                     _UART_read_char
 ---------------------------------------------------------------------------------
 (7) _UART_read_char                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_RX_config
   _adc_RO
     _adc_output
     _adc_read
   _adc_channel
   _adc_mv
     ___awdiv
       ___wmul (ARG)
     ___fltol
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
       ___fltol (ARG)
       ___wmul (ARG)
     _adc_RO
     _round
       ___fladd
       ___flsub
         ___fladd
         _trunc (ARG)
           ___fltol
           ___xxtofl
           _frexp
             ___fleq
       _trunc
   _adc_setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _Isr (ROOT)
   _UART_read_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      EB       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     32      32       7       62.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60     32      32       9       52.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60     32      32      11       52.1%
DATA                 0      0      EB      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Feb 21 01:46:16 2023

                       pc 0002                        l71 0CE2                        l74 0D5A  
                      l83 0D98                        l77 0D01                        l86 07FD  
                      l95 0EBB                        l89 0D76              ___awdiv@sign 002A  
                      fsr 0004       ___wmul@multiplicand 0022                       l140 0553  
                     l150 0592                       l142 055A                       l134 0DF0  
                     l151 0599                       l143 0561                       l135 0DF3  
                     l152 05A0                       l144 0568                       l136 0E0D  
                     l153 05A7                       l145 056F                       l313 0497  
                     l154 05AE                       l146 0576                       l147 057D  
                     l163 0CF4                       l148 0584                       l156 05E6  
                     l172 06CF                       l149 058B                       l317 0DCB  
                     l166 0D3E                       l510 0649                       l191 0D14  
                     l319 0DE3                       l159 0D28                       l503 065E  
                     l513 065E                       l610 0073                       l470 0738  
                     l614 00F6                       l631 01BF                       l623 026F  
                     l616 00CF                       l641 0205                       l635 01E3  
                     l652 0265                       l644 0243                       l653 026F  
                     l750 04BC                       l486 0F20                       l487 0F3C  
                     l656 0DBC                       l752 0551                       l488 0F51  
                     l770 079F                       l763 051B                       l764 0527  
                     l756 04FF                       l589 0F01                       l783 0FA5  
                     l599 0E75                       l776 0FFF                       _Isr 0E0E  
                     _cnt 006B                       fsr0 0004                       indf 0000  
                    ?_Isr 0070              ___fltol@exp1 0076                      l2101 0724  
                    l2103 072A                      l2105 072F                      l3001 0342  
                    l2107 0734                      l3011 036F                      l3003 034C  
                    l3021 03A0                      l3013 037A                      l3005 0353  
                    l2071 06D7                      l3023 03A7                      l3015 0384  
                    l3007 035E                      l2161 0D09                      l2081 06EB  
                    l2073 06DC                      l3025 03BD                      l3017 038B  
                    l3009 0368                      l2163 0D0D                      l2091 0701  
                    l2083 06ED                      l2075 06DE                      l2067 06D0  
                    l2171 0DE5                      l3019 0396                      l2165 0D0F  
                    l2093 0705                      l2085 06F3                      l2077 06E2  
                    l2069 06D3                      l2501 0025                      l2181 0E02  
                    l2173 0DEA                      l2167 0D12                      l2159 0D02  
                    l2191 05B5                      l2095 0716                      l2087 06F6  
                    l2079 06E7                      l2511 0039                      l2503 0026  
                    l2183 0E06                      l2175 0DF6                      l2169 0D13  
                    l2097 071C                      l2089 06FD                      l2601 011F  
                    l2521 004D                      l2505 002B                      l2513 003B  
                    l2185 0E09                      l2177 0DFA                      l2187 0552  
                    l2099 071D                      l2611 0134                      l2603 0123  
                    l2531 0060                      l2523 0051                      l2515 0043  
                    l2507 0030                      l2451 0F34                      l2179 0E00  
                    l2621 0197                      l2613 0135                      l2605 0127  
                    l2541 007D                      l2533 0068                      l2525 0055  
                    l2517 0046                      l2509 0038                      l2461 05F2  
                    l2453 0F4E                      l2701 0FA4                      l3077 03FE  
                    l3079 05BA                      l2711 0D25                      l2631 01CC  
                    l2623 019D                      l2615 013E                      l2607 012E  
                    l2551 0089                      l2543 0081                      l2535 0069  
                    l2527 0056                      l2519 004C                      l2471 0617  
                    l2455 0F50                      l2447 0F02                      l2705 0CDE  
                    l2713 0CEC                      l2641 01E7                      l2625 01A2  
                    l2609 0130                      l2617 0143                      l2561 0093  
                    l2553 008B                      l2545 0083                      l2529 005B  
                    l2537 006B                      l2721 0D99                      l2481 0625  
                    l2473 0619                      l2465 05FB                      l1921 04C4  
                    l1913 049B                      l2449 0F18                      l2801 0EC0  
                    l2715 0CF2                      l2707 0D16                      l2643 01EA  
                    l2635 01D5                      l2619 0159                      l2627 01B1  
                    l2651 01F7                      l2571 009D                      l2563 0095  
                    l2555 008D                      l2547 0085                      l2539 0079  
                    l2723 0D9D                      l2491 064E                      l2475 061D  
                    l2483 0637                      l2467 060E                      l2459 05E7  
                    l1931 04E4                      l1915 04A0                      l2731 0FBD  
                    l2811 0ED8                      l2803 0EC6                      l2717 0CF3  
                    l2709 0D21                      l2661 020A                      l2653 01F8  
                    l2645 01EC                      l2637 01DE                      l2629 01C7  
                    l2581 00DA                      l2565 0097                      l2557 008F  
                    l2549 0087                      l2573 009F                      l2493 0653  
                    l2469 060F                      l1941 0515                      l1933 04E8  
                    l1925 04CD                      l1917 04A4                      l2741 0FF7  
                    l2813 0EE9                      l2805 0EC9                      l2821 0EFD  
                    l2901 03CC                      l2751 0D4C                      l2671 0248  
                    l2663 020F                      l2655 01FC                      l2647 01F1  
                    l2639 01E2                      l2583 00DC                      l2591 00EE  
                    l2575 00A0                      l2567 0099                      l2559 0091  
                    l2495 0018                      l1951 0548                      l1943 051F  
                    l1935 04F6                      l1927 04D0                      l1919 04B4  
                    l2735 0FC6                      l2727 0FA6                      l2815 0EEF  
                    l2807 0ED0                      l2831 0E4C                      l2911 03E7  
                    l2903 03D1                      l2753 0D57                      l2745 0D40  
                    l2681 025F                      l2673 024D                      l2665 021D  
                    l2657 0202                      l2649 01F3                      l2593 00FA  
                    l2585 00E0                      l2577 00B7                      l2569 009B  
                    l2497 001D                      l2489 063E                      l1953 0549  
                    l1945 0529                      l1937 0506                      l1929 04DD  
                    l2737 0FCF                      l2729 0FB7                      l2817 0EF0  
                    l2809 0ED4                      l2841 0E6B                      l2833 0E50  
                    l2825 0E3A                      l2921 0412                      l2905 03D7  
                    l2747 0D43                      l2851 07B5                      l2771 0D6D  
                    l2763 0D5E                      l2755 0D2C                      l2683 0261  
                    l2675 0255                      l2667 0221                      l2595 00FF  
                    l2587 00E1                      l2579 00D3                      l2499 0021  
                    l1947 053F                      l1939 0511                      l2691 0F6D  
                    l2739 0FD0                      l2819 0EF7                      l2835 0E54  
                    l2827 0E42                      l2843 0E71                      l2931 0430  
                    l2915 03EC                      l2907 03DE                      l2749 0D49  
                    l2861 07EB                      l2853 07C5                      l2773 0D70  
                    l2765 0D5F                      l2757 0D32                      l2685 026A  
                    l2677 025A                      l2669 023F                      l2589 00EA  
                    l1949 0544                      l2781 0788                      l2837 0E5E  
                    l2829 0E45                      l2941 0478                      l2933 043A  
                    l2917 0406                      l2909 03E5                      l2863 07F1  
                    l2855 07CF                      l2847 07A0                      l2871 0D7F  
                    l2775 0D71                      l2767 0D65                      l2791 0DD2  
                    l2759 0D39                      l2687 026E                      l2679 025B  
                    l2599 0108                      l2695 0F76                      l2839 0E64  
                    l2935 043D                      l2927 0414                      l2919 040E  
                    l2943 0481                      l2865 07F7                      l2857 07DF  
                    l2849 07AF                      l2881 0D92                      l2873 0D82  
                    l2769 0D68                      l2793 0DD9                      l2785 0DBD  
                    l2697 0F93                      l2689 0F52                      l2777 0739  
                    l2937 046B                      l2945 0491                      l2961 0280  
                    l2953 0270                      l2867 0CF5                      l2859 07E5  
                    l2883 0D92                      l2875 0D82                      l2891 0E9F  
                    l2795 0DDF                      l2787 0DBF                      l2699 0FA0  
                    l2779 0769                      l2939 0472                      l2971 029B  
                    l2963 0281                      l2955 0279                      l2877 0D89  
                    l2869 0D7A                      l2885 0E76                      l2789 0DC5  
                    l2893 0662                      l2981 02B0                      l2973 02A4  
                    l2965 0284                      l2957 027C                      l2879 0D8F  
                    l2887 0E7B                      l2895 06A5                      l2799 0EBC  
                    l2991 02F4                      l2983 02B3                      l2975 02A7  
                    l2967 0285                      l2959 027F                      l2889 0E97  
                    l2897 06BC                      l2993 0302                      l2985 02CA  
                    l2977 02AA                      l2969 0293                      l2995 030E  
                    l2987 02D5                      l2979 02AD                      l2997 031D  
                    l2989 02EA                      l2999 032E                      STR_1 083C  
                    STR_2 084C                      STR_3 0858                      STR_4 0858  
                    STR_5 0858                      STR_6 081A                      u2010 06D7  
                    u2011 06D6                      u2100 072F                      u2020 06E2  
                    u2101 072E                      u2021 06E1                      u2030 06F3  
                    u2031 06F2                      u3000 0FCF                      u3001 0FCE  
                    u2050 0705                      u3010 0DC5                      u2051 0704  
                    u3011 0DC4                      u2045 06F7                      u2070 0716  
                    u3110 0EFD                      u2071 0715                      u3111 0EFC  
                    u3200 0E85                      u3040 0DDF                      u2400 0F4E  
                    u2240 0DEA                      u3120 0E42                      u2065 0706  
                    u3041 0DDE                      u3025 0DCC                      u2401 0F4D  
                    u2241 0DE9                      u3105 0EF1                      u3121 0E41  
                    u3210 0EA9                      u2090 072A                      u2410 05F2  
                    u3050 0EC6                      u2091 0729                      u2075 0712  
                    u3035 0DD3                      u2411 05F1                      u3051 0EC5  
                    u3220 0EBB                      u2500 0653                      u2420 0609  
                    u3140 0E54                      u3221 0EBA                      u2085 071E  
                    u2501 0652                      u2405 0F4A                      u3141 0E53  
                    u2510 0025                      u2430 061D                      u3070 0ED8  
                    u3150 0E5E                      u3230 03D7                      u2511 0024  
                    u2431 061C                      u3071 0ED7                      u3151 0E5D  
                    u3135 0E46                      u3231 03D6                      u2600 00B7  
                    u2520 002B                      u2440 0624                      u1800 04A4  
                    u3240 042F                      u2601 00B6                      u2521 002A  
                    u2441 0623                      u2425 0604                      u1801 04A3  
                    u3065 0ECA                      u3241 042E                      u2610 00C2  
                    u2530 0030                      u1810 04C4                      u3090 0EE9  
                    u3170 0E71                      u3250 043A                      u2611 00C0  
                    u2531 002F                      u1811 04C3                      u3091 0EE8  
                    u3171 0E70                      u3155 0E5A                      u3251 0439  
                    u3307 036C                      u3180 0D7F                      u2700 0123  
                    u2620 00C3                      u2540 004C                      u2460 0636  
                    u1900 0534                      u2380 0F18                      u3260 0481  
                    u3181 0D7E                      u2701 0122                      u2605 00B3  
                    u2541 004B                      u2461 0635                      u2381 0F17  
                    u3085 0ED9                      u3165 0E65                      u3261 0480  
                    u3245 042B                      u3317 0388                      u3190 0D8F  
                    u2710 0127                      u2630 00D3                      u2550 0055  
                    u2470 063D                      u1910 0544                      u1830 04E3  
                    u2390 0F34                      u3270 0491                      u3407 07A8  
                    u3191 0D8E                      u2711 0126                      u2631 00D2  
                    u2551 0054                      u2471 063C                      u2455 0626  
                    u1911 0543                      u1831 04E2                      u2391 0F33  
                    u3095 0EE5                      u3271 0490                      u3327 03A4  
                    u2720 0134                      u2640 00E0                      u2560 005B  
                    u1920 0548                      u3417 07BB                      u2721 0133  
                    u2641 00DF                      u2561 005A                      u1921 0547  
                    u1905 052F                      u1825 04D5                      u3337 03B8  
                    u2810 01E2                      u2570 0060                      u2490 064E  
                    u1850 0505                      u3427 07CB                      u2811 01E1  
                    u2571 005F                      u2491 064D                      u1851 0504  
                    u3347 0E04                      u2900 0230                      u2820 01E7  
                    u2740 0159                      u2660 00F6                      u2580 0079  
                    u3437 07DB                      u2821 01E6                      u2805 01D7  
                    u2741 0158                      u2661 00F5                      u2581 0078  
                    u2485 0640                      u1845 04F7                      u3357 0E0B  
                    u2910 023F                      u2830 01F1                      u2670 00FA  
                    u2590 007D                      u1870 0515                      u1790 04A0  
                    u3447 0D52                      u3367 0D36                      u2911 023E  
                    u2831 01F0                      u2751 0170                      u2743 0155  
                    u2735 0137                      u2671 00F9                      u2655 00E3  
                    u2591 007C                      u1871 0514                      u1791 049F  
                    u3287 02F0                      u2920 0248                      u2840 01F7  
                    u2760 0184                      u2752 0171                      u2680 00FF  
                    u1880 051B                      u3377 0D23                      u2921 0247  
                    u2905 022B                      u2841 01F6                      u2761 0185  
                    u2753 0176                      u2681 00FE                      u1881 051A  
                    u1865 050A                      u3297 0350                      u2930 024D  
                    u2850 01FC                      u2770 01A2                      u2762 018A  
                    u2754 0177                      u1890 051F                      u3387 0D6A  
                    u2931 024C                      u2851 01FB                      u2771 01A1  
                    u2763 018B                      u2755 017C                      u2691 0111  
                    u1891 051E                      u2940 025A                      u2860 0202  
                    u2780 01C7                      u2756 017D                      u2692 0118  
                    u3397 0D73                      u2941 0259                      u2861 0201  
                    u2781 01C6                      u2693 011F                      u2950 025F  
                    u2870 0209                      u2790 01CC                      u2951 025E  
                    u2871 0208                      u2791 01CB                      u2960 026E  
                    u2880 020F                      u2961 026D                      u2881 020E  
                    u2890 0221                      u2970 0F6D                      u2891 0220  
                    u2971 0F6C                      i1l60 0E20                      u2980 0CF2  
                    u2981 0CF1                      i1l62 0E33                      u2990 0FBD  
                    u2991 0FBC         ?_Lcd_Write_String 0021                      _main 0270  
                    btemp 007E                      start 000C        ??_Lcd_Write_String 0023  
             main@output0 0065               main@output1 0067           __end_of_Lcd_Cmd 0D5B  
                   ??_Isr 0070              main@display0 00A0              main@display1 0190  
            main@display2 0110             ___fltol@sign1 0075           __end_of___fladd 0270  
                   ?_main 0070           __end_of___awdiv 0739           __end_of___flsub 0DBD  
         __end_of___fltol 065F                     _ANSEL 0188           ___awdiv@divisor 0024  
         __end_of___lwdiv 0F02                     i1l203 0CE3                     i1l205 0CE9  
                   i1l206 0CEB           __end_of___lwmod 0E76           ___awdiv@counter 0029  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _PORTE 0009  
                   _TRISB 0086                     _TRISD 0088                     _TRISE 0089  
                   _TXREG 0019           __end_of_dpowers 081A                     _frexp 0F52  
                   _errno 0077                     _round 0739                     _trunc 0FA6  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0498          __end_of_Lcd_Init 07FE          __end_of_Lcd_Port 0CE3  
         __initialization 000F              __end_of_main 03CC                    ??_main 0063  
                  ?_frexp 002C                    _ADRESH 001E          ___awdiv@dividend 0026  
                  ?_round 004D                    _ANSELH 0189                    ?_trunc 003B  
        __end_of_adc_read 0D29                    i1l2303 0CE3                    i1l2305 0CEA  
                  i1l2391 0E2A                    i1l2383 0E0E                    i1l2385 0E14  
                  i1l2387 0E1A                    i1l2389 0E26                    u235_20 0CE9  
                  u235_21 0CE8                    u236_20 0E1A                    u236_21 0E19  
                  u237_20 0E26                    u237_21 0E25                    u345_27 0E2E  
               ??_Lcd_Cmd 0020                    _SPBRGH 009A          __end_of___xxtofl 0552  
                  _adc_RO 0D29                    ___fleq 0F02                    _adc_mv 065F  
               ??___fladd 0028                    ___wmul 0DBD                 ??___awdiv 0028  
               ??___flsub 0077                 ??___fltol 0024                 ??___lwdiv 0075  
               ??___lwmod 0076          ___awdiv@quotient 002B                    saved_w 007E  
                  round@f 0051                    round@x 004D                 ??_sprintf 0031  
                  trunc@i 003F                    trunc@x 003B           Lcd_Set_Cursor@a 0023  
         Lcd_Set_Cursor@b 0022             adc_RO@channel 0021              ___xxtofl@arg 0037  
            ___xxtofl@exp 0036              ___xxtofl@val 002D                ___fleq@ff1 0020  
              ___fleq@ff2 0024   __end_of__initialization 0014         __end_of_Lcd_Clear 0D02  
              ___fltol@f1 0020            __pcstackCOMMON 0070             __end_of_frexp 0FA6  
           __end_of_round 07A0             __end_of_trunc 1000                _adc_output 0CEC  
          _Lcd_Set_Cursor 0D77                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_frexp 0075                   ??_round 0077                   ??_trunc 0077  
              __pbssBANK0 006B                adc_mv@calc 0059                __pmaintext 0270  
           ??_adc_channel 0077                   ?_adc_RO 0070                   ?___fleq 0020  
                 ?_adc_mv 0055                   ?___wmul 0020                __pintentry 0004  
  __end_of_Lcd_Set_Cursor 0D99                 ?_adc_read 0070         __end_of_adc_setup 0E0E  
               ?___xxtofl 002D                ??_Lcd_Init 0022                ??_Lcd_Port 0075  
              __stringtab 0800            _Lcd_Write_Char 0D5B                   _Lcd_Cmd 0D3F  
          _UART_RX_config 0D02                   ___fladd 0018                   ___awdiv 06D0  
                 ___flsub 0D99                   ___fltol 05E7                   ___lwdiv 0EBC  
                 ___lwmod 0E3A               ?_adc_output 0070                 _ANSELbits 0188  
         ?_Lcd_Set_Cursor 0022                ??_adc_read 0075                   __ptext1 03CC  
                 __ptext2 0E3A                   __ptext3 0EBC                   __ptext4 0DE4  
                 __ptext5 065F                   __ptext6 0739                   __ptext7 0FA6  
                 __ptext8 0F52                   __ptext9 0F02       __end_of_adc_channel 05E7  
                 _dpowers 0810                ??___xxtofl 0031                   main@ch0 006A  
                 main@ch1 0069                   _sprintf 03CC    __end_of_Lcd_Write_Char 0D77  
    end_of_initialization 0014        adc_channel@channel 0075    __end_of_UART_RX_config 0D15  
               _RCSTAbits 0018                 Lcd_Port@a 0075            adc_setup@inter 0076  
               _PORTEbits 0009               ___fladd@grs 0033             ___xxtofl@sign 0035  
               _TRISAbits 0085                 _TRISBbits 0086                 _TRISEbits 0089  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0021         Lcd_Write_String@i 0026  
         ?_UART_RX_config 0075                 _TXSTAbits 0098               _adc_mv$1352 005D  
               _Lcd_Clear 0CF5               _adc_channel 0552    UART_RX_config@baudrate 0075  
          __end_of_adc_RO 0D3F            __end_of___fleq 0F52            __end_of_adc_mv 06D0  
          __end_of___wmul 0DE4            _UART_read_char 0CE3          _Lcd_Write_String 0E76  
             _BAUDCTLbits 0187       start_initialization 000F               __end_of_Isr 0E3A  
              frexp@value 002C                ?_Lcd_Clear 0070                  ??_adc_RO 0020  
                ??___fleq 0028                  ??_adc_mv 0057    __end_of_UART_read_char 0CEC  
                ??___wmul 0075           Lcd_Write_Char@a 0020                 ___fladd@a 0024  
               ___fladd@b 0020               __pbssCOMMON 0077           adc_read@channel 0076  
               ___flsub@a 0045                 ___flsub@b 0049                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0             __pcstackBANK2 0110  
           __pcstackBANK3 0190             adc_mv@channel 0061                 _adc_setup 0DE4  
                ?_Lcd_Cmd 0070               sprintf@flag 0034               sprintf@prec 0038  
        ___lwdiv@dividend 0022                 adc_mv@out 0062          ??_Lcd_Set_Cursor 0077  
                ?___fladd 0020           ?_UART_read_char 0070                  ?___awdiv 0024  
                ?___flsub 0045                  ?___fltol 0020                  ?___lwdiv 0020  
                ?___lwmod 0027              ??_adc_output 0075                 __pstrings 0800  
        ___lwdiv@quotient 0025                ?_adc_setup 0070                  ?_sprintf 002C  
       interrupt_function 0004            ___wmul@product 0075        __end_of_adc_output 0CF5  
                _PIE1bits 008C                  Lcd_Cmd@a 0076                  _PIR1bits 000C  
             ??_Lcd_Clear 0077                _ADCON0bits 001F               __stringbase 080F  
              _ADCON1bits 009F         ___wmul@multiplier 0020          ??_Lcd_Write_Char 0076  
        ??_UART_RX_config 0077                  _Lcd_Init 07A0                  _Lcd_Port 0CDD  
__end_of_Lcd_Write_String 0EBC                 frexp@eptr 0030              ?_adc_channel 0075  
      __end_of__stringtab 0810                  _adc_read 0D15                _ANSELHbits 0189  
              sprintf@val 0036                  ___xxtofl 0498           ___lwdiv@divisor 0020  
         ___lwdiv@counter 0024                  __ptext10 0498                  __ptext11 05E7  
                __ptext20 0D02                  __ptext12 0D99                  __ptext21 0E76  
                __ptext13 0018                  __ptext22 0D5B                  __ptext14 0D29  
                __ptext23 0D77                  __ptext15 0D15                  __ptext24 07A0  
                __ptext16 0CEC                  __ptext25 0CF5                  __ptext17 0DBD  
                __ptext26 0D3F                  __ptext18 06D0                  __ptext27 0CDD  
                __ptext19 0552                  __ptext28 0E0E                  __ptext29 0CE3  
             ??_adc_setup 0075                trunc@expon 0043                _INTCONbits 000B  
                intlevel1 0000                 sprintf@ap 0035                 sprintf@sp 002C  
        ___lwmod@dividend 0029          ??_UART_read_char 0070                 stringcode 080A  
      Lcd_Set_Cursor@temp 0024                  sprintf@c 0039                  sprintf@f 002E  
         ___lwmod@divisor 0027           ___lwmod@counter 002B                  stringdir 080A  
                stringtab 0800             ___fladd@signs 0030            Isr@uart_return 0074  
            ___fladd@aexp 0031              ___fladd@bexp 0032  
